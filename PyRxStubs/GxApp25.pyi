from _typeshed import Incomplete
from win32com.client import CoClassBaseClass, DispatchBaseClass

makepy_version: str
python_version: int
defaultNamedOptArg: Incomplete
defaultNamedNotOptArg: Incomplete
defaultUnnamedArg: Incomplete
CLSID: Incomplete
MajorVersion: int
MinorVersion: int
LibraryFlags: int
LCID: int

def getApp() -> IAcadApplication: ...
def createEventObject(obj,eventClass): ...

class constants:
    acCubicSpline3DPoly: int
    acQuadSpline3DPoly: int
    acSimple3DPoly: int
    gcCubicSpline3DPoly: int
    gcQuadSpline3DPoly: int
    gcSimple3DPoly: int
    acModelSpace: int
    acPaperSpace: int
    gcModelSpace: int
    gcPaperSpace: int
    acAlignmentAligned: int
    acAlignmentBottomCenter: int
    acAlignmentBottomLeft: int
    acAlignmentBottomRight: int
    acAlignmentCenter: int
    acAlignmentFit: int
    acAlignmentLeft: int
    acAlignmentMiddle: int
    acAlignmentMiddleCenter: int
    acAlignmentMiddleLeft: int
    acAlignmentMiddleRight: int
    acAlignmentRight: int
    acAlignmentTopCenter: int
    acAlignmentTopLeft: int
    acAlignmentTopRight: int
    gcAlignmentAligned: int
    gcAlignmentBottomCenter: int
    gcAlignmentBottomLeft: int
    gcAlignmentBottomRight: int
    gcAlignmentCenter: int
    gcAlignmentFit: int
    gcAlignmentLeft: int
    gcAlignmentMiddle: int
    gcAlignmentMiddleCenter: int
    gcAlignmentMiddleLeft: int
    gcAlignmentMiddleRight: int
    gcAlignmentRight: int
    gcAlignmentTopCenter: int
    gcAlignmentTopLeft: int
    gcAlignmentTopRight: int
    acAlignPntAcquisitionAutomatic: int
    acAlignPntAcquisitionShiftToAcquire: int
    gcAlignPntAcquisitionAutomatic: int
    gcAlignPntAcquisitionShiftToAcquire: int
    acDegreeMinuteSeconds: int
    acDegrees: int
    acGrads: int
    acRadians: int
    gcDegreeMinuteSeconds: int
    gcDegrees: int
    gcGrads: int
    gcRadians: int
    acAttachmentPointBottomCenter: int
    acAttachmentPointBottomLeft: int
    acAttachmentPointBottomRight: int
    acAttachmentPointMiddleCenter: int
    acAttachmentPointMiddleLeft: int
    acAttachmentPointMiddleRight: int
    acAttachmentPointTopCenter: int
    acAttachmentPointTopLeft: int
    acAttachmentPointTopRight: int
    gcAttachmentPointBottomCenter: int
    gcAttachmentPointBottomLeft: int
    gcAttachmentPointBottomRight: int
    gcAttachmentPointMiddleCenter: int
    gcAttachmentPointMiddleLeft: int
    gcAttachmentPointMiddleRight: int
    gcAttachmentPointTopCenter: int
    gcAttachmentPointTopLeft: int
    gcAttachmentPointTopRight: int
    acAttributeModeConstant: int
    acAttributeModeInvisible: int
    acAttributeModeLockPosition: int
    acAttributeModeMultipleLine: int
    acAttributeModeNormal: int
    acAttributeModePreset: int
    acAttributeModeVerify: int
    gcAttributeModeConstant: int
    gcAttributeModeInvisible: int
    gcAttributeModeLockPosition: int
    gcAttributeModeMultipleLine: int
    gcAttributeModeNormal: int
    gcAttributeModePreset: int
    gcAttributeModeVerify: int
    acConnectBase: int
    acConnectExtents: int
    gcConnectBase: int
    gcConnectExtents: int
    acAny: int
    acUniform: int
    gcAny: int
    gcUniform: int
    acIntersection: int
    acSubtraction: int
    acUnion: int
    gcIntersection: int
    gcSubtraction: int
    gcUnion: int
    acBottomCenter: int
    acBottomLeft: int
    acBottomRight: int
    acMiddleCenter: int
    acMiddleLeft: int
    acMiddleRight: int
    acTopCenter: int
    acTopLeft: int
    acTopRight: int
    gcBottomCenter: int
    gcBottomLeft: int
    gcBottomRight: int
    gcMiddleCenter: int
    gcMiddleLeft: int
    gcMiddleRight: int
    gcTopCenter: int
    gcTopLeft: int
    gcTopRight: int
    acBottomMask: int
    acLeftMask: int
    acRightMask: int
    acTopMask: int
    gcBottomMask: int
    gcLeftMask: int
    gcRightMask: int
    gcTopMask: int
    acCellStateContentLocked: int
    acCellStateContentModified: int
    acCellStateContentReadOnly: int
    acCellStateFormatLocked: int
    acCellStateFormatModified: int
    acCellStateFormatReadOnly: int
    acCellStateLinked: int
    acCellStateNone: int
    gcCellStateContentLocked: int
    gcCellStateContentModified: int
    gcCellStateContentReadOnly: int
    gcCellStateFormatLocked: int
    gcCellStateFormatModified: int
    gcCellStateFormatReadOnly: int
    gcCellStateLinked: int
    gcCellStateNone: int
    acBlockCell: int
    acTextCell: int
    acUnknownCell: int
    gcBlockCell: int
    gcTextCell: int
    gcUnknownCell: int
    acBlue: int
    acByBlock: int
    acByLayer: int
    acCyan: int
    acGreen: int
    acMagenta: int
    acRed: int
    acWhite: int
    acYellow: int
    gcBlue: int
    gcByBlock: int
    gcByLayer: int
    gcCyan: int
    gcGreen: int
    gcMagenta: int
    gcRed: int
    gcWhite: int
    gcYellow: int
    acColorMethodByACI: int
    acColorMethodByBlock: int
    acColorMethodByLayer: int
    acColorMethodByRGB: int
    acColorMethodForeground: int
    gcColorMethodByACI: int
    gcColorMethodByBlock: int
    gcColorMethodByLayer: int
    gcColorMethodByRGB: int
    gcColorMethodForeground: int
    acDisplayDCS: int
    acOCS: int
    acPaperSpaceDCS: int
    acUCS: int
    acWorld: int
    gcDisplayDCS: int
    gcOCS: int
    gcPaperSpaceDCS: int
    gcUCS: int
    gcWorld: int
    acSymAbove: int
    acSymInFront: int
    acSymNone: int
    gcSymAbove: int
    gcSymInFront: int
    gcSymNone: int
    acArrowArchTick: int
    acArrowBoxBlank: int
    acArrowBoxFilled: int
    acArrowClosed: int
    acArrowClosedBlank: int
    acArrowDatumBlank: int
    acArrowDatumFilled: int
    acArrowDefault: int
    acArrowDot: int
    acArrowDotBlank: int
    acArrowDotSmall: int
    acArrowIntegral: int
    acArrowNone: int
    acArrowOblique: int
    acArrowOpen: int
    acArrowOpen30: int
    acArrowOpen90: int
    acArrowOrigin: int
    acArrowOrigin2: int
    acArrowSmall: int
    acArrowUserDefined: int
    gcArrowArchTick: int
    gcArrowBoxBlank: int
    gcArrowBoxFilled: int
    gcArrowClosed: int
    gcArrowClosedBlank: int
    gcArrowDatumBlank: int
    gcArrowDatumFilled: int
    gcArrowDefault: int
    gcArrowDot: int
    gcArrowDotBlank: int
    gcArrowDotSmall: int
    gcArrowIntegral: int
    gcArrowNone: int
    gcArrowOblique: int
    gcArrowOpen: int
    gcArrowOpen30: int
    gcArrowOpen90: int
    gcArrowOrigin: int
    gcArrowOrigin2: int
    gcArrowSmall: int
    gcArrowUserDefined: int
    acCenterLine: int
    acCenterMark: int
    acCenterNone: int
    gcCenterLine: int
    gcCenterMark: int
    gcCenterNone: int
    acArrowsOnly: int
    acBestFit: int
    acTextAndArrows: int
    acTextOnly: int
    gcArrowsOnly: int
    gcBestFit: int
    gcTextAndArrows: int
    gcTextOnly: int
    acDiagonal: int
    acHorizontal: int
    acNotStacked: int
    gcDiagonal: int
    gcHorizontal: int
    gcNotStacked: int
    acFirstExtensionLine: int
    acHorzCentered: int
    acOverFirstExtension: int
    acOverSecondExtension: int
    acSecondExtensionLine: int
    gcFirstExtensionLine: int
    gcHorzCentered: int
    gcOverFirstExtension: int
    gcOverSecondExtension: int
    gcSecondExtensionLine: int
    acDimLArchitectural: int
    acDimLDecimal: int
    acDimLEngineering: int
    acDimLFractional: int
    acDimLScientific: int
    acDimLWindowsDesktop: int
    gcDimLArchitectural: int
    gcDimLDecimal: int
    gcDimLEngineering: int
    gcDimLFractional: int
    gcDimLScientific: int
    gcDimLWindowsDesktop: int
    acDimPrecisionEight: int
    acDimPrecisionFive: int
    acDimPrecisionFour: int
    acDimPrecisionOne: int
    acDimPrecisionSeven: int
    acDimPrecisionSix: int
    acDimPrecisionThree: int
    acDimPrecisionTwo: int
    acDimPrecisionZero: int
    gcDimPrecisionEight: int
    gcDimPrecisionFive: int
    gcDimPrecisionFour: int
    gcDimPrecisionOne: int
    gcDimPrecisionSeven: int
    gcDimPrecisionSix: int
    gcDimPrecisionThree: int
    gcDimPrecisionTwo: int
    gcDimPrecisionZero: int
    acDimLineWithText: int
    acMoveTextAddLeader: int
    acMoveTextNoLeader: int
    gcDimLineWithText: int
    gcMoveTextAddLeader: int
    gcMoveTextNoLeader: int
    acTolBottom: int
    acTolMiddle: int
    acTolTop: int
    gcTolBottom: int
    gcTolMiddle: int
    gcTolTop: int
    acTolBasic: int
    acTolDeviation: int
    acTolLimits: int
    acTolNone: int
    acTolSymmetrical: int
    gcTolBasic: int
    gcTolDeviation: int
    gcTolLimits: int
    gcTolNone: int
    gcTolSymmetrical: int
    acDimArchitectural: int
    acDimArchitecturalStacked: int
    acDimDecimal: int
    acDimEngineering: int
    acDimFractional: int
    acDimFractionalStacked: int
    acDimScientific: int
    acDimWindowsDesktop: int
    gcDimArchitectural: int
    gcDimArchitecturalStacked: int
    gcDimDecimal: int
    gcDimEngineering: int
    gcDimFractional: int
    gcDimFractionalStacked: int
    gcDimScientific: int
    gcDimWindowsDesktop: int
    acAbove: int
    acJIS: int
    acOutside: int
    acUnder: int
    acVertCentered: int
    gcAbove: int
    gcJIS: int
    gcOutside: int
    gcUnder: int
    gcVertCentered: int
    acDrawLeaderHeadFirst: int
    acDrawLeaderTailFirst: int
    gcDrawLeaderHeadFirst: int
    gcDrawLeaderTailFirst: int
    acDrawContentFirst: int
    acDrawLeaderFirst: int
    gcDrawContentFirst: int
    gcDrawLeaderFirst: int
    acEnableSCM: int
    acEnableSCMOptions: int
    acEnter: int
    gcEnableSCM: int
    gcEnableSCMOptions: int
    gcEnter: int
    acRepeatLastCommand: int
    acSCM: int
    gcRepeatLastCommand: int
    gcSCM: int
    acEdRepeatLastCommand: int
    acEdSCM: int
    gcEdRepeatLastCommand: int
    gcEdSCM: int
    acBottomToTop: int
    acByStyle: int
    acLeftToRight: int
    acRightToLeft: int
    acTopToBottom: int
    gcBottomToTop: int
    gcByStyle: int
    gcLeftToRight: int
    gcRightToLeft: int
    gcTopToBottom: int
    acAngular: int
    acArea: int
    acDistance: int
    acNoUnits: int
    gcAngular: int
    gcArea: int
    gcDistance: int
    gcNoUnits: int
    acExtendBoth: int
    acExtendNone: int
    acExtendOtherEntity: int
    acExtendThisEntity: int
    gcExtendBoth: int
    gcExtendNone: int
    gcExtendOtherEntity: int
    gcExtendThisEntity: int
    acForEditing: int
    acForExpression: int
    acIgnoreMtextFormat: int
    acUseMaximumPrecision: int
    gcForEditing: int
    gcForExpression: int
    gcIgnoreMtextFormat: int
    gcUseMaximumPrecision: int
    kFormatOptionNone: int
    acDemanLoadDisable: int
    acDemandLoadCmdInvoke: int
    acDemandLoadOnObjectDetect: int
    gcDemanLoadDisable: int
    gcDemandLoadCmdInvoke: int
    gcDemandLoadOnObjectDetect: int
    acPreDefinedGradient: int
    acUserDefinedGradient: int
    gcPreDefinedGradient: int
    gcUserDefinedGradient: int
    acHorzBottom: int
    acHorzInside: int
    acHorzTop: int
    acInvalidGridLine: int
    acVertInside: int
    acVertLeft: int
    acVertRight: int
    gcHorzBottom: int
    gcHorzInside: int
    gcHorzTop: int
    gcInvalidGridLine: int
    gcVertInside: int
    gcVertLeft: int
    gcVertRight: int
    acGradientObject: int
    acHatchObject: int
    gcGradientObject: int
    gcHatchObject: int
    acHatchStyleIgnore: int
    acHatchStyleNormal: int
    acHatchStyleOuter: int
    gcHatchStyleIgnore: int
    gcHatchStyleNormal: int
    gcHatchStyleOuter: int
    acHeight: int
    acTurnHeight: int
    acTurns: int
    gcHeight: int
    gcTurnHeight: int
    gcTurns: int
    acCCW: int
    acCW: int
    gcCCW: int
    gcCW: int
    acHorizontalAlignmentAligned: int
    acHorizontalAlignmentCenter: int
    acHorizontalAlignmentFit: int
    acHorizontalAlignmentLeft: int
    acHorizontalAlignmentMiddle: int
    acHorizontalAlignmentRight: int
    gcHorizontalAlignmentAligned: int
    gcHorizontalAlignmentCenter: int
    gcHorizontalAlignmentFit: int
    gcHorizontalAlignmentLeft: int
    gcHorizontalAlignmentMiddle: int
    gcHorizontalAlignmentRight: int
    acPenWidth013: int
    acPenWidth018: int
    acPenWidth025: int
    acPenWidth035: int
    acPenWidth050: int
    acPenWidth070: int
    acPenWidth100: int
    acPenWidth140: int
    acPenWidth200: int
    acPenWidthUnk: int
    gcPenWidth013: int
    gcPenWidth018: int
    gcPenWidth025: int
    gcPenWidth035: int
    gcPenWidth050: int
    gcPenWidth070: int
    gcPenWidth100: int
    gcPenWidth140: int
    gcPenWidth200: int
    gcPenWidthUnk: int
    acInsertUnitsAngstroms: int
    acInsertUnitsAstronomicalUnits: int
    acInsertUnitsCentimeters: int
    acInsertUnitsDecameters: int
    acInsertUnitsDecimeters: int
    acInsertUnitsFeet: int
    acInsertUnitsGigameters: int
    acInsertUnitsHectometers: int
    acInsertUnitsInches: int
    acInsertUnitsKilometers: int
    acInsertUnitsLightYears: int
    acInsertUnitsMeters: int
    acInsertUnitsMicroinches: int
    acInsertUnitsMicrons: int
    acInsertUnitsMiles: int
    acInsertUnitsMillimeters: int
    acInsertUnitsMils: int
    acInsertUnitsNanometers: int
    acInsertUnitsParsecs: int
    acInsertUnitsUnitless: int
    acInsertUnitsYards: int
    gcInsertUnitsAngstroms: int
    gcInsertUnitsAstronomicalUnits: int
    gcInsertUnitsCentimeters: int
    gcInsertUnitsDecameters: int
    gcInsertUnitsDecimeters: int
    gcInsertUnitsFeet: int
    gcInsertUnitsGigameters: int
    gcInsertUnitsHectometers: int
    gcInsertUnitsInches: int
    gcInsertUnitsKilometers: int
    gcInsertUnitsLightYears: int
    gcInsertUnitsMeters: int
    gcInsertUnitsMicroinches: int
    gcInsertUnitsMicrons: int
    gcInsertUnitsMiles: int
    gcInsertUnitsMillimeters: int
    gcInsertUnitsMils: int
    gcInsertUnitsNanometers: int
    gcInsertUnitsParsecs: int
    gcInsertUnitsUnitless: int
    gcInsertUnitsYards: int
    acPreferenceClassic: int
    acPreferenceCustom: int
    gcPreferenceClassic: int
    gcPreferenceCustom: int
    acKeyboardEntry: int
    acKeyboardEntryExceptScripts: int
    acKeyboardRunningObjSnap: int
    gcKeyboardEntry: int
    gcKeyboardEntryExceptScripts: int
    gcKeyboardRunningObjSnap: int
    acLsAll: int
    acLsColor: int
    acLsFrozen: int
    acLsLineType: int
    acLsLineWeight: int
    acLsLocked: int
    acLsNewViewport: int
    acLsNone: int
    acLsOn: int
    acLsPlot: int
    acLsPlotStyle: int
    gcLsAll: int
    gcLsColor: int
    gcLsFrozen: int
    gcLsLineType: int
    gcLsLineWeight: int
    gcLsLocked: int
    gcLsNewViewport: int
    gcLsNone: int
    gcLsOn: int
    gcLsPlot: int
    gcLsPlotStyle: int
    acLineNoArrow: int
    acLineWithArrow: int
    acSplineNoArrow: int
    acSplineWithArrow: int
    gcLineNoArrow: int
    gcLineWithArrow: int
    gcSplineNoArrow: int
    gcSplineWithArrow: int
    acLineSpacingStyleAtLeast: int
    acLineSpacingStyleExactly: int
    gcLineSpacingStyleAtLeast: int
    gcLineSpacingStyleExactly: int
    acLnWt000: int
    acLnWt005: int
    acLnWt009: int
    acLnWt013: int
    acLnWt015: int
    acLnWt018: int
    acLnWt020: int
    acLnWt025: int
    acLnWt030: int
    acLnWt035: int
    acLnWt040: int
    acLnWt050: int
    acLnWt053: int
    acLnWt060: int
    acLnWt070: int
    acLnWt080: int
    acLnWt090: int
    acLnWt100: int
    acLnWt106: int
    acLnWt120: int
    acLnWt140: int
    acLnWt158: int
    acLnWt200: int
    acLnWt211: int
    acLnWtByBlock: int
    acLnWtByLayer: int
    acLnWtByLwDefault: int
    gcLnWt000: int
    gcLnWt005: int
    gcLnWt009: int
    gcLnWt013: int
    gcLnWt015: int
    gcLnWt018: int
    gcLnWt020: int
    gcLnWt025: int
    gcLnWt030: int
    gcLnWt035: int
    gcLnWt040: int
    gcLnWt050: int
    gcLnWt053: int
    gcLnWt060: int
    gcLnWt070: int
    gcLnWt080: int
    gcLnWt090: int
    gcLnWt100: int
    gcLnWt106: int
    gcLnWt120: int
    gcLnWt140: int
    gcLnWt158: int
    gcLnWt200: int
    gcLnWt211: int
    gcLnWtByBlock: int
    gcLnWtByLayer: int
    gcLnWtByLwDefault: int
    acAllNormal: int
    acEndsNormal: int
    acFirstNormal: int
    acLastNormal: int
    acRuled: int
    acSmooth: int
    acUseDraftAngles: int
    gcAllNormal: int
    gcEndsNormal: int
    gcFirstNormal: int
    gcLastNormal: int
    gcRuled: int
    gcSmooth: int
    gcUseDraftAngles: int
    acHatchLoopTypeDefault: int
    acHatchLoopTypeDerived: int
    acHatchLoopTypeExternal: int
    acHatchLoopTypePolyline: int
    acHatchLoopTypeTextbox: int
    gcHatchLoopTypeDefault: int
    gcHatchLoopTypeDerived: int
    gcHatchLoopTypeExternal: int
    gcHatchLoopTypePolyline: int
    gcHatchLoopTypeTextbox: int
    acBlockContent: int
    acMTextContent: int
    acNoneContent: int
    gcBlockContent: int
    gcMTextContent: int
    gcNoneContent: int
    acInVisibleLeader: int
    acSplineLeader: int
    acStraightLeader: int
    gcInVisibleLeader: int
    gcSplineLeader: int
    gcStraightLeader: int
    acBottom: int
    acTop: int
    acZero: int
    gcBottom: int
    gcTop: int
    gcZero: int
    acMenuFileCompiled: int
    acMenuFileSource: int
    gcMenuFileCompiled: int
    gcMenuFileSource: int
    acBaseMenuGroup: int
    acPartialMenuGroup: int
    gcBaseMenuGroup: int
    gcPartialMenuGroup: int
    acMenuItem: int
    acMenuSeparator: int
    acMenuSubMenu: int
    gcMenuItem: int
    gcMenuSeparator: int
    gcMenuSubMenu: int
    acOPQHighGraphics: int
    acOPQLowGraphics: int
    acOPQMonochrome: int
    gcOPQHighGraphics: int
    gcOPQLowGraphics: int
    gcOPQMonochrome: int
    acOQGraphics: int
    acOQHighPhoto: int
    acOQLineArt: int
    acOQPhoto: int
    acOQText: int
    gcOQGraphics: int
    gcOQHighPhoto: int
    gcOQLineArt: int
    gcOQPhoto: int
    gcOQText: int
    acOTEmbedded: int
    acOTLink: int
    acOTStatic: int
    gcOTEmbedded: int
    gcOTLink: int
    gcOTStatic: int
    acParseOptionNone: int
    acPreserveMtextFormat: int
    acSetDefaultFormat: int
    gcParseOptionNone: int
    gcPreserveMtextFormat: int
    gcSetDefaultFormat: int
    acHatchPatternTypeCustomDefined: int
    acHatchPatternTypePreDefined: int
    acHatchPatternTypeUserDefined: int
    gcHatchPatternTypeCustomDefined: int
    gcHatchPatternTypePreDefined: int
    gcHatchPatternTypeUserDefined: int
    acInches: int
    acMillimeters: int
    acPixels: int
    gcInches: int
    gcMillimeters: int
    gcPixels: int
    acPolicyLegacy: int
    acPolicyNamed: int
    gcPolicyLegacy: int
    gcPolicyNamed: int
    ac0degrees: int
    ac180degrees: int
    ac270degrees: int
    ac90degrees: int
    gc0degrees: int
    gc180degrees: int
    gc270degrees: int
    gc90degrees: int
    ac100_1: int
    ac10_1: int
    ac1_1: int
    ac1_10: int
    ac1_100: int
    ac1_128in_1ft: int
    ac1_16: int
    ac1_16in_1ft: int
    ac1_2: int
    ac1_20: int
    ac1_2in_1ft: int
    ac1_30: int
    ac1_32in_1ft: int
    ac1_4: int
    ac1_40: int
    ac1_4in_1ft: int
    ac1_50: int
    ac1_64in_1ft: int
    ac1_8: int
    ac1_8in_1ft: int
    ac1ft_1ft: int
    ac1in_1ft: int
    ac2_1: int
    ac3_16in_1ft: int
    ac3_32in_1ft: int
    ac3_4in_1ft: int
    ac3_8in_1ft: int
    ac3in_1ft: int
    ac4_1: int
    ac6in_1ft: int
    ac8_1: int
    acScaleToFit: int
    gc100_1: int
    gc10_1: int
    gc1_1: int
    gc1_10: int
    gc1_100: int
    gc1_128in_1ft: int
    gc1_16: int
    gc1_16in_1ft: int
    gc1_2: int
    gc1_20: int
    gc1_2in_1ft: int
    gc1_30: int
    gc1_32in_1ft: int
    gc1_4: int
    gc1_40: int
    gc1_4in_1ft: int
    gc1_50: int
    gc1_64in_1ft: int
    gc1_8: int
    gc1_8in_1ft: int
    gc1ft_1ft: int
    gc1in_1ft: int
    gc2_1: int
    gc3_16in_1ft: int
    gc3_32in_1ft: int
    gc3_4in_1ft: int
    gc3_8in_1ft: int
    gc3in_1ft: int
    gc4_1: int
    gc6in_1ft: int
    gc8_1: int
    gcScaleToFit: int
    acDisplay: int
    acExtents: int
    acLayout: int
    acLimits: int
    acView: int
    acWindow: int
    gcDisplay: int
    gcExtents: int
    gcLayout: int
    gcLimits: int
    gcView: int
    gcWindow: int
    acClassification: int
    acElevation: int
    acIntensities: int
    acNormals: int
    acObject: int
    acRGB: int
    gcClassification: int
    gcElevation: int
    gcIntensities: int
    gcNormals: int
    gcObject: int
    gcRGB: int
    acCubicSplinePoly: int
    acFitCurvePoly: int
    acQuadSplinePoly: int
    acSimplePoly: int
    gcCubicSplinePoly: int
    gcFitCurvePoly: int
    gcQuadSplinePoly: int
    gcSimplePoly: int
    acBezierSurfaceMesh: int
    acCubicSurfaceMesh: int
    acQuadSurfaceMesh: int
    acSimpleMesh: int
    gcBezierSurfaceMesh: int
    gcCubicSurfaceMesh: int
    gcQuadSurfaceMesh: int
    gcSimpleMesh: int
    acBlockBox: int
    acBlockCircle: int
    acBlockHexagon: int
    acBlockImperial: int
    acBlockSlot: int
    acBlockTriangle: int
    acBlockUserDefined: int
    gcBlockBox: int
    gcBlockCircle: int
    gcBlockHexagon: int
    gcBlockImperial: int
    gcBlockSlot: int
    gcBlockTriangle: int
    gcBlockUserDefined: int
    acFullPreview: int
    acPartialPreview: int
    gcFullPreview: int
    gcPartialPreview: int
    acPrinterAlertOnce: int
    acPrinterAlwaysAlert: int
    acPrinterNeverAlert: int
    acPrinterNeverAlertLogOnce: int
    gcPrinterAlertOnce: int
    gcPrinterAlwaysAlert: int
    gcPrinterNeverAlert: int
    gcPrinterNeverAlertLogOnce: int
    acProxyBoundingBox: int
    acProxyNotShow: int
    acProxyShow: int
    gcProxyBoundingBox: int
    gcProxyNotShow: int
    gcProxyShow: int
    acActiveViewport: int
    acAllViewports: int
    gcActiveViewport: int
    gcAllViewports: int
    acDegrees000: int
    acDegrees090: int
    acDegrees180: int
    acDegrees270: int
    acDegreesUnknown: int
    gcDegrees000: int
    gcDegrees090: int
    gcDegrees180: int
    gcDegrees270: int
    gcDegreesUnknown: int
    acDataRow: int
    acHeaderRow: int
    acTitleRow: int
    acUnknownRow: int
    gcDataRow: int
    gcHeaderRow: int
    gcTitleRow: int
    gcUnknownRow: int
    ac2000_Template: int
    ac2000_dwg: int
    ac2000_dxf: int
    ac2004_Template: int
    ac2004_dwg: int
    ac2004_dxf: int
    ac2007_Template: int
    ac2007_dwg: int
    ac2007_dxf: int
    ac2010_Template: int
    ac2010_dwg: int
    ac2010_dxf: int
    ac2013_Template: int
    ac2013_dwg: int
    ac2013_dxf: int
    ac2018_Template: int
    ac2018_dwg: int
    ac2018_dxf: int
    acNative: int
    acR09_dxf: int
    acR10_dxf: int
    acR12_dwg: int
    acR12_dxf: int
    acR13_dwg: int
    acR13_dxf: int
    acR14_dwg: int
    acR14_dxf: int
    acR15_Template: int
    acR15_dwg: int
    acR15_dxf: int
    acR18_Template: int
    acR18_dwg: int
    acR18_dxf: int
    acUnknown: int
    gc2000_Template: int
    gc2000_dwg: int
    gc2000_dxf: int
    gc2004_Template: int
    gc2004_dwg: int
    gc2004_dxf: int
    gc2007_Template: int
    gc2007_dwg: int
    gc2007_dxf: int
    gc2010_Template: int
    gc2010_dwg: int
    gc2010_dxf: int
    gc2013_Template: int
    gc2013_dwg: int
    gc2013_dxf: int
    gc2018_Template: int
    gc2018_dwg: int
    gc2018_dxf: int
    gcNative: int
    gcR09_dxf: int
    gcR10_dxf: int
    gcR12_dwg: int
    gcR12_dxf: int
    gcR13_dwg: int
    gcR13_dxf: int
    gcR14_dwg: int
    gcR14_dxf: int
    gcR15_Template: int
    gcR15_dwg: int
    gcR15_dxf: int
    gcR18_Template: int
    gcR18_dwg: int
    gcR18_dxf: int
    gcUnknown: int
    acSectionGenerationDestinationFile: int
    acSectionGenerationDestinationNewBlock: int
    acSectionGenerationDestinationReplaceBlock: int
    acSectionGenerationSourceAllObjects: int
    acSectionGenerationSourceSelectedObjects: int
    gcSectionGenerationDestinationFile: int
    gcSectionGenerationDestinationNewBlock: int
    gcSectionGenerationDestinationReplgceBlock: int
    gcSectionGenerationSourceAllObjects: int
    gcSectionGenerationSourceSelectedObjects: int
    acSectionStateBoundary: int
    acSectionStatePlane: int
    acSectionStateVolume: int
    gcSectionStateBoundary: int
    gcSectionStatePlane: int
    gcSectionStateVolume: int
    acSectionState2Boundary: int
    acSectionState2Plane: int
    acSectionState2Slice: int
    acSectionState2Volume: int
    gcSectionState2Boundary: int
    gcSectionState2Plane: int
    gcSectionState2Slice: int
    gcSectionState2Volume: int
    acSectionSubItemBackLine: int
    acSectionSubItemBackLineBottom: int
    acSectionSubItemBackLineTop: int
    acSectionSubItemSectionLine: int
    acSectionSubItemSectionLineBottom: int
    acSectionSubItemSectionLineTop: int
    acSectionSubItemVerticalLineBottom: int
    acSectionSubItemVerticalLineTop: int
    acSectionSubItemkNone: int
    gcSectionSubItemBackLine: int
    gcSectionSubItemBackLineBottom: int
    gcSectionSubItemBackLineTop: int
    gcSectionSubItemSectionLine: int
    gcSectionSubItemSectionLineBottom: int
    gcSectionSubItemSectionLineTop: int
    gcSectionSubItemVerticalLineBottom: int
    gcSectionSubItemVerticalLineTop: int
    gcSectionSubItemkNone: int
    acSectionType2dSection: int
    acSectionType3dSection: int
    acSectionTypeLiveSection: int
    gcSectionType2dSection: int
    gcSectionType3dSection: int
    gcSectionTypeLiveSection: int
    acDegrees15: int
    acDegrees30: int
    acDegrees45: int
    acDegrees60: int
    acDegrees90: int
    acDegreesAny: int
    acDegreesHorz: int
    gcDegrees15: int
    gcDegrees30: int
    gcDegrees45: int
    gcDegrees60: int
    gcDegrees90: int
    gcDegreesAny: int
    gcDegreesHorz: int
    acSelectionSetAll: int
    acSelectionSetCrossing: int
    acSelectionSetCrossingPolygon: int
    acSelectionSetFence: int
    acSelectionSetLast: int
    acSelectionSetPrevious: int
    acSelectionSetWindow: int
    acSelectionSetWindowPolygon: int
    gcSelectionSetAll: int
    gcSelectionSetCrossing: int
    gcSelectionSetCrossingPolygon: int
    gcSelectionSetFence: int
    gcSelectionSetLast: int
    gcSelectionSetPrevious: int
    gcSelectionSetWindow: int
    gcSelectionSetWindowPolygon: int
    acTableSelectCrossing: int
    acTableSelectWindow: int
    gcTableSelectCrossing: int
    gcTableSelectWindow: int
    acCastsAndReceivesShadows: int
    acCastsShadows: int
    acIgnoreShadows: int
    acReceivesShadows: int
    gcCastsAndReceivesShadows: int
    gcCastsShadows: int
    gcIgnoreShadows: int
    gcReceivesShadows: int
    acTableBottomToTop: int
    acTableTopToBottom: int
    gcTableBottomToTop: int
    gcTableTopToBottom: int
    acTableFlowDownOrUp: int
    acTableFlowLeft: int
    acTableFlowRight: int
    gcTableFlowDownOrUp: int
    gcTableFlowLeft: int
    gcTableFlowRight: int
    acCenterAlignment: int
    acLeftAlignment: int
    acRightAlignment: int
    gcCenterAlignment: int
    gcLeftAlignment: int
    gcRightAlignment: int
    acAlwaysRightReadingAngle: int
    acHorizontalAngle: int
    acInsertAngle: int
    gcAlwaysRightReadingAngle: int
    gcHorizontalAngle: int
    gcInsertAngle: int
    acAttachmentHorizontal: int
    acAttachmentVertical: int
    gcAttachmentHorizontal: int
    gcAttachmentVertical: int
    acAttachmentAllLine: int
    acAttachmentBottomLine: int
    acAttachmentBottomOfBottom: int
    acAttachmentBottomOfTop: int
    acAttachmentBottomOfTopLine: int
    acAttachmentMiddle: int
    acAttachmentMiddleOfBottom: int
    acAttachmentMiddleOfTop: int
    acAttachmentTopOfTop: int
    gcAttachmentAllLine: int
    gcAttachmentBottomLine: int
    gcAttachmentBottomOfBottom: int
    gcAttachmentBottomOfTop: int
    gcAttachmentBottomOfTopLine: int
    gcAttachmentMiddle: int
    gcAttachmentMiddleOfBottom: int
    gcAttachmentMiddleOfTop: int
    gcAttachmentTopOfTop: int
    acFontBold: int
    acFontBoldItalic: int
    acFontItalic: int
    acFontRegular: int
    gcFontBold: int
    gcFontBoldItalic: int
    gcFontItalic: int
    gcFontRegular: int
    acTextFlagBackward: int
    acTextFlagUpsideDown: int
    gcTextFlagBackward: int
    gcTextFlagUpsideDown: int
    acToolbarDockBottom: int
    acToolbarDockLeft: int
    acToolbarDockRight: int
    acToolbarDockTop: int
    acToolbarFloating: int
    gcToolbarDockBottom: int
    gcToolbarDockLeft: int
    gcToolbarDockRight: int
    gcToolbarDockTop: int
    gcToolbarFloating: int
    acToolbarButton: int
    acToolbarControl: int
    acToolbarFlyout: int
    acToolbarSeparator: int
    gcToolbarButton: int
    gcToolbarControl: int
    gcToolbarFlyout: int
    gcToolbarSeparator: int
    acApplied: int
    acNoOverrides: int
    gcApplied: int
    gcNoOverrides: int
    acArchitectural: int
    acDecimal: int
    acDefaultUnits: int
    acEngineering: int
    acFractional: int
    acScientific: int
    gcArchitectural: int
    gcDecimal: int
    gcDefaultUnits: int
    gcEngineering: int
    gcFractional: int
    gcScientific: int
    acBuffer: int
    acDate: int
    acDouble: int
    acGeneral: int
    acLong: int
    acObjectId: int
    acPoint2d: int
    acPoint3d: int
    acResbuf: int
    acString: int
    acUnknownDataType: int
    gcBuffer: int
    gcDate: int
    gcDouble: int
    gcGeneral: int
    gcLong: int
    gcObjectId: int
    gcPoint2d: int
    gcPoint3d: int
    gcResbuf: int
    gcString: int
    gcUnknownDataType: int
    acUnitAngle: int
    acUnitArea: int
    acUnitDistance: int
    acUnitVolume: int
    acUnitless: int
    gcUnitAngle: int
    gcUnitArea: int
    gcUnitDistance: int
    gcUnitVolume: int
    gcUnitless: int
    acVerticalAlignmentBaseline: int
    acVerticalAlignmentBottom: int
    acVerticalAlignmentMiddle: int
    acVerticalAlignmentTop: int
    gcVerticalAlignmentBaseline: int
    gcVerticalAlignmentBottom: int
    gcVerticalAlignmentMiddle: int
    gcVerticalAlignmentTop: int
    acAttachmentCenter: int
    acAttachmentLinedCenter: int
    gcAttachmentCenter: int
    gcAttachmentLinedCenter: int
    acVp1: int
    acVp10: int
    acVp100: int
    acVp100_1: int
    acVp10_1: int
    acVp11: int
    acVp12: int
    acVp13: int
    acVp14: int
    acVp15: int
    acVp16: int
    acVp17: int
    acVp18: int
    acVp19: int
    acVp1_1: int
    acVp1_10: int
    acVp1_100: int
    acVp1_128in_1ft: int
    acVp1_16: int
    acVp1_16in_1ft: int
    acVp1_2: int
    acVp1_20: int
    acVp1_2in_1ft: int
    acVp1_30: int
    acVp1_32in_1ft: int
    acVp1_4: int
    acVp1_40: int
    acVp1_4in_1ft: int
    acVp1_50: int
    acVp1_64in_1ft: int
    acVp1_8: int
    acVp1_8in_1ft: int
    acVp1and1_2in_1ft: int
    acVp1ft_1ft: int
    acVp1in_1ft: int
    acVp2: int
    acVp20: int
    acVp21: int
    acVp22: int
    acVp23: int
    acVp24: int
    acVp25: int
    acVp26: int
    acVp27: int
    acVp28: int
    acVp29: int
    acVp2_1: int
    acVp3: int
    acVp30: int
    acVp31: int
    acVp32: int
    acVp33: int
    acVp34: int
    acVp35: int
    acVp36: int
    acVp37: int
    acVp38: int
    acVp39: int
    acVp3_16in_1ft: int
    acVp3_32in_1ft: int
    acVp3_4in_1ft: int
    acVp3_8in_1ft: int
    acVp3in_1ft: int
    acVp4: int
    acVp40: int
    acVp41: int
    acVp42: int
    acVp43: int
    acVp44: int
    acVp45: int
    acVp46: int
    acVp47: int
    acVp48: int
    acVp49: int
    acVp4_1: int
    acVp5: int
    acVp50: int
    acVp51: int
    acVp52: int
    acVp53: int
    acVp54: int
    acVp55: int
    acVp56: int
    acVp57: int
    acVp58: int
    acVp59: int
    acVp6: int
    acVp60: int
    acVp61: int
    acVp62: int
    acVp63: int
    acVp64: int
    acVp65: int
    acVp66: int
    acVp67: int
    acVp68: int
    acVp69: int
    acVp6in_1ft: int
    acVp7: int
    acVp70: int
    acVp71: int
    acVp72: int
    acVp73: int
    acVp74: int
    acVp75: int
    acVp76: int
    acVp77: int
    acVp78: int
    acVp79: int
    acVp8: int
    acVp80: int
    acVp81: int
    acVp82: int
    acVp83: int
    acVp84: int
    acVp85: int
    acVp86: int
    acVp87: int
    acVp88: int
    acVp89: int
    acVp8_1: int
    acVp9: int
    acVp90: int
    acVp91: int
    acVp92: int
    acVp93: int
    acVp94: int
    acVp95: int
    acVp96: int
    acVp97: int
    acVp98: int
    acVp99: int
    acVpCustomScale: int
    acVpScaleToFit: int
    gcVp1: int
    gcVp10: int
    gcVp100: int
    gcVp100_1: int
    gcVp10_1: int
    gcVp11: int
    gcVp12: int
    gcVp13: int
    gcVp14: int
    gcVp15: int
    gcVp16: int
    gcVp17: int
    gcVp18: int
    gcVp19: int
    gcVp1_1: int
    gcVp1_10: int
    gcVp1_100: int
    gcVp1_128in_1ft: int
    gcVp1_16: int
    gcVp1_16in_1ft: int
    gcVp1_2: int
    gcVp1_20: int
    gcVp1_2in_1ft: int
    gcVp1_30: int
    gcVp1_32in_1ft: int
    gcVp1_4: int
    gcVp1_40: int
    gcVp1_4in_1ft: int
    gcVp1_50: int
    gcVp1_64in_1ft: int
    gcVp1_8: int
    gcVp1_8in_1ft: int
    gcVp1and1_2in_1ft: int
    gcVp1ft_1ft: int
    gcVp1in_1ft: int
    gcVp2: int
    gcVp20: int
    gcVp21: int
    gcVp22: int
    gcVp23: int
    gcVp24: int
    gcVp25: int
    gcVp26: int
    gcVp27: int
    gcVp28: int
    gcVp29: int
    gcVp2_1: int
    gcVp3: int
    gcVp30: int
    gcVp31: int
    gcVp32: int
    gcVp33: int
    gcVp34: int
    gcVp35: int
    gcVp36: int
    gcVp37: int
    gcVp38: int
    gcVp39: int
    gcVp3_16in_1ft: int
    gcVp3_32in_1ft: int
    gcVp3_4in_1ft: int
    gcVp3_8in_1ft: int
    gcVp3in_1ft: int
    gcVp4: int
    gcVp40: int
    gcVp41: int
    gcVp42: int
    gcVp43: int
    gcVp44: int
    gcVp45: int
    gcVp46: int
    gcVp47: int
    gcVp48: int
    gcVp49: int
    gcVp4_1: int
    gcVp5: int
    gcVp50: int
    gcVp51: int
    gcVp52: int
    gcVp53: int
    gcVp54: int
    gcVp55: int
    gcVp56: int
    gcVp57: int
    gcVp58: int
    gcVp59: int
    gcVp6: int
    gcVp60: int
    gcVp61: int
    gcVp62: int
    gcVp63: int
    gcVp64: int
    gcVp65: int
    gcVp66: int
    gcVp67: int
    gcVp68: int
    gcVp69: int
    gcVp6in_1ft: int
    gcVp7: int
    gcVp70: int
    gcVp71: int
    gcVp72: int
    gcVp73: int
    gcVp74: int
    gcVp75: int
    gcVp76: int
    gcVp77: int
    gcVp78: int
    gcVp79: int
    gcVp8: int
    gcVp80: int
    gcVp81: int
    gcVp82: int
    gcVp83: int
    gcVp84: int
    gcVp85: int
    gcVp86: int
    gcVp87: int
    gcVp88: int
    gcVp89: int
    gcVp8_1: int
    gcVp9: int
    gcVp90: int
    gcVp91: int
    gcVp92: int
    gcVp93: int
    gcVp94: int
    gcVp95: int
    gcVp96: int
    gcVp97: int
    gcVp98: int
    gcVp99: int
    gcVpCustomScale: int
    gcVpScaleToFit: int
    acViewport2Horizontal: int
    acViewport2Vertical: int
    acViewport3Above: int
    acViewport3Below: int
    acViewport3Horizontal: int
    acViewport3Left: int
    acViewport3Right: int
    acViewport3Vertical: int
    acViewport4: int
    gcViewport2Horizontal: int
    gcViewport2Vertical: int
    gcViewport3Above: int
    gcViewport3Below: int
    gcViewport3Horizontal: int
    gcViewport3Left: int
    gcViewport3Right: int
    gcViewport3Vertical: int
    gcViewport4: int
    acMax: int
    acMin: int
    acNorm: int
    gcMax: int
    gcMin: int
    gcNorm: int
    acIsolines: int
    acIsoparms: int
    gcIsolines: int
    gcIsoparms: int
    acDemandLoadDisabled: int
    acDemandLoadEnabled: int
    acDemandLoadEnabledWithCopy: int
    gcDemandLoadDisabled: int
    gcDemandLoadEnabled: int
    gcDemandLoadEnabledWithCopy: int
    acZoomScaledAbsolute: int
    acZoomScaledRelative: int
    acZoomScaledRelativePSpace: int
    gcZoomScaledAbsolute: int
    gcZoomScaledRelative: int
    gcZoomScaledRelativePSpace: int
    ACADSECURITYPARAMS_ALGID_RC4: int
    AcadSECURITYPARAMS_ALGID_RC4: int
    ACADSECURITYPARAMS_ADD_TIMESTAMP: int
    ACADSECURITYPARAMS_ENCRYPT_DATA: int
    ACADSECURITYPARAMS_ENCRYPT_PROPS: int
    ACADSECURITYPARAMS_SIGN_DATA: int
    AcadSECURITYPARAMS_ADD_TIMESTAMP: int
    AcadSECURITYPARAMS_ENCRYPT_DATA: int
    AcadSECURITYPARAMS_ENCRYPT_PROPS: int
    AcadSECURITYPARAMS_SIGN_DATA: int
    kCellOptionNone: int
    kInheritCellFormat: int
    acMergeCellStyleConvertDuplicatesToOverrides: int
    acMergeCellStyleCopyDuplicates: int
    acMergeCellStyleIgnoreNewStyles: int
    acMergeCellStyleNone: int
    acMergeCellStyleOverwriteDuplicates: int
    gcMergeCellStyleConvertDuplicatesToOverrides: int
    gcMergeCellStyleCopyDuplicates: int
    gcMergeCellStyleIgnoreNewStyles: int
    gcMergeCellStyleNone: int
    gcMergeCellStyleOverwriteDuplicates: int

class IGcPePropertyEditorColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IAcad3DFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetInvisibleEdge(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetInvisibleEdge(self, Index=..., State=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def VisibilityEdge1(self): ...
    @property
    def VisibilityEdge2(self): ...
    @property
    def VisibilityEdge3(self): ...
    @property
    def VisibilityEdge4(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VisibilityEdge1.setter
    def VisibilityEdge1(self, value) -> None: ...
    @VisibilityEdge2.setter
    def VisibilityEdge2(self, value) -> None: ...
    @VisibilityEdge3.setter
    def VisibilityEdge3(self, value) -> None: ...
    @VisibilityEdge4.setter
    def VisibilityEdge4(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcad3DPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Closed(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Closed.setter
    def Closed(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcad3DSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., SolidObject=...): ...
    def CheckInterference(self, Object=..., CreateInterferenceSolid=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SectionSolid(self, Point1=..., Point2=..., point3=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SliceSolid(self, Point1=..., Point2=..., point3=..., Negative=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Centroid(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def History(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MomentOfInertia(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def PrincipalDirections(self): ...
    @property
    def PrincipalMoments(self): ...
    @property
    def ProductOfInertia(self): ...
    @property
    def RadiiOfGyration(self): ...
    @property
    def ShowHistory(self): ...
    @property
    def SolidType(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def Visible(self): ...
    @property
    def Volume(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @History.setter
    def History(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @ShowHistory.setter
    def ShowHistory(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Eval(self, Expression=...): ...
    def GetAcadState(self): ...
    def GetInterfaceObject(self, ProgID=...): ...
    def InitApp(self, pApp=...): ...
    def ListGrx(self): ...
    def LoadDVB(self, Name=...): ...
    def LoadGrx(self, Name=...): ...
    def LoadVBI(self, Name=...): ...
    def Quit(self): ...
    def RunMacro(self, MacroPath=...): ...
    def StatusId(self, VportObj=...): ...
    def UnloadDVB(self, Name=...): ...
    def UnloadGrx(self, Name=...): ...
    def UnloadVBI(self, Name=...): ...
    def Update(self): ...
    def Zoom(self, Type=..., vParams=...): ...
    def ZoomAll(self): ...
    def ZoomCenter(self, Center=..., Magnify=...): ...
    def ZoomExtents(self): ...
    def ZoomPickWindow(self): ...
    def ZoomPrevious(self): ...
    def ZoomScaled(self, scale=..., ScaleType=...): ...
    def ZoomWindow(self, LowerLeft=..., UpperRight=...): ...
    def __iter__(self): ...
    @property
    def ActiveDocument(self) -> IAcadDocument: ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Caption(self): ...
    @property
    def Documents(self) -> IAcadDocuments: ...
    @property
    def FullName(self): ...
    @property
    def HWND(self): ...
    @property
    def Height(self): ...
    @property
    def LocaleId(self): ...
    @property
    def MenuBar(self) -> IAcadMenuBar: ...
    @property
    def MenuGroups(self) -> IAcadMenuGroups: ...
    @property
    def Name(self): ...
    @property
    def Path(self): ...
    @property
    def Preferences(self) -> IAcadPreferences: ...
    @property
    def VBE(self): ...
    @property
    def Version(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def WindowLeft(self): ...
    @property
    def WindowState(self): ...
    @property
    def WindowTop(self): ...
    @ActiveDocument.setter
    def ActiveDocument(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @WindowLeft.setter
    def WindowLeft(self, value) -> None: ...
    @WindowState.setter
    def WindowState(self, value) -> None: ...
    @WindowTop.setter
    def WindowTop(self, value) -> None: ...

class IAcadArc(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def ArcLength(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EndAngle(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def StartAngle(self): ...
    @property
    def StartPoint(self): ...
    @property
    def Thickness(self): ...
    @property
    def TotalAngle(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Center.setter
    def Center(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadArcAlignedText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcOffset(self): ...
    @property
    def Center(self): ...
    @property
    def CharSpacing(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndAngle(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LeftOffset(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def RightOffset(self): ...
    @property
    def StartAngle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def WidthFactor(self): ...
    @property
    def color(self): ...
    @property
    def contents(self): ...
    @ArcOffset.setter
    def ArcOffset(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeftOffset.setter
    def LeftOffset(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @RightOffset.setter
    def RightOffset(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WidthFactor.setter
    def WidthFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @contents.setter
    def contents(self, value) -> None: ...

class IAcadAssocArrayPath(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IAcadAssocArrayPolar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IAcadAssocArrayRectangular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IAcadAttribute(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Constant(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldLength(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Invisible(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockPosition(self): ...
    @property
    def MTextAttribute(self): ...
    @property
    def MTextAttributeContent(self): ...
    @property
    def MTextBoundaryWidth(self): ...
    @property
    def MTextDrawingDirection(self): ...
    @property
    def Material(self): ...
    @property
    def Mode(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Preset(self): ...
    @property
    def PromptString(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TagString(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def Verify(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @Constant.setter
    def Constant(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FieldLength.setter
    def FieldLength(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Invisible.setter
    def Invisible(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LockPosition.setter
    def LockPosition(self, value) -> None: ...
    @MTextAttribute.setter
    def MTextAttribute(self, value) -> None: ...
    @MTextAttributeContent.setter
    def MTextAttributeContent(self, value) -> None: ...
    @MTextBoundaryWidth.setter
    def MTextBoundaryWidth(self, value) -> None: ...
    @MTextDrawingDirection.setter
    def MTextDrawingDirection(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Mode.setter
    def Mode(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Preset.setter
    def Preset(self, value) -> None: ...
    @PromptString.setter
    def PromptString(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @Verify.setter
    def Verify(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadAttributeReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Constant(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldLength(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Invisible(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockPosition(self): ...
    @property
    def MTextAttribute(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TagString(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FieldLength.setter
    def FieldLength(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Invisible.setter
    def Invisible(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MTextAttribute.setter
    def MTextAttribute(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...
    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...

class IAcadBlockReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadBlocks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, InsertionPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadCamera(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BackPlane(self): ...
    @property
    def Clipping(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldOfView(self): ...
    @property
    def FrameHeight(self): ...
    @property
    def FrameWidth(self): ...
    @property
    def FrontPlane(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IsPlotable(self): ...
    @property
    def Layer(self): ...
    @property
    def LensLength(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Location(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RollAngle(self): ...
    @property
    def Target(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BackPlane.setter
    def BackPlane(self, value) -> None: ...
    @Clipping.setter
    def Clipping(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FieldOfView.setter
    def FieldOfView(self, value) -> None: ...
    @FrameHeight.setter
    def FrameHeight(self, value) -> None: ...
    @FrameWidth.setter
    def FrameWidth(self, value) -> None: ...
    @FrontPlane.setter
    def FrontPlane(self, value) -> None: ...
    @IsPlotable.setter
    def IsPlotable(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LensLength.setter
    def LensLength(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Location.setter
    def Location(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RollAngle.setter
    def RollAngle(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadCircle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Circumference(self): ...
    @property
    def Database(self): ...
    @property
    def Diameter(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Area.setter
    def Area(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @Circumference.setter
    def Circumference(self, value) -> None: ...
    @Diameter.setter
    def Diameter(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...


class IAcadDatabase(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def HandleToObject(self, Handle=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def ObjectIdToObject32(self, ObjectID=...): ...
    def __iter__(self): ...
    @property
    def Blocks(self): ...
    @property
    def Dictionaries(self): ...
    @property
    def DimStyles(self): ...
    @property
    def ElevationModelSpace(self): ...
    @property
    def ElevationPaperSpace(self): ...
    @property
    def FileDependencies(self): ...
    @property
    def Groups(self): ...
    @property
    def Layers(self): ...
    @property
    def Layouts(self): ...
    @property
    def Limits(self): ...
    @property
    def Linetypes(self): ...
    @property
    def Materials(self): ...
    @property
    def ModelSpace(self): ...
    @property
    def PaperSpace(self): ...
    @property
    def PlotConfigurations(self): ...
    @property
    def Preferences(self): ...
    @property
    def RegisteredApplications(self): ...
    @property
    def SectionManager(self): ...
    @property
    def SummaryInfo(self): ...
    @property
    def TextStyles(self): ...
    @property
    def UserCoordinateSystems(self): ...
    @property
    def Viewports(self): ...
    @property
    def Views(self): ...
    @ElevationModelSpace.setter
    def ElevationModelSpace(self, value) -> None: ...
    @ElevationPaperSpace.setter
    def ElevationPaperSpace(self, value) -> None: ...
    @Limits.setter
    def Limits(self, value) -> None: ...

class IAcadDatabasePreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AllowLongSymbolNames(self): ...
    @property
    def Application(self): ...
    @property
    def ContourLinesPerSurface(self): ...
    @property
    def DisplaySilhouette(self): ...
    @property
    def LineWeightDisplay(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaxActiveViewports(self): ...
    @property
    def OLELaunch(self): ...
    @property
    def ObjectSortByPSOutput(self): ...
    @property
    def ObjectSortByPlotting(self): ...
    @property
    def ObjectSortByRedraws(self): ...
    @property
    def ObjectSortByRegens(self): ...
    @property
    def ObjectSortBySelection(self): ...
    @property
    def ObjectSortBySnap(self): ...
    @property
    def RenderSmoothness(self): ...
    @property
    def SegmentPerPolyline(self): ...
    @property
    def SolidFill(self): ...
    @property
    def TextFrameDisplay(self): ...
    @property
    def XRefEdit(self): ...
    @property
    def XRefLayerVisibility(self): ...
    @AllowLongSymbolNames.setter
    def AllowLongSymbolNames(self, value) -> None: ...
    @ContourLinesPerSurface.setter
    def ContourLinesPerSurface(self, value) -> None: ...
    @DisplaySilhouette.setter
    def DisplaySilhouette(self, value) -> None: ...
    @LineWeightDisplay.setter
    def LineWeightDisplay(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaxActiveViewports.setter
    def MaxActiveViewports(self, value) -> None: ...
    @OLELaunch.setter
    def OLELaunch(self, value) -> None: ...
    @ObjectSortByPSOutput.setter
    def ObjectSortByPSOutput(self, value) -> None: ...
    @ObjectSortByPlotting.setter
    def ObjectSortByPlotting(self, value) -> None: ...
    @ObjectSortByRedraws.setter
    def ObjectSortByRedraws(self, value) -> None: ...
    @ObjectSortByRegens.setter
    def ObjectSortByRegens(self, value) -> None: ...
    @ObjectSortBySelection.setter
    def ObjectSortBySelection(self, value) -> None: ...
    @ObjectSortBySnap.setter
    def ObjectSortBySnap(self, value) -> None: ...
    @RenderSmoothness.setter
    def RenderSmoothness(self, value) -> None: ...
    @SegmentPerPolyline.setter
    def SegmentPerPolyline(self, value) -> None: ...
    @SolidFill.setter
    def SolidFill(self, value) -> None: ...
    @TextFrameDisplay.setter
    def TextFrameDisplay(self, value) -> None: ...
    @XRefEdit.setter
    def XRefEdit(self, value) -> None: ...
    @XRefLayerVisibility.setter
    def XRefLayerVisibility(self, value) -> None: ...

class IAcadDictionaries(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IAcadDictionary(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddObject(self, Keyword=..., ObjectName=...): ...
    def AddXRecord(self, Keyword=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetName(self, Object=...): ...
    def GetObject(self, Name=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Remove(self, Name=...): ...
    def Rename(self, OldName=..., NewName=...): ...
    def Replace(self, OldName=..., pObj=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Name.setter
    def Name(self, value) -> None: ...

class IAcadDim3PointAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AngleFormat(self): ...
    @property
    def AngleVertex(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1EndPoint(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2EndPoint(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrecision(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AngleFormat.setter
    def AngleFormat(self, value) -> None: ...
    @AngleVertex.setter
    def AngleVertex(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1EndPoint.setter
    def ExtLine1EndPoint(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2EndPoint.setter
    def ExtLine2EndPoint(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrecision.setter
    def TextPrecision(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...


class IAcadDimAligned(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Point(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Point(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Point.setter
    def ExtLine1Point(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Point.setter
    def ExtLine2Point(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AngleFormat(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1EndPoint(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1StartPoint(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2EndPoint(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2StartPoint(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrecision(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AngleFormat.setter
    def AngleFormat(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1EndPoint.setter
    def ExtLine1EndPoint(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1StartPoint.setter
    def ExtLine1StartPoint(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2EndPoint.setter
    def ExtLine2EndPoint(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2StartPoint.setter
    def ExtLine2StartPoint(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrecision.setter
    def TextPrecision(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimArcLength(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArcEndParam(self): ...
    @property
    def ArcPoint(self): ...
    @property
    def ArcStartParam(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def CenterPoint(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Point(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Point(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasLeader(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IsPartial(self): ...
    @property
    def Layer(self): ...
    @property
    def Leader1Point(self): ...
    @property
    def Leader2Point(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def SymbolPosition(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArcEndParam.setter
    def ArcEndParam(self, value) -> None: ...
    @ArcPoint.setter
    def ArcPoint(self, value) -> None: ...
    @ArcStartParam.setter
    def ArcStartParam(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @CenterPoint.setter
    def CenterPoint(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Point.setter
    def ExtLine1Point(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Point.setter
    def ExtLine2Point(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HasLeader.setter
    def HasLeader(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @IsPartial.setter
    def IsPartial(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Leader1Point.setter
    def Leader1Point(self, value) -> None: ...
    @Leader2Point.setter
    def Leader2Point(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @SymbolPosition.setter
    def SymbolPosition(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimDiametric(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLength.setter
    def LeaderLength(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimOrdinate(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimRadial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLineSuppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLineSuppress.setter
    def DimLineSuppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLength.setter
    def LeaderLength(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimRadialLarge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def Center(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def ChordPoint(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimLineSuppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def JogAngle(self): ...
    @property
    def JogLocation(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OverrideCenter(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @ChordPoint.setter
    def ChordPoint(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimLineSuppress.setter
    def DimLineSuppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @JogAngle.setter
    def JogAngle(self, value) -> None: ...
    @JogLocation.setter
    def JogLocation(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @OverrideCenter.setter
    def OverrideCenter(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimRotated(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDimStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, StyleSource=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Name.setter
    def Name(self, value) -> None: ...

class IAcadDimStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadDimension(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDocument(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Activate(self): ...
    def AuditInfo(self, FixErr=...): ...
    def BindDatabase(self, pDb=...): ...
    def Close(self, SaveChanges=..., FileName=...): ...
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def EndUndoMark(self): ...
    def Export(self, FileName=..., Extension=..., SelectionSet=...): ...
    def GetVariable(self, Name=...): ...
    def HandleToObject(self, Handle=...): ...
    def Import(self, FileName=..., InsertionPoint=..., ScaleFactor=...): ...
    def InitDoc(self, pDoc=...): ...
    def LoadShapeFile(self, FullName=...): ...
    def New(self, TemplateFileName=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def ObjectIdToObject32(self, ObjectID=...): ...
    def Open(self, FullName=..., Password=...): ...
    def PurgeAll(self): ...
    def Regen(self, WhichViewports=...): ...
    def Save(self): ...
    def SaveAs(self, FullFileName=..., SaveAsType=..., vSecurityParams=...): ...
    def SendCommand(self, Command=...): ...
    def SetVariable(self, Name=..., Value=...): ...
    def StartUndoMark(self): ...
    def Wblock(self, FileName=..., SelectionSet=...): ...
    def __iter__(self): ...
    @property
    def Active(self): ...
    @property
    def ActiveDimStyle(self): ...
    @property
    def ActiveLayer(self): ...
    @property
    def ActiveLayout(self): ...
    @property
    def ActiveLinetype(self): ...
    @property
    def ActiveMaterial(self): ...
    @property
    def ActivePViewport(self): ...
    @property
    def ActiveSelectionSet(self): ...
    @property
    def ActiveSpace(self): ...
    @property
    def ActiveTextStyle(self): ...
    @property
    def ActiveUCS(self): ...
    @property
    def ActiveViewport(self): ...
    @property
    def Application(self): ...
    @property
    def Blocks(self): ...
    @property
    def Database(self): ...
    @property
    def Dictionaries(self): ...
    @property
    def DimStyles(self): ...
    @property
    def ElevationModelSpace(self): ...
    @property
    def ElevationPaperSpace(self): ...
    @property
    def FileDependencies(self): ...
    @property
    def FullName(self): ...
    @property
    def Groups(self): ...
    @property
    def HWND(self): ...
    @property
    def HWND32(self): ...
    @property
    def Height(self): ...
    @property
    def Layers(self): ...
    @property
    def Layouts(self): ...
    @property
    def Limits(self): ...
    @property
    def Linetypes(self): ...
    @property
    def MSpace(self): ...
    @property
    def Materials(self): ...
    @property
    def ModelSpace(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectSnapMode(self): ...
    @property
    def PaperSpace(self): ...
    @property
    def Path(self): ...
    @property
    def PickfirstSelectionSet(self): ...
    @property
    def Plot(self): ...
    @property
    def PlotConfigurations(self): ...
    @property
    def Preferences(self): ...
    @property
    def ReadOnly(self): ...
    @property
    def RegisteredApplications(self): ...
    @property
    def Saved(self): ...
    @property
    def SectionManager(self): ...
    @property
    def SelectionSets(self): ...
    @property
    def SummaryInfo(self): ...
    @property
    def TextStyles(self): ...
    @property
    def UserCoordinateSystems(self): ...
    @property
    def Utility(self): ...
    @property
    def Viewports(self): ...
    @property
    def Views(self): ...
    @property
    def Width(self): ...
    @property
    def WindowState(self): ...
    @property
    def WindowTitle(self): ...
    @ActiveDimStyle.setter
    def ActiveDimStyle(self, value) -> None: ...
    @ActiveLayer.setter
    def ActiveLayer(self, value) -> None: ...
    @ActiveLayout.setter
    def ActiveLayout(self, value) -> None: ...
    @ActiveLinetype.setter
    def ActiveLinetype(self, value) -> None: ...
    @ActiveMaterial.setter
    def ActiveMaterial(self, value) -> None: ...
    @ActivePViewport.setter
    def ActivePViewport(self, value) -> None: ...
    @ActiveSpace.setter
    def ActiveSpace(self, value) -> None: ...
    @ActiveTextStyle.setter
    def ActiveTextStyle(self, value) -> None: ...
    @ActiveUCS.setter
    def ActiveUCS(self, value) -> None: ...
    @ActiveViewport.setter
    def ActiveViewport(self, value) -> None: ...
    @ElevationModelSpace.setter
    def ElevationModelSpace(self, value) -> None: ...
    @ElevationPaperSpace.setter
    def ElevationPaperSpace(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Limits.setter
    def Limits(self, value) -> None: ...
    @MSpace.setter
    def MSpace(self, value) -> None: ...
    @ObjectSnapMode.setter
    def ObjectSnapMode(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @WindowState.setter
    def WindowState(self, value) -> None: ...

class IAcadDocuments(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, TemplateName=...): ...
    def Close(self): ...
    def Item(self, Index=...): ...
    def Open(self, Name=..., ReadOnly=..., Password=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...

class IAcadDwfUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AdjustForBackground(self): ...
    @property
    def Application(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def DWFFormat(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def File(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ItemName(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Monochrome(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnderlayLayerOverrideApplied(self): ...
    @property
    def UnderlayName(self): ...
    @property
    def UnderlayVisibility(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @AdjustForBackground.setter
    def AdjustForBackground(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @DWFFormat.setter
    def DWFFormat(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @File.setter
    def File(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @ItemName.setter
    def ItemName(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Monochrome.setter
    def Monochrome(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnderlayLayerOverrideApplied.setter
    def UnderlayLayerOverrideApplied(self, value) -> None: ...
    @UnderlayName.setter
    def UnderlayName(self, value) -> None: ...
    @UnderlayVisibility.setter
    def UnderlayVisibility(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadDynamicBlockReferenceProperty(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def AllowedValues(self): ...
    @property
    def Description(self): ...
    @property
    def PropertyName(self): ...
    @property
    def ReadOnly(self): ...
    @property
    def Show(self): ...
    @property
    def UnitsType(self): ...
    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value) -> None: ...

class IAcadEllipse(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndAngle(self): ...
    @property
    def EndParameter(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MajorAxis(self): ...
    @property
    def MajorRadius(self): ...
    @property
    def Material(self): ...
    @property
    def MinorAxis(self): ...
    @property
    def MinorRadius(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RadiusRatio(self): ...
    @property
    def StartAngle(self): ...
    @property
    def StartParameter(self): ...
    @property
    def StartPoint(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Center.setter
    def Center(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EndParameter.setter
    def EndParameter(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MajorAxis.setter
    def MajorAxis(self, value) -> None: ...
    @MajorRadius.setter
    def MajorRadius(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @MinorRadius.setter
    def MinorRadius(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RadiusRatio.setter
    def RadiusRatio(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @StartParameter.setter
    def StartParameter(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadExternalReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadExtrudedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TaperAngle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TaperAngle.setter
    def TaperAngle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadFileDependencies(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateEntry(self, Feature=..., FullFileName=..., AffectsGraphics=..., noIncrement=...): ...
    def IndexOf(self, Feature=..., FullFileName=...): ...
    def Item(self, Index=...): ...
    def RemoveEntry(self, Index=..., forceRemove=...): ...
    def UpdateEntry(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...

class IAcadFileDependency(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AffectsGraphics(self): ...
    @property
    def Feature(self): ...
    @property
    def FileName(self): ...
    @property
    def FileSize(self): ...
    @property
    def FingerprintGuid(self): ...
    @property
    def FoundPath(self): ...
    @property
    def FullFileName(self): ...
    @property
    def Index(self): ...
    @property
    def IsModified(self): ...
    @property
    def ReferenceCount(self): ...
    @property
    def TimeStamp(self): ...
    @property
    def VersionGuid(self): ...

class IAcadAcCmColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def SetColorBookColor(self, BookName=..., ColorName=...): ...
    def SetNames(self, ColorName=..., BookName=...): ...
    def SetRGB(self, Red=..., Green=..., Blue=...): ...
    def __iter__(self): ...
    @property
    def Blue(self): ...
    @property
    def BookName(self): ...
    @property
    def ColorIndex(self): ...
    @property
    def ColorMethod(self): ...
    @property
    def ColorName(self): ...
    @property
    def EntityColor(self): ...
    @property
    def Green(self): ...
    @property
    def Red(self): ...

    @ColorIndex.setter
    def ColorIndex(self, value) -> None: ...
    @ColorMethod.setter
    def ColorMethod(self, value) -> None: ...
    @EntityColor.setter
    def EntityColor(self, value) -> None: ...

class IAcadGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendItems(self, Objects=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadHatch(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendInnerLoop(self, ObjectArray=...): ...
    def AppendOuterLoop(self, ObjectArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetLoopAt(self, Index=..., ObjectArray=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def InsertLoopAt(self, Index=..., LoopType=..., ObjectArray=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetPattern(self, PatternType=..., PatternName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def AssociativeHatch(self): ...
    @property
    def BackgroundColor(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def GradientAngle(self): ...
    @property
    def GradientCentered(self): ...
    @property
    def GradientColor1(self): ...
    @property
    def GradientColor2(self): ...
    @property
    def GradientName(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HatchObjectType(self): ...
    @property
    def HatchStyle(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ISOPenWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def NumberOfLoops(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PatternAngle(self): ...
    @property
    def PatternDouble(self): ...
    @property
    def PatternName(self): ...
    @property
    def PatternScale(self): ...
    @property
    def PatternSpace(self): ...
    @property
    def PatternType(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AssociativeHatch.setter
    def AssociativeHatch(self, value) -> None: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @GradientAngle.setter
    def GradientAngle(self, value) -> None: ...
    @GradientCentered.setter
    def GradientCentered(self, value) -> None: ...
    @GradientColor1.setter
    def GradientColor1(self, value) -> None: ...
    @GradientColor2.setter
    def GradientColor2(self, value) -> None: ...
    @GradientName.setter
    def GradientName(self, value) -> None: ...
    @HatchObjectType.setter
    def HatchObjectType(self, value) -> None: ...
    @HatchStyle.setter
    def HatchStyle(self, value) -> None: ...
    @ISOPenWidth.setter
    def ISOPenWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PatternAngle.setter
    def PatternAngle(self, value) -> None: ...
    @PatternDouble.setter
    def PatternDouble(self, value) -> None: ...
    @PatternScale.setter
    def PatternScale(self, value) -> None: ...
    @PatternSpace.setter
    def PatternSpace(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadHelix(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BaseRadius(self): ...
    @property
    def Constrain(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def TopRadius(self): ...
    @property
    def TotalLength(self): ...
    @property
    def TrueColor(self): ...
    @property
    def TurnHeight(self): ...
    @property
    def TurnSlope(self): ...
    @property
    def Turns(self): ...
    @property
    def Twist(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BaseRadius.setter
    def BaseRadius(self, value) -> None: ...
    @Constrain.setter
    def Constrain(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @TopRadius.setter
    def TopRadius(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @TurnHeight.setter
    def TurnHeight(self, value) -> None: ...
    @Turns.setter
    def Turns(self, value) -> None: ...
    @Twist.setter
    def Twist(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadHyperlink(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def URL(self): ...
    @property
    def URLDescription(self): ...
    @property
    def URLNamedLocation(self): ...
    @URL.setter
    def URL(self, value) -> None: ...
    @URLDescription.setter
    def URLDescription(self, value) -> None: ...
    @URLNamedLocation.setter
    def URLNamedLocation(self, value) -> None: ...

class IAcadHyperlinks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., Description=..., NamedLocation=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...

class IAcadIdPair(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def IsCloned(self): ...
    @property
    def IsOwnerXlated(self): ...
    @property
    def IsPrimary(self): ...
    @property
    def Key32(self): ...
    @property
    def Value(self): ...
    @property
    def Value32(self): ...
    @property
    def key(self): ...

class IAcadLWPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, Index=..., vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def ConstantWidth(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeGeneration(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Closed.setter
    def Closed(self, value) -> None: ...
    @ConstantWidth.setter
    def ConstantWidth(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeGeneration.setter
    def LinetypeGeneration(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLayer(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Freeze(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def LayerOn(self): ...
    @property
    def Linetype(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Lock(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Plottable(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Used(self): ...
    @property
    def ViewportDefault(self): ...
    @property
    def color(self): ...
    @Description.setter
    def Description(self, value) -> None: ...
    @Freeze.setter
    def Freeze(self, value) -> None: ...
    @LayerOn.setter
    def LayerOn(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Lock.setter
    def Lock(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Plottable.setter
    def Plottable(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @ViewportDefault.setter
    def ViewportDefault(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLayerStateManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self, bsName=...): ...
    def Export(self, bsName=..., bsFilename=...): ...
    def Import(self, bsFilename=...): ...
    def Mask(self, bsName=...): ...
    def Rename(self, bsName=..., bsNewName=...): ...
    def Restore(self, bsName=...): ...
    def Save(self, bsName=..., eMask=...): ...
    def SetDatabase(self, iHostDb=...): ...
    def SetMask(self, bsName=..., arg1=...): ...
    def __iter__(self): ...

class IAcadLayers(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateUsageData(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadLayout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Block(self): ...
    @property
    def CanonicalMediaName(self): ...
    @property
    def CenterPlot(self): ...
    @property
    def ConfigName(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ModelType(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PaperUnits(self): ...
    @property
    def PlotHidden(self): ...
    @property
    def PlotOrigin(self): ...
    @property
    def PlotRotation(self): ...
    @property
    def PlotType(self): ...
    @property
    def PlotViewportBorders(self): ...
    @property
    def PlotViewportsFirst(self): ...
    @property
    def PlotWithLineweights(self): ...
    @property
    def PlotWithPlotStyles(self): ...
    @property
    def ScaleLineweights(self): ...
    @property
    def ShowPlotStyles(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def TabOrder(self): ...
    @property
    def UseStandardScale(self): ...
    @property
    def ViewToPlot(self): ...
    @CanonicalMediaName.setter
    def CanonicalMediaName(self, value) -> None: ...
    @CenterPlot.setter
    def CenterPlot(self, value) -> None: ...
    @ConfigName.setter
    def ConfigName(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PaperUnits.setter
    def PaperUnits(self, value) -> None: ...
    @PlotHidden.setter
    def PlotHidden(self, value) -> None: ...
    @PlotOrigin.setter
    def PlotOrigin(self, value) -> None: ...
    @PlotRotation.setter
    def PlotRotation(self, value) -> None: ...
    @PlotType.setter
    def PlotType(self, value) -> None: ...
    @PlotViewportBorders.setter
    def PlotViewportBorders(self, value) -> None: ...
    @PlotViewportsFirst.setter
    def PlotViewportsFirst(self, value) -> None: ...
    @PlotWithLineweights.setter
    def PlotWithLineweights(self, value) -> None: ...
    @PlotWithPlotStyles.setter
    def PlotWithPlotStyles(self, value) -> None: ...
    @ScaleLineweights.setter
    def ScaleLineweights(self, value) -> None: ...
    @ShowPlotStyles.setter
    def ShowPlotStyles(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @TabOrder.setter
    def TabOrder(self, value) -> None: ...
    @UseStandardScale.setter
    def UseStandardScale(self, value) -> None: ...
    @ViewToPlot.setter
    def ViewToPlot(self, value) -> None: ...

class IAcadLayouts(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Annotation(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextGap(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Annotation.setter
    def Annotation(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLight(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AttenuationType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndLimit(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FallOff(self): ...
    @property
    def FromVector(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HotSpot(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Intensity(self): ...
    @property
    def LColor(self): ...
    @property
    def Layer(self): ...
    @property
    def LightType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MapSize(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotGlyph(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def ShadowType(self): ...
    @property
    def Shadows(self): ...
    @property
    def Softness(self): ...
    @property
    def SourceVectorX(self): ...
    @property
    def SourceVectorY(self): ...
    @property
    def SourceVectorZ(self): ...
    @property
    def StartLimit(self): ...
    @property
    def Status(self): ...
    @property
    def Target(self): ...
    @property
    def ToVector(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UseLimits(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AttenuationType.setter
    def AttenuationType(self, value) -> None: ...
    @EndLimit.setter
    def EndLimit(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FallOff.setter
    def FallOff(self, value) -> None: ...
    @FromVector.setter
    def FromVector(self, value) -> None: ...
    @HotSpot.setter
    def HotSpot(self, value) -> None: ...
    @Intensity.setter
    def Intensity(self, value) -> None: ...
    @LColor.setter
    def LColor(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LightType.setter
    def LightType(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MapSize.setter
    def MapSize(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotGlyph.setter
    def PlotGlyph(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @ShadowType.setter
    def ShadowType(self, value) -> None: ...
    @Shadows.setter
    def Shadows(self, value) -> None: ...
    @Softness.setter
    def Softness(self, value) -> None: ...
    @SourceVectorX.setter
    def SourceVectorX(self, value) -> None: ...
    @SourceVectorY.setter
    def SourceVectorY(self, value) -> None: ...
    @SourceVectorZ.setter
    def SourceVectorZ(self, value) -> None: ...
    @StartLimit.setter
    def StartLimit(self, value) -> None: ...
    @Status.setter
    def Status(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @ToVector.setter
    def ToVector(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UseLimits.setter
    def UseLimits(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLight2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AttenuationType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndLimit(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FallOff(self): ...
    @property
    def FromVector(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasTarget(self): ...
    @property
    def HotSpot(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IlluminanceDistance(self): ...
    @property
    def Intensity(self): ...
    @property
    def LColor(self): ...
    @property
    def LampColor(self): ...
    @property
    def LampIntensity(self): ...
    @property
    def Layer(self): ...
    @property
    def LightType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MapSize(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotGlyph(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def ResultColor(self): ...
    @property
    def ResultIntensity(self): ...
    @property
    def ShadowLength(self): ...
    @property
    def ShadowRadius(self): ...
    @property
    def ShadowSamples(self): ...
    @property
    def ShadowShape(self): ...
    @property
    def ShadowType(self): ...
    @property
    def ShadowVisible(self): ...
    @property
    def ShadowWidth(self): ...
    @property
    def Shadows(self): ...
    @property
    def Softness(self): ...
    @property
    def SourceVectorX(self): ...
    @property
    def SourceVectorY(self): ...
    @property
    def SourceVectorZ(self): ...
    @property
    def StartLimit(self): ...
    @property
    def Status(self): ...
    @property
    def Target(self): ...
    @property
    def ToVector(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UseLimits(self): ...
    @property
    def Visible(self): ...
    @property
    def WebFile(self): ...
    @property
    def WebPreview(self): ...
    @property
    def WebRotateX(self): ...
    @property
    def WebRotateY(self): ...
    @property
    def WebRotateZ(self): ...
    @property
    def color(self): ...
    @AttenuationType.setter
    def AttenuationType(self, value) -> None: ...
    @EndLimit.setter
    def EndLimit(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FallOff.setter
    def FallOff(self, value) -> None: ...
    @FromVector.setter
    def FromVector(self, value) -> None: ...
    @HasTarget.setter
    def HasTarget(self, value) -> None: ...
    @HotSpot.setter
    def HotSpot(self, value) -> None: ...
    @IlluminanceDistance.setter
    def IlluminanceDistance(self, value) -> None: ...
    @Intensity.setter
    def Intensity(self, value) -> None: ...
    @LColor.setter
    def LColor(self, value) -> None: ...
    @LampColor.setter
    def LampColor(self, value) -> None: ...
    @LampIntensity.setter
    def LampIntensity(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LightType.setter
    def LightType(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MapSize.setter
    def MapSize(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotGlyph.setter
    def PlotGlyph(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @ResultColor.setter
    def ResultColor(self, value) -> None: ...
    @ResultIntensity.setter
    def ResultIntensity(self, value) -> None: ...
    @ShadowLength.setter
    def ShadowLength(self, value) -> None: ...
    @ShadowRadius.setter
    def ShadowRadius(self, value) -> None: ...
    @ShadowSamples.setter
    def ShadowSamples(self, value) -> None: ...
    @ShadowShape.setter
    def ShadowShape(self, value) -> None: ...
    @ShadowType.setter
    def ShadowType(self, value) -> None: ...
    @ShadowVisible.setter
    def ShadowVisible(self, value) -> None: ...
    @ShadowWidth.setter
    def ShadowWidth(self, value) -> None: ...
    @Shadows.setter
    def Shadows(self, value) -> None: ...
    @Softness.setter
    def Softness(self, value) -> None: ...
    @SourceVectorX.setter
    def SourceVectorX(self, value) -> None: ...
    @SourceVectorY.setter
    def SourceVectorY(self, value) -> None: ...
    @SourceVectorZ.setter
    def SourceVectorZ(self, value) -> None: ...
    @StartLimit.setter
    def StartLimit(self, value) -> None: ...
    @Status.setter
    def Status(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @ToVector.setter
    def ToVector(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UseLimits.setter
    def UseLimits(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WebFile.setter
    def WebFile(self, value) -> None: ...
    @WebPreview.setter
    def WebPreview(self, value) -> None: ...
    @WebRotateX.setter
    def WebRotateX(self, value) -> None: ...
    @WebRotateY.setter
    def WebRotateY(self, value) -> None: ...
    @WebRotateZ.setter
    def WebRotateZ(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLight3(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AttenuationType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndLimit(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FallOff(self): ...
    @property
    def FromVector(self): ...
    @property
    def GlyphDisplay(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasTarget(self): ...
    @property
    def HotSpot(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IlluminanceDistance(self): ...
    @property
    def Intensity(self): ...
    @property
    def LColor(self): ...
    @property
    def LampColor(self): ...
    @property
    def LampIntensity(self): ...
    @property
    def Layer(self): ...
    @property
    def LightType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MapSize(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotGlyph(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def ResultColor(self): ...
    @property
    def ResultIntensity(self): ...
    @property
    def ShadowLength(self): ...
    @property
    def ShadowRadius(self): ...
    @property
    def ShadowSamples(self): ...
    @property
    def ShadowShape(self): ...
    @property
    def ShadowType(self): ...
    @property
    def ShadowVisible(self): ...
    @property
    def ShadowWidth(self): ...
    @property
    def Shadows(self): ...
    @property
    def Softness(self): ...
    @property
    def SourceVectorX(self): ...
    @property
    def SourceVectorY(self): ...
    @property
    def SourceVectorZ(self): ...
    @property
    def StartLimit(self): ...
    @property
    def Status(self): ...
    @property
    def Target(self): ...
    @property
    def ToVector(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UseLimits(self): ...
    @property
    def Visible(self): ...
    @property
    def WebFile(self): ...
    @property
    def WebPreview(self): ...
    @property
    def WebRotateX(self): ...
    @property
    def WebRotateY(self): ...
    @property
    def WebRotateZ(self): ...
    @property
    def color(self): ...
    @AttenuationType.setter
    def AttenuationType(self, value) -> None: ...
    @EndLimit.setter
    def EndLimit(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FallOff.setter
    def FallOff(self, value) -> None: ...
    @FromVector.setter
    def FromVector(self, value) -> None: ...
    @GlyphDisplay.setter
    def GlyphDisplay(self, value) -> None: ...
    @HasTarget.setter
    def HasTarget(self, value) -> None: ...
    @HotSpot.setter
    def HotSpot(self, value) -> None: ...
    @IlluminanceDistance.setter
    def IlluminanceDistance(self, value) -> None: ...
    @Intensity.setter
    def Intensity(self, value) -> None: ...
    @LColor.setter
    def LColor(self, value) -> None: ...
    @LampColor.setter
    def LampColor(self, value) -> None: ...
    @LampIntensity.setter
    def LampIntensity(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LightType.setter
    def LightType(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MapSize.setter
    def MapSize(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotGlyph.setter
    def PlotGlyph(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @ResultColor.setter
    def ResultColor(self, value) -> None: ...
    @ResultIntensity.setter
    def ResultIntensity(self, value) -> None: ...
    @ShadowLength.setter
    def ShadowLength(self, value) -> None: ...
    @ShadowRadius.setter
    def ShadowRadius(self, value) -> None: ...
    @ShadowSamples.setter
    def ShadowSamples(self, value) -> None: ...
    @ShadowShape.setter
    def ShadowShape(self, value) -> None: ...
    @ShadowType.setter
    def ShadowType(self, value) -> None: ...
    @ShadowVisible.setter
    def ShadowVisible(self, value) -> None: ...
    @ShadowWidth.setter
    def ShadowWidth(self, value) -> None: ...
    @Shadows.setter
    def Shadows(self, value) -> None: ...
    @Softness.setter
    def Softness(self, value) -> None: ...
    @SourceVectorX.setter
    def SourceVectorX(self, value) -> None: ...
    @SourceVectorY.setter
    def SourceVectorY(self, value) -> None: ...
    @SourceVectorZ.setter
    def SourceVectorZ(self, value) -> None: ...
    @StartLimit.setter
    def StartLimit(self, value) -> None: ...
    @Status.setter
    def Status(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @ToVector.setter
    def ToVector(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UseLimits.setter
    def UseLimits(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WebFile.setter
    def WebFile(self, value) -> None: ...
    @WebPreview.setter
    def WebPreview(self, value) -> None: ...
    @WebRotateX.setter
    def WebRotateX(self, value) -> None: ...
    @WebRotateY.setter
    def WebRotateY(self, value) -> None: ...
    @WebRotateZ.setter
    def WebRotateZ(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Angle(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Delta(self): ...
    @property
    def Document(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def StartPoint(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @EndPoint.setter
    def EndPoint(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @StartPoint.setter
    def StartPoint(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadLineType(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Description.setter
    def Description(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...

class IAcadLineTypes(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Load(self, Name=..., FileName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...


class IAcadLoftedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Closed(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndDraftAngle(self): ...
    @property
    def EndDraftMagnitude(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def NumCrossSections(self): ...
    @property
    def NumGuidePaths(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def StartDraftAngle(self): ...
    @property
    def StartDraftMagnitude(self): ...
    @property
    def SurfaceNormals(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @Closed.setter
    def Closed(self, value) -> None: ...
    @EndDraftAngle.setter
    def EndDraftAngle(self, value) -> None: ...
    @EndDraftMagnitude.setter
    def EndDraftMagnitude(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @StartDraftAngle.setter
    def StartDraftAngle(self, value) -> None: ...
    @StartDraftMagnitude.setter
    def StartDraftMagnitude(self, value) -> None: ...
    @SurfaceNormals.setter
    def SurfaceNormals(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadMInsertBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ColumnSpacing(self): ...
    @property
    def Columns(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def RowSpacing(self): ...
    @property
    def Rows(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...
    @ColumnSpacing.setter
    def ColumnSpacing(self, value) -> None: ...
    @Columns.setter
    def Columns(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RowSpacing.setter
    def RowSpacing(self, value) -> None: ...
    @Rows.setter
    def Rows(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadMLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddLeader(self): ...
    def AddLeaderLine(self, leaderIndex=..., pointArray=...): ...
    def AddLeaderLineEx(self, pointArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBlockAttributeValue(self, attdefId=...): ...
    def GetBlockAttributeValue32(self, attdefId=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetDoglegDirection(self, leaderIndex=...): ...
    def GetExtensionDictionary(self): ...
    def GetLeaderIndex(self, leaderLineIndex=...): ...
    def GetLeaderLineIndexes(self, leaderIndex=...): ...
    def GetLeaderLineVertices(self, leaderLineIndex=...): ...
    def GetVertexCount(self, leaderLineIndex=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveLeader(self, leaderIndex=...): ...
    def RemoveLeaderLine(self, leaderLineIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBlockAttributeValue(self, attdefId=..., Value=...): ...
    def SetBlockAttributeValue32(self, attdefId=..., Value=...): ...
    def SetDoglegDirection(self, leaderIndex=..., dirVec=...): ...
    def SetLeaderLineVertices(self, leaderLineIndex=..., pointArray=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def BlockConnectionType(self): ...
    @property
    def BlockScale(self): ...
    @property
    def ContentBlockName(self): ...
    @property
    def ContentBlockType(self): ...
    @property
    def ContentType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def DogLegged(self): ...
    @property
    def DoglegLength(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def LandingGap(self): ...
    @property
    def Layer(self): ...
    @property
    def LeaderCount(self): ...
    @property
    def LeaderLineColor(self): ...
    @property
    def LeaderLineWeight(self): ...
    @property
    def LeaderLinetype(self): ...
    @property
    def LeaderType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextAttachmentDirection(self): ...
    @property
    def TextBackgroundFill(self): ...
    @property
    def TextBottomAttachmentType(self): ...
    @property
    def TextDirection(self): ...
    @property
    def TextFrameDisplay(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextJustify(self): ...
    @property
    def TextLeftAttachmentType(self): ...
    @property
    def TextLineSpacingDistance(self): ...
    @property
    def TextLineSpacingFactor(self): ...
    @property
    def TextLineSpacingStyle(self): ...
    @property
    def TextRightAttachmentType(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyleName(self): ...
    @property
    def TextTopAttachmentType(self): ...
    @property
    def TextWidth(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @BlockConnectionType.setter
    def BlockConnectionType(self, value) -> None: ...
    @BlockScale.setter
    def BlockScale(self, value) -> None: ...
    @ContentBlockName.setter
    def ContentBlockName(self, value) -> None: ...
    @ContentBlockType.setter
    def ContentBlockType(self, value) -> None: ...
    @ContentType.setter
    def ContentType(self, value) -> None: ...
    @DogLegged.setter
    def DogLegged(self, value) -> None: ...
    @DoglegLength.setter
    def DoglegLength(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @LandingGap.setter
    def LandingGap(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLineColor.setter
    def LeaderLineColor(self, value) -> None: ...
    @LeaderLineWeight.setter
    def LeaderLineWeight(self, value) -> None: ...
    @LeaderLinetype.setter
    def LeaderLinetype(self, value) -> None: ...
    @LeaderType.setter
    def LeaderType(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextAttachmentDirection.setter
    def TextAttachmentDirection(self, value) -> None: ...
    @TextBackgroundFill.setter
    def TextBackgroundFill(self, value) -> None: ...
    @TextBottomAttachmentType.setter
    def TextBottomAttachmentType(self, value) -> None: ...
    @TextDirection.setter
    def TextDirection(self, value) -> None: ...
    @TextFrameDisplay.setter
    def TextFrameDisplay(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextJustify.setter
    def TextJustify(self, value) -> None: ...
    @TextLeftAttachmentType.setter
    def TextLeftAttachmentType(self, value) -> None: ...
    @TextLineSpacingDistance.setter
    def TextLineSpacingDistance(self, value) -> None: ...
    @TextLineSpacingFactor.setter
    def TextLineSpacingFactor(self, value) -> None: ...
    @TextLineSpacingStyle.setter
    def TextLineSpacingStyle(self, value) -> None: ...
    @TextRightAttachmentType.setter
    def TextRightAttachmentType(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyleName.setter
    def TextStyleName(self, value) -> None: ...
    @TextTopAttachmentType.setter
    def TextTopAttachmentType(self, value) -> None: ...
    @TextWidth.setter
    def TextWidth(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadMLeaderStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def AlignSpace(self): ...
    @property
    def Annotative(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowSize(self): ...
    @property
    def ArrowSymbol(self): ...
    @property
    def BitFlags(self): ...
    @property
    def Block(self): ...
    @property
    def BlockColor(self): ...
    @property
    def BlockConnectionType(self): ...
    @property
    def BlockRotation(self): ...
    @property
    def BlockScale(self): ...
    @property
    def BreakSize(self): ...
    @property
    def ContentType(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def DoglegLength(self): ...
    @property
    def DrawLeaderOrderType(self): ...
    @property
    def DrawMLeaderOrderType(self): ...
    @property
    def EnableBlockRotation(self): ...
    @property
    def EnableBlockScale(self): ...
    @property
    def EnableDogleg(self): ...
    @property
    def EnableFrameText(self): ...
    @property
    def EnableLanding(self): ...
    @property
    def FirstSegmentAngleConstraint(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def LandingGap(self): ...
    @property
    def LeaderLineColor(self): ...
    @property
    def LeaderLineTypeId(self): ...
    @property
    def LeaderLineWeight(self): ...
    @property
    def LeaderLinetype(self): ...
    @property
    def MaxLeaderSegmentsPoints(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OverwritePropChanged(self): ...
    @property
    def OwnerID(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def SecondSegmentAngleConstraint(self): ...
    @property
    def TextAlignmentType(self): ...
    @property
    def TextAngleType(self): ...
    @property
    def TextAttachmentDirection(self): ...
    @property
    def TextBottomAttachmentType(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextLeftAttachmentType(self): ...
    @property
    def TextRightAttachmentType(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextTopAttachmentType(self): ...
    @AlignSpace.setter
    def AlignSpace(self, value) -> None: ...
    @Annotative.setter
    def Annotative(self, value) -> None: ...
    @ArrowSize.setter
    def ArrowSize(self, value) -> None: ...
    @ArrowSymbol.setter
    def ArrowSymbol(self, value) -> None: ...
    @BitFlags.setter
    def BitFlags(self, value) -> None: ...
    @Block.setter
    def Block(self, value) -> None: ...
    @BlockColor.setter
    def BlockColor(self, value) -> None: ...
    @BlockConnectionType.setter
    def BlockConnectionType(self, value) -> None: ...
    @BlockRotation.setter
    def BlockRotation(self, value) -> None: ...
    @BlockScale.setter
    def BlockScale(self, value) -> None: ...
    @BreakSize.setter
    def BreakSize(self, value) -> None: ...
    @ContentType.setter
    def ContentType(self, value) -> None: ...
    @Description.setter
    def Description(self, value) -> None: ...
    @DoglegLength.setter
    def DoglegLength(self, value) -> None: ...
    @DrawLeaderOrderType.setter
    def DrawLeaderOrderType(self, value) -> None: ...
    @DrawMLeaderOrderType.setter
    def DrawMLeaderOrderType(self, value) -> None: ...
    @EnableBlockRotation.setter
    def EnableBlockRotation(self, value) -> None: ...
    @EnableBlockScale.setter
    def EnableBlockScale(self, value) -> None: ...
    @EnableDogleg.setter
    def EnableDogleg(self, value) -> None: ...
    @EnableFrameText.setter
    def EnableFrameText(self, value) -> None: ...
    @EnableLanding.setter
    def EnableLanding(self, value) -> None: ...
    @FirstSegmentAngleConstraint.setter
    def FirstSegmentAngleConstraint(self, value) -> None: ...
    @LandingGap.setter
    def LandingGap(self, value) -> None: ...
    @LeaderLineColor.setter
    def LeaderLineColor(self, value) -> None: ...
    @LeaderLineTypeId.setter
    def LeaderLineTypeId(self, value) -> None: ...
    @LeaderLineWeight.setter
    def LeaderLineWeight(self, value) -> None: ...
    @LeaderLinetype.setter
    def LeaderLinetype(self, value) -> None: ...
    @MaxLeaderSegmentsPoints.setter
    def MaxLeaderSegmentsPoints(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @SecondSegmentAngleConstraint.setter
    def SecondSegmentAngleConstraint(self, value) -> None: ...
    @TextAlignmentType.setter
    def TextAlignmentType(self, value) -> None: ...
    @TextAngleType.setter
    def TextAngleType(self, value) -> None: ...
    @TextAttachmentDirection.setter
    def TextAttachmentDirection(self, value) -> None: ...
    @TextBottomAttachmentType.setter
    def TextBottomAttachmentType(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextLeftAttachmentType.setter
    def TextLeftAttachmentType(self, value) -> None: ...
    @TextRightAttachmentType.setter
    def TextRightAttachmentType(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextTopAttachmentType.setter
    def TextTopAttachmentType(self, value) -> None: ...

class IAcadMLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Justification(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MLineScale(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def StyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Justification.setter
    def Justification(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MLineScale.setter
    def MLineScale(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadMText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AttachmentPoint(self): ...
    @property
    def BackgroundFill(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def DrawingDirection(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def LineSpacingDistance(self): ...
    @property
    def LineSpacingFactor(self): ...
    @property
    def LineSpacingStyle(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextString(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @AttachmentPoint.setter
    def AttachmentPoint(self, value) -> None: ...
    @BackgroundFill.setter
    def BackgroundFill(self, value) -> None: ...
    @DrawingDirection.setter
    def DrawingDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LineSpacingDistance.setter
    def LineSpacingDistance(self, value) -> None: ...
    @LineSpacingFactor.setter
    def LineSpacingFactor(self, value) -> None: ...
    @LineSpacingStyle.setter
    def LineSpacingStyle(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadMaterial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Description.setter
    def Description(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...

class IAcadMaterials(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadMenuBar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...

class IAcadMenuGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Save(self, MenuFileType=...): ...
    def SaveAs(self, MenuFileName=..., MenuFileType=...): ...
    def Unload(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def MenuFileName(self): ...
    @property
    def Menus(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def Toolbars(self): ...
    @property
    def Type(self): ...

class IAcadMenuGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def Load(self, MenuFileName=..., BaseMenu=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...

class IAcadModelSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...
    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...

class IAcadNurbSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CvHullDisplay(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @CvHullDisplay.setter
    def CvHullDisplay(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadObject(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    

class IAcadObjectEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class IAcadOle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockAspectRatio(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OleItemType(self): ...
    @property
    def OlePlotQuality(self): ...
    @property
    def OleSourceApp(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleHeight(self): ...
    @property
    def ScaleWidth(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LockAspectRatio.setter
    def LockAspectRatio(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @OleItemType.setter
    def OleItemType(self, value) -> None: ...
    @OlePlotQuality.setter
    def OlePlotQuality(self, value) -> None: ...
    @OleSourceApp.setter
    def OleSourceApp(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleHeight.setter
    def ScaleHeight(self, value) -> None: ...
    @ScaleWidth.setter
    def ScaleWidth(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Display(self, bStatus=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SyncModelView(self): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcSmoothness(self): ...
    @property
    def Center(self): ...
    @property
    def Clipped(self): ...
    @property
    def CustomScale(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def DisplayLocked(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def GridOn(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasSheetView(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def LabelBlockId(self): ...
    @property
    def LabelBlockId32(self): ...
    @property
    def Layer(self): ...
    @property
    def LayerPropertyOverrides(self): ...
    @property
    def LensLength(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ModelView(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RemoveHiddenLines(self): ...
    @property
    def ShadePlot(self): ...
    @property
    def SheetView(self): ...
    @property
    def SnapBasePoint(self): ...
    @property
    def SnapOn(self): ...
    @property
    def SnapRotationAngle(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StandardScale2(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def Target(self): ...
    @property
    def TrueColor(self): ...
    @property
    def TwistAngle(self): ...
    @property
    def UCSIconAtOrigin(self): ...
    @property
    def UCSIconOn(self): ...
    @property
    def UCSPerViewport(self): ...
    @property
    def ViewportOn(self): ...
    @property
    def Visible(self): ...
    @property
    def VisualStyle(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @ArcSmoothness.setter
    def ArcSmoothness(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @CustomScale.setter
    def CustomScale(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @DisplayLocked.setter
    def DisplayLocked(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @GridOn.setter
    def GridOn(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LabelBlockId.setter
    def LabelBlockId(self, value) -> None: ...
    @LabelBlockId32.setter
    def LabelBlockId32(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LensLength.setter
    def LensLength(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @ModelView.setter
    def ModelView(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RemoveHiddenLines.setter
    def RemoveHiddenLines(self, value) -> None: ...
    @ShadePlot.setter
    def ShadePlot(self, value) -> None: ...
    @SheetView.setter
    def SheetView(self, value) -> None: ...
    @SnapBasePoint.setter
    def SnapBasePoint(self, value) -> None: ...
    @SnapOn.setter
    def SnapOn(self, value) -> None: ...
    @SnapRotationAngle.setter
    def SnapRotationAngle(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StandardScale2.setter
    def StandardScale2(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @TwistAngle.setter
    def TwistAngle(self, value) -> None: ...
    @UCSIconAtOrigin.setter
    def UCSIconAtOrigin(self, value) -> None: ...
    @UCSIconOn.setter
    def UCSIconOn(self, value) -> None: ...
    @UCSPerViewport.setter
    def UCSPerViewport(self, value) -> None: ...
    @ViewportOn.setter
    def ViewportOn(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @VisualStyle.setter
    def VisualStyle(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPaperSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPViewport(self, Center=..., Width=..., Height=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...
    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...

class IAcadPlaneSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPlot(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def DisplayPlotPreview(self, Preview=...): ...
    def PlotToDevice(self, plotConfig=...): ...
    def PlotToFile(self, plotFile=..., plotConfig=...): ...
    def SetLayoutsToPlot(self, layoutList=...): ...
    def StartBatchMode(self, entryCount=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BatchPlotProgress(self): ...
    @property
    def NumberOfCopies(self): ...
    @property
    def QuietErrorMode(self): ...
    @BatchPlotProgress.setter
    def BatchPlotProgress(self, value) -> None: ...
    @NumberOfCopies.setter
    def NumberOfCopies(self, value) -> None: ...
    @QuietErrorMode.setter
    def QuietErrorMode(self, value) -> None: ...

class IAcadPlotConfiguration(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CanonicalMediaName(self): ...
    @property
    def CenterPlot(self): ...
    @property
    def ConfigName(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ModelType(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PaperUnits(self): ...
    @property
    def PlotHidden(self): ...
    @property
    def PlotOrigin(self): ...
    @property
    def PlotRotation(self): ...
    @property
    def PlotType(self): ...
    @property
    def PlotViewportBorders(self): ...
    @property
    def PlotViewportsFirst(self): ...
    @property
    def PlotWithLineweights(self): ...
    @property
    def PlotWithPlotStyles(self): ...
    @property
    def ScaleLineweights(self): ...
    @property
    def ShowPlotStyles(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def UseStandardScale(self): ...
    @property
    def ViewToPlot(self): ...
    @CanonicalMediaName.setter
    def CanonicalMediaName(self, value) -> None: ...
    @CenterPlot.setter
    def CenterPlot(self, value) -> None: ...
    @ConfigName.setter
    def ConfigName(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PaperUnits.setter
    def PaperUnits(self, value) -> None: ...
    @PlotHidden.setter
    def PlotHidden(self, value) -> None: ...
    @PlotOrigin.setter
    def PlotOrigin(self, value) -> None: ...
    @PlotRotation.setter
    def PlotRotation(self, value) -> None: ...
    @PlotType.setter
    def PlotType(self, value) -> None: ...
    @PlotViewportBorders.setter
    def PlotViewportBorders(self, value) -> None: ...
    @PlotViewportsFirst.setter
    def PlotViewportsFirst(self, value) -> None: ...
    @PlotWithLineweights.setter
    def PlotWithLineweights(self, value) -> None: ...
    @PlotWithPlotStyles.setter
    def PlotWithPlotStyles(self, value) -> None: ...
    @ScaleLineweights.setter
    def ScaleLineweights(self, value) -> None: ...
    @ShowPlotStyles.setter
    def ShowPlotStyles(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @UseStandardScale.setter
    def UseStandardScale(self, value) -> None: ...
    @ViewToPlot.setter
    def ViewToPlot(self, value) -> None: ...

class IAcadPlotConfigurations(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., ModelType=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadPoint(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPointCloudEx(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ColorScheme(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Geolocate(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Locked(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ShowCropped(self): ...
    @property
    def Stylization(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Unit(self): ...
    @property
    def UnitFactor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...
    @ColorScheme.setter
    def ColorScheme(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Geolocate.setter
    def Geolocate(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Locked.setter
    def Locked(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ShowCropped.setter
    def ShowCropped(self, value) -> None: ...
    @Stylization.setter
    def Stylization(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...

class IAcadPolyfaceMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def NumberOfFaces(self): ...
    @property
    def NumberOfVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Faces.setter
    def Faces(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPolygonMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MClose(self): ...
    @property
    def MDensity(self): ...
    @property
    def MVertexCount(self): ...
    @property
    def Material(self): ...
    @property
    def NClose(self): ...
    @property
    def NDensity(self): ...
    @property
    def NVertexCount(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MClose.setter
    def MClose(self, value) -> None: ...
    @MDensity.setter
    def MDensity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @NClose.setter
    def NClose(self, value) -> None: ...
    @NDensity.setter
    def NDensity(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def ConstantWidth(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeGeneration(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Closed.setter
    def Closed(self, value) -> None: ...
    @ConstantWidth.setter
    def ConstantWidth(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeGeneration.setter
    def LinetypeGeneration(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadPopupMenu(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddMenuItem(self, Index=..., Label=..., Macro=...): ...
    def AddSeparator(self, Index=...): ...
    def AddSubMenu(self, Index=..., Label=...): ...
    def InsertInMenuBar(self, Index=...): ...
    def Item(self, Index=...): ...
    def RemoveFromMenuBar(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Name(self): ...
    @property
    def NameNoMnemonic(self): ...
    @property
    def OnMenuBar(self): ...
    @property
    def Parent(self): ...
    @property
    def ShortcutMenu(self): ...
    @property
    def TagString(self): ...
    @Name.setter
    def Name(self, value) -> None: ...

class IAcadPopupMenuItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Caption(self): ...
    @property
    def Check(self): ...
    @property
    def Enable(self): ...
    @property
    def EndSubMenuLevel(self): ...
    @property
    def HelpString(self): ...
    @property
    def Index(self): ...
    @property
    def Label(self): ...
    @property
    def Macro(self): ...
    @property
    def Parent(self): ...
    @property
    def SubMenu(self): ...
    @property
    def TagString(self): ...
    @property
    def Type(self): ...
    @Check.setter
    def Check(self, value) -> None: ...
    @Enable.setter
    def Enable(self, value) -> None: ...
    @EndSubMenuLevel.setter
    def EndSubMenuLevel(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Label.setter
    def Label(self, value) -> None: ...
    @Macro.setter
    def Macro(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...

class IAcadPopupMenus(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, MenuName=...): ...
    def InsertMenuInMenuBar(self, MenuName=..., Index=...): ...
    def Item(self, Index=...): ...
    def RemoveMenuFromMenuBar(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IAcadPreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...
    @property
    def Application(self): ...
    @property
    def Display(self): ...
    @property
    def Drafting(self): ...
    @property
    def Files(self): ...
    @property
    def OpenSave(self): ...
    @property
    def Output(self): ...
    @property
    def Profiles(self): ...
    @property
    def Selection(self): ...
    @property
    def System(self): ...
    @property
    def User(self): ...

class IAcadPreferencesDisplay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutoTrackingVecColor(self): ...
    @property
    def CursorSize(self): ...
    @property
    def DisplayLayoutTabs(self): ...
    @property
    def DisplayScreenMenu(self): ...
    @property
    def DisplayScrollBars(self): ...
    @property
    def DockedVisibleLines(self): ...
    @property
    def GraphicsWinLayoutBackgrndColor(self): ...
    @property
    def GraphicsWinModelBackgrndColor(self): ...
    @property
    def HistoryLines(self): ...
    @property
    def ImageFrameHighlight(self): ...
    @property
    def LayoutCreateViewport(self): ...
    @property
    def LayoutCrosshairColor(self): ...
    @property
    def LayoutDisplayMargins(self): ...
    @property
    def LayoutDisplayPaper(self): ...
    @property
    def LayoutDisplayPaperShadow(self): ...
    @property
    def LayoutShowPlotSetup(self): ...
    @property
    def MaxAutoCADWindow(self): ...
    @property
    def ModelCrosshairColor(self): ...
    @property
    def ShowRasterImage(self): ...
    @property
    def TextFont(self): ...
    @property
    def TextFontSize(self): ...
    @property
    def TextFontStyle(self): ...
    @property
    def TextWinBackgrndColor(self): ...
    @property
    def TextWinTextColor(self): ...
    @property
    def TrueColorImages(self): ...
    @property
    def XRefFadeIntensity(self): ...
    @AutoTrackingVecColor.setter
    def AutoTrackingVecColor(self, value) -> None: ...
    @CursorSize.setter
    def CursorSize(self, value) -> None: ...
    @DisplayLayoutTabs.setter
    def DisplayLayoutTabs(self, value) -> None: ...
    @DisplayScreenMenu.setter
    def DisplayScreenMenu(self, value) -> None: ...
    @DisplayScrollBars.setter
    def DisplayScrollBars(self, value) -> None: ...
    @DockedVisibleLines.setter
    def DockedVisibleLines(self, value) -> None: ...
    @GraphicsWinLayoutBackgrndColor.setter
    def GraphicsWinLayoutBackgrndColor(self, value) -> None: ...
    @GraphicsWinModelBackgrndColor.setter
    def GraphicsWinModelBackgrndColor(self, value) -> None: ...
    @HistoryLines.setter
    def HistoryLines(self, value) -> None: ...
    @ImageFrameHighlight.setter
    def ImageFrameHighlight(self, value) -> None: ...
    @LayoutCreateViewport.setter
    def LayoutCreateViewport(self, value) -> None: ...
    @LayoutCrosshairColor.setter
    def LayoutCrosshairColor(self, value) -> None: ...
    @LayoutDisplayMargins.setter
    def LayoutDisplayMargins(self, value) -> None: ...
    @LayoutDisplayPaper.setter
    def LayoutDisplayPaper(self, value) -> None: ...
    @LayoutDisplayPaperShadow.setter
    def LayoutDisplayPaperShadow(self, value) -> None: ...
    @LayoutShowPlotSetup.setter
    def LayoutShowPlotSetup(self, value) -> None: ...
    @MaxAutoCADWindow.setter
    def MaxAutoCADWindow(self, value) -> None: ...
    @ModelCrosshairColor.setter
    def ModelCrosshairColor(self, value) -> None: ...
    @ShowRasterImage.setter
    def ShowRasterImage(self, value) -> None: ...
    @TextFont.setter
    def TextFont(self, value) -> None: ...
    @TextFontSize.setter
    def TextFontSize(self, value) -> None: ...
    @TextFontStyle.setter
    def TextFontStyle(self, value) -> None: ...
    @TextWinBackgrndColor.setter
    def TextWinBackgrndColor(self, value) -> None: ...
    @TextWinTextColor.setter
    def TextWinTextColor(self, value) -> None: ...
    @TrueColorImages.setter
    def TrueColorImages(self, value) -> None: ...
    @XRefFadeIntensity.setter
    def XRefFadeIntensity(self, value) -> None: ...

class IAcadPreferencesDrafting(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AlignmentPointAcquisition(self): ...
    @property
    def Application(self): ...
    @property
    def AutoSnapAperture(self): ...
    @property
    def AutoSnapApertureSize(self): ...
    @property
    def AutoSnapMagnet(self): ...
    @property
    def AutoSnapMarker(self): ...
    @property
    def AutoSnapMarkerColor(self): ...
    @property
    def AutoSnapMarkerSize(self): ...
    @property
    def AutoSnapTooltip(self): ...
    @property
    def AutoTrackTooltip(self): ...
    @property
    def FullScreenTrackingVector(self): ...
    @property
    def PolarTrackingVector(self): ...
    @AlignmentPointAcquisition.setter
    def AlignmentPointAcquisition(self, value) -> None: ...
    @AutoSnapAperture.setter
    def AutoSnapAperture(self, value) -> None: ...
    @AutoSnapApertureSize.setter
    def AutoSnapApertureSize(self, value) -> None: ...
    @AutoSnapMagnet.setter
    def AutoSnapMagnet(self, value) -> None: ...
    @AutoSnapMarker.setter
    def AutoSnapMarker(self, value) -> None: ...
    @AutoSnapMarkerColor.setter
    def AutoSnapMarkerColor(self, value) -> None: ...
    @AutoSnapMarkerSize.setter
    def AutoSnapMarkerSize(self, value) -> None: ...
    @AutoSnapTooltip.setter
    def AutoSnapTooltip(self, value) -> None: ...
    @AutoTrackTooltip.setter
    def AutoTrackTooltip(self, value) -> None: ...
    @FullScreenTrackingVector.setter
    def FullScreenTrackingVector(self, value) -> None: ...
    @PolarTrackingVector.setter
    def PolarTrackingVector(self, value) -> None: ...

class IAcadPreferencesFiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def GetProjectFilePath(self, ProjectName=...): ...
    def SetProjectFilePath(self, ProjectName=..., ProjectFilePath=...): ...
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def AltFontFile(self): ...
    @property
    def AltTabletMenuFile(self): ...
    @property
    def Application(self): ...
    @property
    def AutoSavePath(self): ...
    @property
    def ColorBookPath(self): ...
    @property
    def ConfigFile(self): ...
    @property
    def CustomDictionary(self): ...
    @property
    def CustomIconPath(self): ...
    @property
    def DefaultInternetURL(self): ...
    @property
    def DriversPath(self): ...
    @property
    def EnterpriseMenuFile(self): ...
    @property
    def FontFileMap(self): ...
    @property
    def HelpFilePath(self): ...
    @property
    def LicenseServer(self): ...
    @property
    def LogFilePath(self): ...
    @property
    def MainDictionary(self): ...
    @property
    def MenuFile(self): ...
    @property
    def ObjectARXPath(self): ...
    @property
    def PageSetupOverridesTemplateFile(self): ...
    @property
    def PlotLogFilePath(self): ...
    @property
    def PostScriptPrologFile(self): ...
    @property
    def PrintFile(self): ...
    @property
    def PrintSpoolExecutable(self): ...
    @property
    def PrintSpoolerPath(self): ...
    @property
    def PrinterConfigPath(self): ...
    @property
    def PrinterDescPath(self): ...
    @property
    def PrinterStyleSheetPath(self): ...
    @property
    def QNewTemplateFile(self): ...
    @property
    def SupportPath(self): ...
    @property
    def TempFilePath(self): ...
    @property
    def TempXrefPath(self): ...
    @property
    def TemplateDwgPath(self): ...
    @property
    def TextEditor(self): ...
    @property
    def TextureMapPath(self): ...
    @property
    def ToolPalettePath(self): ...
    @property
    def WorkspacePath(self): ...
    @AltFontFile.setter
    def AltFontFile(self, value) -> None: ...
    @AltTabletMenuFile.setter
    def AltTabletMenuFile(self, value) -> None: ...
    @AutoSavePath.setter
    def AutoSavePath(self, value) -> None: ...
    @ColorBookPath.setter
    def ColorBookPath(self, value) -> None: ...
    @CustomDictionary.setter
    def CustomDictionary(self, value) -> None: ...
    @CustomIconPath.setter
    def CustomIconPath(self, value) -> None: ...
    @DefaultInternetURL.setter
    def DefaultInternetURL(self, value) -> None: ...
    @DriversPath.setter
    def DriversPath(self, value) -> None: ...
    @EnterpriseMenuFile.setter
    def EnterpriseMenuFile(self, value) -> None: ...
    @FontFileMap.setter
    def FontFileMap(self, value) -> None: ...
    @HelpFilePath.setter
    def HelpFilePath(self, value) -> None: ...
    @LogFilePath.setter
    def LogFilePath(self, value) -> None: ...
    @MainDictionary.setter
    def MainDictionary(self, value) -> None: ...
    @MenuFile.setter
    def MenuFile(self, value) -> None: ...
    @ObjectARXPath.setter
    def ObjectARXPath(self, value) -> None: ...
    @PageSetupOverridesTemplateFile.setter
    def PageSetupOverridesTemplateFile(self, value) -> None: ...
    @PlotLogFilePath.setter
    def PlotLogFilePath(self, value) -> None: ...
    @PostScriptPrologFile.setter
    def PostScriptPrologFile(self, value) -> None: ...
    @PrintFile.setter
    def PrintFile(self, value) -> None: ...
    @PrintSpoolExecutable.setter
    def PrintSpoolExecutable(self, value) -> None: ...
    @PrintSpoolerPath.setter
    def PrintSpoolerPath(self, value) -> None: ...
    @PrinterConfigPath.setter
    def PrinterConfigPath(self, value) -> None: ...
    @PrinterDescPath.setter
    def PrinterDescPath(self, value) -> None: ...
    @PrinterStyleSheetPath.setter
    def PrinterStyleSheetPath(self, value) -> None: ...
    @QNewTemplateFile.setter
    def QNewTemplateFile(self, value) -> None: ...
    @SupportPath.setter
    def SupportPath(self, value) -> None: ...
    @TempFilePath.setter
    def TempFilePath(self, value) -> None: ...
    @TempXrefPath.setter
    def TempXrefPath(self, value) -> None: ...
    @TemplateDwgPath.setter
    def TemplateDwgPath(self, value) -> None: ...
    @TextEditor.setter
    def TextEditor(self, value) -> None: ...
    @TextureMapPath.setter
    def TextureMapPath(self, value) -> None: ...
    @ToolPalettePath.setter
    def ToolPalettePath(self, value) -> None: ...
    @WorkspacePath.setter
    def WorkspacePath(self, value) -> None: ...

class IAcadPreferencesOpenSave(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutoAudit(self): ...
    @property
    def AutoSaveInterval(self): ...
    @property
    def CreateBackup(self): ...
    @property
    def DemandLoadARXApp(self): ...
    @property
    def FullCRCValidation(self): ...
    @property
    def IncrementalSavePercent(self): ...
    @property
    def LogFileOn(self): ...
    @property
    def MRUNumber(self): ...
    @property
    def ProxyImage(self): ...
    @property
    def SaveAsType(self): ...
    @property
    def SavePreviewThumbnail(self): ...
    @property
    def ShowProxyDialogBox(self): ...
    @property
    def TempFileExtension(self): ...
    @property
    def XrefDemandLoad(self): ...
    @AutoAudit.setter
    def AutoAudit(self, value) -> None: ...
    @AutoSaveInterval.setter
    def AutoSaveInterval(self, value) -> None: ...
    @CreateBackup.setter
    def CreateBackup(self, value) -> None: ...
    @DemandLoadARXApp.setter
    def DemandLoadARXApp(self, value) -> None: ...
    @FullCRCValidation.setter
    def FullCRCValidation(self, value) -> None: ...
    @IncrementalSavePercent.setter
    def IncrementalSavePercent(self, value) -> None: ...
    @LogFileOn.setter
    def LogFileOn(self, value) -> None: ...
    @ProxyImage.setter
    def ProxyImage(self, value) -> None: ...
    @SaveAsType.setter
    def SaveAsType(self, value) -> None: ...
    @SavePreviewThumbnail.setter
    def SavePreviewThumbnail(self, value) -> None: ...
    @ShowProxyDialogBox.setter
    def ShowProxyDialogBox(self, value) -> None: ...
    @TempFileExtension.setter
    def TempFileExtension(self, value) -> None: ...
    @XrefDemandLoad.setter
    def XrefDemandLoad(self, value) -> None: ...

class IAcadPreferencesOutput(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutomaticPlotLog(self): ...
    @property
    def ContinuousPlotLog(self): ...
    @property
    def DefaultOutputDevice(self): ...
    @property
    def DefaultPlotStyleForLayer(self): ...
    @property
    def DefaultPlotStyleForObjects(self): ...
    @property
    def DefaultPlotStyleTable(self): ...
    @property
    def DefaultPlotToFilePath(self): ...
    @property
    def OLEQuality(self): ...
    @property
    def PlotLegacy(self): ...
    @property
    def PlotPolicy(self): ...
    @property
    def PrinterPaperSizeAlert(self): ...
    @property
    def PrinterSpoolAlert(self): ...
    @property
    def UseLastPlotSettings(self): ...
    @AutomaticPlotLog.setter
    def AutomaticPlotLog(self, value) -> None: ...
    @ContinuousPlotLog.setter
    def ContinuousPlotLog(self, value) -> None: ...
    @DefaultOutputDevice.setter
    def DefaultOutputDevice(self, value) -> None: ...
    @DefaultPlotStyleForLayer.setter
    def DefaultPlotStyleForLayer(self, value) -> None: ...
    @DefaultPlotStyleForObjects.setter
    def DefaultPlotStyleForObjects(self, value) -> None: ...
    @DefaultPlotStyleTable.setter
    def DefaultPlotStyleTable(self, value) -> None: ...
    @DefaultPlotToFilePath.setter
    def DefaultPlotToFilePath(self, value) -> None: ...
    @OLEQuality.setter
    def OLEQuality(self, value) -> None: ...
    @PlotLegacy.setter
    def PlotLegacy(self, value) -> None: ...
    @PlotPolicy.setter
    def PlotPolicy(self, value) -> None: ...
    @PrinterPaperSizeAlert.setter
    def PrinterPaperSizeAlert(self, value) -> None: ...
    @PrinterSpoolAlert.setter
    def PrinterSpoolAlert(self, value) -> None: ...
    @UseLastPlotSettings.setter
    def UseLastPlotSettings(self, value) -> None: ...

class IAcadPreferencesProfiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyProfile(self, oldProfileName=..., newProfileName=...): ...
    def DeleteProfile(self, ProfileName=...): ...
    def ExportProfile(self, ProfileName=..., RegFile=...): ...
    def GetAllProfileNames(self, pNames=...): ...
    def ImportProfile(self, ProfileName=..., RegFile=..., IncludePathInfo=...): ...
    def RenameProfile(self, origProfileName=..., newProfileName=...): ...
    def ResetProfile(self, Profile=...): ...
    def __iter__(self): ...
    @property
    def ActiveProfile(self): ...
    @property
    def Application(self): ...
    @ActiveProfile.setter
    def ActiveProfile(self, value) -> None: ...

class IAcadPreferencesSelection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def DisplayGrips(self): ...
    @property
    def DisplayGripsWithinBlocks(self): ...
    @property
    def GripColorSelected(self): ...
    @property
    def GripColorUnselected(self): ...
    @property
    def GripSize(self): ...
    @property
    def PickAdd(self): ...
    @property
    def PickAuto(self): ...
    @property
    def PickBoxSize(self): ...
    @property
    def PickDrag(self): ...
    @property
    def PickFirst(self): ...
    @property
    def PickGroup(self): ...
    @DisplayGrips.setter
    def DisplayGrips(self, value) -> None: ...
    @DisplayGripsWithinBlocks.setter
    def DisplayGripsWithinBlocks(self, value) -> None: ...
    @GripColorSelected.setter
    def GripColorSelected(self, value) -> None: ...
    @GripColorUnselected.setter
    def GripColorUnselected(self, value) -> None: ...
    @GripSize.setter
    def GripSize(self, value) -> None: ...
    @PickAdd.setter
    def PickAdd(self, value) -> None: ...
    @PickAuto.setter
    def PickAuto(self, value) -> None: ...
    @PickBoxSize.setter
    def PickBoxSize(self, value) -> None: ...
    @PickDrag.setter
    def PickDrag(self, value) -> None: ...
    @PickFirst.setter
    def PickFirst(self, value) -> None: ...
    @PickGroup.setter
    def PickGroup(self, value) -> None: ...

class IAcadPreferencesSystem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BeepOnError(self): ...
    @property
    def DisplayOLEScale(self): ...
    @property
    def EnableStartupDialog(self): ...
    @property
    def LoadAcadLspInAllDocuments(self): ...
    @property
    def ShowWarningMessages(self): ...
    @property
    def SingleDocumentMode(self): ...
    @property
    def StoreSQLIndex(self): ...
    @property
    def TablesReadOnly(self): ...
    @BeepOnError.setter
    def BeepOnError(self, value) -> None: ...
    @DisplayOLEScale.setter
    def DisplayOLEScale(self, value) -> None: ...
    @EnableStartupDialog.setter
    def EnableStartupDialog(self, value) -> None: ...
    @LoadAcadLspInAllDocuments.setter
    def LoadAcadLspInAllDocuments(self, value) -> None: ...
    @ShowWarningMessages.setter
    def ShowWarningMessages(self, value) -> None: ...
    @SingleDocumentMode.setter
    def SingleDocumentMode(self, value) -> None: ...
    @StoreSQLIndex.setter
    def StoreSQLIndex(self, value) -> None: ...
    @TablesReadOnly.setter
    def TablesReadOnly(self, value) -> None: ...

class IAcadPreferencesUser(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def ADCInsertUnitsDefaultSource(self): ...
    @property
    def ADCInsertUnitsDefaultTarget(self): ...
    @property
    def Application(self): ...
    @property
    def HyperlinkDisplayCursor(self): ...
    @property
    def HyperlinkDisplayTooltip(self): ...
    @property
    def KeyboardAccelerator(self): ...
    @property
    def KeyboardPriority(self): ...
    @property
    def SCMCommandMode(self): ...
    @property
    def SCMDefaultMode(self): ...
    @property
    def SCMEditMode(self): ...
    @property
    def SCMTimeMode(self): ...
    @property
    def SCMTimeValue(self): ...
    @property
    def ShortCutMenuDisplay(self): ...
    @ADCInsertUnitsDefaultSource.setter
    def ADCInsertUnitsDefaultSource(self, value) -> None: ...
    @ADCInsertUnitsDefaultTarget.setter
    def ADCInsertUnitsDefaultTarget(self, value) -> None: ...
    @HyperlinkDisplayCursor.setter
    def HyperlinkDisplayCursor(self, value) -> None: ...
    @HyperlinkDisplayTooltip.setter
    def HyperlinkDisplayTooltip(self, value) -> None: ...
    @KeyboardAccelerator.setter
    def KeyboardAccelerator(self, value) -> None: ...
    @KeyboardPriority.setter
    def KeyboardPriority(self, value) -> None: ...
    @SCMCommandMode.setter
    def SCMCommandMode(self, value) -> None: ...
    @SCMDefaultMode.setter
    def SCMDefaultMode(self, value) -> None: ...
    @SCMEditMode.setter
    def SCMEditMode(self, value) -> None: ...
    @SCMTimeMode.setter
    def SCMTimeMode(self, value) -> None: ...
    @SCMTimeValue.setter
    def SCMTimeValue(self, value) -> None: ...
    @ShortCutMenuDisplay.setter
    def ShortCutMenuDisplay(self, value) -> None: ...

class IAcadRasterImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Brightness(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ImageFile(self): ...
    @property
    def ImageHeight(self): ...
    @property
    def ImageVisibility(self): ...
    @property
    def ImageWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def ShowRotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @property
    def transparency(self): ...
    @Brightness.setter
    def Brightness(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @ImageFile.setter
    def ImageFile(self, value) -> None: ...
    @ImageHeight.setter
    def ImageHeight(self, value) -> None: ...
    @ImageVisibility.setter
    def ImageVisibility(self, value) -> None: ...
    @ImageWidth.setter
    def ImageWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @ShowRotation.setter
    def ShowRotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @transparency.setter
    def transparency(self, value) -> None: ...

class IAcadRay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BasePoint(self): ...
    @property
    def Database(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def SecondPoint(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BasePoint.setter
    def BasePoint(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @SecondPoint.setter
    def SecondPoint(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadRegion(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., Object=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Centroid(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MomentOfInertia(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Perimeter(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrincipalDirections(self): ...
    @property
    def PrincipalMoments(self): ...
    @property
    def ProductOfInertia(self): ...
    @property
    def RadiiOfGyration(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadRegisteredApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Name.setter
    def Name(self, value) -> None: ...

class IAcadRegisteredApplications(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadRevolvedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AxisDirection(self): ...
    @property
    def AxisPosition(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RevolutionAngle(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @AxisPosition.setter
    def AxisPosition(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RevolutionAngle.setter
    def RevolutionAngle(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadScriptJet(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddNamedItem(self, pstrCode=..., dwFlags: int = ...): ...
    def AddVariant(self, varName=..., var=...): ...
    def Close(self): ...
    def Create(self): ...
    def GetVariant(self, varName=...): ...
    def ParseScriptText_E(self, pstrCode=...): ...
    def Run(self): ...
    def __iter__(self): ...

class IAcadSection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BottomHeight(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IndicatorFillColor(self): ...
    @property
    def IndicatorTransparency(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LiveSectionEnabled(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def NumVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Settings(self): ...
    @property
    def State(self): ...
    @property
    def TopHeight(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalDirection(self): ...
    @property
    def Vertices(self): ...
    @property
    def ViewingDirection(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BottomHeight.setter
    def BottomHeight(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @IndicatorFillColor.setter
    def IndicatorFillColor(self, value) -> None: ...
    @IndicatorTransparency.setter
    def IndicatorTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LiveSectionEnabled.setter
    def LiveSectionEnabled(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @State.setter
    def State(self, value) -> None: ...
    @TopHeight.setter
    def TopHeight(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalDirection.setter
    def VerticalDirection(self, value) -> None: ...
    @Vertices.setter
    def Vertices(self, value) -> None: ...
    @ViewingDirection.setter
    def ViewingDirection(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSection2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BottomHeight(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IndicatorFillColor(self): ...
    @property
    def IndicatorTransparency(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LiveSectionEnabled(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def NumVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def SectionPlaneOffset(self): ...
    @property
    def Settings(self): ...
    @property
    def SliceDepth(self): ...
    @property
    def State(self): ...
    @property
    def State2(self): ...
    @property
    def TopHeight(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalDirection(self): ...
    @property
    def Vertices(self): ...
    @property
    def ViewingDirection(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BottomHeight.setter
    def BottomHeight(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @IndicatorFillColor.setter
    def IndicatorFillColor(self, value) -> None: ...
    @IndicatorTransparency.setter
    def IndicatorTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LiveSectionEnabled.setter
    def LiveSectionEnabled(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @SectionPlaneOffset.setter
    def SectionPlaneOffset(self, value) -> None: ...
    @SliceDepth.setter
    def SliceDepth(self, value) -> None: ...
    @State.setter
    def State(self, value) -> None: ...
    @State2.setter
    def State2(self, value) -> None: ...
    @TopHeight.setter
    def TopHeight(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalDirection.setter
    def VerticalDirection(self, value) -> None: ...
    @Vertices.setter
    def Vertices(self, value) -> None: ...
    @ViewingDirection.setter
    def ViewingDirection(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSectionManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetLiveSection(self): ...
    def GetUniqueSectionName(self, pBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadSectionSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetSectionTypeSettings(self, secType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CurrentSectionType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @CurrentSectionType.setter
    def CurrentSectionType(self, value) -> None: ...

class IAcadSectionTypeSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def BackgroundLinesColor(self): ...
    @property
    def BackgroundLinesHiddenLine(self): ...
    @property
    def BackgroundLinesLayer(self): ...
    @property
    def BackgroundLinesLinetype(self): ...
    @property
    def BackgroundLinesLinetypeScale(self): ...
    @property
    def BackgroundLinesLineweight(self): ...
    @property
    def BackgroundLinesPlotStyleName(self): ...
    @property
    def BackgroundLinesVisible(self): ...
    @property
    def CurveTangencyLinesColor(self): ...
    @property
    def CurveTangencyLinesLayer(self): ...
    @property
    def CurveTangencyLinesLinetype(self): ...
    @property
    def CurveTangencyLinesLinetypeScale(self): ...
    @property
    def CurveTangencyLinesLineweight(self): ...
    @property
    def CurveTangencyLinesPlotStyleName(self): ...
    @property
    def CurveTangencyLinesVisible(self): ...
    @property
    def DestinationBlock(self): ...
    @property
    def DestinationFile(self): ...
    @property
    def ForegroundLinesColor(self): ...
    @property
    def ForegroundLinesEdgeTransparency(self): ...
    @property
    def ForegroundLinesFaceTransparency(self): ...
    @property
    def ForegroundLinesHiddenLine(self): ...
    @property
    def ForegroundLinesLayer(self): ...
    @property
    def ForegroundLinesLinetype(self): ...
    @property
    def ForegroundLinesLinetypeScale(self): ...
    @property
    def ForegroundLinesLineweight(self): ...
    @property
    def ForegroundLinesPlotStyleName(self): ...
    @property
    def ForegroundLinesVisible(self): ...
    @property
    def GenerationOptions(self): ...
    @property
    def IntersectionBoundaryColor(self): ...
    @property
    def IntersectionBoundaryDivisionLines(self): ...
    @property
    def IntersectionBoundaryLayer(self): ...
    @property
    def IntersectionBoundaryLinetype(self): ...
    @property
    def IntersectionBoundaryLinetypeScale(self): ...
    @property
    def IntersectionBoundaryLineweight(self): ...
    @property
    def IntersectionBoundaryPlotStyleName(self): ...
    @property
    def IntersectionFillColor(self): ...
    @property
    def IntersectionFillFaceTransparency(self): ...
    @property
    def IntersectionFillHatchAngle(self): ...
    @property
    def IntersectionFillHatchPatternName(self): ...
    @property
    def IntersectionFillHatchPatternType(self): ...
    @property
    def IntersectionFillHatchScale(self): ...
    @property
    def IntersectionFillHatchSpacing(self): ...
    @property
    def IntersectionFillLayer(self): ...
    @property
    def IntersectionFillLinetype(self): ...
    @property
    def IntersectionFillLinetypeScale(self): ...
    @property
    def IntersectionFillLineweight(self): ...
    @property
    def IntersectionFillPlotStyleName(self): ...
    @property
    def IntersectionFillVisible(self): ...
    @property
    def SourceObjects(self): ...
    @BackgroundLinesColor.setter
    def BackgroundLinesColor(self, value) -> None: ...
    @BackgroundLinesHiddenLine.setter
    def BackgroundLinesHiddenLine(self, value) -> None: ...
    @BackgroundLinesLayer.setter
    def BackgroundLinesLayer(self, value) -> None: ...
    @BackgroundLinesLinetype.setter
    def BackgroundLinesLinetype(self, value) -> None: ...
    @BackgroundLinesLinetypeScale.setter
    def BackgroundLinesLinetypeScale(self, value) -> None: ...
    @BackgroundLinesLineweight.setter
    def BackgroundLinesLineweight(self, value) -> None: ...
    @BackgroundLinesPlotStyleName.setter
    def BackgroundLinesPlotStyleName(self, value) -> None: ...
    @BackgroundLinesVisible.setter
    def BackgroundLinesVisible(self, value) -> None: ...
    @CurveTangencyLinesColor.setter
    def CurveTangencyLinesColor(self, value) -> None: ...
    @CurveTangencyLinesLayer.setter
    def CurveTangencyLinesLayer(self, value) -> None: ...
    @CurveTangencyLinesLinetype.setter
    def CurveTangencyLinesLinetype(self, value) -> None: ...
    @CurveTangencyLinesLinetypeScale.setter
    def CurveTangencyLinesLinetypeScale(self, value) -> None: ...
    @CurveTangencyLinesLineweight.setter
    def CurveTangencyLinesLineweight(self, value) -> None: ...
    @CurveTangencyLinesPlotStyleName.setter
    def CurveTangencyLinesPlotStyleName(self, value) -> None: ...
    @CurveTangencyLinesVisible.setter
    def CurveTangencyLinesVisible(self, value) -> None: ...
    @DestinationBlock.setter
    def DestinationBlock(self, value) -> None: ...
    @DestinationFile.setter
    def DestinationFile(self, value) -> None: ...
    @ForegroundLinesColor.setter
    def ForegroundLinesColor(self, value) -> None: ...
    @ForegroundLinesEdgeTransparency.setter
    def ForegroundLinesEdgeTransparency(self, value) -> None: ...
    @ForegroundLinesFaceTransparency.setter
    def ForegroundLinesFaceTransparency(self, value) -> None: ...
    @ForegroundLinesHiddenLine.setter
    def ForegroundLinesHiddenLine(self, value) -> None: ...
    @ForegroundLinesLayer.setter
    def ForegroundLinesLayer(self, value) -> None: ...
    @ForegroundLinesLinetype.setter
    def ForegroundLinesLinetype(self, value) -> None: ...
    @ForegroundLinesLinetypeScale.setter
    def ForegroundLinesLinetypeScale(self, value) -> None: ...
    @ForegroundLinesLineweight.setter
    def ForegroundLinesLineweight(self, value) -> None: ...
    @ForegroundLinesPlotStyleName.setter
    def ForegroundLinesPlotStyleName(self, value) -> None: ...
    @ForegroundLinesVisible.setter
    def ForegroundLinesVisible(self, value) -> None: ...
    @GenerationOptions.setter
    def GenerationOptions(self, value) -> None: ...
    @IntersectionBoundaryColor.setter
    def IntersectionBoundaryColor(self, value) -> None: ...
    @IntersectionBoundaryDivisionLines.setter
    def IntersectionBoundaryDivisionLines(self, value) -> None: ...
    @IntersectionBoundaryLayer.setter
    def IntersectionBoundaryLayer(self, value) -> None: ...
    @IntersectionBoundaryLinetype.setter
    def IntersectionBoundaryLinetype(self, value) -> None: ...
    @IntersectionBoundaryLinetypeScale.setter
    def IntersectionBoundaryLinetypeScale(self, value) -> None: ...
    @IntersectionBoundaryLineweight.setter
    def IntersectionBoundaryLineweight(self, value) -> None: ...
    @IntersectionBoundaryPlotStyleName.setter
    def IntersectionBoundaryPlotStyleName(self, value) -> None: ...
    @IntersectionFillColor.setter
    def IntersectionFillColor(self, value) -> None: ...
    @IntersectionFillFaceTransparency.setter
    def IntersectionFillFaceTransparency(self, value) -> None: ...
    @IntersectionFillHatchAngle.setter
    def IntersectionFillHatchAngle(self, value) -> None: ...
    @IntersectionFillHatchPatternName.setter
    def IntersectionFillHatchPatternName(self, value) -> None: ...
    @IntersectionFillHatchPatternType.setter
    def IntersectionFillHatchPatternType(self, value) -> None: ...
    @IntersectionFillHatchScale.setter
    def IntersectionFillHatchScale(self, value) -> None: ...
    @IntersectionFillHatchSpacing.setter
    def IntersectionFillHatchSpacing(self, value) -> None: ...
    @IntersectionFillLayer.setter
    def IntersectionFillLayer(self, value) -> None: ...
    @IntersectionFillLinetype.setter
    def IntersectionFillLinetype(self, value) -> None: ...
    @IntersectionFillLinetypeScale.setter
    def IntersectionFillLinetypeScale(self, value) -> None: ...
    @IntersectionFillLineweight.setter
    def IntersectionFillLineweight(self, value) -> None: ...
    @IntersectionFillPlotStyleName.setter
    def IntersectionFillPlotStyleName(self, value) -> None: ...
    @IntersectionFillVisible.setter
    def IntersectionFillVisible(self, value) -> None: ...
    @SourceObjects.setter
    def SourceObjects(self, value) -> None: ...

class IAcadSecurityParams(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Action(self): ...
    @property
    def Algorithm(self): ...
    @property
    def Comment(self): ...
    @property
    def Issuer(self): ...
    @property
    def KeyLength(self): ...
    @property
    def Password(self): ...
    @property
    def ProviderName(self): ...
    @property
    def ProviderType(self): ...
    @property
    def SerialNumber(self): ...
    @property
    def Subject(self): ...
    @property
    def TimeServer(self): ...
    @Action.setter
    def Action(self, value) -> None: ...
    @Algorithm.setter
    def Algorithm(self, value) -> None: ...
    @Comment.setter
    def Comment(self, value) -> None: ...
    @Issuer.setter
    def Issuer(self, value) -> None: ...
    @KeyLength.setter
    def KeyLength(self, value) -> None: ...
    @Password.setter
    def Password(self, value) -> None: ...
    @ProviderName.setter
    def ProviderName(self, value) -> None: ...
    @ProviderType.setter
    def ProviderType(self, value) -> None: ...
    @SerialNumber.setter
    def SerialNumber(self, value) -> None: ...
    @Subject.setter
    def Subject(self, value) -> None: ...
    @TimeServer.setter
    def TimeServer(self, value) -> None: ...

class IAcadSelectionSet(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddItems(self, pSelSet=...): ...
    def Clear(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Highlight(self, bFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def Select(self, Mode=..., Point1=..., Point2=..., FilterType=..., FilterData=...): ...
    def SelectAtPoint(self, Point=..., FilterType=..., FilterData=...): ...
    def SelectByPolygon(self, Mode=..., PointsList=..., FilterType=..., FilterData=...): ...
    def SelectOnScreen(self, FilterType=..., FilterData=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Name(self): ...

class IAcadSelectionSets(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def GetActiveSelectionSet(self): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...

class IAcadShape(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSortentsTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Block(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFullDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetRelativeDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def MoveAbove(self, Objects=..., Target=...): ...
    def MoveBelow(self, Objects=..., Target=...): ...
    def MoveToBottom(self, Objects=...): ...
    def MoveToTop(self, Objects=...): ...
    def SetRelativeDrawOrder(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SwapOrder(self, Object1=..., Object2=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadSpline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddFitPoint(self, Index=..., fitPoint=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteFitPoint(self, Index=...): ...
    def ElevateOrder(self, Order=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetControlPoint(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetFitPoint(self, Index=...): ...
    def GetWeight(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def PurgeFitData(self): ...
    def Reverse(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetControlPoint(self, Index=..., controlPoint=...): ...
    def SetFitPoint(self, Index=..., fitPoint=...): ...
    def SetWeight(self, Index=..., weight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def Closed2(self): ...
    @property
    def ControlPoints(self): ...
    @property
    def Database(self): ...
    @property
    def Degree(self): ...
    @property
    def Document(self): ...
    @property
    def EndTangent(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FitPoints(self): ...
    @property
    def FitTolerance(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IsPeriodic(self): ...
    @property
    def IsPlanar(self): ...
    @property
    def IsRational(self): ...
    @property
    def Knots(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def NumberOfControlPoints(self): ...
    @property
    def NumberOfFitPoints(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def StartTangent(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Weights(self): ...
    @property
    def color(self): ...
    @Closed2.setter
    def Closed2(self, value) -> None: ...
    @ControlPoints.setter
    def ControlPoints(self, value) -> None: ...
    @EndTangent.setter
    def EndTangent(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FitPoints.setter
    def FitPoints(self, value) -> None: ...
    @FitTolerance.setter
    def FitTolerance(self, value) -> None: ...
    @Knots.setter
    def Knots(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @StartTangent.setter
    def StartTangent(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Weights.setter
    def Weights(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadState(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def IsQuiescent(self): ...

class IAcadSubDMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FaceCount(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Smoothness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VertexCount(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Smoothness.setter
    def Smoothness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSummaryInfo(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddCustomInfo(self, key=..., Value=...): ...
    def GetCustomByIndex(self, Index=..., pKey=..., pValue=...): ...
    def GetCustomByKey(self, key=..., pValue=...): ...
    def NumCustomInfo(self): ...
    def RemoveCustomByIndex(self, Index=...): ...
    def RemoveCustomByKey(self, key=...): ...
    def SetCustomByIndex(self, Index=..., key=..., Value=...): ...
    def SetCustomByKey(self, key=..., Value=...): ...
    def __iter__(self): ...
    @property
    def Author(self): ...
    @property
    def Comments(self): ...
    @property
    def HyperlinkBase(self): ...
    @property
    def Keywords(self): ...
    @property
    def LastSavedBy(self): ...
    @property
    def RevisionNumber(self): ...
    @property
    def Subject(self): ...
    @property
    def Title(self): ...
    @Author.setter
    def Author(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @HyperlinkBase.setter
    def HyperlinkBase(self, value) -> None: ...
    @Keywords.setter
    def Keywords(self, value) -> None: ...
    @LastSavedBy.setter
    def LastSavedBy(self, value) -> None: ...
    @RevisionNumber.setter
    def RevisionNumber(self, value) -> None: ...
    @Subject.setter
    def Subject(self, value) -> None: ...
    @Title.setter
    def Title(self, value) -> None: ...

class IAcadSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadSweptSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Bank(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ProfileRotation(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Twist(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...
    @Bank.setter
    def Bank(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ProfileRotation.setter
    def ProfileRotation(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Twist.setter
    def Twist(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...

class IAcadTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClearSubSelection(self): ...
    def ClearTableStyleOverrides(self, flag=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteCellContent(self, row=..., col=...): ...
    def DeleteColumns(self, col=..., cols=...): ...
    def DeleteRows(self, row=..., Rows=...): ...
    def Erase(self): ...
    def FormatValue(self, row=..., col=..., nOption=..., pVal=...): ...
    def GenerateLayout(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAttachmentPoint(self, row=..., col=...): ...
    def GetAutoScale(self, row=..., col=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetBlockAttributeValue(self, row=..., col=..., attdefId=...): ...
    def GetBlockAttributeValue232(self, nRow=..., nCol=..., nContent=..., blkId=...): ...
    def GetBlockAttributeValue32(self, row=..., col=..., attdefId=...): ...
    def GetBlockRotation(self, row=..., col=...): ...
    def GetBlockScale(self, row=..., col=...): ...
    def GetBlockTableRecordId(self, row=..., col=...): ...
    def GetBlockTableRecordId232(self, nRow=..., nCol=..., nContent=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetCellAlignment(self, row=..., col=...): ...
    def GetCellBackgroundColor(self, row=..., col=...): ...
    def GetCellBackgroundColorNone(self, row=..., col=...): ...
    def GetCellContentColor(self, row=..., col=...): ...
    def GetCellDataType(self, row=..., col=..., pDataType=..., pUnitType=...): ...
    def GetCellExtents(self, row=..., col=..., bOuterCell=...): ...
    def GetCellFormat(self, row=..., col=...): ...
    def GetCellGridColor(self, row=..., col=..., edge=...): ...
    def GetCellGridLineWeight(self, row=..., col=..., edge=...): ...
    def GetCellGridVisibility(self, row=..., col=..., edge=...): ...
    def GetCellState(self, nRow=..., nCol=...): ...
    def GetCellStyleOverrides(self, row=..., col=...): ...
    def GetCellTextHeight(self, row=..., col=...): ...
    def GetCellTextStyle(self, row=..., col=...): ...
    def GetCellType(self, row=..., col=...): ...
    def GetCellValue(self, row=..., col=...): ...
    def GetColumnWidth(self, col=...): ...
    def GetContentColor(self, rowType=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFieldId(self, row=..., col=...): ...
    def GetFieldId232(self, nRow=..., nCol=..., nContent=...): ...
    def GetFieldId32(self, row=..., col=...): ...
    def GetFormat(self, rowType=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLinetype32(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetMinimumColumnWidth(self, col=...): ...
    def GetMinimumRowHeight(self, row=...): ...
    def GetRowHeight(self, row=...): ...
    def GetRowType(self, row=...): ...
    def GetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def GetText(self, row=..., col=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextRotation(self, row=..., col=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, wpt=..., wviewVec=..., resultRowIndex=..., resultColumnIndex=...): ...
    def InsertColumns(self, col=..., Width=..., cols=...): ...
    def InsertRows(self, row=..., Height=..., Rows=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def IsMergedCell(self, row=..., col=..., minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def MergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RecomputeTableBlock(self, bForceUpdate=...): ...
    def ReselectSubRegion(self): ...
    def ResetCellValue(self, row=..., col=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def Select(self, wpt=..., wvwVec=..., wvwxVec=..., wxaper=..., wyaper=..., allowOutside=..., resultRowIndex=..., resultColumnIndex=...): ...
    def SelectSubRegion(self, wpt1=..., wpt2=..., wvwVec=..., wvwxVec=..., seltype=..., bIncludeCurrentSelection=..., rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAutoScale(self, row=..., col=..., bValue=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetBlockAttributeValue(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockAttributeValue232(self, nRow=..., nCol=..., nContent=..., blkId=..., Value=...): ...
    def SetBlockAttributeValue32(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockRotation(self, row=..., col=..., blkRotation=...): ...
    def SetBlockScale(self, row=..., col=..., blkScale=...): ...
    def SetBlockTableRecordId(self, row=..., col=..., blkId=..., bAutoFit=...): ...
    def SetBlockTableRecordId232(self, nRow=..., nCol=..., nContent=..., blkId=..., autoFit=...): ...
    def SetCellAlignment(self, row=..., col=..., cellAlignment=...): ...
    def SetCellBackgroundColor(self, row=..., col=..., pColor=...): ...
    def SetCellBackgroundColorNone(self, row=..., col=..., bValue=...): ...
    def SetCellContentColor(self, row=..., col=..., pColor=...): ...
    def SetCellDataType(self, row=..., col=..., dataType=..., unitType=...): ...
    def SetCellFormat(self, row=..., col=..., pFormat=...): ...
    def SetCellGridColor(self, row=..., col=..., edges=..., pColor=...): ...
    def SetCellGridLineWeight(self, row=..., col=..., edges=..., Lineweight=...): ...
    def SetCellGridVisibility(self, row=..., col=..., edges=..., bValue=...): ...
    def SetCellState(self, nRow=..., nCol=..., nState=...): ...
    def SetCellTextHeight(self, row=..., col=..., TextHeight=...): ...
    def SetCellTextStyle(self, row=..., col=..., bstrName=...): ...
    def SetCellType(self, row=..., col=..., CellType=...): ...
    def SetCellValue(self, row=..., col=..., val=...): ...
    def SetCellValueFromText(self, row=..., col=..., val=..., nOption=...): ...
    def SetColumnWidth(self, col=..., Width=...): ...
    def SetContentColor(self, rowTypes=..., pColor=...): ...
    def SetDataType(self, rowTypes=..., dataType=..., unitType=...): ...
    def SetFieldId(self, row=..., col=..., fieldId=...): ...
    def SetFieldId232(self, nRow=..., nCol=..., nContent=..., acDbObjectId=..., nflag=...): ...
    def SetFieldId32(self, row=..., col=..., fieldId=...): ...
    def SetFormat(self, rowTypes=..., pFormat=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLinetype32(self, nRow=..., nCol=..., nGridLineType=..., idLinetype=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetRowHeight(self, row=..., Height=...): ...
    def SetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetText(self, row=..., col=..., pStr=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextRotation(self, row=..., col=..., TextRotation=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def UnmergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AllowManualHeights(self): ...
    @property
    def AllowManualPositions(self): ...
    @property
    def Application(self): ...
    @property
    def BreakSpacing(self): ...
    @property
    def BreaksEnabled(self): ...
    @property
    def Columns(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FlowDirection(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasSubSelection(self): ...
    @property
    def HeaderSuppressed(self): ...
    @property
    def Height(self): ...
    @property
    def HorzCellMargin(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MinimumTableHeight(self): ...
    @property
    def MinimumTableWidth(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RegenerateTableSuppressed(self): ...
    @property
    def RepeatBottomLabels(self): ...
    @property
    def RepeatTopLabels(self): ...
    @property
    def Rows(self): ...
    @property
    def StyleName(self): ...
    @property
    def TableBreakFlowDirection(self): ...
    @property
    def TableBreakHeight(self): ...
    @property
    def TableStyleOverrides(self): ...
    @property
    def TitleSuppressed(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VertCellMargin(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @AllowManualHeights.setter
    def AllowManualHeights(self, value) -> None: ...
    @AllowManualPositions.setter
    def AllowManualPositions(self, value) -> None: ...
    @BreakSpacing.setter
    def BreakSpacing(self, value) -> None: ...
    @BreaksEnabled.setter
    def BreaksEnabled(self, value) -> None: ...
    @ColumnWidth.setter
    def ColumnWidth(self, value) -> None: ...
    @Columns.setter
    def Columns(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FlowDirection.setter
    def FlowDirection(self, value) -> None: ...
    @HeaderSuppressed.setter
    def HeaderSuppressed(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorzCellMargin.setter
    def HorzCellMargin(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RegenerateTableSuppressed.setter
    def RegenerateTableSuppressed(self, value) -> None: ...
    @RepeatBottomLabels.setter
    def RepeatBottomLabels(self, value) -> None: ...
    @RepeatTopLabels.setter
    def RepeatTopLabels(self, value) -> None: ...
    @RowHeight.setter
    def RowHeight(self, value) -> None: ...
    @Rows.setter
    def Rows(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TableBreakFlowDirection.setter
    def TableBreakFlowDirection(self, value) -> None: ...
    @TableBreakHeight.setter
    def TableBreakHeight(self, value) -> None: ...
    @TitleSuppressed.setter
    def TitleSuppressed(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VertCellMargin.setter
    def VertCellMargin(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadTableCell(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AdditionalFormat(self): ...
    @property
    def Application(self): ...
    @property
    def BlockAutofit(self): ...
    @property
    def BlockColor(self): ...
    @property
    def BlockName(self): ...
    @property
    def BlockRotation(self): ...
    @property
    def BlockScale(self): ...
    @property
    def BlocksInCell(self): ...
    @property
    def CellBackgroundFill(self): ...
    @property
    def CellBorderColor(self): ...
    @property
    def CellBorderLinetype(self): ...
    @property
    def CellBorderLineweight(self): ...
    @property
    def CellContents(self): ...
    @property
    def CellDataLink(self): ...
    @property
    def CellDataType(self): ...
    @property
    def CellHeight(self): ...
    @property
    def CellLayout(self): ...
    @property
    def CellLocking(self): ...
    @property
    def CellStyle(self): ...
    @property
    def CellTextColor(self): ...
    @property
    def CellTextHeight(self): ...
    @property
    def CellTextRotation(self): ...
    @property
    def CellTextStyle(self): ...
    @property
    def CellType(self): ...
    @property
    def CellWidth(self): ...
    @property
    def ColumnStyle(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalCellMargin(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Presition(self): ...
    @property
    def RowStyle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalCellMargin(self): ...
    @property
    def Visible(self): ...
    @property
    def cellAlignment(self): ...
    @property
    def color(self): ...
    @property
    def format(self): ...
    @AdditionalFormat.setter
    def AdditionalFormat(self, value) -> None: ...
    @BlockAutofit.setter
    def BlockAutofit(self, value) -> None: ...
    @BlockColor.setter
    def BlockColor(self, value) -> None: ...
    @BlockName.setter
    def BlockName(self, value) -> None: ...
    @BlockRotation.setter
    def BlockRotation(self, value) -> None: ...
    @BlockScale.setter
    def BlockScale(self, value) -> None: ...
    @BlocksInCell.setter
    def BlocksInCell(self, value) -> None: ...
    @CellBackgroundFill.setter
    def CellBackgroundFill(self, value) -> None: ...
    @CellBorderColor.setter
    def CellBorderColor(self, value) -> None: ...
    @CellBorderLinetype.setter
    def CellBorderLinetype(self, value) -> None: ...
    @CellBorderLineweight.setter
    def CellBorderLineweight(self, value) -> None: ...
    @CellContents.setter
    def CellContents(self, value) -> None: ...
    @CellDataLink.setter
    def CellDataLink(self, value) -> None: ...
    @CellDataType.setter
    def CellDataType(self, value) -> None: ...
    @CellHeight.setter
    def CellHeight(self, value) -> None: ...
    @CellLayout.setter
    def CellLayout(self, value) -> None: ...
    @CellLocking.setter
    def CellLocking(self, value) -> None: ...
    @CellStyle.setter
    def CellStyle(self, value) -> None: ...
    @CellTextColor.setter
    def CellTextColor(self, value) -> None: ...
    @CellTextHeight.setter
    def CellTextHeight(self, value) -> None: ...
    @CellTextRotation.setter
    def CellTextRotation(self, value) -> None: ...
    @CellTextStyle.setter
    def CellTextStyle(self, value) -> None: ...
    @CellType.setter
    def CellType(self, value) -> None: ...
    @CellWidth.setter
    def CellWidth(self, value) -> None: ...
    @ColumnStyle.setter
    def ColumnStyle(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @HorizontalCellMargin.setter
    def HorizontalCellMargin(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Presition.setter
    def Presition(self, value) -> None: ...
    @RowStyle.setter
    def RowStyle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalCellMargin.setter
    def VerticalCellMargin(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @cellAlignment.setter
    def cellAlignment(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @format.setter
    def format(self, value) -> None: ...

class IAcadTableStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetColor(self, rowType=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFormat(self, rowType=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyleId32(self, bstrCellStyle=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetColor(self, rowTypes=..., pColor=...): ...
    def SetDataType(self, rowTypes=..., nDataType=..., nUnitType=...): ...
    def SetFormat(self, rowTypes=..., val=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetTemplateId32(self, val=..., option=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyleId32(self, bstrCellStyle=..., val=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BitFlags(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def FlowDirection(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HeaderSuppressed(self): ...
    @property
    def HorzCellMargin(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TemplateId32(self): ...
    @property
    def TitleSuppressed(self): ...
    @property
    def VertCellMargin(self): ...
    @BitFlags.setter
    def BitFlags(self, value) -> None: ...
    @Description.setter
    def Description(self, value) -> None: ...
    @FlowDirection.setter
    def FlowDirection(self, value) -> None: ...
    @HeaderSuppressed.setter
    def HeaderSuppressed(self, value) -> None: ...
    @HorzCellMargin.setter
    def HorzCellMargin(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TemplateId32.setter
    def TemplateId32(self, value) -> None: ...
    @TitleSuppressed.setter
    def TitleSuppressed(self, value) -> None: ...
    @VertCellMargin.setter
    def VertCellMargin(self, value) -> None: ...

class IAcadText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadTextStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BigFontFile(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def LastHeight(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def Width(self): ...
    @property
    def fontFile(self): ...
    @BigFontFile.setter
    def BigFontFile(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LastHeight.setter
    def LastHeight(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @fontFile.setter
    def fontFile(self, value) -> None: ...

class IAcadTextStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    

class IAcadTolerance(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadToolbar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddSeparator(self, Index=...): ...
    def AddToolbarButton(self, Index=..., Name=..., HelpString=..., Macro=..., FlyoutButton=...): ...
    def Delete(self): ...
    def Dock(self, Side=...): ...
    def Float(self, top=..., left=..., NumberFloatRows=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def DockStatus(self): ...
    @property
    def FloatingRows(self): ...
    @property
    def Height(self): ...
    @property
    def HelpString(self): ...
    @property
    def LargeButtons(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def TagString(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def left(self): ...
    @property
    def top(self): ...
    @FloatingRows.setter
    def FloatingRows(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @left.setter
    def left(self, value) -> None: ...
    @top.setter
    def top(self, value) -> None: ...

class IAcadToolbarItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AttachToolbarToFlyout(self, MenuGroupName=..., ToolbarName=...): ...
    def Delete(self): ...
    def GetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def SetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CommandDisplayName(self): ...
    @property
    def Flyout(self): ...
    @property
    def HelpString(self): ...
    @property
    def Index(self): ...
    @property
    def Macro(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def TagString(self): ...
    @property
    def Type(self): ...
    @CommandDisplayName.setter
    def CommandDisplayName(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Macro.setter
    def Macro(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...

class IAcadToolbars(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, ToolbarName=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def LargeButtons(self): ...
    @property
    def Parent(self): ...
    @LargeButtons.setter
    def LargeButtons(self, value) -> None: ...

class IAcadTrace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IAcadUCS(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetUCSMatrix(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def XVector(self): ...
    @property
    def YVector(self): ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @XVector.setter
    def XVector(self, value) -> None: ...
    @YVector.setter
    def YVector(self, value) -> None: ...

class IAcadUCSs(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Origin=..., XAxisPoint=..., YAxisPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AdjustForBackground(self): ...
    @property
    def Application(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def File(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ItemName(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Monochrome(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnderlayLayerOverrideApplied(self): ...
    @property
    def UnderlayName(self): ...
    @property
    def UnderlayVisibility(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @AdjustForBackground.setter
    def AdjustForBackground(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @File.setter
    def File(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @ItemName.setter
    def ItemName(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Monochrome.setter
    def Monochrome(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnderlayLayerOverrideApplied.setter
    def UnderlayLayerOverrideApplied(self, value) -> None: ...
    @UnderlayName.setter
    def UnderlayName(self, value) -> None: ...
    @UnderlayVisibility.setter
    def UnderlayVisibility(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter

class IAcadUtility(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AngleFromXAxis(self, StartPoint=..., EndPoint=...): ...
    def AngleToReal(self, Angle=..., Unit=...): ...
    def AngleToString(self, Angle=..., Unit=..., precision=...): ...
    def CreateTypedArray(self, *args): ...
    def DistanceToReal(self, Distance=..., Unit=...): ...
    def GetAngle(self, Point=..., Prompt=...): ...
    def GetCorner(self, Point=..., Prompt=...): ...
    def GetDistance(self, Point=..., Prompt=...): ...
    def GetEntity(self, Object=..., PickedPoint=..., Prompt=...): ...
    def GetInput(self): ...
    def GetInteger(self, Prompt=...): ...
    def GetKeyword(self, Prompt=...): ...
    def GetObjectIdString(self, Object=..., bHex=...): ...
    def GetOrientation(self, Point=..., Prompt=...): ...
    def GetPoint(self, Prompt=...): ...
    def GetPointWithBase(self, Point=..., Prompt=...): ...
    def GetReal(self, Prompt=...): ...
    def GetRemoteFile(self, URL=..., LocalFile=..., IgnoreCache=...): ...
    def GetString(self, HasSpaces=..., Prompt=...): ...
    def GetSubEntity(self, Prompt=...): ...
    def InitializeUserInput(self, Bits=..., KeyWordList=...): ...
    def IsRemoteFile(self, LocalFile=..., URL=...): ...
    def IsURL(self, URL=...): ...
    def LaunchBrowserDialog(self, SelectedURL=..., DialogTitle=..., OpenButtonCaption=..., StartPageURL=..., RegistryRootKey=..., OpenButtonAlwaysEnabled=...): ...
    def ObjectId32ToObjectIdString(self, ObjectID32=...): ...
    def PolarPoint(self, Point=..., Angle=..., Distance=...): ...
    def Prompt(self, Message=...): ...
    def PutRemoteFile(self, URL=..., LocalFile=...): ...
    def RealToString(self, Value=..., Unit=..., precision=...): ...
    def SendModelessOperationEnded(self, Context=...): ...
    def SendModelessOperationStart(self, Context=...): ...
    def TranslateCoordinates(self, Point=..., FromCoordSystem=..., ToCoordSystem=..., Displacement=..., OCSNormal=...): ...
    def __iter__(self): ...

class IAcadView(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IAcadViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetView(self, View=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Split(self, NumWins=...): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def ArcSmoothness(self): ...
    @property
    def Center(self): ...
    @property
    def Clipped(self): ...
    @property
    def CustomScale(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Direction(self): ...
    @property
    def DisplayLocked(self): ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def GridOn(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasSheetView(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def LabelBlockId(self): ...
    @property
    def Layer(self): ...
    @property
    def LayerPropertyOverrides(self): ...
    @property
    def LensLength(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ModelView(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RemoveHiddenLines(self): ...
    @property
    def ShadePlot(self): ...
    @property
    def SheetView(self): ...
    @property
    def SnapBasePoint(self): ...
    @property
    def SnapOn(self): ...
    @property
    def SnapRotationAngle(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StandardScale2(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def Target(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def TwistAngle(self): ...
    @property
    def UCSIconAtOrigin(self): ...
    @property
    def UCSIconOn(self): ...
    @property
    def UCSPerViewport(self): ...
    @property
    def ViewportOn(self): ...
    @property
    def Visible(self): ...
    @property
    def VisualStyle(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @ArcSmoothness.setter
    def ArcSmoothness(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @CustomScale.setter
    def CustomScale(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @DisplayLocked.setter
    def DisplayLocked(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @GridOn.setter
    def GridOn(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LabelBlockId.setter
    def LabelBlockId(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LensLength.setter
    def LensLength(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @ModelView.setter
    def ModelView(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RemoveHiddenLines.setter
    def RemoveHiddenLines(self, value) -> None: ...
    @ShadePlot.setter
    def ShadePlot(self, value) -> None: ...
    @SheetView.setter
    def SheetView(self, value) -> None: ...
    @SnapBasePoint.setter
    def SnapBasePoint(self, value) -> None: ...
    @SnapOn.setter
    def SnapOn(self, value) -> None: ...
    @SnapRotationAngle.setter
    def SnapRotationAngle(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StandardScale2.setter
    def StandardScale2(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @TwistAngle.setter
    def TwistAngle(self, value) -> None: ...
    @UCSIconAtOrigin.setter
    def UCSIconAtOrigin(self, value) -> None: ...
    @UCSIconOn.setter
    def UCSIconOn(self, value) -> None: ...
    @UCSPerViewport.setter
    def UCSPerViewport(self, value) -> None: ...
    @ViewportOn.setter
    def ViewportOn(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @VisualStyle.setter
    def VisualStyle(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...


class IAcadViewports(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def DeleteConfiguration(self, Name=...): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Count(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadViews(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Count(self): ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IAcadXRecord(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def GetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TranslateIDs(self): ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TranslateIDs.setter
    def TranslateIDs(self, value) -> None: ...

class IAcadXline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IAcadApplication: ...
    @property
    def Database(self) -> IAcadDatabase: ...
    @property
    def Document(self) -> IAcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self) -> IAcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self) -> IAcadAcCmColor: ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @property
    def BasePoint(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def SecondPoint(self): ...
    @BasePoint.setter
    def BasePoint(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @SecondPoint.setter
    def SecondPoint(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class _DAcadApplicationEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class _DAcadDocumentEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class _IAcadScriptJetEvents(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class GcPePropertyEditorColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcPePropertyEditorColor

class Acad3DFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcad3DFace

class Acad3DPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcad3DPolyline

class Acad3DSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcad3DSolid

class AcadAcCmColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadAcCmColor

class AcadApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadApplication

class AcadArc(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadArc

class AcadArcAlignedText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadArcAlignedText

class AcadAssocArrayPath(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadAssocArrayPath

class AcadAssocArrayPolar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadAssocArrayPolar

class AcadAssocArrayRectangular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadAssocArrayRectangular

class AcadAttribute(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadAttribute

class AcadAttributeReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadAttributeReference

class AcadBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadBlock

class AcadBlockReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadBlockReference

class AcadBlocks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadBlocks

class AcadCamera(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadCamera

class AcadCircle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadCircle

class AcadDatabase(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadDatabase

class AcadDatabasePreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadDatabasePreferences

class AcadDgnUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadUnderlay

class AcadDictionaries(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDictionaries

class AcadDictionary(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDictionary

class AcadDim3PointAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDim3PointAngular

class AcadDimAligned(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimAligned

class AcadDimAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimAngular

class AcadDimArcLength(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimArcLength

class AcadDimDiametric(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimDiametric

class AcadDimOrdinate(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimOrdinate

class AcadDimRadial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimRadial

class AcadDimRadialLarge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimRadialLarge

class AcadDimRotated(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimRotated

class AcadDimStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimStyle

class AcadDimStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimStyles

class AcadDimension(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadDimension

class AcadDocument(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadDocument

class AcadDocuments(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadDocuments

class AcadDwfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadUnderlay

class AcadDynamicBlockReferenceProperty(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadDynamicBlockReferenceProperty

class AcadEllipse(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadEllipse

class AcadEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadEntity

class AcadExternalReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadExternalReference

class AcadExtrudedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadExtrudedSurface

class AcadFileDependencies(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadFileDependencies

class AcadFileDependency(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadFileDependency

class AcadGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadGroup

class AcadGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadGroups

class AcadHatch(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadHatch

class AcadHelix(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadHelix

class AcadHyperlink(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadHyperlink

class AcadHyperlinks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadHyperlinks

class AcadIdPair(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadIdPair

class AcadLWPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLWPolyline

class AcadLayer(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLayer

class AcadLayerStateManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadLayerStateManager

class AcadLayers(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLayers

class AcadLayout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLayout

class AcadLayouts(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLayouts

class AcadLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLeader

class AcadLight(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLight

class AcadLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLine

class AcadLineType(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLineType

class AcadLineTypes(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLineTypes

class AcadLoftedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadLoftedSurface

class AcadMInsertBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMInsertBlock

class AcadMLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMLeader

class AcadMLeaderStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMLeaderStyle

class AcadMLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMLine

class AcadMText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMText

class AcadMaterial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMaterial

class AcadMaterials(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadMaterials

class AcadMenuBar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadMenuBar

class AcadMenuGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadMenuGroup

class AcadMenuGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadMenuGroups

class AcadModelSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadModelSpace

class AcadNurbSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadNurbSurface

class AcadObject(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadObject

class AcadOle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadOle

class AcadPViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPViewport

class AcadPaperSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPaperSpace

class AcadPdfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadUnderlay

class AcadPlaneSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPlaneSurface

class AcadPlot(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPlot

class AcadPlotConfiguration(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPlotConfiguration

class AcadPlotConfigurations(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPlotConfigurations

class AcadPoint(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPoint

class AcadPointCloudEx(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPointCloudEx

class AcadPolyfaceMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPolyfaceMesh

class AcadPolygonMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPolygonMesh

class AcadPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadPolyline

class AcadPopupMenu(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPopupMenu

class AcadPopupMenuItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPopupMenuItem

class AcadPopupMenus(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPopupMenus

class AcadPreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferences

class AcadPreferencesDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesDisplay

class AcadPreferencesDrafting(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesDrafting

class AcadPreferencesFiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesFiles

class AcadPreferencesOpenSave(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesOpenSave

class AcadPreferencesOutput(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesOutput

class AcadPreferencesProfiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesProfiles

class AcadPreferencesSelection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesSelection

class AcadPreferencesSystem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesSystem

class AcadPreferencesUser(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadPreferencesUser

class AcadRasterImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRasterImage

class AcadRay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRay

class AcadRegion(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRegion

class AcadRegisteredApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRegisteredApplication

class AcadRegisteredApplications(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRegisteredApplications

class AcadRevolvedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadRevolvedSurface

class AcadScriptJet(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadScriptJet

class AcadSection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSection

class AcadSectionManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSectionManager

class AcadSectionSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSectionSettings

class AcadSecurityParams(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadSecurityParams

class AcadSelectionSet(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadSelectionSet

class AcadSelectionSets(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadSelectionSets

class AcadShadowDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class AcadShape(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadShape

class AcadSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSolid

class AcadSortentsTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadSortentsTable

class AcadSpline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSpline

class AcadState(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadState

class AcadSubDMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSubDMesh

class AcadSummaryInfo(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadSummaryInfo

class AcadSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSurface

class AcadSweptSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadSweptSurface

class AcadTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTable

class AcadTableCell(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTableCell

class AcadTableStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadTableStyle

class AcadText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadText

class AcadTextStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTextStyle

class AcadTextStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTextStyles

class AcadTolerance(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTolerance

class AcadToolbar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadToolbar

class AcadToolbarItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadToolbarItem

class AcadToolbars(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadToolbars

class AcadTrace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadTrace

class AcadUCS(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadUCS

class AcadUCSs(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadUCSs

class AcadUtility(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IAcadUtility

class AcadView(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadView

class AcadViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadViewport

class AcadViewports(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadViewports

class AcadViews(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadViews

class AcadXRecord(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadXRecord

class AcadXline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IAcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IAcadXline

IGcPePropertyEditorColor_vtables_dispatch_: int
IGcPePropertyEditorColor_vtables_: Incomplete
IAcad3DFace_vtables_dispatch_: int
IAcad3DFace_vtables_: Incomplete
IAcad3DPolyline_vtables_dispatch_: int
IAcad3DPolyline_vtables_: Incomplete
IAcad3DSolid_vtables_dispatch_: int
IAcad3DSolid_vtables_: Incomplete
IAcadApplication_vtables_dispatch_: int
IAcadApplication_vtables_: Incomplete
IAcadArc_vtables_dispatch_: int
IAcadArc_vtables_: Incomplete
IAcadArcAlignedText_vtables_dispatch_: int
IAcadArcAlignedText_vtables_: Incomplete
IAcadAssocArrayPath_vtables_dispatch_: int
IAcadAssocArrayPath_vtables_: Incomplete
IAcadAssocArrayPolar_vtables_dispatch_: int
IAcadAssocArrayPolar_vtables_: Incomplete
IAcadAssocArrayRectangular_vtables_dispatch_: int
IAcadAssocArrayRectangular_vtables_: Incomplete
IAcadAttribute_vtables_dispatch_: int
IAcadAttribute_vtables_: Incomplete
IAcadAttributeReference_vtables_dispatch_: int
IAcadAttributeReference_vtables_: Incomplete
IAcadBlock_vtables_dispatch_: int
IAcadBlock_vtables_: Incomplete
IAcadBlockReference_vtables_dispatch_: int
IAcadBlockReference_vtables_: Incomplete
IAcadBlocks_vtables_dispatch_: int
IAcadBlocks_vtables_: Incomplete
IAcadCamera_vtables_dispatch_: int
IAcadCamera_vtables_: Incomplete
IAcadCircle_vtables_dispatch_: int
IAcadCircle_vtables_: Incomplete
IAcadDatabase_vtables_dispatch_: int
IAcadDatabase_vtables_: Incomplete
IAcadDatabasePreferences_vtables_dispatch_: int
IAcadDatabasePreferences_vtables_: Incomplete
IAcadDictionaries_vtables_dispatch_: int
IAcadDictionaries_vtables_: Incomplete
IAcadDictionary_vtables_dispatch_: int
IAcadDictionary_vtables_: Incomplete
IAcadDim3PointAngular_vtables_dispatch_: int
IAcadDim3PointAngular_vtables_: Incomplete
IAcadDimAligned_vtables_dispatch_: int
IAcadDimAligned_vtables_: Incomplete
IAcadDimAngular_vtables_dispatch_: int
IAcadDimAngular_vtables_: Incomplete
IAcadDimArcLength_vtables_dispatch_: int
IAcadDimArcLength_vtables_: Incomplete
IAcadDimDiametric_vtables_dispatch_: int
IAcadDimDiametric_vtables_: Incomplete
IAcadDimOrdinate_vtables_dispatch_: int
IAcadDimOrdinate_vtables_: Incomplete
IAcadDimRadial_vtables_dispatch_: int
IAcadDimRadial_vtables_: Incomplete
IAcadDimRadialLarge_vtables_dispatch_: int
IAcadDimRadialLarge_vtables_: Incomplete
IAcadDimRotated_vtables_dispatch_: int
IAcadDimRotated_vtables_: Incomplete
IAcadDimStyle_vtables_dispatch_: int
IAcadDimStyle_vtables_: Incomplete
IAcadDimStyles_vtables_dispatch_: int
IAcadDimStyles_vtables_: Incomplete
IAcadDimension_vtables_dispatch_: int
IAcadDimension_vtables_: Incomplete
IAcadDocument_vtables_dispatch_: int
IAcadDocument_vtables_: Incomplete
IAcadDocuments_vtables_dispatch_: int
IAcadDocuments_vtables_: Incomplete
IAcadDwfUnderlay_vtables_dispatch_: int
IAcadDwfUnderlay_vtables_: Incomplete
IAcadDynamicBlockReferenceProperty_vtables_dispatch_: int
IAcadDynamicBlockReferenceProperty_vtables_: Incomplete
IAcadEllipse_vtables_dispatch_: int
IAcadEllipse_vtables_: Incomplete
IAcadEntity_vtables_dispatch_: int
IAcadEntity_vtables_: Incomplete
IAcadExternalReference_vtables_dispatch_: int
IAcadExternalReference_vtables_: Incomplete
IAcadExtrudedSurface_vtables_dispatch_: int
IAcadExtrudedSurface_vtables_: Incomplete
IAcadFileDependencies_vtables_dispatch_: int
IAcadFileDependencies_vtables_: Incomplete
IAcadFileDependency_vtables_dispatch_: int
IAcadFileDependency_vtables_: Incomplete
IAcadAcCmColor_vtables_dispatch_: int
IAcadAcCmColor_vtables_: Incomplete
IAcadGroup_vtables_dispatch_: int
IAcadGroup_vtables_: Incomplete
IAcadGroups_vtables_dispatch_: int
IAcadGroups_vtables_: Incomplete
IAcadHatch_vtables_dispatch_: int
IAcadHatch_vtables_: Incomplete
IAcadHelix_vtables_dispatch_: int
IAcadHelix_vtables_: Incomplete
IAcadHyperlink_vtables_dispatch_: int
IAcadHyperlink_vtables_: Incomplete
IAcadHyperlinks_vtables_dispatch_: int
IAcadHyperlinks_vtables_: Incomplete
IAcadIdPair_vtables_dispatch_: int
IAcadIdPair_vtables_: Incomplete
IAcadLWPolyline_vtables_dispatch_: int
IAcadLWPolyline_vtables_: Incomplete
IAcadLayer_vtables_dispatch_: int
IAcadLayer_vtables_: Incomplete
IAcadLayerStateManager_vtables_dispatch_: int
IAcadLayerStateManager_vtables_: Incomplete
IAcadLayers_vtables_dispatch_: int
IAcadLayers_vtables_: Incomplete
IAcadLayout_vtables_dispatch_: int
IAcadLayout_vtables_: Incomplete
IAcadLayouts_vtables_dispatch_: int
IAcadLayouts_vtables_: Incomplete
IAcadLeader_vtables_dispatch_: int
IAcadLeader_vtables_: Incomplete
IAcadLight_vtables_dispatch_: int
IAcadLight_vtables_: Incomplete
IAcadLight2_vtables_dispatch_: int
IAcadLight2_vtables_: Incomplete
IAcadLight3_vtables_dispatch_: int
IAcadLight3_vtables_: Incomplete
IAcadLine_vtables_dispatch_: int
IAcadLine_vtables_: Incomplete
IAcadLineType_vtables_dispatch_: int
IAcadLineType_vtables_: Incomplete
IAcadLineTypes_vtables_dispatch_: int
IAcadLineTypes_vtables_: Incomplete
IAcadLoftedSurface_vtables_dispatch_: int
IAcadLoftedSurface_vtables_: Incomplete
IAcadMInsertBlock_vtables_dispatch_: int
IAcadMInsertBlock_vtables_: Incomplete
IAcadMLeader_vtables_dispatch_: int
IAcadMLeader_vtables_: Incomplete
IAcadMLeaderStyle_vtables_dispatch_: int
IAcadMLeaderStyle_vtables_: Incomplete
IAcadMLine_vtables_dispatch_: int
IAcadMLine_vtables_: Incomplete
IAcadMText_vtables_dispatch_: int
IAcadMText_vtables_: Incomplete
IAcadMaterial_vtables_dispatch_: int
IAcadMaterial_vtables_: Incomplete
IAcadMaterials_vtables_dispatch_: int
IAcadMaterials_vtables_: Incomplete
IAcadMenuBar_vtables_dispatch_: int
IAcadMenuBar_vtables_: Incomplete
IAcadMenuGroup_vtables_dispatch_: int
IAcadMenuGroup_vtables_: Incomplete
IAcadMenuGroups_vtables_dispatch_: int
IAcadMenuGroups_vtables_: Incomplete
IAcadModelSpace_vtables_dispatch_: int
IAcadModelSpace_vtables_: Incomplete
IAcadNurbSurface_vtables_dispatch_: int
IAcadNurbSurface_vtables_: Incomplete
IAcadObject_vtables_dispatch_: int
IAcadObject_vtables_: Incomplete
IAcadOle_vtables_dispatch_: int
IAcadOle_vtables_: Incomplete
IAcadPViewport_vtables_dispatch_: int
IAcadPViewport_vtables_: Incomplete
IAcadPaperSpace_vtables_dispatch_: int
IAcadPaperSpace_vtables_: Incomplete
IAcadPlaneSurface_vtables_dispatch_: int
IAcadPlaneSurface_vtables_: Incomplete
IAcadPlot_vtables_dispatch_: int
IAcadPlot_vtables_: Incomplete
IAcadPlotConfiguration_vtables_dispatch_: int
IAcadPlotConfiguration_vtables_: Incomplete
IAcadPlotConfigurations_vtables_dispatch_: int
IAcadPlotConfigurations_vtables_: Incomplete
IAcadPoint_vtables_dispatch_: int
IAcadPoint_vtables_: Incomplete
IAcadPointCloudEx_vtables_dispatch_: int
IAcadPointCloudEx_vtables_: Incomplete
IAcadPolyfaceMesh_vtables_dispatch_: int
IAcadPolyfaceMesh_vtables_: Incomplete
IAcadPolygonMesh_vtables_dispatch_: int
IAcadPolygonMesh_vtables_: Incomplete
IAcadPolyline_vtables_dispatch_: int
IAcadPolyline_vtables_: Incomplete
IAcadPopupMenu_vtables_dispatch_: int
IAcadPopupMenu_vtables_: Incomplete
IAcadPopupMenuItem_vtables_dispatch_: int
IAcadPopupMenuItem_vtables_: Incomplete
IAcadPopupMenus_vtables_dispatch_: int
IAcadPopupMenus_vtables_: Incomplete
IAcadPreferences_vtables_dispatch_: int
IAcadPreferences_vtables_: Incomplete
IAcadPreferencesDisplay_vtables_dispatch_: int
IAcadPreferencesDisplay_vtables_: Incomplete
IAcadPreferencesDrafting_vtables_dispatch_: int
IAcadPreferencesDrafting_vtables_: Incomplete
IAcadPreferencesFiles_vtables_dispatch_: int
IAcadPreferencesFiles_vtables_: Incomplete
IAcadPreferencesOpenSave_vtables_dispatch_: int
IAcadPreferencesOpenSave_vtables_: Incomplete
IAcadPreferencesOutput_vtables_dispatch_: int
IAcadPreferencesOutput_vtables_: Incomplete
IAcadPreferencesProfiles_vtables_dispatch_: int
IAcadPreferencesProfiles_vtables_: Incomplete
IAcadPreferencesSelection_vtables_dispatch_: int
IAcadPreferencesSelection_vtables_: Incomplete
IAcadPreferencesSystem_vtables_dispatch_: int
IAcadPreferencesSystem_vtables_: Incomplete
IAcadPreferencesUser_vtables_dispatch_: int
IAcadPreferencesUser_vtables_: Incomplete
IAcadRasterImage_vtables_dispatch_: int
IAcadRasterImage_vtables_: Incomplete
IAcadRay_vtables_dispatch_: int
IAcadRay_vtables_: Incomplete
IAcadRegion_vtables_dispatch_: int
IAcadRegion_vtables_: Incomplete
IAcadRegisteredApplication_vtables_dispatch_: int
IAcadRegisteredApplication_vtables_: Incomplete
IAcadRegisteredApplications_vtables_dispatch_: int
IAcadRegisteredApplications_vtables_: Incomplete
IAcadRevolvedSurface_vtables_dispatch_: int
IAcadRevolvedSurface_vtables_: Incomplete
IAcadScriptJet_vtables_dispatch_: int
IAcadScriptJet_vtables_: Incomplete
IAcadSection_vtables_dispatch_: int
IAcadSection_vtables_: Incomplete
IAcadSection2_vtables_dispatch_: int
IAcadSection2_vtables_: Incomplete
IAcadSectionManager_vtables_dispatch_: int
IAcadSectionManager_vtables_: Incomplete
IAcadSectionSettings_vtables_dispatch_: int
IAcadSectionSettings_vtables_: Incomplete
IAcadSectionTypeSettings_vtables_dispatch_: int
IAcadSectionTypeSettings_vtables_: Incomplete
IAcadSecurityParams_vtables_dispatch_: int
IAcadSecurityParams_vtables_: Incomplete
IAcadSelectionSet_vtables_dispatch_: int
IAcadSelectionSet_vtables_: Incomplete
IAcadSelectionSets_vtables_dispatch_: int
IAcadSelectionSets_vtables_: Incomplete
IAcadShadowDisplay_vtables_dispatch_: int
IAcadShadowDisplay_vtables_: Incomplete
IAcadShape_vtables_dispatch_: int
IAcadShape_vtables_: Incomplete
IAcadSolid_vtables_dispatch_: int
IAcadSolid_vtables_: Incomplete
IAcadSortentsTable_vtables_dispatch_: int
IAcadSortentsTable_vtables_: Incomplete
IAcadSpline_vtables_dispatch_: int
IAcadSpline_vtables_: Incomplete
IAcadState_vtables_dispatch_: int
IAcadState_vtables_: Incomplete
IAcadSubDMesh_vtables_dispatch_: int
IAcadSubDMesh_vtables_: Incomplete
IAcadSummaryInfo_vtables_dispatch_: int
IAcadSummaryInfo_vtables_: Incomplete
IAcadSurface_vtables_dispatch_: int
IAcadSurface_vtables_: Incomplete
IAcadSweptSurface_vtables_dispatch_: int
IAcadSweptSurface_vtables_: Incomplete
IAcadTable_vtables_dispatch_: int
IAcadTable_vtables_: Incomplete
IAcadTableCell_vtables_dispatch_: int
IAcadTableCell_vtables_: Incomplete
IAcadTableStyle_vtables_dispatch_: int
IAcadTableStyle_vtables_: Incomplete
IAcadText_vtables_dispatch_: int
IAcadText_vtables_: Incomplete
IAcadTextStyle_vtables_dispatch_: int
IAcadTextStyle_vtables_: Incomplete
IAcadTextStyles_vtables_dispatch_: int
IAcadTextStyles_vtables_: Incomplete
IAcadTolerance_vtables_dispatch_: int
IAcadTolerance_vtables_: Incomplete
IAcadToolbar_vtables_dispatch_: int
IAcadToolbar_vtables_: Incomplete
IAcadToolbarItem_vtables_dispatch_: int
IAcadToolbarItem_vtables_: Incomplete
IAcadToolbars_vtables_dispatch_: int
IAcadToolbars_vtables_: Incomplete
IAcadTrace_vtables_dispatch_: int
IAcadTrace_vtables_: Incomplete
IAcadUCS_vtables_dispatch_: int
IAcadUCS_vtables_: Incomplete
IAcadUCSs_vtables_dispatch_: int
IAcadUCSs_vtables_: Incomplete
IAcadUnderlay_vtables_dispatch_: int
IAcadUnderlay_vtables_: Incomplete
IAcadUtility_vtables_dispatch_: int
IAcadUtility_vtables_: Incomplete
IAcadView_vtables_dispatch_: int
IAcadView_vtables_: Incomplete
IAcadViewport_vtables_dispatch_: int
IAcadViewport_vtables_: Incomplete
IAcadViewports_vtables_dispatch_: int
IAcadViewports_vtables_: Incomplete
IAcadViews_vtables_dispatch_: int
IAcadViews_vtables_: Incomplete
IAcadXRecord_vtables_dispatch_: int
IAcadXRecord_vtables_: Incomplete
IAcadXline_vtables_dispatch_: int
IAcadXline_vtables_: Incomplete
RecordMap: Incomplete
CLSIDToClassMap: Incomplete
CLSIDToPackageMap: Incomplete
VTablesToPackageMap: Incomplete
VTablesToClassMap: Incomplete
NamesToIIDMap: Incomplete
