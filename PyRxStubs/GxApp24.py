# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.12.0 (tags/v3.12.0:0fb18b0, Oct  2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)]
# From type library 'gcax.tlb'
# On Thu Dec  7 13:06:45 2023
'Acad2024 Object Library'
makepy_version = '0.5.01'
python_version = 0x30c00f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch
import PyRx as Rx
import PyAp as Ap


# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{AA55B945-184E-4017-ABDA-B3D9BEEEAA25}')
MajorVersion = 1
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

def VTR8ArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_R8, __values)
    return __values

def VTI2ArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_I2, __values)
    return __values

def VTVARArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_VARIANT, __values)
    return __values

def VTDISPArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_DISPATCH, __values)
    return __values


class constants:
    acCubicSpline3DPoly           =2          # from enum Gc3DPolylineType
    acQuadSpline3DPoly            =1          # from enum Gc3DPolylineType
    acSimple3DPoly                =0          # from enum Gc3DPolylineType
    gcCubicSpline3DPoly           =2          # from enum Gc3DPolylineType
    gcQuadSpline3DPoly            =1          # from enum Gc3DPolylineType
    gcSimple3DPoly                =0          # from enum Gc3DPolylineType
    acModelSpace                  =1          # from enum GcActiveSpace
    acPaperSpace                  =0          # from enum GcActiveSpace
    gcModelSpace                  =1          # from enum GcActiveSpace
    gcPaperSpace                  =0          # from enum GcActiveSpace
    acAlignmentAligned            =3          # from enum GcAlignment
    acAlignmentBottomCenter       =13         # from enum GcAlignment
    acAlignmentBottomLeft         =12         # from enum GcAlignment
    acAlignmentBottomRight        =14         # from enum GcAlignment
    acAlignmentCenter             =1          # from enum GcAlignment
    acAlignmentFit                =5          # from enum GcAlignment
    acAlignmentLeft               =0          # from enum GcAlignment
    acAlignmentMiddle             =4          # from enum GcAlignment
    acAlignmentMiddleCenter       =10         # from enum GcAlignment
    acAlignmentMiddleLeft         =9          # from enum GcAlignment
    acAlignmentMiddleRight        =11         # from enum GcAlignment
    acAlignmentRight              =2          # from enum GcAlignment
    acAlignmentTopCenter          =7          # from enum GcAlignment
    acAlignmentTopLeft            =6          # from enum GcAlignment
    acAlignmentTopRight           =8          # from enum GcAlignment
    gcAlignmentAligned            =3          # from enum GcAlignment
    gcAlignmentBottomCenter       =13         # from enum GcAlignment
    gcAlignmentBottomLeft         =12         # from enum GcAlignment
    gcAlignmentBottomRight        =14         # from enum GcAlignment
    gcAlignmentCenter             =1          # from enum GcAlignment
    gcAlignmentFit                =5          # from enum GcAlignment
    gcAlignmentLeft               =0          # from enum GcAlignment
    gcAlignmentMiddle             =4          # from enum GcAlignment
    gcAlignmentMiddleCenter       =10         # from enum GcAlignment
    gcAlignmentMiddleLeft         =9          # from enum GcAlignment
    gcAlignmentMiddleRight        =11         # from enum GcAlignment
    gcAlignmentRight              =2          # from enum GcAlignment
    gcAlignmentTopCenter          =7          # from enum GcAlignment
    gcAlignmentTopLeft            =6          # from enum GcAlignment
    gcAlignmentTopRight           =8          # from enum GcAlignment
    acAlignPntAcquisitionAutomatic=0          # from enum GcAlignmentPointAcquisition
    acAlignPntAcquisitionShiftToAcquire=1          # from enum GcAlignmentPointAcquisition
    gcAlignPntAcquisitionAutomatic=0          # from enum GcAlignmentPointAcquisition
    gcAlignPntAcquisitionShiftToAcquire=1          # from enum GcAlignmentPointAcquisition
    acDegreeMinuteSeconds         =1          # from enum GcAngleUnits
    acDegrees                     =0          # from enum GcAngleUnits
    acGrads                       =2          # from enum GcAngleUnits
    acRadians                     =3          # from enum GcAngleUnits
    gcDegreeMinuteSeconds         =1          # from enum GcAngleUnits
    gcDegrees                     =0          # from enum GcAngleUnits
    gcGrads                       =2          # from enum GcAngleUnits
    gcRadians                     =3          # from enum GcAngleUnits
    acAttachmentPointBottomCenter =8          # from enum GcAttachmentPoint
    acAttachmentPointBottomLeft   =7          # from enum GcAttachmentPoint
    acAttachmentPointBottomRight  =9          # from enum GcAttachmentPoint
    acAttachmentPointMiddleCenter =5          # from enum GcAttachmentPoint
    acAttachmentPointMiddleLeft   =4          # from enum GcAttachmentPoint
    acAttachmentPointMiddleRight  =6          # from enum GcAttachmentPoint
    acAttachmentPointTopCenter    =2          # from enum GcAttachmentPoint
    acAttachmentPointTopLeft      =1          # from enum GcAttachmentPoint
    acAttachmentPointTopRight     =3          # from enum GcAttachmentPoint
    gcAttachmentPointBottomCenter =8          # from enum GcAttachmentPoint
    gcAttachmentPointBottomLeft   =7          # from enum GcAttachmentPoint
    gcAttachmentPointBottomRight  =9          # from enum GcAttachmentPoint
    gcAttachmentPointMiddleCenter =5          # from enum GcAttachmentPoint
    gcAttachmentPointMiddleLeft   =4          # from enum GcAttachmentPoint
    gcAttachmentPointMiddleRight  =6          # from enum GcAttachmentPoint
    gcAttachmentPointTopCenter    =2          # from enum GcAttachmentPoint
    gcAttachmentPointTopLeft      =1          # from enum GcAttachmentPoint
    gcAttachmentPointTopRight     =3          # from enum GcAttachmentPoint
    acAttributeModeConstant       =2          # from enum GcAttributeMode
    acAttributeModeInvisible      =1          # from enum GcAttributeMode
    acAttributeModeLockPosition   =16         # from enum GcAttributeMode
    acAttributeModeMultipleLine   =32         # from enum GcAttributeMode
    acAttributeModeNormal         =0          # from enum GcAttributeMode
    acAttributeModePreset         =8          # from enum GcAttributeMode
    acAttributeModeVerify         =4          # from enum GcAttributeMode
    gcAttributeModeConstant       =2          # from enum GcAttributeMode
    gcAttributeModeInvisible      =1          # from enum GcAttributeMode
    gcAttributeModeLockPosition   =16         # from enum GcAttributeMode
    gcAttributeModeMultipleLine   =32         # from enum GcAttributeMode
    gcAttributeModeNormal         =0          # from enum GcAttributeMode
    gcAttributeModePreset         =8          # from enum GcAttributeMode
    gcAttributeModeVerify         =4          # from enum GcAttributeMode
    acConnectBase                 =1          # from enum GcBlockConnectionType
    acConnectExtents              =0          # from enum GcBlockConnectionType
    gcConnectBase                 =1          # from enum GcBlockConnectionType
    gcConnectExtents              =0          # from enum GcBlockConnectionType
    acAny                         =0          # from enum GcBlockScaling
    acUniform                     =1          # from enum GcBlockScaling
    gcAny                         =0          # from enum GcBlockScaling
    gcUniform                     =1          # from enum GcBlockScaling
    acIntersection                =1          # from enum GcBooleanType
    acSubtraction                 =2          # from enum GcBooleanType
    acUnion                       =0          # from enum GcBooleanType
    gcIntersection                =1          # from enum GcBooleanType
    gcSubtraction                 =2          # from enum GcBooleanType
    gcUnion                       =0          # from enum GcBooleanType
    acBottomCenter                =8          # from enum GcCellAlignment
    acBottomLeft                  =7          # from enum GcCellAlignment
    acBottomRight                 =9          # from enum GcCellAlignment
    acMiddleCenter                =5          # from enum GcCellAlignment
    acMiddleLeft                  =4          # from enum GcCellAlignment
    acMiddleRight                 =6          # from enum GcCellAlignment
    acTopCenter                   =2          # from enum GcCellAlignment
    acTopLeft                     =1          # from enum GcCellAlignment
    acTopRight                    =3          # from enum GcCellAlignment
    gcBottomCenter                =8          # from enum GcCellAlignment
    gcBottomLeft                  =7          # from enum GcCellAlignment
    gcBottomRight                 =9          # from enum GcCellAlignment
    gcMiddleCenter                =5          # from enum GcCellAlignment
    gcMiddleLeft                  =4          # from enum GcCellAlignment
    gcMiddleRight                 =6          # from enum GcCellAlignment
    gcTopCenter                   =2          # from enum GcCellAlignment
    gcTopLeft                     =1          # from enum GcCellAlignment
    gcTopRight                    =3          # from enum GcCellAlignment
    acBottomMask                  =4          # from enum GcCellEdgeMask
    acLeftMask                    =8          # from enum GcCellEdgeMask
    acRightMask                   =2          # from enum GcCellEdgeMask
    acTopMask                     =1          # from enum GcCellEdgeMask
    gcBottomMask                  =4          # from enum GcCellEdgeMask
    gcLeftMask                    =8          # from enum GcCellEdgeMask
    gcRightMask                   =2          # from enum GcCellEdgeMask
    gcTopMask                     =1          # from enum GcCellEdgeMask
    acCellStateContentLocked      =1          # from enum GcCellState
    acCellStateContentModified    =32         # from enum GcCellState
    acCellStateContentReadOnly    =2          # from enum GcCellState
    acCellStateFormatLocked       =4          # from enum GcCellState
    acCellStateFormatModified     =64         # from enum GcCellState
    acCellStateFormatReadOnly     =8          # from enum GcCellState
    acCellStateLinked             =16         # from enum GcCellState
    acCellStateNone               =0          # from enum GcCellState
    gcCellStateContentLocked      =1          # from enum GcCellState
    gcCellStateContentModified    =32         # from enum GcCellState
    gcCellStateContentReadOnly    =2          # from enum GcCellState
    gcCellStateFormatLocked       =4          # from enum GcCellState
    gcCellStateFormatModified     =64         # from enum GcCellState
    gcCellStateFormatReadOnly     =8          # from enum GcCellState
    gcCellStateLinked             =16         # from enum GcCellState
    gcCellStateNone               =0          # from enum GcCellState
    acBlockCell                   =2          # from enum GcCellType
    acTextCell                    =1          # from enum GcCellType
    acUnknownCell                 =0          # from enum GcCellType
    gcBlockCell                   =2          # from enum GcCellType
    gcTextCell                    =1          # from enum GcCellType
    gcUnknownCell                 =0          # from enum GcCellType
    acBlue                        =5          # from enum GcColor
    acByBlock                     =0          # from enum GcColor
    acByLayer                     =256        # from enum GcColor
    acCyan                        =4          # from enum GcColor
    acGreen                       =3          # from enum GcColor
    acMagenta                     =6          # from enum GcColor
    acRed                         =1          # from enum GcColor
    acWhite                       =7          # from enum GcColor
    acYellow                      =2          # from enum GcColor
    gcBlue                        =5          # from enum GcColor
    gcByBlock                     =0          # from enum GcColor
    gcByLayer                     =256        # from enum GcColor
    gcCyan                        =4          # from enum GcColor
    gcGreen                       =3          # from enum GcColor
    gcMagenta                     =6          # from enum GcColor
    gcRed                         =1          # from enum GcColor
    gcWhite                       =7          # from enum GcColor
    gcYellow                      =2          # from enum GcColor
    acColorMethodByACI            =195        # from enum GcColorMethod
    acColorMethodByBlock          =193        # from enum GcColorMethod
    acColorMethodByLayer          =192        # from enum GcColorMethod
    acColorMethodByRGB            =194        # from enum GcColorMethod
    acColorMethodForeground       =197        # from enum GcColorMethod
    gcColorMethodByACI            =195        # from enum GcColorMethod
    gcColorMethodByBlock          =193        # from enum GcColorMethod
    gcColorMethodByLayer          =192        # from enum GcColorMethod
    gcColorMethodByRGB            =194        # from enum GcColorMethod
    gcColorMethodForeground       =197        # from enum GcColorMethod
    acDisplayDCS                  =2          # from enum GcCoordinateSystem
    acOCS                         =4          # from enum GcCoordinateSystem
    acPaperSpaceDCS               =3          # from enum GcCoordinateSystem
    acUCS                         =1          # from enum GcCoordinateSystem
    acWorld                       =0          # from enum GcCoordinateSystem
    gcDisplayDCS                  =2          # from enum GcCoordinateSystem
    gcOCS                         =4          # from enum GcCoordinateSystem
    gcPaperSpaceDCS               =3          # from enum GcCoordinateSystem
    gcUCS                         =1          # from enum GcCoordinateSystem
    gcWorld                       =0          # from enum GcCoordinateSystem
    acSymAbove                    =1          # from enum GcDimArcLengthSymbol
    acSymInFront                  =0          # from enum GcDimArcLengthSymbol
    acSymNone                     =2          # from enum GcDimArcLengthSymbol
    gcSymAbove                    =1          # from enum GcDimArcLengthSymbol
    gcSymInFront                  =0          # from enum GcDimArcLengthSymbol
    gcSymNone                     =2          # from enum GcDimArcLengthSymbol
    acArrowArchTick               =4          # from enum GcDimArrowheadType
    acArrowBoxBlank               =14         # from enum GcDimArrowheadType
    acArrowBoxFilled              =15         # from enum GcDimArrowheadType
    acArrowClosed                 =2          # from enum GcDimArrowheadType
    acArrowClosedBlank            =1          # from enum GcDimArrowheadType
    acArrowDatumBlank             =16         # from enum GcDimArrowheadType
    acArrowDatumFilled            =17         # from enum GcDimArrowheadType
    acArrowDefault                =0          # from enum GcDimArrowheadType
    acArrowDot                    =3          # from enum GcDimArrowheadType
    acArrowDotBlank               =12         # from enum GcDimArrowheadType
    acArrowDotSmall               =11         # from enum GcDimArrowheadType
    acArrowIntegral               =18         # from enum GcDimArrowheadType
    acArrowNone                   =19         # from enum GcDimArrowheadType
    acArrowOblique                =5          # from enum GcDimArrowheadType
    acArrowOpen                   =6          # from enum GcDimArrowheadType
    acArrowOpen30                 =10         # from enum GcDimArrowheadType
    acArrowOpen90                 =9          # from enum GcDimArrowheadType
    acArrowOrigin                 =7          # from enum GcDimArrowheadType
    acArrowOrigin2                =8          # from enum GcDimArrowheadType
    acArrowSmall                  =13         # from enum GcDimArrowheadType
    acArrowUserDefined            =20         # from enum GcDimArrowheadType
    gcArrowArchTick               =4          # from enum GcDimArrowheadType
    gcArrowBoxBlank               =14         # from enum GcDimArrowheadType
    gcArrowBoxFilled              =15         # from enum GcDimArrowheadType
    gcArrowClosed                 =2          # from enum GcDimArrowheadType
    gcArrowClosedBlank            =1          # from enum GcDimArrowheadType
    gcArrowDatumBlank             =16         # from enum GcDimArrowheadType
    gcArrowDatumFilled            =17         # from enum GcDimArrowheadType
    gcArrowDefault                =0          # from enum GcDimArrowheadType
    gcArrowDot                    =3          # from enum GcDimArrowheadType
    gcArrowDotBlank               =12         # from enum GcDimArrowheadType
    gcArrowDotSmall               =11         # from enum GcDimArrowheadType
    gcArrowIntegral               =18         # from enum GcDimArrowheadType
    gcArrowNone                   =19         # from enum GcDimArrowheadType
    gcArrowOblique                =5          # from enum GcDimArrowheadType
    gcArrowOpen                   =6          # from enum GcDimArrowheadType
    gcArrowOpen30                 =10         # from enum GcDimArrowheadType
    gcArrowOpen90                 =9          # from enum GcDimArrowheadType
    gcArrowOrigin                 =7          # from enum GcDimArrowheadType
    gcArrowOrigin2                =8          # from enum GcDimArrowheadType
    gcArrowSmall                  =13         # from enum GcDimArrowheadType
    gcArrowUserDefined            =20         # from enum GcDimArrowheadType
    acCenterLine                  =1          # from enum GcDimCenterType
    acCenterMark                  =0          # from enum GcDimCenterType
    acCenterNone                  =2          # from enum GcDimCenterType
    gcCenterLine                  =1          # from enum GcDimCenterType
    gcCenterMark                  =0          # from enum GcDimCenterType
    gcCenterNone                  =2          # from enum GcDimCenterType
    acArrowsOnly                  =1          # from enum GcDimFit
    acBestFit                     =3          # from enum GcDimFit
    acTextAndArrows               =0          # from enum GcDimFit
    acTextOnly                    =2          # from enum GcDimFit
    gcArrowsOnly                  =1          # from enum GcDimFit
    gcBestFit                     =3          # from enum GcDimFit
    gcTextAndArrows               =0          # from enum GcDimFit
    gcTextOnly                    =2          # from enum GcDimFit
    acDiagonal                    =1          # from enum GcDimFractionType
    acHorizontal                  =0          # from enum GcDimFractionType
    acNotStacked                  =2          # from enum GcDimFractionType
    gcDiagonal                    =1          # from enum GcDimFractionType
    gcHorizontal                  =0          # from enum GcDimFractionType
    gcNotStacked                  =2          # from enum GcDimFractionType
    acFirstExtensionLine          =1          # from enum GcDimHorizontalJustification
    acHorzCentered                =0          # from enum GcDimHorizontalJustification
    acOverFirstExtension          =3          # from enum GcDimHorizontalJustification
    acOverSecondExtension         =4          # from enum GcDimHorizontalJustification
    acSecondExtensionLine         =2          # from enum GcDimHorizontalJustification
    gcFirstExtensionLine          =1          # from enum GcDimHorizontalJustification
    gcHorzCentered                =0          # from enum GcDimHorizontalJustification
    gcOverFirstExtension          =3          # from enum GcDimHorizontalJustification
    gcOverSecondExtension         =4          # from enum GcDimHorizontalJustification
    gcSecondExtensionLine         =2          # from enum GcDimHorizontalJustification
    acDimLArchitectural           =4          # from enum GcDimLUnits
    acDimLDecimal                 =2          # from enum GcDimLUnits
    acDimLEngineering             =3          # from enum GcDimLUnits
    acDimLFractional              =5          # from enum GcDimLUnits
    acDimLScientific              =1          # from enum GcDimLUnits
    acDimLWindowsDesktop          =6          # from enum GcDimLUnits
    gcDimLArchitectural           =4          # from enum GcDimLUnits
    gcDimLDecimal                 =2          # from enum GcDimLUnits
    gcDimLEngineering             =3          # from enum GcDimLUnits
    gcDimLFractional              =5          # from enum GcDimLUnits
    gcDimLScientific              =1          # from enum GcDimLUnits
    gcDimLWindowsDesktop          =6          # from enum GcDimLUnits
    acDimPrecisionEight           =8          # from enum GcDimPrecision
    acDimPrecisionFive            =5          # from enum GcDimPrecision
    acDimPrecisionFour            =4          # from enum GcDimPrecision
    acDimPrecisionOne             =1          # from enum GcDimPrecision
    acDimPrecisionSeven           =7          # from enum GcDimPrecision
    acDimPrecisionSix             =6          # from enum GcDimPrecision
    acDimPrecisionThree           =3          # from enum GcDimPrecision
    acDimPrecisionTwo             =2          # from enum GcDimPrecision
    acDimPrecisionZero            =0          # from enum GcDimPrecision
    gcDimPrecisionEight           =8          # from enum GcDimPrecision
    gcDimPrecisionFive            =5          # from enum GcDimPrecision
    gcDimPrecisionFour            =4          # from enum GcDimPrecision
    gcDimPrecisionOne             =1          # from enum GcDimPrecision
    gcDimPrecisionSeven           =7          # from enum GcDimPrecision
    gcDimPrecisionSix             =6          # from enum GcDimPrecision
    gcDimPrecisionThree           =3          # from enum GcDimPrecision
    gcDimPrecisionTwo             =2          # from enum GcDimPrecision
    gcDimPrecisionZero            =0          # from enum GcDimPrecision
    acDimLineWithText             =0          # from enum GcDimTextMovement
    acMoveTextAddLeader           =1          # from enum GcDimTextMovement
    acMoveTextNoLeader            =2          # from enum GcDimTextMovement
    gcDimLineWithText             =0          # from enum GcDimTextMovement
    gcMoveTextAddLeader           =1          # from enum GcDimTextMovement
    gcMoveTextNoLeader            =2          # from enum GcDimTextMovement
    acTolBottom                   =0          # from enum GcDimToleranceJustify
    acTolMiddle                   =1          # from enum GcDimToleranceJustify
    acTolTop                      =2          # from enum GcDimToleranceJustify
    gcTolBottom                   =0          # from enum GcDimToleranceJustify
    gcTolMiddle                   =1          # from enum GcDimToleranceJustify
    gcTolTop                      =2          # from enum GcDimToleranceJustify
    acTolBasic                    =4          # from enum GcDimToleranceMethod
    acTolDeviation                =2          # from enum GcDimToleranceMethod
    acTolLimits                   =3          # from enum GcDimToleranceMethod
    acTolNone                     =0          # from enum GcDimToleranceMethod
    acTolSymmetrical              =1          # from enum GcDimToleranceMethod
    gcTolBasic                    =4          # from enum GcDimToleranceMethod
    gcTolDeviation                =2          # from enum GcDimToleranceMethod
    gcTolLimits                   =3          # from enum GcDimToleranceMethod
    gcTolNone                     =0          # from enum GcDimToleranceMethod
    gcTolSymmetrical              =1          # from enum GcDimToleranceMethod
    acDimArchitectural            =6          # from enum GcDimUnits
    acDimArchitecturalStacked     =4          # from enum GcDimUnits
    acDimDecimal                  =2          # from enum GcDimUnits
    acDimEngineering              =3          # from enum GcDimUnits
    acDimFractional               =7          # from enum GcDimUnits
    acDimFractionalStacked        =5          # from enum GcDimUnits
    acDimScientific               =1          # from enum GcDimUnits
    acDimWindowsDesktop           =8          # from enum GcDimUnits
    gcDimArchitectural            =6          # from enum GcDimUnits
    gcDimArchitecturalStacked     =4          # from enum GcDimUnits
    gcDimDecimal                  =2          # from enum GcDimUnits
    gcDimEngineering              =3          # from enum GcDimUnits
    gcDimFractional               =7          # from enum GcDimUnits
    gcDimFractionalStacked        =5          # from enum GcDimUnits
    gcDimScientific               =1          # from enum GcDimUnits
    gcDimWindowsDesktop           =8          # from enum GcDimUnits
    acAbove                       =1          # from enum GcDimVerticalJustification
    acJIS                         =3          # from enum GcDimVerticalJustification
    acOutside                     =2          # from enum GcDimVerticalJustification
    acUnder                       =4          # from enum GcDimVerticalJustification
    acVertCentered                =0          # from enum GcDimVerticalJustification
    gcAbove                       =1          # from enum GcDimVerticalJustification
    gcJIS                         =3          # from enum GcDimVerticalJustification
    gcOutside                     =2          # from enum GcDimVerticalJustification
    gcUnder                       =4          # from enum GcDimVerticalJustification
    gcVertCentered                =0          # from enum GcDimVerticalJustification
    acDrawLeaderHeadFirst         =0          # from enum GcDrawLeaderOrderType
    acDrawLeaderTailFirst         =1          # from enum GcDrawLeaderOrderType
    gcDrawLeaderHeadFirst         =0          # from enum GcDrawLeaderOrderType
    gcDrawLeaderTailFirst         =1          # from enum GcDrawLeaderOrderType
    acDrawContentFirst            =0          # from enum GcDrawMLeaderOrderType
    acDrawLeaderFirst             =1          # from enum GcDrawMLeaderOrderType
    gcDrawContentFirst            =0          # from enum GcDrawMLeaderOrderType
    gcDrawLeaderFirst             =1          # from enum GcDrawMLeaderOrderType
    acEnableSCM                   =2          # from enum GcDrawingAreaSCMCommand
    acEnableSCMOptions            =1          # from enum GcDrawingAreaSCMCommand
    acEnter                       =0          # from enum GcDrawingAreaSCMCommand
    gcEnableSCM                   =2          # from enum GcDrawingAreaSCMCommand
    gcEnableSCMOptions            =1          # from enum GcDrawingAreaSCMCommand
    gcEnter                       =0          # from enum GcDrawingAreaSCMCommand
    acRepeatLastCommand           =0          # from enum GcDrawingAreaSCMDefault
    acSCM                         =1          # from enum GcDrawingAreaSCMDefault
    gcRepeatLastCommand           =0          # from enum GcDrawingAreaSCMDefault
    gcSCM                         =1          # from enum GcDrawingAreaSCMDefault
    acEdRepeatLastCommand         =0          # from enum GcDrawingAreaSCMEdit
    acEdSCM                       =1          # from enum GcDrawingAreaSCMEdit
    gcEdRepeatLastCommand         =0          # from enum GcDrawingAreaSCMEdit
    gcEdSCM                       =1          # from enum GcDrawingAreaSCMEdit
    acBottomToTop                 =4          # from enum GcDrawingDirection
    acByStyle                     =5          # from enum GcDrawingDirection
    acLeftToRight                 =1          # from enum GcDrawingDirection
    acRightToLeft                 =2          # from enum GcDrawingDirection
    acTopToBottom                 =3          # from enum GcDrawingDirection
    gcBottomToTop                 =4          # from enum GcDrawingDirection
    gcByStyle                     =5          # from enum GcDrawingDirection
    gcLeftToRight                 =1          # from enum GcDrawingDirection
    gcRightToLeft                 =2          # from enum GcDrawingDirection
    gcTopToBottom                 =3          # from enum GcDrawingDirection
    acAngular                     =1          # from enum GcDynamicBlockReferencePropertyUnitsType
    acArea                        =3          # from enum GcDynamicBlockReferencePropertyUnitsType
    acDistance                    =2          # from enum GcDynamicBlockReferencePropertyUnitsType
    acNoUnits                     =0          # from enum GcDynamicBlockReferencePropertyUnitsType
    gcAngular                     =1          # from enum GcDynamicBlockReferencePropertyUnitsType
    gcArea                        =3          # from enum GcDynamicBlockReferencePropertyUnitsType
    gcDistance                    =2          # from enum GcDynamicBlockReferencePropertyUnitsType
    gcNoUnits                     =0          # from enum GcDynamicBlockReferencePropertyUnitsType
    acExtendBoth                  =3          # from enum GcExtendOption
    acExtendNone                  =0          # from enum GcExtendOption
    acExtendOtherEntity           =2          # from enum GcExtendOption
    acExtendThisEntity            =1          # from enum GcExtendOption
    gcExtendBoth                  =3          # from enum GcExtendOption
    gcExtendNone                  =0          # from enum GcExtendOption
    gcExtendOtherEntity           =2          # from enum GcExtendOption
    gcExtendThisEntity            =1          # from enum GcExtendOption
    acForEditing                  =1          # from enum GcFormatOption
    acForExpression               =2          # from enum GcFormatOption
    acIgnoreMtextFormat           =8          # from enum GcFormatOption
    acUseMaximumPrecision         =4          # from enum GcFormatOption
    gcForEditing                  =1          # from enum GcFormatOption
    gcForExpression               =2          # from enum GcFormatOption
    gcIgnoreMtextFormat           =8          # from enum GcFormatOption
    gcUseMaximumPrecision         =4          # from enum GcFormatOption
    kFormatOptionNone             =0          # from enum GcFormatOption
    acDemanLoadDisable            =0          # from enum GcGRXDemandLoad
    acDemandLoadCmdInvoke         =2          # from enum GcGRXDemandLoad
    acDemandLoadOnObjectDetect    =1          # from enum GcGRXDemandLoad
    gcDemanLoadDisable            =0          # from enum GcGRXDemandLoad
    gcDemandLoadCmdInvoke         =2          # from enum GcGRXDemandLoad
    gcDemandLoadOnObjectDetect    =1          # from enum GcGRXDemandLoad
    acPreDefinedGradient          =0          # from enum GcGradientPatternType
    acUserDefinedGradient         =1          # from enum GcGradientPatternType
    gcPreDefinedGradient          =0          # from enum GcGradientPatternType
    gcUserDefinedGradient         =1          # from enum GcGradientPatternType
    acHorzBottom                  =4          # from enum GcGridLineType
    acHorzInside                  =2          # from enum GcGridLineType
    acHorzTop                     =1          # from enum GcGridLineType
    acInvalidGridLine             =0          # from enum GcGridLineType
    acVertInside                  =16         # from enum GcGridLineType
    acVertLeft                    =8          # from enum GcGridLineType
    acVertRight                   =32         # from enum GcGridLineType
    gcHorzBottom                  =4          # from enum GcGridLineType
    gcHorzInside                  =2          # from enum GcGridLineType
    gcHorzTop                     =1          # from enum GcGridLineType
    gcInvalidGridLine             =0          # from enum GcGridLineType
    gcVertInside                  =16         # from enum GcGridLineType
    gcVertLeft                    =8          # from enum GcGridLineType
    gcVertRight                   =32         # from enum GcGridLineType
    acGradientObject              =1          # from enum GcHatchObjectType
    acHatchObject                 =0          # from enum GcHatchObjectType
    gcGradientObject              =1          # from enum GcHatchObjectType
    gcHatchObject                 =0          # from enum GcHatchObjectType
    acHatchStyleIgnore            =2          # from enum GcHatchStyle
    acHatchStyleNormal            =0          # from enum GcHatchStyle
    acHatchStyleOuter             =1          # from enum GcHatchStyle
    gcHatchStyleIgnore            =2          # from enum GcHatchStyle
    gcHatchStyleNormal            =0          # from enum GcHatchStyle
    gcHatchStyleOuter             =1          # from enum GcHatchStyle
    acHeight                      =2          # from enum GcHelixConstrainType
    acTurnHeight                  =0          # from enum GcHelixConstrainType
    acTurns                       =1          # from enum GcHelixConstrainType
    gcHeight                      =2          # from enum GcHelixConstrainType
    gcTurnHeight                  =0          # from enum GcHelixConstrainType
    gcTurns                       =1          # from enum GcHelixConstrainType
    acCCW                         =0          # from enum GcHelixTwistType
    acCW                          =1          # from enum GcHelixTwistType
    gcCCW                         =0          # from enum GcHelixTwistType
    gcCW                          =1          # from enum GcHelixTwistType
    acHorizontalAlignmentAligned  =3          # from enum GcHorizontalAlignment
    acHorizontalAlignmentCenter   =1          # from enum GcHorizontalAlignment
    acHorizontalAlignmentFit      =5          # from enum GcHorizontalAlignment
    acHorizontalAlignmentLeft     =0          # from enum GcHorizontalAlignment
    acHorizontalAlignmentMiddle   =4          # from enum GcHorizontalAlignment
    acHorizontalAlignmentRight    =2          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentAligned  =3          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentCenter   =1          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentFit      =5          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentLeft     =0          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentMiddle   =4          # from enum GcHorizontalAlignment
    gcHorizontalAlignmentRight    =2          # from enum GcHorizontalAlignment
    acPenWidth013                 =13         # from enum GcISOPenWidth
    acPenWidth018                 =18         # from enum GcISOPenWidth
    acPenWidth025                 =25         # from enum GcISOPenWidth
    acPenWidth035                 =35         # from enum GcISOPenWidth
    acPenWidth050                 =50         # from enum GcISOPenWidth
    acPenWidth070                 =70         # from enum GcISOPenWidth
    acPenWidth100                 =100        # from enum GcISOPenWidth
    acPenWidth140                 =140        # from enum GcISOPenWidth
    acPenWidth200                 =200        # from enum GcISOPenWidth
    acPenWidthUnk                 =-1         # from enum GcISOPenWidth
    gcPenWidth013                 =13         # from enum GcISOPenWidth
    gcPenWidth018                 =18         # from enum GcISOPenWidth
    gcPenWidth025                 =25         # from enum GcISOPenWidth
    gcPenWidth035                 =35         # from enum GcISOPenWidth
    gcPenWidth050                 =50         # from enum GcISOPenWidth
    gcPenWidth070                 =70         # from enum GcISOPenWidth
    gcPenWidth100                 =100        # from enum GcISOPenWidth
    gcPenWidth140                 =140        # from enum GcISOPenWidth
    gcPenWidth200                 =200        # from enum GcISOPenWidth
    gcPenWidthUnk                 =-1         # from enum GcISOPenWidth
    acInsertUnitsAngstroms        =11         # from enum GcInsertUnits
    acInsertUnitsAstronomicalUnits=18         # from enum GcInsertUnits
    acInsertUnitsCentimeters      =5          # from enum GcInsertUnits
    acInsertUnitsDecameters       =15         # from enum GcInsertUnits
    acInsertUnitsDecimeters       =14         # from enum GcInsertUnits
    acInsertUnitsFeet             =2          # from enum GcInsertUnits
    acInsertUnitsGigameters       =17         # from enum GcInsertUnits
    acInsertUnitsHectometers      =16         # from enum GcInsertUnits
    acInsertUnitsInches           =1          # from enum GcInsertUnits
    acInsertUnitsKilometers       =7          # from enum GcInsertUnits
    acInsertUnitsLightYears       =19         # from enum GcInsertUnits
    acInsertUnitsMeters           =6          # from enum GcInsertUnits
    acInsertUnitsMicroinches      =8          # from enum GcInsertUnits
    acInsertUnitsMicrons          =13         # from enum GcInsertUnits
    acInsertUnitsMiles            =3          # from enum GcInsertUnits
    acInsertUnitsMillimeters      =4          # from enum GcInsertUnits
    acInsertUnitsMils             =9          # from enum GcInsertUnits
    acInsertUnitsNanometers       =12         # from enum GcInsertUnits
    acInsertUnitsParsecs          =20         # from enum GcInsertUnits
    acInsertUnitsUnitless         =0          # from enum GcInsertUnits
    acInsertUnitsYards            =10         # from enum GcInsertUnits
    gcInsertUnitsAngstroms        =11         # from enum GcInsertUnits
    gcInsertUnitsAstronomicalUnits=18         # from enum GcInsertUnits
    gcInsertUnitsCentimeters      =5          # from enum GcInsertUnits
    gcInsertUnitsDecameters       =15         # from enum GcInsertUnits
    gcInsertUnitsDecimeters       =14         # from enum GcInsertUnits
    gcInsertUnitsFeet             =2          # from enum GcInsertUnits
    gcInsertUnitsGigameters       =17         # from enum GcInsertUnits
    gcInsertUnitsHectometers      =16         # from enum GcInsertUnits
    gcInsertUnitsInches           =1          # from enum GcInsertUnits
    gcInsertUnitsKilometers       =7          # from enum GcInsertUnits
    gcInsertUnitsLightYears       =19         # from enum GcInsertUnits
    gcInsertUnitsMeters           =6          # from enum GcInsertUnits
    gcInsertUnitsMicroinches      =8          # from enum GcInsertUnits
    gcInsertUnitsMicrons          =13         # from enum GcInsertUnits
    gcInsertUnitsMiles            =3          # from enum GcInsertUnits
    gcInsertUnitsMillimeters      =4          # from enum GcInsertUnits
    gcInsertUnitsMils             =9          # from enum GcInsertUnits
    gcInsertUnitsNanometers       =12         # from enum GcInsertUnits
    gcInsertUnitsParsecs          =20         # from enum GcInsertUnits
    gcInsertUnitsUnitless         =0          # from enum GcInsertUnits
    gcInsertUnitsYards            =10         # from enum GcInsertUnits
    acPreferenceClassic           =0          # from enum GcKeyboardAccelerator
    acPreferenceCustom            =1          # from enum GcKeyboardAccelerator
    gcPreferenceClassic           =0          # from enum GcKeyboardAccelerator
    gcPreferenceCustom            =1          # from enum GcKeyboardAccelerator
    acKeyboardEntry               =1          # from enum GcKeyboardPriority
    acKeyboardEntryExceptScripts  =2          # from enum GcKeyboardPriority
    acKeyboardRunningObjSnap      =0          # from enum GcKeyboardPriority
    gcKeyboardEntry               =1          # from enum GcKeyboardPriority
    gcKeyboardEntryExceptScripts  =2          # from enum GcKeyboardPriority
    gcKeyboardRunningObjSnap      =0          # from enum GcKeyboardPriority
    acLsAll                       =65535      # from enum GcLayerStateMask
    acLsColor                     =32         # from enum GcLayerStateMask
    acLsFrozen                    =2          # from enum GcLayerStateMask
    acLsLineType                  =64         # from enum GcLayerStateMask
    acLsLineWeight                =128        # from enum GcLayerStateMask
    acLsLocked                    =4          # from enum GcLayerStateMask
    acLsNewViewport               =16         # from enum GcLayerStateMask
    acLsNone                      =0          # from enum GcLayerStateMask
    acLsOn                        =1          # from enum GcLayerStateMask
    acLsPlot                      =8          # from enum GcLayerStateMask
    acLsPlotStyle                 =256        # from enum GcLayerStateMask
    gcLsAll                       =65535      # from enum GcLayerStateMask
    gcLsColor                     =32         # from enum GcLayerStateMask
    gcLsFrozen                    =2          # from enum GcLayerStateMask
    gcLsLineType                  =64         # from enum GcLayerStateMask
    gcLsLineWeight                =128        # from enum GcLayerStateMask
    gcLsLocked                    =4          # from enum GcLayerStateMask
    gcLsNewViewport               =16         # from enum GcLayerStateMask
    gcLsNone                      =0          # from enum GcLayerStateMask
    gcLsOn                        =1          # from enum GcLayerStateMask
    gcLsPlot                      =8          # from enum GcLayerStateMask
    gcLsPlotStyle                 =256        # from enum GcLayerStateMask
    acLineNoArrow                 =0          # from enum GcLeaderType
    acLineWithArrow               =2          # from enum GcLeaderType
    acSplineNoArrow               =1          # from enum GcLeaderType
    acSplineWithArrow             =3          # from enum GcLeaderType
    gcLineNoArrow                 =0          # from enum GcLeaderType
    gcLineWithArrow               =2          # from enum GcLeaderType
    gcSplineNoArrow               =1          # from enum GcLeaderType
    gcSplineWithArrow             =3          # from enum GcLeaderType
    acLineSpacingStyleAtLeast     =1          # from enum GcLineSpacingStyle
    acLineSpacingStyleExactly     =2          # from enum GcLineSpacingStyle
    gcLineSpacingStyleAtLeast     =1          # from enum GcLineSpacingStyle
    gcLineSpacingStyleExactly     =2          # from enum GcLineSpacingStyle
    acLnWt000                     =0          # from enum GcLineWeight
    acLnWt005                     =5          # from enum GcLineWeight
    acLnWt009                     =9          # from enum GcLineWeight
    acLnWt013                     =13         # from enum GcLineWeight
    acLnWt015                     =15         # from enum GcLineWeight
    acLnWt018                     =18         # from enum GcLineWeight
    acLnWt020                     =20         # from enum GcLineWeight
    acLnWt025                     =25         # from enum GcLineWeight
    acLnWt030                     =30         # from enum GcLineWeight
    acLnWt035                     =35         # from enum GcLineWeight
    acLnWt040                     =40         # from enum GcLineWeight
    acLnWt050                     =50         # from enum GcLineWeight
    acLnWt053                     =53         # from enum GcLineWeight
    acLnWt060                     =60         # from enum GcLineWeight
    acLnWt070                     =70         # from enum GcLineWeight
    acLnWt080                     =80         # from enum GcLineWeight
    acLnWt090                     =90         # from enum GcLineWeight
    acLnWt100                     =100        # from enum GcLineWeight
    acLnWt106                     =106        # from enum GcLineWeight
    acLnWt120                     =120        # from enum GcLineWeight
    acLnWt140                     =140        # from enum GcLineWeight
    acLnWt158                     =158        # from enum GcLineWeight
    acLnWt200                     =200        # from enum GcLineWeight
    acLnWt211                     =211        # from enum GcLineWeight
    acLnWtByBlock                 =-2         # from enum GcLineWeight
    acLnWtByLayer                 =-1         # from enum GcLineWeight
    acLnWtByLwDefault             =-3         # from enum GcLineWeight
    gcLnWt000                     =0          # from enum GcLineWeight
    gcLnWt005                     =5          # from enum GcLineWeight
    gcLnWt009                     =9          # from enum GcLineWeight
    gcLnWt013                     =13         # from enum GcLineWeight
    gcLnWt015                     =15         # from enum GcLineWeight
    gcLnWt018                     =18         # from enum GcLineWeight
    gcLnWt020                     =20         # from enum GcLineWeight
    gcLnWt025                     =25         # from enum GcLineWeight
    gcLnWt030                     =30         # from enum GcLineWeight
    gcLnWt035                     =35         # from enum GcLineWeight
    gcLnWt040                     =40         # from enum GcLineWeight
    gcLnWt050                     =50         # from enum GcLineWeight
    gcLnWt053                     =53         # from enum GcLineWeight
    gcLnWt060                     =60         # from enum GcLineWeight
    gcLnWt070                     =70         # from enum GcLineWeight
    gcLnWt080                     =80         # from enum GcLineWeight
    gcLnWt090                     =90         # from enum GcLineWeight
    gcLnWt100                     =100        # from enum GcLineWeight
    gcLnWt106                     =106        # from enum GcLineWeight
    gcLnWt120                     =120        # from enum GcLineWeight
    gcLnWt140                     =140        # from enum GcLineWeight
    gcLnWt158                     =158        # from enum GcLineWeight
    gcLnWt200                     =200        # from enum GcLineWeight
    gcLnWt211                     =211        # from enum GcLineWeight
    gcLnWtByBlock                 =-2         # from enum GcLineWeight
    gcLnWtByLayer                 =-1         # from enum GcLineWeight
    gcLnWtByLwDefault             =-3         # from enum GcLineWeight
    acAllNormal                   =5          # from enum GcLoftedSurfaceNormalType
    acEndsNormal                  =4          # from enum GcLoftedSurfaceNormalType
    acFirstNormal                 =2          # from enum GcLoftedSurfaceNormalType
    acLastNormal                  =3          # from enum GcLoftedSurfaceNormalType
    acRuled                       =0          # from enum GcLoftedSurfaceNormalType
    acSmooth                      =1          # from enum GcLoftedSurfaceNormalType
    acUseDraftAngles              =6          # from enum GcLoftedSurfaceNormalType
    gcAllNormal                   =5          # from enum GcLoftedSurfaceNormalType
    gcEndsNormal                  =4          # from enum GcLoftedSurfaceNormalType
    gcFirstNormal                 =2          # from enum GcLoftedSurfaceNormalType
    gcLastNormal                  =3          # from enum GcLoftedSurfaceNormalType
    gcRuled                       =0          # from enum GcLoftedSurfaceNormalType
    gcSmooth                      =1          # from enum GcLoftedSurfaceNormalType
    gcUseDraftAngles              =6          # from enum GcLoftedSurfaceNormalType
    acHatchLoopTypeDefault        =0          # from enum GcLoopType
    acHatchLoopTypeDerived        =4          # from enum GcLoopType
    acHatchLoopTypeExternal       =1          # from enum GcLoopType
    acHatchLoopTypePolyline       =2          # from enum GcLoopType
    acHatchLoopTypeTextbox        =8          # from enum GcLoopType
    gcHatchLoopTypeDefault        =0          # from enum GcLoopType
    gcHatchLoopTypeDerived        =4          # from enum GcLoopType
    gcHatchLoopTypeExternal       =1          # from enum GcLoopType
    gcHatchLoopTypePolyline       =2          # from enum GcLoopType
    gcHatchLoopTypeTextbox        =8          # from enum GcLoopType
    acBlockContent                =1          # from enum GcMLeaderContentType
    acMTextContent                =2          # from enum GcMLeaderContentType
    acNoneContent                 =0          # from enum GcMLeaderContentType
    gcBlockContent                =1          # from enum GcMLeaderContentType
    gcMTextContent                =2          # from enum GcMLeaderContentType
    gcNoneContent                 =0          # from enum GcMLeaderContentType
    acInVisibleLeader             =0          # from enum GcMLeaderType
    acSplineLeader                =2          # from enum GcMLeaderType
    acStraightLeader              =1          # from enum GcMLeaderType
    gcInVisibleLeader             =0          # from enum GcMLeaderType
    gcSplineLeader                =2          # from enum GcMLeaderType
    gcStraightLeader              =1          # from enum GcMLeaderType
    acBottom                      =2          # from enum GcMLineJustification
    acTop                         =0          # from enum GcMLineJustification
    acZero                        =1          # from enum GcMLineJustification
    gcBottom                      =2          # from enum GcMLineJustification
    gcTop                         =0          # from enum GcMLineJustification
    gcZero                        =1          # from enum GcMLineJustification
    acMenuFileCompiled            =0          # from enum GcMenuFileType
    acMenuFileSource              =1          # from enum GcMenuFileType
    gcMenuFileCompiled            =0          # from enum GcMenuFileType
    gcMenuFileSource              =1          # from enum GcMenuFileType
    acBaseMenuGroup               =0          # from enum GcMenuGroupType
    acPartialMenuGroup            =1          # from enum GcMenuGroupType
    gcBaseMenuGroup               =0          # from enum GcMenuGroupType
    gcPartialMenuGroup            =1          # from enum GcMenuGroupType
    acMenuItem                    =0          # from enum GcMenuItemType
    acMenuSeparator               =1          # from enum GcMenuItemType
    acMenuSubMenu                 =2          # from enum GcMenuItemType
    gcMenuItem                    =0          # from enum GcMenuItemType
    gcMenuSeparator               =1          # from enum GcMenuItemType
    gcMenuSubMenu                 =2          # from enum GcMenuItemType
    acOPQHighGraphics             =2          # from enum GcOlePlotQuality
    acOPQLowGraphics              =1          # from enum GcOlePlotQuality
    acOPQMonochrome               =0          # from enum GcOlePlotQuality
    gcOPQHighGraphics             =2          # from enum GcOlePlotQuality
    gcOPQLowGraphics              =1          # from enum GcOlePlotQuality
    gcOPQMonochrome               =0          # from enum GcOlePlotQuality
    acOQGraphics                  =2          # from enum GcOleQuality
    acOQHighPhoto                 =4          # from enum GcOleQuality
    acOQLineArt                   =0          # from enum GcOleQuality
    acOQPhoto                     =3          # from enum GcOleQuality
    acOQText                      =1          # from enum GcOleQuality
    gcOQGraphics                  =2          # from enum GcOleQuality
    gcOQHighPhoto                 =4          # from enum GcOleQuality
    gcOQLineArt                   =0          # from enum GcOleQuality
    gcOQPhoto                     =3          # from enum GcOleQuality
    gcOQText                      =1          # from enum GcOleQuality
    acOTEmbedded                  =2          # from enum GcOleType
    acOTLink                      =1          # from enum GcOleType
    acOTStatic                    =3          # from enum GcOleType
    gcOTEmbedded                  =2          # from enum GcOleType
    gcOTLink                      =1          # from enum GcOleType
    gcOTStatic                    =3          # from enum GcOleType
    acParseOptionNone             =0          # from enum GcParseOption
    acPreserveMtextFormat         =2          # from enum GcParseOption
    acSetDefaultFormat            =1          # from enum GcParseOption
    gcParseOptionNone             =0          # from enum GcParseOption
    gcPreserveMtextFormat         =2          # from enum GcParseOption
    gcSetDefaultFormat            =1          # from enum GcParseOption
    acHatchPatternTypeCustomDefined=2          # from enum GcPatternType
    acHatchPatternTypePreDefined  =1          # from enum GcPatternType
    acHatchPatternTypeUserDefined =0          # from enum GcPatternType
    gcHatchPatternTypeCustomDefined=2          # from enum GcPatternType
    gcHatchPatternTypePreDefined  =1          # from enum GcPatternType
    gcHatchPatternTypeUserDefined =0          # from enum GcPatternType
    acInches                      =0          # from enum GcPlotPaperUnits
    acMillimeters                 =1          # from enum GcPlotPaperUnits
    acPixels                      =2          # from enum GcPlotPaperUnits
    gcInches                      =0          # from enum GcPlotPaperUnits
    gcMillimeters                 =1          # from enum GcPlotPaperUnits
    gcPixels                      =2          # from enum GcPlotPaperUnits
    acPolicyLegacy                =1          # from enum GcPlotPolicy
    acPolicyNamed                 =0          # from enum GcPlotPolicy
    gcPolicyLegacy                =1          # from enum GcPlotPolicy
    gcPolicyNamed                 =0          # from enum GcPlotPolicy
    ac0degrees                    =0          # from enum GcPlotRotation
    ac180degrees                  =2          # from enum GcPlotRotation
    ac270degrees                  =3          # from enum GcPlotRotation
    ac90degrees                   =1          # from enum GcPlotRotation
    gc0degrees                    =0          # from enum GcPlotRotation
    gc180degrees                  =2          # from enum GcPlotRotation
    gc270degrees                  =3          # from enum GcPlotRotation
    gc90degrees                   =1          # from enum GcPlotRotation
    ac100_1                       =31         # from enum GcPlotScale
    ac10_1                        =30         # from enum GcPlotScale
    ac1_1                         =16         # from enum GcPlotScale
    ac1_10                        =20         # from enum GcPlotScale
    ac1_100                       =26         # from enum GcPlotScale
    ac1_128in_1ft                 =1          # from enum GcPlotScale
    ac1_16                        =21         # from enum GcPlotScale
    ac1_16in_1ft                  =4          # from enum GcPlotScale
    ac1_2                         =17         # from enum GcPlotScale
    ac1_20                        =22         # from enum GcPlotScale
    ac1_2in_1ft                   =10         # from enum GcPlotScale
    ac1_30                        =23         # from enum GcPlotScale
    ac1_32in_1ft                  =3          # from enum GcPlotScale
    ac1_4                         =18         # from enum GcPlotScale
    ac1_40                        =24         # from enum GcPlotScale
    ac1_4in_1ft                   =8          # from enum GcPlotScale
    ac1_50                        =25         # from enum GcPlotScale
    ac1_64in_1ft                  =2          # from enum GcPlotScale
    ac1_8                         =19         # from enum GcPlotScale
    ac1_8in_1ft                   =6          # from enum GcPlotScale
    ac1ft_1ft                     =15         # from enum GcPlotScale
    ac1in_1ft                     =12         # from enum GcPlotScale
    ac2_1                         =27         # from enum GcPlotScale
    ac3_16in_1ft                  =7          # from enum GcPlotScale
    ac3_32in_1ft                  =5          # from enum GcPlotScale
    ac3_4in_1ft                   =11         # from enum GcPlotScale
    ac3_8in_1ft                   =9          # from enum GcPlotScale
    ac3in_1ft                     =13         # from enum GcPlotScale
    ac4_1                         =28         # from enum GcPlotScale
    ac6in_1ft                     =14         # from enum GcPlotScale
    ac8_1                         =29         # from enum GcPlotScale
    acScaleToFit                  =0          # from enum GcPlotScale
    gc100_1                       =31         # from enum GcPlotScale
    gc10_1                        =30         # from enum GcPlotScale
    gc1_1                         =16         # from enum GcPlotScale
    gc1_10                        =20         # from enum GcPlotScale
    gc1_100                       =26         # from enum GcPlotScale
    gc1_128in_1ft                 =1          # from enum GcPlotScale
    gc1_16                        =21         # from enum GcPlotScale
    gc1_16in_1ft                  =4          # from enum GcPlotScale
    gc1_2                         =17         # from enum GcPlotScale
    gc1_20                        =22         # from enum GcPlotScale
    gc1_2in_1ft                   =10         # from enum GcPlotScale
    gc1_30                        =23         # from enum GcPlotScale
    gc1_32in_1ft                  =3          # from enum GcPlotScale
    gc1_4                         =18         # from enum GcPlotScale
    gc1_40                        =24         # from enum GcPlotScale
    gc1_4in_1ft                   =8          # from enum GcPlotScale
    gc1_50                        =25         # from enum GcPlotScale
    gc1_64in_1ft                  =2          # from enum GcPlotScale
    gc1_8                         =19         # from enum GcPlotScale
    gc1_8in_1ft                   =6          # from enum GcPlotScale
    gc1ft_1ft                     =15         # from enum GcPlotScale
    gc1in_1ft                     =12         # from enum GcPlotScale
    gc2_1                         =27         # from enum GcPlotScale
    gc3_16in_1ft                  =7          # from enum GcPlotScale
    gc3_32in_1ft                  =5          # from enum GcPlotScale
    gc3_4in_1ft                   =11         # from enum GcPlotScale
    gc3_8in_1ft                   =9          # from enum GcPlotScale
    gc3in_1ft                     =13         # from enum GcPlotScale
    gc4_1                         =28         # from enum GcPlotScale
    gc6in_1ft                     =14         # from enum GcPlotScale
    gc8_1                         =29         # from enum GcPlotScale
    gcScaleToFit                  =0          # from enum GcPlotScale
    acDisplay                     =0          # from enum GcPlotType
    acExtents                     =1          # from enum GcPlotType
    acLayout                      =5          # from enum GcPlotType
    acLimits                      =2          # from enum GcPlotType
    acView                        =3          # from enum GcPlotType
    acWindow                      =4          # from enum GcPlotType
    gcDisplay                     =0          # from enum GcPlotType
    gcExtents                     =1          # from enum GcPlotType
    gcLayout                      =5          # from enum GcPlotType
    gcLimits                      =2          # from enum GcPlotType
    gcView                        =3          # from enum GcPlotType
    gcWindow                      =4          # from enum GcPlotType
    acClassification              =5          # from enum GcPointCloudExStylizationType
    acElevation                   =4          # from enum GcPointCloudExStylizationType
    acIntensities                 =3          # from enum GcPointCloudExStylizationType
    acNormals                     =2          # from enum GcPointCloudExStylizationType
    acObject                      =1          # from enum GcPointCloudExStylizationType
    acRGB                         =0          # from enum GcPointCloudExStylizationType
    gcClassification              =5          # from enum GcPointCloudExStylizationType
    gcElevation                   =4          # from enum GcPointCloudExStylizationType
    gcIntensities                 =3          # from enum GcPointCloudExStylizationType
    gcNormals                     =2          # from enum GcPointCloudExStylizationType
    gcObject                      =1          # from enum GcPointCloudExStylizationType
    gcRGB                         =0          # from enum GcPointCloudExStylizationType
    acCubicSplinePoly             =3          # from enum GcPolylineType
    acFitCurvePoly                =1          # from enum GcPolylineType
    acQuadSplinePoly              =2          # from enum GcPolylineType
    acSimplePoly                  =0          # from enum GcPolylineType
    gcCubicSplinePoly             =3          # from enum GcPolylineType
    gcFitCurvePoly                =1          # from enum GcPolylineType
    gcQuadSplinePoly              =2          # from enum GcPolylineType
    gcSimplePoly                  =0          # from enum GcPolylineType
    acBezierSurfaceMesh           =8          # from enum GcPolymeshType
    acCubicSurfaceMesh            =6          # from enum GcPolymeshType
    acQuadSurfaceMesh             =5          # from enum GcPolymeshType
    acSimpleMesh                  =0          # from enum GcPolymeshType
    gcBezierSurfaceMesh           =8          # from enum GcPolymeshType
    gcCubicSurfaceMesh            =6          # from enum GcPolymeshType
    gcQuadSurfaceMesh             =5          # from enum GcPolymeshType
    gcSimpleMesh                  =0          # from enum GcPolymeshType
    acBlockBox                    =3          # from enum GcPredefBlockType
    acBlockCircle                 =2          # from enum GcPredefBlockType
    acBlockHexagon                =4          # from enum GcPredefBlockType
    acBlockImperial               =0          # from enum GcPredefBlockType
    acBlockSlot                   =1          # from enum GcPredefBlockType
    acBlockTriangle               =5          # from enum GcPredefBlockType
    acBlockUserDefined            =6          # from enum GcPredefBlockType
    gcBlockBox                    =3          # from enum GcPredefBlockType
    gcBlockCircle                 =2          # from enum GcPredefBlockType
    gcBlockHexagon                =4          # from enum GcPredefBlockType
    gcBlockImperial               =0          # from enum GcPredefBlockType
    gcBlockSlot                   =1          # from enum GcPredefBlockType
    gcBlockTriangle               =5          # from enum GcPredefBlockType
    gcBlockUserDefined            =6          # from enum GcPredefBlockType
    acFullPreview                 =1          # from enum GcPreviewMode
    acPartialPreview              =0          # from enum GcPreviewMode
    gcFullPreview                 =1          # from enum GcPreviewMode
    gcPartialPreview              =0          # from enum GcPreviewMode
    acPrinterAlertOnce            =1          # from enum GcPrinterSpoolAlert
    acPrinterAlwaysAlert          =0          # from enum GcPrinterSpoolAlert
    acPrinterNeverAlert           =3          # from enum GcPrinterSpoolAlert
    acPrinterNeverAlertLogOnce    =2          # from enum GcPrinterSpoolAlert
    gcPrinterAlertOnce            =1          # from enum GcPrinterSpoolAlert
    gcPrinterAlwaysAlert          =0          # from enum GcPrinterSpoolAlert
    gcPrinterNeverAlert           =3          # from enum GcPrinterSpoolAlert
    gcPrinterNeverAlertLogOnce    =2          # from enum GcPrinterSpoolAlert
    acProxyBoundingBox            =2          # from enum GcProxyImage
    acProxyNotShow                =0          # from enum GcProxyImage
    acProxyShow                   =1          # from enum GcProxyImage
    gcProxyBoundingBox            =2          # from enum GcProxyImage
    gcProxyNotShow                =0          # from enum GcProxyImage
    gcProxyShow                   =1          # from enum GcProxyImage
    acActiveViewport              =0          # from enum GcRegenType
    acAllViewports                =1          # from enum GcRegenType
    gcActiveViewport              =0          # from enum GcRegenType
    gcAllViewports                =1          # from enum GcRegenType
    acDegrees000                  =0          # from enum GcRotationAngle
    acDegrees090                  =1          # from enum GcRotationAngle
    acDegrees180                  =2          # from enum GcRotationAngle
    acDegrees270                  =3          # from enum GcRotationAngle
    acDegreesUnknown              =-1         # from enum GcRotationAngle
    gcDegrees000                  =0          # from enum GcRotationAngle
    gcDegrees090                  =1          # from enum GcRotationAngle
    gcDegrees180                  =2          # from enum GcRotationAngle
    gcDegrees270                  =3          # from enum GcRotationAngle
    gcDegreesUnknown              =-1         # from enum GcRotationAngle
    acDataRow                     =1          # from enum GcRowType
    acHeaderRow                   =4          # from enum GcRowType
    acTitleRow                    =2          # from enum GcRowType
    acUnknownRow                  =0          # from enum GcRowType
    gcDataRow                     =1          # from enum GcRowType
    gcHeaderRow                   =4          # from enum GcRowType
    gcTitleRow                    =2          # from enum GcRowType
    gcUnknownRow                  =0          # from enum GcRowType
    ac2000_Template               =14         # from enum GcSaveAsType
    ac2000_dwg                    =12         # from enum GcSaveAsType
    ac2000_dxf                    =13         # from enum GcSaveAsType
    ac2004_Template               =26         # from enum GcSaveAsType
    ac2004_dwg                    =24         # from enum GcSaveAsType
    ac2004_dxf                    =25         # from enum GcSaveAsType
    ac2007_Template               =38         # from enum GcSaveAsType
    ac2007_dwg                    =36         # from enum GcSaveAsType
    ac2007_dxf                    =37         # from enum GcSaveAsType
    ac2010_Template               =50         # from enum GcSaveAsType
    ac2010_dwg                    =48         # from enum GcSaveAsType
    ac2010_dxf                    =49         # from enum GcSaveAsType
    ac2013_Template               =62         # from enum GcSaveAsType
    ac2013_dwg                    =60         # from enum GcSaveAsType
    ac2013_dxf                    =61         # from enum GcSaveAsType
    ac2018_Template               =66         # from enum GcSaveAsType
    ac2018_dwg                    =64         # from enum GcSaveAsType
    ac2018_dxf                    =65         # from enum GcSaveAsType
    acNative                      =60         # from enum GcSaveAsType
    acR09_dxf                     =-5         # from enum GcSaveAsType
    acR10_dxf                     =-4         # from enum GcSaveAsType
    acR12_dwg                     =-3         # from enum GcSaveAsType
    acR12_dxf                     =1          # from enum GcSaveAsType
    acR13_dwg                     =4          # from enum GcSaveAsType
    acR13_dxf                     =5          # from enum GcSaveAsType
    acR14_dwg                     =8          # from enum GcSaveAsType
    acR14_dxf                     =9          # from enum GcSaveAsType
    acR15_Template                =14         # from enum GcSaveAsType
    acR15_dwg                     =12         # from enum GcSaveAsType
    acR15_dxf                     =13         # from enum GcSaveAsType
    acR18_Template                =26         # from enum GcSaveAsType
    acR18_dwg                     =24         # from enum GcSaveAsType
    acR18_dxf                     =25         # from enum GcSaveAsType
    acUnknown                     =-1         # from enum GcSaveAsType
    gc2000_Template               =14         # from enum GcSaveAsType
    gc2000_dwg                    =12         # from enum GcSaveAsType
    gc2000_dxf                    =13         # from enum GcSaveAsType
    gc2004_Template               =26         # from enum GcSaveAsType
    gc2004_dwg                    =24         # from enum GcSaveAsType
    gc2004_dxf                    =25         # from enum GcSaveAsType
    gc2007_Template               =38         # from enum GcSaveAsType
    gc2007_dwg                    =36         # from enum GcSaveAsType
    gc2007_dxf                    =37         # from enum GcSaveAsType
    gc2010_Template               =50         # from enum GcSaveAsType
    gc2010_dwg                    =48         # from enum GcSaveAsType
    gc2010_dxf                    =49         # from enum GcSaveAsType
    gc2013_Template               =62         # from enum GcSaveAsType
    gc2013_dwg                    =60         # from enum GcSaveAsType
    gc2013_dxf                    =61         # from enum GcSaveAsType
    gc2018_Template               =66         # from enum GcSaveAsType
    gc2018_dwg                    =64         # from enum GcSaveAsType
    gc2018_dxf                    =65         # from enum GcSaveAsType
    gcNative                      =60         # from enum GcSaveAsType
    gcR09_dxf                     =-5         # from enum GcSaveAsType
    gcR10_dxf                     =-4         # from enum GcSaveAsType
    gcR12_dwg                     =-3         # from enum GcSaveAsType
    gcR12_dxf                     =1          # from enum GcSaveAsType
    gcR13_dwg                     =4          # from enum GcSaveAsType
    gcR13_dxf                     =5          # from enum GcSaveAsType
    gcR14_dwg                     =8          # from enum GcSaveAsType
    gcR14_dxf                     =9          # from enum GcSaveAsType
    gcR15_Template                =14         # from enum GcSaveAsType
    gcR15_dwg                     =12         # from enum GcSaveAsType
    gcR15_dxf                     =13         # from enum GcSaveAsType
    gcR18_Template                =26         # from enum GcSaveAsType
    gcR18_dwg                     =24         # from enum GcSaveAsType
    gcR18_dxf                     =25         # from enum GcSaveAsType
    gcUnknown                     =-1         # from enum GcSaveAsType
    acSectionGenerationDestinationFile=64         # from enum GcSectionGeneration
    acSectionGenerationDestinationNewBlock=16         # from enum GcSectionGeneration
    acSectionGenerationDestinationReplaceBlock=32         # from enum GcSectionGeneration
    acSectionGenerationSourceAllObjects=1          # from enum GcSectionGeneration
    acSectionGenerationSourceSelectedObjects=2          # from enum GcSectionGeneration
    gcSectionGenerationDestinationFile=64         # from enum GcSectionGeneration
    gcSectionGenerationDestinationNewBlock=16         # from enum GcSectionGeneration
    gcSectionGenerationDestinationReplgceBlock=32         # from enum GcSectionGeneration
    gcSectionGenerationSourceAllObjects=1          # from enum GcSectionGeneration
    gcSectionGenerationSourceSelectedObjects=2          # from enum GcSectionGeneration
    acSectionStateBoundary        =2          # from enum GcSectionState
    acSectionStatePlane           =1          # from enum GcSectionState
    acSectionStateVolume          =4          # from enum GcSectionState
    gcSectionStateBoundary        =2          # from enum GcSectionState
    gcSectionStatePlane           =1          # from enum GcSectionState
    gcSectionStateVolume          =4          # from enum GcSectionState
    acSectionState2Boundary       =4          # from enum GcSectionState2
    acSectionState2Plane          =1          # from enum GcSectionState2
    acSectionState2Slice          =2          # from enum GcSectionState2
    acSectionState2Volume         =8          # from enum GcSectionState2
    gcSectionState2Boundary       =4          # from enum GcSectionState2
    gcSectionState2Plane          =1          # from enum GcSectionState2
    gcSectionState2Slice          =2          # from enum GcSectionState2
    gcSectionState2Volume         =8          # from enum GcSectionState2
    acSectionSubItemBackLine      =8          # from enum GcSectionSubItem
    acSectionSubItemBackLineBottom=32         # from enum GcSectionSubItem
    acSectionSubItemBackLineTop   =16         # from enum GcSectionSubItem
    acSectionSubItemSectionLine   =1          # from enum GcSectionSubItem
    acSectionSubItemSectionLineBottom=4          # from enum GcSectionSubItem
    acSectionSubItemSectionLineTop=2          # from enum GcSectionSubItem
    acSectionSubItemVerticalLineBottom=128        # from enum GcSectionSubItem
    acSectionSubItemVerticalLineTop=64         # from enum GcSectionSubItem
    acSectionSubItemkNone         =0          # from enum GcSectionSubItem
    gcSectionSubItemBackLine      =8          # from enum GcSectionSubItem
    gcSectionSubItemBackLineBottom=32         # from enum GcSectionSubItem
    gcSectionSubItemBackLineTop   =16         # from enum GcSectionSubItem
    gcSectionSubItemSectionLine   =1          # from enum GcSectionSubItem
    gcSectionSubItemSectionLineBottom=4          # from enum GcSectionSubItem
    gcSectionSubItemSectionLineTop=2          # from enum GcSectionSubItem
    gcSectionSubItemVerticalLineBottom=128        # from enum GcSectionSubItem
    gcSectionSubItemVerticalLineTop=64         # from enum GcSectionSubItem
    gcSectionSubItemkNone         =0          # from enum GcSectionSubItem
    acSectionType2dSection        =2          # from enum GcSectionType
    acSectionType3dSection        =4          # from enum GcSectionType
    acSectionTypeLiveSection      =1          # from enum GcSectionType
    gcSectionType2dSection        =2          # from enum GcSectionType
    gcSectionType3dSection        =4          # from enum GcSectionType
    gcSectionTypeLiveSection      =1          # from enum GcSectionType
    acDegrees15                   =1          # from enum GcSegmentAngleType
    acDegrees30                   =2          # from enum GcSegmentAngleType
    acDegrees45                   =3          # from enum GcSegmentAngleType
    acDegrees60                   =4          # from enum GcSegmentAngleType
    acDegrees90                   =6          # from enum GcSegmentAngleType
    acDegreesAny                  =0          # from enum GcSegmentAngleType
    acDegreesHorz                 =12         # from enum GcSegmentAngleType
    gcDegrees15                   =1          # from enum GcSegmentAngleType
    gcDegrees30                   =2          # from enum GcSegmentAngleType
    gcDegrees45                   =3          # from enum GcSegmentAngleType
    gcDegrees60                   =4          # from enum GcSegmentAngleType
    gcDegrees90                   =6          # from enum GcSegmentAngleType
    gcDegreesAny                  =0          # from enum GcSegmentAngleType
    gcDegreesHorz                 =12         # from enum GcSegmentAngleType
    acSelectionSetAll             =5          # from enum GcSelect
    acSelectionSetCrossing        =1          # from enum GcSelect
    acSelectionSetCrossingPolygon =7          # from enum GcSelect
    acSelectionSetFence           =2          # from enum GcSelect
    acSelectionSetLast            =4          # from enum GcSelect
    acSelectionSetPrevious        =3          # from enum GcSelect
    acSelectionSetWindow          =0          # from enum GcSelect
    acSelectionSetWindowPolygon   =6          # from enum GcSelect
    gcSelectionSetAll             =5          # from enum GcSelect
    gcSelectionSetCrossing        =1          # from enum GcSelect
    gcSelectionSetCrossingPolygon =7          # from enum GcSelect
    gcSelectionSetFence           =2          # from enum GcSelect
    gcSelectionSetLast            =4          # from enum GcSelect
    gcSelectionSetPrevious        =3          # from enum GcSelect
    gcSelectionSetWindow          =0          # from enum GcSelect
    gcSelectionSetWindowPolygon   =6          # from enum GcSelect
    acTableSelectCrossing         =2          # from enum GcSelectType
    acTableSelectWindow           =1          # from enum GcSelectType
    gcTableSelectCrossing         =2          # from enum GcSelectType
    gcTableSelectWindow           =1          # from enum GcSelectType
    acCastsAndReceivesShadows     =0          # from enum GcShadowDisplayType
    acCastsShadows                =1          # from enum GcShadowDisplayType
    acIgnoreShadows               =3          # from enum GcShadowDisplayType
    acReceivesShadows             =2          # from enum GcShadowDisplayType
    gcCastsAndReceivesShadows     =0          # from enum GcShadowDisplayType
    gcCastsShadows                =1          # from enum GcShadowDisplayType
    gcIgnoreShadows               =3          # from enum GcShadowDisplayType
    gcReceivesShadows             =2          # from enum GcShadowDisplayType
    acTableBottomToTop            =1          # from enum GcTableDirection
    acTableTopToBottom            =0          # from enum GcTableDirection
    gcTableBottomToTop            =1          # from enum GcTableDirection
    gcTableTopToBottom            =0          # from enum GcTableDirection
    acTableFlowDownOrUp           =2          # from enum GcTableFlowDirection
    acTableFlowLeft               =4          # from enum GcTableFlowDirection
    acTableFlowRight              =1          # from enum GcTableFlowDirection
    gcTableFlowDownOrUp           =2          # from enum GcTableFlowDirection
    gcTableFlowLeft               =4          # from enum GcTableFlowDirection
    gcTableFlowRight              =1          # from enum GcTableFlowDirection
    acCenterAlignment             =1          # from enum GcTextAlignmentType
    acLeftAlignment               =0          # from enum GcTextAlignmentType
    acRightAlignment              =2          # from enum GcTextAlignmentType
    gcCenterAlignment             =1          # from enum GcTextAlignmentType
    gcLeftAlignment               =0          # from enum GcTextAlignmentType
    gcRightAlignment              =2          # from enum GcTextAlignmentType
    acAlwaysRightReadingAngle     =2          # from enum GcTextAngleType
    acHorizontalAngle             =1          # from enum GcTextAngleType
    acInsertAngle                 =0          # from enum GcTextAngleType
    gcAlwaysRightReadingAngle     =2          # from enum GcTextAngleType
    gcHorizontalAngle             =1          # from enum GcTextAngleType
    gcInsertAngle                 =0          # from enum GcTextAngleType
    acAttachmentHorizontal        =0          # from enum GcTextAttachmentDirection
    acAttachmentVertical          =1          # from enum GcTextAttachmentDirection
    gcAttachmentHorizontal        =0          # from enum GcTextAttachmentDirection
    gcAttachmentVertical          =1          # from enum GcTextAttachmentDirection
    acAttachmentAllLine           =8          # from enum GcTextAttachmentType
    acAttachmentBottomLine        =7          # from enum GcTextAttachmentType
    acAttachmentBottomOfBottom    =6          # from enum GcTextAttachmentType
    acAttachmentBottomOfTop       =2          # from enum GcTextAttachmentType
    acAttachmentBottomOfTopLine   =3          # from enum GcTextAttachmentType
    acAttachmentMiddle            =4          # from enum GcTextAttachmentType
    acAttachmentMiddleOfBottom    =5          # from enum GcTextAttachmentType
    acAttachmentMiddleOfTop       =1          # from enum GcTextAttachmentType
    acAttachmentTopOfTop          =0          # from enum GcTextAttachmentType
    gcAttachmentAllLine           =8          # from enum GcTextAttachmentType
    gcAttachmentBottomLine        =7          # from enum GcTextAttachmentType
    gcAttachmentBottomOfBottom    =6          # from enum GcTextAttachmentType
    gcAttachmentBottomOfTop       =2          # from enum GcTextAttachmentType
    gcAttachmentBottomOfTopLine   =3          # from enum GcTextAttachmentType
    gcAttachmentMiddle            =4          # from enum GcTextAttachmentType
    gcAttachmentMiddleOfBottom    =5          # from enum GcTextAttachmentType
    gcAttachmentMiddleOfTop       =1          # from enum GcTextAttachmentType
    gcAttachmentTopOfTop          =0          # from enum GcTextAttachmentType
    acFontBold                    =2          # from enum GcTextFontStyle
    acFontBoldItalic              =3          # from enum GcTextFontStyle
    acFontItalic                  =1          # from enum GcTextFontStyle
    acFontRegular                 =0          # from enum GcTextFontStyle
    gcFontBold                    =2          # from enum GcTextFontStyle
    gcFontBoldItalic              =3          # from enum GcTextFontStyle
    gcFontItalic                  =1          # from enum GcTextFontStyle
    gcFontRegular                 =0          # from enum GcTextFontStyle
    acTextFlagBackward            =2          # from enum GcTextGenerationFlag
    acTextFlagUpsideDown          =4          # from enum GcTextGenerationFlag
    gcTextFlagBackward            =2          # from enum GcTextGenerationFlag
    gcTextFlagUpsideDown          =4          # from enum GcTextGenerationFlag
    acToolbarDockBottom           =1          # from enum GcToolbarDockStatus
    acToolbarDockLeft             =2          # from enum GcToolbarDockStatus
    acToolbarDockRight            =3          # from enum GcToolbarDockStatus
    acToolbarDockTop              =0          # from enum GcToolbarDockStatus
    acToolbarFloating             =4          # from enum GcToolbarDockStatus
    gcToolbarDockBottom           =1          # from enum GcToolbarDockStatus
    gcToolbarDockLeft             =2          # from enum GcToolbarDockStatus
    gcToolbarDockRight            =3          # from enum GcToolbarDockStatus
    gcToolbarDockTop              =0          # from enum GcToolbarDockStatus
    gcToolbarFloating             =4          # from enum GcToolbarDockStatus
    acToolbarButton               =0          # from enum GcToolbarItemType
    acToolbarControl              =2          # from enum GcToolbarItemType
    acToolbarFlyout               =3          # from enum GcToolbarItemType
    acToolbarSeparator            =1          # from enum GcToolbarItemType
    gcToolbarButton               =0          # from enum GcToolbarItemType
    gcToolbarControl              =2          # from enum GcToolbarItemType
    gcToolbarFlyout               =3          # from enum GcToolbarItemType
    gcToolbarSeparator            =1          # from enum GcToolbarItemType
    acApplied                     =1          # from enum GcUnderlayLayerOverrideType
    acNoOverrides                 =0          # from enum GcUnderlayLayerOverrideType
    gcApplied                     =1          # from enum GcUnderlayLayerOverrideType
    gcNoOverrides                 =0          # from enum GcUnderlayLayerOverrideType
    acArchitectural               =4          # from enum GcUnits
    acDecimal                     =2          # from enum GcUnits
    acDefaultUnits                =-1         # from enum GcUnits
    acEngineering                 =3          # from enum GcUnits
    acFractional                  =5          # from enum GcUnits
    acScientific                  =1          # from enum GcUnits
    gcArchitectural               =4          # from enum GcUnits
    gcDecimal                     =2          # from enum GcUnits
    gcDefaultUnits                =-1         # from enum GcUnits
    gcEngineering                 =3          # from enum GcUnits
    gcFractional                  =5          # from enum GcUnits
    gcScientific                  =1          # from enum GcUnits
    acBuffer                      =128        # from enum GcValueDataType
    acDate                        =8          # from enum GcValueDataType
    acDouble                      =2          # from enum GcValueDataType
    acGeneral                     =512        # from enum GcValueDataType
    acLong                        =1          # from enum GcValueDataType
    acObjectId                    =64         # from enum GcValueDataType
    acPoint2d                     =16         # from enum GcValueDataType
    acPoint3d                     =32         # from enum GcValueDataType
    acResbuf                      =256        # from enum GcValueDataType
    acString                      =4          # from enum GcValueDataType
    acUnknownDataType             =0          # from enum GcValueDataType
    gcBuffer                      =128        # from enum GcValueDataType
    gcDate                        =8          # from enum GcValueDataType
    gcDouble                      =2          # from enum GcValueDataType
    gcGeneral                     =512        # from enum GcValueDataType
    gcLong                        =1          # from enum GcValueDataType
    gcObjectId                    =64         # from enum GcValueDataType
    gcPoint2d                     =16         # from enum GcValueDataType
    gcPoint3d                     =32         # from enum GcValueDataType
    gcResbuf                      =256        # from enum GcValueDataType
    gcString                      =4          # from enum GcValueDataType
    gcUnknownDataType             =0          # from enum GcValueDataType
    acUnitAngle                   =2          # from enum GcValueUnitType
    acUnitArea                    =4          # from enum GcValueUnitType
    acUnitDistance                =1          # from enum GcValueUnitType
    acUnitVolume                  =8          # from enum GcValueUnitType
    acUnitless                    =0          # from enum GcValueUnitType
    gcUnitAngle                   =2          # from enum GcValueUnitType
    gcUnitArea                    =4          # from enum GcValueUnitType
    gcUnitDistance                =1          # from enum GcValueUnitType
    gcUnitVolume                  =8          # from enum GcValueUnitType
    gcUnitless                    =0          # from enum GcValueUnitType
    acVerticalAlignmentBaseline   =0          # from enum GcVerticalAlignment
    acVerticalAlignmentBottom     =1          # from enum GcVerticalAlignment
    acVerticalAlignmentMiddle     =2          # from enum GcVerticalAlignment
    acVerticalAlignmentTop        =3          # from enum GcVerticalAlignment
    gcVerticalAlignmentBaseline   =0          # from enum GcVerticalAlignment
    gcVerticalAlignmentBottom     =1          # from enum GcVerticalAlignment
    gcVerticalAlignmentMiddle     =2          # from enum GcVerticalAlignment
    gcVerticalAlignmentTop        =3          # from enum GcVerticalAlignment
    acAttachmentCenter            =0          # from enum GcVerticalTextAttachmentType
    acAttachmentLinedCenter       =1          # from enum GcVerticalTextAttachmentType
    gcAttachmentCenter            =0          # from enum GcVerticalTextAttachmentType
    gcAttachmentLinedCenter       =1          # from enum GcVerticalTextAttachmentType
    acVp1                         =2          # from enum GcViewportScale
    acVp10                        =11         # from enum GcViewportScale
    acVp100                       =101        # from enum GcViewportScale
    acVp100_1                     =17         # from enum GcViewportScale
    acVp10_1                      =16         # from enum GcViewportScale
    acVp11                        =12         # from enum GcViewportScale
    acVp12                        =13         # from enum GcViewportScale
    acVp13                        =14         # from enum GcViewportScale
    acVp14                        =15         # from enum GcViewportScale
    acVp15                        =16         # from enum GcViewportScale
    acVp16                        =17         # from enum GcViewportScale
    acVp17                        =18         # from enum GcViewportScale
    acVp18                        =19         # from enum GcViewportScale
    acVp19                        =20         # from enum GcViewportScale
    acVp1_1                       =2          # from enum GcViewportScale
    acVp1_10                      =6          # from enum GcViewportScale
    acVp1_100                     =12         # from enum GcViewportScale
    acVp1_128in_1ft               =18         # from enum GcViewportScale
    acVp1_16                      =7          # from enum GcViewportScale
    acVp1_16in_1ft                =21         # from enum GcViewportScale
    acVp1_2                       =3          # from enum GcViewportScale
    acVp1_20                      =8          # from enum GcViewportScale
    acVp1_2in_1ft                 =27         # from enum GcViewportScale
    acVp1_30                      =9          # from enum GcViewportScale
    acVp1_32in_1ft                =20         # from enum GcViewportScale
    acVp1_4                       =4          # from enum GcViewportScale
    acVp1_40                      =10         # from enum GcViewportScale
    acVp1_4in_1ft                 =25         # from enum GcViewportScale
    acVp1_50                      =11         # from enum GcViewportScale
    acVp1_64in_1ft                =19         # from enum GcViewportScale
    acVp1_8                       =5          # from enum GcViewportScale
    acVp1_8in_1ft                 =23         # from enum GcViewportScale
    acVp1and1_2in_1ft             =30         # from enum GcViewportScale
    acVp1ft_1ft                   =33         # from enum GcViewportScale
    acVp1in_1ft                   =29         # from enum GcViewportScale
    acVp2                         =3          # from enum GcViewportScale
    acVp20                        =21         # from enum GcViewportScale
    acVp21                        =22         # from enum GcViewportScale
    acVp22                        =23         # from enum GcViewportScale
    acVp23                        =24         # from enum GcViewportScale
    acVp24                        =25         # from enum GcViewportScale
    acVp25                        =26         # from enum GcViewportScale
    acVp26                        =27         # from enum GcViewportScale
    acVp27                        =28         # from enum GcViewportScale
    acVp28                        =29         # from enum GcViewportScale
    acVp29                        =30         # from enum GcViewportScale
    acVp2_1                       =13         # from enum GcViewportScale
    acVp3                         =4          # from enum GcViewportScale
    acVp30                        =31         # from enum GcViewportScale
    acVp31                        =32         # from enum GcViewportScale
    acVp32                        =33         # from enum GcViewportScale
    acVp33                        =34         # from enum GcViewportScale
    acVp34                        =35         # from enum GcViewportScale
    acVp35                        =36         # from enum GcViewportScale
    acVp36                        =37         # from enum GcViewportScale
    acVp37                        =38         # from enum GcViewportScale
    acVp38                        =39         # from enum GcViewportScale
    acVp39                        =40         # from enum GcViewportScale
    acVp3_16in_1ft                =24         # from enum GcViewportScale
    acVp3_32in_1ft                =22         # from enum GcViewportScale
    acVp3_4in_1ft                 =28         # from enum GcViewportScale
    acVp3_8in_1ft                 =26         # from enum GcViewportScale
    acVp3in_1ft                   =31         # from enum GcViewportScale
    acVp4                         =5          # from enum GcViewportScale
    acVp40                        =41         # from enum GcViewportScale
    acVp41                        =42         # from enum GcViewportScale
    acVp42                        =43         # from enum GcViewportScale
    acVp43                        =44         # from enum GcViewportScale
    acVp44                        =45         # from enum GcViewportScale
    acVp45                        =46         # from enum GcViewportScale
    acVp46                        =47         # from enum GcViewportScale
    acVp47                        =48         # from enum GcViewportScale
    acVp48                        =49         # from enum GcViewportScale
    acVp49                        =50         # from enum GcViewportScale
    acVp4_1                       =14         # from enum GcViewportScale
    acVp5                         =6          # from enum GcViewportScale
    acVp50                        =51         # from enum GcViewportScale
    acVp51                        =52         # from enum GcViewportScale
    acVp52                        =53         # from enum GcViewportScale
    acVp53                        =54         # from enum GcViewportScale
    acVp54                        =55         # from enum GcViewportScale
    acVp55                        =56         # from enum GcViewportScale
    acVp56                        =57         # from enum GcViewportScale
    acVp57                        =58         # from enum GcViewportScale
    acVp58                        =59         # from enum GcViewportScale
    acVp59                        =60         # from enum GcViewportScale
    acVp6                         =7          # from enum GcViewportScale
    acVp60                        =61         # from enum GcViewportScale
    acVp61                        =62         # from enum GcViewportScale
    acVp62                        =63         # from enum GcViewportScale
    acVp63                        =64         # from enum GcViewportScale
    acVp64                        =65         # from enum GcViewportScale
    acVp65                        =66         # from enum GcViewportScale
    acVp66                        =67         # from enum GcViewportScale
    acVp67                        =68         # from enum GcViewportScale
    acVp68                        =69         # from enum GcViewportScale
    acVp69                        =70         # from enum GcViewportScale
    acVp6in_1ft                   =32         # from enum GcViewportScale
    acVp7                         =8          # from enum GcViewportScale
    acVp70                        =71         # from enum GcViewportScale
    acVp71                        =72         # from enum GcViewportScale
    acVp72                        =73         # from enum GcViewportScale
    acVp73                        =74         # from enum GcViewportScale
    acVp74                        =75         # from enum GcViewportScale
    acVp75                        =76         # from enum GcViewportScale
    acVp76                        =77         # from enum GcViewportScale
    acVp77                        =78         # from enum GcViewportScale
    acVp78                        =79         # from enum GcViewportScale
    acVp79                        =80         # from enum GcViewportScale
    acVp8                         =9          # from enum GcViewportScale
    acVp80                        =81         # from enum GcViewportScale
    acVp81                        =82         # from enum GcViewportScale
    acVp82                        =83         # from enum GcViewportScale
    acVp83                        =84         # from enum GcViewportScale
    acVp84                        =85         # from enum GcViewportScale
    acVp85                        =86         # from enum GcViewportScale
    acVp86                        =87         # from enum GcViewportScale
    acVp87                        =88         # from enum GcViewportScale
    acVp88                        =89         # from enum GcViewportScale
    acVp89                        =90         # from enum GcViewportScale
    acVp8_1                       =15         # from enum GcViewportScale
    acVp9                         =10         # from enum GcViewportScale
    acVp90                        =91         # from enum GcViewportScale
    acVp91                        =92         # from enum GcViewportScale
    acVp92                        =93         # from enum GcViewportScale
    acVp93                        =94         # from enum GcViewportScale
    acVp94                        =95         # from enum GcViewportScale
    acVp95                        =96         # from enum GcViewportScale
    acVp96                        =97         # from enum GcViewportScale
    acVp97                        =98         # from enum GcViewportScale
    acVp98                        =99         # from enum GcViewportScale
    acVp99                        =100        # from enum GcViewportScale
    acVpCustomScale               =1          # from enum GcViewportScale
    acVpScaleToFit                =0          # from enum GcViewportScale
    gcVp1                         =2          # from enum GcViewportScale
    gcVp10                        =11         # from enum GcViewportScale
    gcVp100                       =101        # from enum GcViewportScale
    gcVp100_1                     =17         # from enum GcViewportScale
    gcVp10_1                      =16         # from enum GcViewportScale
    gcVp11                        =12         # from enum GcViewportScale
    gcVp12                        =13         # from enum GcViewportScale
    gcVp13                        =14         # from enum GcViewportScale
    gcVp14                        =15         # from enum GcViewportScale
    gcVp15                        =16         # from enum GcViewportScale
    gcVp16                        =17         # from enum GcViewportScale
    gcVp17                        =18         # from enum GcViewportScale
    gcVp18                        =19         # from enum GcViewportScale
    gcVp19                        =20         # from enum GcViewportScale
    gcVp1_1                       =2          # from enum GcViewportScale
    gcVp1_10                      =6          # from enum GcViewportScale
    gcVp1_100                     =12         # from enum GcViewportScale
    gcVp1_128in_1ft               =18         # from enum GcViewportScale
    gcVp1_16                      =7          # from enum GcViewportScale
    gcVp1_16in_1ft                =21         # from enum GcViewportScale
    gcVp1_2                       =3          # from enum GcViewportScale
    gcVp1_20                      =8          # from enum GcViewportScale
    gcVp1_2in_1ft                 =27         # from enum GcViewportScale
    gcVp1_30                      =9          # from enum GcViewportScale
    gcVp1_32in_1ft                =20         # from enum GcViewportScale
    gcVp1_4                       =4          # from enum GcViewportScale
    gcVp1_40                      =10         # from enum GcViewportScale
    gcVp1_4in_1ft                 =25         # from enum GcViewportScale
    gcVp1_50                      =11         # from enum GcViewportScale
    gcVp1_64in_1ft                =19         # from enum GcViewportScale
    gcVp1_8                       =5          # from enum GcViewportScale
    gcVp1_8in_1ft                 =23         # from enum GcViewportScale
    gcVp1and1_2in_1ft             =30         # from enum GcViewportScale
    gcVp1ft_1ft                   =33         # from enum GcViewportScale
    gcVp1in_1ft                   =29         # from enum GcViewportScale
    gcVp2                         =3          # from enum GcViewportScale
    gcVp20                        =21         # from enum GcViewportScale
    gcVp21                        =22         # from enum GcViewportScale
    gcVp22                        =23         # from enum GcViewportScale
    gcVp23                        =24         # from enum GcViewportScale
    gcVp24                        =25         # from enum GcViewportScale
    gcVp25                        =26         # from enum GcViewportScale
    gcVp26                        =27         # from enum GcViewportScale
    gcVp27                        =28         # from enum GcViewportScale
    gcVp28                        =29         # from enum GcViewportScale
    gcVp29                        =30         # from enum GcViewportScale
    gcVp2_1                       =13         # from enum GcViewportScale
    gcVp3                         =4          # from enum GcViewportScale
    gcVp30                        =31         # from enum GcViewportScale
    gcVp31                        =32         # from enum GcViewportScale
    gcVp32                        =33         # from enum GcViewportScale
    gcVp33                        =34         # from enum GcViewportScale
    gcVp34                        =35         # from enum GcViewportScale
    gcVp35                        =36         # from enum GcViewportScale
    gcVp36                        =37         # from enum GcViewportScale
    gcVp37                        =38         # from enum GcViewportScale
    gcVp38                        =39         # from enum GcViewportScale
    gcVp39                        =40         # from enum GcViewportScale
    gcVp3_16in_1ft                =24         # from enum GcViewportScale
    gcVp3_32in_1ft                =22         # from enum GcViewportScale
    gcVp3_4in_1ft                 =28         # from enum GcViewportScale
    gcVp3_8in_1ft                 =26         # from enum GcViewportScale
    gcVp3in_1ft                   =31         # from enum GcViewportScale
    gcVp4                         =5          # from enum GcViewportScale
    gcVp40                        =41         # from enum GcViewportScale
    gcVp41                        =42         # from enum GcViewportScale
    gcVp42                        =43         # from enum GcViewportScale
    gcVp43                        =44         # from enum GcViewportScale
    gcVp44                        =45         # from enum GcViewportScale
    gcVp45                        =46         # from enum GcViewportScale
    gcVp46                        =47         # from enum GcViewportScale
    gcVp47                        =48         # from enum GcViewportScale
    gcVp48                        =49         # from enum GcViewportScale
    gcVp49                        =50         # from enum GcViewportScale
    gcVp4_1                       =14         # from enum GcViewportScale
    gcVp5                         =6          # from enum GcViewportScale
    gcVp50                        =51         # from enum GcViewportScale
    gcVp51                        =52         # from enum GcViewportScale
    gcVp52                        =53         # from enum GcViewportScale
    gcVp53                        =54         # from enum GcViewportScale
    gcVp54                        =55         # from enum GcViewportScale
    gcVp55                        =56         # from enum GcViewportScale
    gcVp56                        =57         # from enum GcViewportScale
    gcVp57                        =58         # from enum GcViewportScale
    gcVp58                        =59         # from enum GcViewportScale
    gcVp59                        =60         # from enum GcViewportScale
    gcVp6                         =7          # from enum GcViewportScale
    gcVp60                        =61         # from enum GcViewportScale
    gcVp61                        =62         # from enum GcViewportScale
    gcVp62                        =63         # from enum GcViewportScale
    gcVp63                        =64         # from enum GcViewportScale
    gcVp64                        =65         # from enum GcViewportScale
    gcVp65                        =66         # from enum GcViewportScale
    gcVp66                        =67         # from enum GcViewportScale
    gcVp67                        =68         # from enum GcViewportScale
    gcVp68                        =69         # from enum GcViewportScale
    gcVp69                        =70         # from enum GcViewportScale
    gcVp6in_1ft                   =32         # from enum GcViewportScale
    gcVp7                         =8          # from enum GcViewportScale
    gcVp70                        =71         # from enum GcViewportScale
    gcVp71                        =72         # from enum GcViewportScale
    gcVp72                        =73         # from enum GcViewportScale
    gcVp73                        =74         # from enum GcViewportScale
    gcVp74                        =75         # from enum GcViewportScale
    gcVp75                        =76         # from enum GcViewportScale
    gcVp76                        =77         # from enum GcViewportScale
    gcVp77                        =78         # from enum GcViewportScale
    gcVp78                        =79         # from enum GcViewportScale
    gcVp79                        =80         # from enum GcViewportScale
    gcVp8                         =9          # from enum GcViewportScale
    gcVp80                        =81         # from enum GcViewportScale
    gcVp81                        =82         # from enum GcViewportScale
    gcVp82                        =83         # from enum GcViewportScale
    gcVp83                        =84         # from enum GcViewportScale
    gcVp84                        =85         # from enum GcViewportScale
    gcVp85                        =86         # from enum GcViewportScale
    gcVp86                        =87         # from enum GcViewportScale
    gcVp87                        =88         # from enum GcViewportScale
    gcVp88                        =89         # from enum GcViewportScale
    gcVp89                        =90         # from enum GcViewportScale
    gcVp8_1                       =15         # from enum GcViewportScale
    gcVp9                         =10         # from enum GcViewportScale
    gcVp90                        =91         # from enum GcViewportScale
    gcVp91                        =92         # from enum GcViewportScale
    gcVp92                        =93         # from enum GcViewportScale
    gcVp93                        =94         # from enum GcViewportScale
    gcVp94                        =95         # from enum GcViewportScale
    gcVp95                        =96         # from enum GcViewportScale
    gcVp96                        =97         # from enum GcViewportScale
    gcVp97                        =98         # from enum GcViewportScale
    gcVp98                        =99         # from enum GcViewportScale
    gcVp99                        =100        # from enum GcViewportScale
    gcVpCustomScale               =1          # from enum GcViewportScale
    gcVpScaleToFit                =0          # from enum GcViewportScale
    acViewport2Horizontal         =0          # from enum GcViewportSplitType
    acViewport2Vertical           =1          # from enum GcViewportSplitType
    acViewport3Above              =6          # from enum GcViewportSplitType
    acViewport3Below              =7          # from enum GcViewportSplitType
    acViewport3Horizontal         =4          # from enum GcViewportSplitType
    acViewport3Left               =2          # from enum GcViewportSplitType
    acViewport3Right              =3          # from enum GcViewportSplitType
    acViewport3Vertical           =5          # from enum GcViewportSplitType
    acViewport4                   =8          # from enum GcViewportSplitType
    gcViewport2Horizontal         =0          # from enum GcViewportSplitType
    gcViewport2Vertical           =1          # from enum GcViewportSplitType
    gcViewport3Above              =6          # from enum GcViewportSplitType
    gcViewport3Below              =7          # from enum GcViewportSplitType
    gcViewport3Horizontal         =4          # from enum GcViewportSplitType
    gcViewport3Left               =2          # from enum GcViewportSplitType
    gcViewport3Right              =3          # from enum GcViewportSplitType
    gcViewport3Vertical           =5          # from enum GcViewportSplitType
    gcViewport4                   =8          # from enum GcViewportSplitType
    acMax                         =3          # from enum GcWindowState
    acMin                         =2          # from enum GcWindowState
    acNorm                        =1          # from enum GcWindowState
    gcMax                         =3          # from enum GcWindowState
    gcMin                         =2          # from enum GcWindowState
    gcNorm                        =1          # from enum GcWindowState
    acIsolines                    =0          # from enum GcWireframeType
    acIsoparms                    =1          # from enum GcWireframeType
    gcIsolines                    =0          # from enum GcWireframeType
    gcIsoparms                    =1          # from enum GcWireframeType
    acDemandLoadDisabled          =0          # from enum GcXRefDemandLoad
    acDemandLoadEnabled           =1          # from enum GcXRefDemandLoad
    acDemandLoadEnabledWithCopy   =2          # from enum GcXRefDemandLoad
    gcDemandLoadDisabled          =0          # from enum GcXRefDemandLoad
    gcDemandLoadEnabled           =1          # from enum GcXRefDemandLoad
    gcDemandLoadEnabledWithCopy   =2          # from enum GcXRefDemandLoad
    acZoomScaledAbsolute          =0          # from enum GcZoomScaleType
    acZoomScaledRelative          =1          # from enum GcZoomScaleType
    acZoomScaledRelativePSpace    =2          # from enum GcZoomScaleType
    gcZoomScaledAbsolute          =0          # from enum GcZoomScaleType
    gcZoomScaledRelative          =1          # from enum GcZoomScaleType
    gcZoomScaledRelativePSpace    =2          # from enum GcZoomScaleType
    ACADSECURITYPARAMS_ALGID_RC4  =26625      # from enum AcadSecurityParamsConstants
    AcadSECURITYPARAMS_ALGID_RC4  =26625      # from enum AcadSecurityParamsConstants
    ACADSECURITYPARAMS_ADD_TIMESTAMP=32         # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_ENCRYPT_DATA=1          # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_ENCRYPT_PROPS=2          # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_SIGN_DATA  =16         # from enum AcadSecurityParamsType
    AcadSECURITYPARAMS_ADD_TIMESTAMP=32         # from enum AcadSecurityParamsType
    AcadSECURITYPARAMS_ENCRYPT_DATA=1          # from enum AcadSecurityParamsType
    AcadSECURITYPARAMS_ENCRYPT_PROPS=2          # from enum AcadSecurityParamsType
    AcadSECURITYPARAMS_SIGN_DATA  =16         # from enum AcadSecurityParamsType
    kCellOptionNone               =0          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0001
    kInheritCellFormat            =1          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0001
    acMergeCellStyleConvertDuplicatesToOverrides=4          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    acMergeCellStyleCopyDuplicates=1          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    acMergeCellStyleIgnoreNewStyles=8          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    acMergeCellStyleNone          =0          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    acMergeCellStyleOverwriteDuplicates=2          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    gcMergeCellStyleConvertDuplicatesToOverrides=4          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    gcMergeCellStyleCopyDuplicates=1          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    gcMergeCellStyleIgnoreNewStyles=8          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    gcMergeCellStyleNone          =0          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002
    gcMergeCellStyleOverwriteDuplicates=2          # from enum __MIDL___MIDL_itf_Acadi_0001_0067_0002

from win32com.client import DispatchBaseClass
class IGcPePropertyEditorColor(DispatchBaseClass):
    CLSID = IID('{30DA6F50-6158-43ED-97F7-E9B19E58BB1A}')
    coclass_clsid = IID('{11E6CDE7-1304-488C-8790-3F7AAC891BF2}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityColor": (1, 2, (3, 0), (), "EntityColor", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "EntityColor": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcad3DFace(DispatchBaseClass):
    'Acad 3dFace Interface'
    CLSID = IID('{46250F63-F4E2-4C99-A12B-0471714BC659}')
    coclass_clsid = IID('{457AD5FC-1656-4606-AB8A-EF7F0215B238}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(8, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetInvisibleEdge(self, Index=defaultNamedNotOptArg):
        'Gets the visibility status for the edge.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        arg1 = VTR8ArrayOrVal(arg1)
        return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetInvisibleEdge(self, Index=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
        'Sets the visibility of the edge.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
            , State)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
           
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VisibilityEdge1": (2, 2, (11, 0), (), "VisibilityEdge1", None),
        "VisibilityEdge2": (3, 2, (11, 0), (), "VisibilityEdge2", None),
        "VisibilityEdge3": (4, 2, (11, 0), (), "VisibilityEdge3", None),
        "VisibilityEdge4": (5, 2, (11, 0), (), "VisibilityEdge4", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VisibilityEdge1": ((2, LCID, 4, 0),()),
        "VisibilityEdge2": ((3, LCID, 4, 0),()),
        "VisibilityEdge3": ((4, LCID, 4, 0),()),
        "VisibilityEdge4": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcad3DPolyline(DispatchBaseClass):
    'Acad 3dPolyline Interface'
    CLSID = IID('{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}')
    coclass_clsid = IID('{7D7FD20A-AC1D-46BC-8C49-8EBB286F681E}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a vertex to the 3dPolyline.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the 3dPolyline.'
        return self._ApplyTypes_(3, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Closed": (6, 2, (11, 0), (), "Closed", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (7, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Type": (5, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((6, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcad3DSolid(DispatchBaseClass):
    'Acad 3dSolid Interface'
    CLSID = IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')
    coclass_clsid = IID('{C998B595-8233-4859-A51A-492A25E9EB67}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Boolean(self, Operation=defaultNamedNotOptArg, SolidObject=defaultNamedNotOptArg):
        'Performs a boolean operation against another 3dsolid.'
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
            , SolidObject)

    # Result is of type IAcad3DSolid
    def CheckInterference(self, Object=defaultNamedNotOptArg, CreateInterferenceSolid=defaultNamedNotOptArg):
        'Check interference for the 3dsolid object.'
        ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((9, 1), (11, 1)),Object
            , CreateInterferenceSolid)
        if ret is not None:
            ret = Dispatch(ret, 'CheckInterference', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # Result is of type IAcadRegion
    def SectionSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Create a section of the 3dsolid given three points that define the plane. Returns the Section as a Region object'
        ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'SectionSolid', '{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    # Result is of type IAcad3DSolid
    def SliceSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Negative=defaultNamedNotOptArg):
        'Create a slice of the 3dsolid given three points that define the plane. Returns the resulting array of 3dSolid object. '
        ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Point1
            , Point2, point3, Negative)
        if ret is not None:
            ret = Dispatch(ret, 'SliceSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Centroid": (1, 2, (12, 0), (), "Centroid", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "History": (14, 2, (11, 0), (), "History", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MomentOfInertia": (2, 2, (12, 0), (), "MomentOfInertia", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (13, 2, (12, 0), (), "Position", None),
        "PrincipalDirections": (3, 2, (12, 0), (), "PrincipalDirections", None),
        "PrincipalMoments": (4, 2, (12, 0), (), "PrincipalMoments", None),
        "ProductOfInertia": (5, 2, (12, 0), (), "ProductOfInertia", None),
        "RadiiOfGyration": (6, 2, (12, 0), (), "RadiiOfGyration", None),
        "ShowHistory": (15, 2, (11, 0), (), "ShowHistory", None),
        "SolidType": (12, 2, (8, 0), (), "SolidType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Volume": (7, 2, (5, 0), (), "Volume", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "History": ((14, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((13, LCID, 4, 0),()),
        "ShowHistory": ((15, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadApplication(DispatchBaseClass):
    'IAcadApplication �ӿ�'
    CLSID = IID('{B1872638-6D18-482F-90BA-38086D17625F}')
    coclass_clsid = IID('{E06CA8F7-4554-4993-8460-1127D2513B1E}')

    def Eval(self, Expression=defaultNamedNotOptArg):
        'Evaluates an expression in VBA'
        return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((8, 1),),Expression
            )

    # Result is of type IAcadState
    def GetAcadState(self):
        'Retrieves an AcadState object.'
        ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetAcadState', '{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}')
        return ret

    def GetInterfaceObject(self, ProgID=defaultNamedNotOptArg):
        'Accepts a program ID and attempts to load it into GstarCAD as an in-process server'
        ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1),),ProgID
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetInterfaceObject', None)
        return ret

    def InitApp(self, pApp=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((16403, 1),),pApp
            )

    def ListGrx(self):
        'Gets the currently loaded GstarCAD ARX applications'
        return self._ApplyTypes_(18, 1, (12, 0), (), 'ListGrx', None,)

    def LoadDVB(self, Name=defaultNamedNotOptArg):
        'Loads the specified GstarCAD VBA project file'
        return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def LoadGrx(self, Name=defaultNamedNotOptArg):
        'Loads the specified GstarCAD ARX application'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def LoadVBI(self, Name=defaultNamedNotOptArg):
        'Loads the specified GstarCAD VBA project file'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Quit(self):
        'Closes the drawing file and exits the GstarCAD application'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

    def RunMacro(self, MacroPath=defaultNamedNotOptArg):
        'Runs a VBA macro from the Application object'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((8, 1),),MacroPath
            )

    # The method StatusId is actually a property, but must be used as a method to correctly pass the arguments
    def StatusId(self, VportObj=defaultNamedNotOptArg):
        'Gets the current active status of the viewport'
        return self._oleobj_.InvokeTypes(17, LCID, 2, (11, 0), ((9, 1),),VportObj
            )

    def UnloadDVB(self, Name=defaultNamedNotOptArg):
        'Unloads the specified GstarCAD VBA project file'
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def UnloadGrx(self, Name=defaultNamedNotOptArg):
        'Unloads the specified GstarCAD ARX application'
        return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def UnloadVBI(self, Name=defaultNamedNotOptArg):
        'Unloads the specified GstarCAD VBA project file'
        return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Update(self):
        'Updates the object to the drawing screen'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

    def Zoom(self, Type=defaultNamedNotOptArg, vParams=defaultNamedNotOptArg):
        'Zoom '
        return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (16396, 1)),Type
            , vParams)

    def ZoomAll(self):
        'Zooms the current viewport to display the entire drawing'
        return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

    def ZoomCenter(self, Center=defaultNamedNotOptArg, Magnify=defaultNamedNotOptArg):
        'Zooms the current viewport to a specified center point and magnification'
        Center = VTR8ArrayOrVal(Center)
        return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((12, 1), (5, 1)),Center
            , Magnify)

    def ZoomExtents(self):
        'Zooms the current viewport to the drawing extents'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

    def ZoomPickWindow(self):
        'Zooms the current viewport to a window defined by points picked on the screen'
        return self._oleobj_.InvokeTypes(41, LCID, 1, (24, 0), (),)

    def ZoomPrevious(self):
        'Zooms the current viewport to its previous extents'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), (),)

    def ZoomScaled(self, scale=defaultNamedNotOptArg, ScaleType=defaultNamedNotOptArg):
        'Zooms the current viewport to given scale factor'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), ((5, 1), (3, 1)),scale
            , ScaleType)

    def ZoomWindow(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Zooms the current viewport to the area specified by two opposite corners of a rectangle'
        LowerLeft = VTR8ArrayOrVal(LowerLeft)
        UpperRight = VTR8ArrayOrVal(UpperRight)
        return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    _prop_map_get_ = {
        # Method 'ActiveDocument' returns object of type 'IAcadDocument'
        "ActiveDocument": (5, 2, (9, 0), (), "ActiveDocument", '{9368AF30-60A3-47E3-A743-60D4C21FB580}'),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (4, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Caption": (3, 2, (8, 0), (), "Caption", None),
        # Method 'Documents' returns object of type 'IAcadDocuments'
        "Documents": (32, 2, (9, 0), (), "Documents", '{31010F88-E412-4A4B-B482-B71D45D1A28A}'),
        "FullName": (6, 2, (8, 0), (), "FullName", None),
        "HWND": (44, 2, (20, 0), (), "HWND", None),
        "HWND32": (48, 2, (3, 0), (), "HWND32", None),
        "Height": (7, 2, (3, 0), (), "Height", None),
        "LocaleId": (10, 2, (3, 0), (), "LocaleId", None),
        # Method 'MenuBar' returns object of type 'IAcadMenuBar'
        "MenuBar": (29, 2, (9, 0), (), "MenuBar", '{87925C1E-ADEA-48BD-8BF1-239F9A116A81}'),
        # Method 'MenuGroups' returns object of type 'IAcadMenuGroups'
        "MenuGroups": (28, 2, (9, 0), (), "MenuGroups", '{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}'),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Path": (9, 2, (8, 0), (), "Path", None),
        # Method 'Preferences' returns object of type 'IAcadPreferences'
        "Preferences": (14, 2, (9, 0), (), "Preferences", '{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}'),
        "VBE": (27, 2, (9, 0), (), "VBE", None),
        "Version": (12, 2, (8, 0), (), "Version", None),
        "Visible": (1, 2, (11, 0), (), "Visible", None),
        "Width": (13, 2, (3, 0), (), "Width", None),
        "WindowLeft": (8, 2, (3, 0), (), "WindowLeft", None),
        "WindowState": (34, 2, (3, 0), (), "WindowState", None),
        "WindowTop": (11, 2, (3, 0), (), "WindowTop", None),
    }
    _prop_map_put_ = {
        "ActiveDocument": ((5, LCID, 4, 0),()),
        "Height": ((7, LCID, 4, 0),()),
        "Visible": ((1, LCID, 4, 0),()),
        "Width": ((13, LCID, 4, 0),()),
        "WindowLeft": ((8, LCID, 4, 0),()),
        "WindowState": ((34, LCID, 4, 0),()),
        "WindowTop": ((11, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadArc(DispatchBaseClass):
    'Acad Arc Interface'
    CLSID = IID('{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}')
    coclass_clsid = IID('{7E99A93E-D084-43FF-9311-D24A452FF851}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Offsets the arc to the given side'
        return self._ApplyTypes_(10, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadArc override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcLength": (8, 2, (5, 0), (), "ArcLength", None),
        "Area": (11, 2, (5, 0), (), "Area", None),
        "Center": (2, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndAngle": (6, 2, (5, 0), (), "EndAngle", None),
        "EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (12, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (4, 2, (5, 0), (), "Radius", None),
        "StartAngle": (5, 2, (5, 0), (), "StartAngle", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        "Thickness": (9, 2, (5, 0), (), "Thickness", None),
        "TotalAngle": (7, 2, (5, 0), (), "TotalAngle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Center": ((2, LCID, 4, 0),()),
        "EndAngle": ((6, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((12, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((4, LCID, 4, 0),()),
        "StartAngle": ((5, LCID, 4, 0),()),
        "Thickness": ((9, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadArcAlignedText(DispatchBaseClass):
    CLSID = IID('{1AAE5275-D7FE-47D0-9264-9BE6D9A4A9E4}')
    coclass_clsid = IID('{BA03B2BE-41B3-40E6-A493-7F46CCD7CC05}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcOffset": (7, 2, (5, 0), (), "ArcOffset", None),
        "Center": (2, 2, (12, 0), (), "Center", None),
        "CharSpacing": (12, 2, (5, 0), (), "CharSpacing", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndAngle": (6, 2, (5, 0), (), "EndAngle", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (10, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LeftOffset": (8, 2, (5, 0), (), "LeftOffset", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (4, 2, (5, 0), (), "Radius", None),
        "RightOffset": (9, 2, (5, 0), (), "RightOffset", None),
        "StartAngle": (5, 2, (5, 0), (), "StartAngle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WidthFactor": (11, 2, (5, 0), (), "WidthFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "contents": (1, 2, (8, 0), (), "contents", None),
    }
    _prop_map_put_ = {
        "ArcOffset": ((7, LCID, 4, 0),()),
        "Center": ((2, LCID, 4, 0),()),
        "EndAngle": ((6, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((10, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeftOffset": ((8, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((4, LCID, 4, 0),()),
        "RightOffset": ((9, LCID, 4, 0),()),
        "StartAngle": ((5, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WidthFactor": ((11, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "contents": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAssocArrayPath(DispatchBaseClass):
    'IAcadAssocArrayPath Interface'
    CLSID = IID('{F39B739A-A0E8-49C5-95B9-23F7C6496075}')
    coclass_clsid = IID('{3745EF1D-3D36-4500-8034-7526342623D3}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AlignItems": (643, 2, (11, 0), (), "AlignItems", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (601, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EndOffset": (616, 2, (5, 0), (), "EndOffset", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FillPath": (642, 2, (11, 0), (), "FillPath", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "ItemCount": (613, 2, (3, 0), (), "ItemCount", None),
        "ItemSpacing": (614, 2, (5, 0), (), "ItemSpacing", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (644, 2, (5, 0), (), "Length", None),
        "LevelCount": (611, 2, (3, 0), (), "LevelCount", None),
        "LevelSpacing": (612, 2, (5, 0), (), "LevelSpacing", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "RowCount": (608, 2, (3, 0), (), "RowCount", None),
        "RowElevation": (610, 2, (5, 0), (), "RowElevation", None),
        "RowSpacing": (609, 2, (5, 0), (), "RowSpacing", None),
        "StartOffset": (615, 2, (5, 0), (), "StartOffset", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "method": (641, 2, (3, 0), (), "method", None),
    }
    _prop_map_put_ = {
        "AlignItems": ((643, LCID, 4, 0),()),
        "BasePoint": ((601, LCID, 4, 0),()),
        "EndOffset": ((616, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FillPath": ((642, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "ItemCount": ((613, LCID, 4, 0),()),
        "ItemSpacing": ((614, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LevelCount": ((611, LCID, 4, 0),()),
        "LevelSpacing": ((612, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "RowCount": ((608, LCID, 4, 0),()),
        "RowElevation": ((610, LCID, 4, 0),()),
        "RowSpacing": ((609, LCID, 4, 0),()),
        "StartOffset": ((615, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "method": ((641, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAssocArrayPolar(DispatchBaseClass):
    'IAcadAssocArrayPolar Interface'
    CLSID = IID('{79D41413-42B3-449F-8959-DA04EE748C1B}')
    coclass_clsid = IID('{AC93B51F-F467-4928-B094-03EA43B3A681}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AngleBetweenItems": (657, 2, (5, 0), (), "AngleBetweenItems", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (601, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (641, 2, (3, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FillAngle": (658, 2, (5, 0), (), "FillAngle", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "ItemCount": (613, 2, (3, 0), (), "ItemCount", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LevelCount": (611, 2, (3, 0), (), "LevelCount", None),
        "LevelSpacing": (612, 2, (5, 0), (), "LevelSpacing", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (643, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (644, 2, (5, 0), (), "Radius", None),
        "RotateItems": (642, 2, (11, 0), (), "RotateItems", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "RowCount": (608, 2, (3, 0), (), "RowCount", None),
        "RowElevation": (610, 2, (5, 0), (), "RowElevation", None),
        "RowSpacing": (609, 2, (5, 0), (), "RowSpacing", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AngleBetweenItems": ((657, LCID, 4, 0),()),
        "BasePoint": ((601, LCID, 4, 0),()),
        "Direction": ((641, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FillAngle": ((658, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "ItemCount": ((613, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LevelCount": ((611, LCID, 4, 0),()),
        "LevelSpacing": ((612, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "Origin": ((643, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((644, LCID, 4, 0),()),
        "RotateItems": ((642, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "RowCount": ((608, LCID, 4, 0),()),
        "RowElevation": ((610, LCID, 4, 0),()),
        "RowSpacing": ((609, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAssocArrayRectangular(DispatchBaseClass):
    'IAcadAssocArrayRectangular Interface'
    CLSID = IID('{A0D37AF5-3A72-4ACC-84DC-D815BE30FF65}')
    coclass_clsid = IID('{48E1D6AC-00B6-41DF-9A4F-26F4F47A8EE6}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AxesAngle": (657, 2, (5, 0), (), "AxesAngle", None),
        "AxisDirection": (614, 2, (12, 0), (), "AxisDirection", None),
        "BasePoint": (601, 2, (12, 0), (), "BasePoint", None),
        "ColumnCount": (615, 2, (3, 0), (), "ColumnCount", None),
        "ColumnSpacing": (616, 2, (5, 0), (), "ColumnSpacing", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LevelCount": (611, 2, (3, 0), (), "LevelCount", None),
        "LevelSpacing": (612, 2, (5, 0), (), "LevelSpacing", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "RowCount": (608, 2, (3, 0), (), "RowCount", None),
        "RowElevation": (610, 2, (5, 0), (), "RowElevation", None),
        "RowSpacing": (609, 2, (5, 0), (), "RowSpacing", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AxesAngle": ((657, LCID, 4, 0),()),
        "AxisDirection": ((614, LCID, 4, 0),()),
        "BasePoint": ((601, LCID, 4, 0),()),
        "ColumnCount": ((615, LCID, 4, 0),()),
        "ColumnSpacing": ((616, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LevelCount": ((611, LCID, 4, 0),()),
        "LevelSpacing": ((612, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "RowCount": ((608, LCID, 4, 0),()),
        "RowElevation": ((610, LCID, 4, 0),()),
        "RowSpacing": ((609, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAttribute(DispatchBaseClass):
    'Acad Attribute Interface'
    CLSID = IID('{DB4711D4-33D9-408F-9E34-93A7F91248F2}')
    coclass_clsid = IID('{3BE70A3D-E2C4-42A6-989C-2F1E08C338D4}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    def UpdateMTextAttribute(self):
        'Updates multiline MText'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), (),)

    #IAcadAttribute override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'LockPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Alignment": (6, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (20, 2, (11, 0), (), "Backward", None),
        "Constant": (22, 2, (11, 0), (), "Constant", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldLength": (1, 2, (3, 0), (), "FieldLength", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (9, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (7, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (14, 2, (12, 0), (), "InsertionPoint", None),
        "Invisible": (21, 2, (11, 0), (), "Invisible", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
        "MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
        "MTextAttributeContent": (27, 2, (8, 0), (), "MTextAttributeContent", None),
        "MTextBoundaryWidth": (29, 2, (5, 0), (), "MTextBoundaryWidth", None),
        "MTextDrawingDirection": (30, 2, (3, 0), (), "MTextDrawingDirection", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Mode": (18, 2, (3, 0), (), "Mode", None),
        "Normal": (15, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (12, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Preset": (24, 2, (11, 0), (), "Preset", None),
        "PromptString": (3, 2, (8, 0), (), "PromptString", None),
        "Rotation": (10, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (11, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (5, 2, (8, 0), (), "StyleName", None),
        "TagString": (2, 2, (8, 0), (), "TagString", None),
        "TextAlignmentPoint": (13, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (16, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (4, 2, (8, 0), (), "TextString", None),
        "Thickness": (17, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UpsideDown": (19, 2, (11, 0), (), "UpsideDown", None),
        "Verify": (23, 2, (11, 0), (), "Verify", None),
        "VerticalAlignment": (8, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((6, LCID, 4, 0),()),
        "Backward": ((20, LCID, 4, 0),()),
        "Constant": ((22, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldLength": ((1, LCID, 4, 0),()),
        "Height": ((9, LCID, 4, 0),()),
        "HorizontalAlignment": ((7, LCID, 4, 0),()),
        "InsertionPoint": ((14, LCID, 4, 0),()),
        "Invisible": ((21, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LockPosition": ((25, LCID, 4, 0),()),
        "MTextAttribute": ((26, LCID, 4, 0),()),
        "MTextAttributeContent": ((27, LCID, 4, 0),()),
        "MTextBoundaryWidth": ((29, LCID, 4, 0),()),
        "MTextDrawingDirection": ((30, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Mode": ((18, LCID, 4, 0),()),
        "Normal": ((15, LCID, 4, 0),()),
        "ObliqueAngle": ((12, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Preset": ((24, LCID, 4, 0),()),
        "PromptString": ((3, LCID, 4, 0),()),
        "Rotation": ((10, LCID, 4, 0),()),
        "ScaleFactor": ((11, LCID, 4, 0),()),
        "StyleName": ((5, LCID, 4, 0),()),
        "TagString": ((2, LCID, 4, 0),()),
        "TextAlignmentPoint": ((13, LCID, 4, 0),()),
        "TextGenerationFlag": ((16, LCID, 4, 0),()),
        "TextString": ((4, LCID, 4, 0),()),
        "Thickness": ((17, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((19, LCID, 4, 0),()),
        "Verify": ((23, LCID, 4, 0),()),
        "VerticalAlignment": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAttributeReference(DispatchBaseClass):
    'Acad Attribute Reference Interface'
    CLSID = IID('{183D30F5-55EB-4409-9FC8-06B66E6578FA}')
    coclass_clsid = IID('{326662C0-F9F3-4A5B-BFE5-2431F4AEF3D8}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadAttributeReference override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'LockPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Alignment": (16, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (18, 2, (11, 0), (), "Backward", None),
        "Constant": (20, 2, (11, 0), (), "Constant", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldLength": (15, 2, (3, 0), (), "FieldLength", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (1, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (2, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (3, 2, (12, 0), (), "InsertionPoint", None),
        "Invisible": (19, 2, (11, 0), (), "Invisible", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
        "MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (4, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (5, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (6, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (7, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (8, 2, (8, 0), (), "StyleName", None),
        "TagString": (9, 2, (8, 0), (), "TagString", None),
        "TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (11, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (12, 2, (8, 0), (), "TextString", None),
        "Thickness": (13, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UpsideDown": (17, 2, (11, 0), (), "UpsideDown", None),
        "VerticalAlignment": (14, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((16, LCID, 4, 0),()),
        "Backward": ((18, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldLength": ((15, LCID, 4, 0),()),
        "Height": ((1, LCID, 4, 0),()),
        "HorizontalAlignment": ((2, LCID, 4, 0),()),
        "InsertionPoint": ((3, LCID, 4, 0),()),
        "Invisible": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MTextAttribute": ((26, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((4, LCID, 4, 0),()),
        "ObliqueAngle": ((5, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((6, LCID, 4, 0),()),
        "ScaleFactor": ((7, LCID, 4, 0),()),
        "StyleName": ((8, LCID, 4, 0),()),
        "TagString": ((9, LCID, 4, 0),()),
        "TextAlignmentPoint": ((10, LCID, 4, 0),()),
        "TextGenerationFlag": ((11, LCID, 4, 0),()),
        "TextString": ((12, LCID, 4, 0),()),
        "Thickness": ((13, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((17, LCID, 4, 0),()),
        "VerticalAlignment": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadBlock(DispatchBaseClass):
    'A block definition containing a name and a set of objects'
    CLSID = IID('{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
    coclass_clsid = IID('{60C11D4D-6F51-4A16-88CE-305C5BBC84F1}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object given four vertices'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{46250F63-F4E2-4C99-A12B-0471714BC659}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a free-form 3D mesh, given the number of points in the M and N directions and the coordinates of the points in the M and N directions'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3D polyline from the given array of coordinates'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an arc given the center, radius, start angle, and end angle of the arc'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an attribute definition at the given location with the specified properties'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{DB4711D4-33D9-408F-9E34-93A7F91248F2}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box with edges parallel to the axes of the WCS'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a circle given a center point and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{70B267B4-5885-477C-BE74-F898EE7FE9EA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone with the base on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a Custom object'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder whose base is on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{EA05C039-0D70-4713-865B-71DF0B02F6CA}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{78931DD8-09C7-44F5-9CB5-83198A8CD286}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension for an arc'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{6BE0895F-AB23-4095-8180-0BBD8E790138}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension for a circle or arc given the two points on the diameter and the length of the leader line'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension given the definition point, and leader endpoint'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension for the selected object at the given location'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{6070AA16-B13D-4B73-AA07-722C59BC09B5}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension for an arc, circle, or polyline arc segment'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an ellipse in the XY plane of the WCS given the center point, a point on the major axis, and the radius ratio'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{21565C97-8E2E-442B-8F69-C9662BC89DCA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone on the XY plane of the WCS given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder whose base is on the XY plane of the WCS, given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid given the Profile, Height, and TaperAngle'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid given the profile and an extrusion path'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a leader line, given the coordinates of the points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a lightweight polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{B32517C5-036E-4CB0-8538-66BD5FC625C4}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a line passing through two points'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{EB1641A6-750D-49EB-A681-0BAEB77E7388}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts an array of blocks'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{2EA3AB94-E461-4DDC-9B9B-894406F31256}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{59898AB2-E779-4D7C-B77C-86E9E10B2226}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{0DA73585-0488-4699-BCD2-AB0F5C91D404}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an MText entity in a rectangle defined by the insertion point and width of the bounding box'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{50FA2201-1260-4323-8C00-3EA7E36680B6}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object at a given location'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a new raster image based on an existing image file'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1A5BD135-D93B-4BFD-8027-E8277D629B46}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a ray passing through two unique points'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{D05D772F-86F6-4B10-9898-E22BF8C5F192}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a region from a set of entities. The given entities must form a closed coplanar region'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid, given the region around an axis'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a section plane'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object based on a template identified by name, at the given insertion point, scale factor, and rotation'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{38D2992F-DF38-497F-9E2B-68D813057E8D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a sphere given the center and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a quadratic or cubic NURBS (nonuniform rational B-spline) curve'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{3D506D60-0138-48DD-8166-E5512E441206}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a table at the given insertion point, given the number of rows, number of columns, row height and column width'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a single line of text'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a tolerance entity'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        Direction = VTR8ArrayOrVal(Direction)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{98D4741E-D869-4950-8B28-046B6884A084}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a torus at the given location'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object from an array of points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{4253025F-5BC5-4D78-8D65-138D2DBED220}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a wedge with edges parallel to the axes given the length, width, and height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadXline
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference (xref) to a drawing'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference (xref) from a drawing'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing file or a named block that has been defined in the current drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def Reload(self):
        'Reloads the external reference (xref)'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads the menu group or external reference'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

    #IAcadBlock override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{F8AE8A77-1909-452A-95E8-0B833451FD4B}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadBlockReference(DispatchBaseClass):
    'Acad Block Reference Interface'
    CLSID = IID('{0E143589-AFCC-44FC-8000-4C8D44F80ED6}')
    coclass_clsid = IID('{DA38CF1F-C119-4FE7-A5F9-AEC5E0C22709}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadBlocks(DispatchBaseClass):
    'The collection of all blocks in the drawing'
    CLSID = IID('{E69E9F83-F577-403C-8F69-7F5E86AB61F4}')
    coclass_clsid = IID('{25F41555-CB62-4FB5-AF5A-FD50D5B99809}')

    # Result is of type IAcadBlock
    def Add(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (8, 1)),InsertionPoint
            , Name)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlock
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadCamera(DispatchBaseClass):
    CLSID = IID('{6AB2CF34-6BE5-4E86-B1A7-BF6E8FC43E5E}')
    coclass_clsid = IID('{0C8A268F-2F40-4D78-8582-E900CD39AAB7}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BackPlane": (11, 2, (5, 0), (), "BackPlane", None),
        "Clipping": (12, 2, (8, 0), (), "Clipping", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldOfView": (5, 2, (5, 0), (), "FieldOfView", None),
        "FrameHeight": (6, 2, (5, 0), (), "FrameHeight", None),
        "FrameWidth": (7, 2, (5, 0), (), "FrameWidth", None),
        "FrontPlane": (10, 2, (5, 0), (), "FrontPlane", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "IsPlotable": (9, 2, (11, 0), (), "IsPlotable", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LensLength": (4, 2, (5, 0), (), "LensLength", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Location": (2, 2, (12, 0), (), "Location", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RollAngle": (8, 2, (5, 0), (), "RollAngle", None),
        "Target": (3, 2, (12, 0), (), "Target", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BackPlane": ((11, LCID, 4, 0),()),
        "Clipping": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldOfView": ((5, LCID, 4, 0),()),
        "FrameHeight": ((6, LCID, 4, 0),()),
        "FrameWidth": ((7, LCID, 4, 0),()),
        "FrontPlane": ((10, LCID, 4, 0),()),
        "IsPlotable": ((9, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LensLength": ((4, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Location": ((2, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RollAngle": ((8, LCID, 4, 0),()),
        "Target": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadCircle(DispatchBaseClass):
    'Acad Circle Interface'
    CLSID = IID('{70B267B4-5885-477C-BE74-F898EE7FE9EA}')
    coclass_clsid = IID('{C858EE7D-1B1F-4F2E-A61F-3F4AA8C6C1BA}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates an arc by offsetting the original arc by a specified distance'
        return self._ApplyTypes_(8, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (5, 2, (5, 0), (), "Area", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        "Circumference": (4, 2, (5, 0), (), "Circumference", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Diameter": (3, 2, (5, 0), (), "Diameter", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (6, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (2, 2, (5, 0), (), "Radius", None),
        "Thickness": (7, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Area": ((5, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Circumference": ((4, LCID, 4, 0),()),
        "Diameter": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((2, LCID, 4, 0),()),
        "Thickness": ((7, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDatabase(DispatchBaseClass):
    'IAcadDatabase �ӿ�'
    CLSID = IID('{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}')
    coclass_clsid = IID('{5E90323E-2CCF-4AE9-9B6F-6603AB611048}')

    def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
        'Duplicates multiple objects (deep cloning)'
        return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
            , Owner, IdPairs)

    def HandleToObject(self, Handle=defaultNamedNotOptArg):
        'Gets the object that corresponds to the given handle'
        ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
            )
        if ret is not None:
            ret = Dispatch(ret, 'HandleToObject', None)
        return ret

    def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
        'Gets the object that corresponds to the given object ID'
        ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((20, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject', None)
        return ret

    def ObjectIdToObject32(self, ObjectID=defaultNamedNotOptArg):
        ret = self._oleobj_.InvokeTypes(77, LCID, 1, (9, 0), ((3, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject32', None)
        return ret

    _prop_map_get_ = {
        # Method 'Blocks' returns object of type 'IAcadBlocks'
        "Blocks": (3, 2, (9, 0), (), "Blocks", '{E69E9F83-F577-403C-8F69-7F5E86AB61F4}'),
        # Method 'Dictionaries' returns object of type 'IAcadDictionaries'
        "Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}'),
        # Method 'DimStyles' returns object of type 'IAcadDimStyles'
        "DimStyles": (6, 2, (9, 0), (), "DimStyles", '{B6084632-4A92-45F4-B8F7-0A91824DADB5}'),
        "ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
        "ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
        # Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
        "FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}'),
        # Method 'Groups' returns object of type 'IAcadGroups'
        "Groups": (5, 2, (9, 0), (), "Groups", '{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}'),
        # Method 'Layers' returns object of type 'IAcadLayers'
        "Layers": (7, 2, (9, 0), (), "Layers", '{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}'),
        # Method 'Layouts' returns object of type 'IAcadLayouts'
        "Layouts": (20, 2, (9, 0), (), "Layouts", '{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}'),
        "Limits": (17, 2, (12, 0), (), "Limits", None),
        # Method 'Linetypes' returns object of type 'IAcadLineTypes'
        "Linetypes": (8, 2, (9, 0), (), "Linetypes", '{ED574116-AE18-4BB2-9628-1921C110F038}'),
        # Method 'Materials' returns object of type 'IAcadMaterials'
        "Materials": (73, 2, (9, 0), (), "Materials", '{C42C4E52-02C7-441C-B0BA-16771B542EA5}'),
        # Method 'ModelSpace' returns object of type 'IAcadModelSpace'
        "ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}'),
        # Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
        "PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}'),
        # Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
        "PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{02242489-515A-4BDD-AC0C-E125FD1BE28C}'),
        # Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
        "Preferences": (22, 2, (9, 0), (), "Preferences", '{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}'),
        # Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
        "RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{FA985110-D0CB-4E62-AB01-2FE6027C7F05}'),
        # Method 'SectionManager' returns object of type 'IAcadSectionManager'
        "SectionManager": (72, 2, (9, 0), (), "SectionManager", '{0340058F-D94E-429D-8199-A4ECFF677AC1}'),
        # Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
        "SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}'),
        # Method 'TextStyles' returns object of type 'IAcadTextStyles'
        "TextStyles": (11, 2, (9, 0), (), "TextStyles", '{F8425B37-BFCF-4290-8CA2-C718D3201829}'),
        # Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
        "UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{94DA139B-A285-4E3D-9E31-AA597FD909B0}'),
        # Method 'Viewports' returns object of type 'IAcadViewports'
        "Viewports": (14, 2, (9, 0), (), "Viewports", '{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}'),
        # Method 'Views' returns object of type 'IAcadViews'
        "Views": (13, 2, (9, 0), (), "Views", '{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}'),
    }
    _prop_map_put_ = {
        "ElevationModelSpace": ((15, LCID, 4, 0),()),
        "ElevationPaperSpace": ((16, LCID, 4, 0),()),
        "Limits": ((17, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDatabasePreferences(DispatchBaseClass):
    'This object specifies the current GstarCAD drawing specific settings'
    CLSID = IID('{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}')
    coclass_clsid = IID('{E3AC406B-D118-44DB-AC19-AA594DD65C8A}')

    _prop_map_get_ = {
        "AllowLongSymbolNames": (9, 2, (11, 0), (), "AllowLongSymbolNames", None),
        "Application": (1, 2, (9, 0), (), "Application", None),
        "ContourLinesPerSurface": (19, 2, (3, 0), (), "ContourLinesPerSurface", None),
        "DisplaySilhouette": (21, 2, (11, 0), (), "DisplaySilhouette", None),
        "LineWeightDisplay": (27, 2, (11, 0), (), "LineWeightDisplay", None),
        "Lineweight": (26, 2, (3, 0), (), "Lineweight", None),
        "MaxActiveViewports": (22, 2, (3, 0), (), "MaxActiveViewports", None),
        "OLELaunch": (8, 2, (11, 0), (), "OLELaunch", None),
        "ObjectSortByPSOutput": (16, 2, (11, 0), (), "ObjectSortByPSOutput", None),
        "ObjectSortByPlotting": (14, 2, (11, 0), (), "ObjectSortByPlotting", None),
        "ObjectSortByRedraws": (12, 2, (11, 0), (), "ObjectSortByRedraws", None),
        "ObjectSortByRegens": (13, 2, (11, 0), (), "ObjectSortByRegens", None),
        "ObjectSortBySelection": (10, 2, (11, 0), (), "ObjectSortBySelection", None),
        "ObjectSortBySnap": (11, 2, (11, 0), (), "ObjectSortBySnap", None),
        "RenderSmoothness": (23, 2, (5, 0), (), "RenderSmoothness", None),
        "SegmentPerPolyline": (24, 2, (3, 0), (), "SegmentPerPolyline", None),
        "SolidFill": (2, 2, (11, 0), (), "SolidFill", None),
        "TextFrameDisplay": (25, 2, (11, 0), (), "TextFrameDisplay", None),
        "XRefEdit": (4, 2, (11, 0), (), "XRefEdit", None),
        "XRefLayerVisibility": (5, 2, (11, 0), (), "XRefLayerVisibility", None),
    }
    _prop_map_put_ = {
        "AllowLongSymbolNames": ((9, LCID, 4, 0),()),
        "ContourLinesPerSurface": ((19, LCID, 4, 0),()),
        "DisplaySilhouette": ((21, LCID, 4, 0),()),
        "LineWeightDisplay": ((27, LCID, 4, 0),()),
        "Lineweight": ((26, LCID, 4, 0),()),
        "MaxActiveViewports": ((22, LCID, 4, 0),()),
        "OLELaunch": ((8, LCID, 4, 0),()),
        "ObjectSortByPSOutput": ((16, LCID, 4, 0),()),
        "ObjectSortByPlotting": ((14, LCID, 4, 0),()),
        "ObjectSortByRedraws": ((12, LCID, 4, 0),()),
        "ObjectSortByRegens": ((13, LCID, 4, 0),()),
        "ObjectSortBySelection": ((10, LCID, 4, 0),()),
        "ObjectSortBySnap": ((11, LCID, 4, 0),()),
        "RenderSmoothness": ((23, LCID, 4, 0),()),
        "SegmentPerPolyline": ((24, LCID, 4, 0),()),
        "SolidFill": ((2, LCID, 4, 0),()),
        "TextFrameDisplay": ((25, LCID, 4, 0),()),
        "XRefEdit": ((4, LCID, 4, 0),()),
        "XRefLayerVisibility": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDictionaries(DispatchBaseClass):
    'The collection of all dictionaries in the drawing'
    CLSID = IID('{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}')
    coclass_clsid = IID('{07244103-C9ED-4EF9-BDD4-5062C58A34D4}')

    # Result is of type IAcadDictionary
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadObject
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDictionary(DispatchBaseClass):
    'A container object for storing and retrieving objects'
    CLSID = IID('{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
    coclass_clsid = IID('{F7A4E90A-DB70-4175-833C-E9F927851832}')

    # Result is of type IAcadObject
    def AddObject(self, Keyword=defaultNamedNotOptArg, ObjectName=defaultNamedNotOptArg):
        'Adds an object to a named dictionary'
        ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (8, 1)),Keyword
            , ObjectName)
        if ret is not None:
            ret = Dispatch(ret, 'AddObject', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    # Result is of type IAcadXRecord
    def AddXRecord(self, Keyword=defaultNamedNotOptArg):
        'Creates an XRecord object in any dictionary'
        ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((8, 1),),Keyword
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddXRecord', '{153C1376-952E-4696-94A0-F57364AA6836}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetName(self, Object=defaultNamedNotOptArg):
        'Gets the name (keyword) of an object in a dictionary'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(4, LCID, 1, (8, 0), ((9, 1),),Object
            )

    # Result is of type IAcadObject
    def GetObject(self, Name=defaultNamedNotOptArg):
        'Gets the object in a dictionary, given the name (keyword) of the object'
        ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetObject', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadObject
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    # Result is of type IAcadObject
    def Remove(self, Name=defaultNamedNotOptArg):
        'Removes a named object from the dictionary'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Remove', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    def Rename(self, OldName=defaultNamedNotOptArg, NewName=defaultNamedNotOptArg):
        'Renames an item in the dictionary'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (8, 1)),OldName
            , NewName)

    def Replace(self, OldName=defaultNamedNotOptArg, pObj=defaultNamedNotOptArg):
        'Replaces an item in the dictionary by a given item'
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (9, 1)),OldName
            , pObj)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Name": ((2, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDim3PointAngular(DispatchBaseClass):
    'IAcadDim3PointAngular Interface'
    CLSID = IID('{EA05C039-0D70-4713-865B-71DF0B02F6CA}')
    coclass_clsid = IID('{348090AB-ECF8-4259-BFA3-45C7A91E30F6}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
        "AngleVertex": (45, 2, (12, 0), (), "AngleVertex", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AngleFormat": ((41, LCID, 4, 0),()),
        "AngleVertex": ((45, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1EndPoint": ((38, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2EndPoint": ((40, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrecision": ((36, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimAligned(DispatchBaseClass):
    'Acad Aligned Dimension Interface'
    CLSID = IID('{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}')
    coclass_clsid = IID('{31463489-3D64-4BC7-85B1-0A1C6F0B2ABA}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Point": (1, 2, (12, 0), (), "ExtLine1Point", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Point": (2, 2, (12, 0), (), "ExtLine2Point", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Point": ((1, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Point": ((2, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimAngular(DispatchBaseClass):
    'Acad Angular Dimension Interface'
    CLSID = IID('{78931DD8-09C7-44F5-9CB5-83198A8CD286}')
    coclass_clsid = IID('{8CBE37D9-7079-437A-A384-635D4A74A8D3}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1StartPoint": (37, 2, (12, 0), (), "ExtLine1StartPoint", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2StartPoint": (39, 2, (12, 0), (), "ExtLine2StartPoint", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AngleFormat": ((41, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1EndPoint": ((38, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1StartPoint": ((37, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2EndPoint": ((40, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2StartPoint": ((39, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrecision": ((36, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimArcLength(DispatchBaseClass):
    'IAcadDimArcLength Interface'
    CLSID = IID('{6BE0895F-AB23-4095-8180-0BBD8E790138}')
    coclass_clsid = IID('{2C817A8B-0B7D-4DE6-914A-B3A79F0665E4}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'ArcPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'CenterPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SymbolPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Leader1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Leader2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcEndParam": (76, 2, (5, 0), (), "ArcEndParam", None),
        "ArcPoint": (68, 2, (12, 0), (), "ArcPoint", None),
        "ArcStartParam": (75, 2, (5, 0), (), "ArcStartParam", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "CenterPoint": (71, 2, (12, 0), (), "CenterPoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Point": (69, 2, (12, 0), (), "ExtLine1Point", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Point": (70, 2, (12, 0), (), "ExtLine2Point", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasLeader": (77, 2, (11, 0), (), "HasLeader", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "IsPartial": (74, 2, (11, 0), (), "IsPartial", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Leader1Point": (72, 2, (12, 0), (), "Leader1Point", None),
        "Leader2Point": (73, 2, (12, 0), (), "Leader2Point", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "SymbolPosition": (67, 2, (3, 0), (), "SymbolPosition", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArcEndParam": ((76, LCID, 4, 0),()),
        "ArcPoint": ((68, LCID, 4, 0),()),
        "ArcStartParam": ((75, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "CenterPoint": ((71, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Point": ((69, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Point": ((70, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HasLeader": ((77, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "IsPartial": ((74, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Leader1Point": ((72, LCID, 4, 0),()),
        "Leader2Point": ((73, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "SymbolPosition": ((67, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimDiametric(DispatchBaseClass):
    'IAcadDimDiametric Interface'
    CLSID = IID('{CF7DAB54-2669-4E42-B5A5-297B0154CE04}')
    coclass_clsid = IID('{A4E8085A-25F0-420B-A480-30ABAEF225C8}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLength": ((42, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimOrdinate(DispatchBaseClass):
    'Acad Ordinate Dimension Interface'
    CLSID = IID('{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}')
    coclass_clsid = IID('{A6F7E215-803A-414A-A81D-6299DED292E4}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRadial(DispatchBaseClass):
    'Acad Radial Dimension Interface'
    CLSID = IID('{6070AA16-B13D-4B73-AA07-722C59BC09B5}')
    coclass_clsid = IID('{04A200E7-033D-4ECC-A9B1-806148A24763}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadBlock": ((66, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "ArrowheadType": ((63, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLineSuppress": ((26, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLength": ((42, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRadialLarge(DispatchBaseClass):
    'Acad Jogged Dimension Interface'
    CLSID = IID('{E3D1CABD-C84B-49D2-9D47-984F880D33A2}')
    coclass_clsid = IID('{599C859E-76AB-4A00-8A81-2A71506A3824}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ChordPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
        "Center": (71, 2, (12, 0), (), "Center", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        "ChordPoint": (72, 2, (12, 0), (), "ChordPoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "JogAngle": (70, 2, (5, 0), (), "JogAngle", None),
        "JogLocation": (69, 2, (12, 0), (), "JogLocation", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OverrideCenter": (68, 2, (12, 0), (), "OverrideCenter", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadBlock": ((66, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "ArrowheadType": ((63, LCID, 4, 0),()),
        "Center": ((71, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "ChordPoint": ((72, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimLineSuppress": ((26, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "JogAngle": ((70, LCID, 4, 0),()),
        "JogLocation": ((69, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "OverrideCenter": ((68, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRotated(DispatchBaseClass):
    'Acad Rotated Dimension Interface'
    CLSID = IID('{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}')
    coclass_clsid = IID('{4D49A4C2-C908-4523-9E62-89B08B19CB1C}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimStyle(DispatchBaseClass):
    'A group of dimension settings that determines the appearance of a dimension'
    CLSID = IID('{88A65332-E185-46B4-9520-CA3305361E4B}')
    coclass_clsid = IID('{67211CB3-E07C-4585-B521-CD8F5840BD8D}')

    def CopyFrom(self, StyleSource=defaultNamedNotOptArg):
        'Copies the dimension style data from a source object'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((9, 1),),StyleSource
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimStyles(DispatchBaseClass):
    'The collection of all dimension styles in the drawing'
    CLSID = IID('{B6084632-4A92-45F4-B8F7-0A91824DADB5}')
    coclass_clsid = IID('{187BD9EB-18F0-40A0-BEA1-4B53AE20A161}')

    # Result is of type IAcadDimStyle
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{88A65332-E185-46B4-9520-CA3305361E4B}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadDimStyle
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{88A65332-E185-46B4-9520-CA3305361E4B}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{88A65332-E185-46B4-9520-CA3305361E4B}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{88A65332-E185-46B4-9520-CA3305361E4B}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDimension(DispatchBaseClass):
    'IAcadDimension Interface'
    CLSID = IID('{6330AC5A-B41E-4E0F-A133-9AA84C9A4E94}')
    coclass_clsid = IID('{5D0A1B18-A59B-402A-B66B-2E10E2BDAE65}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimTxtDirection": (1573, 2, (11, 0), (), "DimTxtDirection", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimTxtDirection": ((1573, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDocument(DispatchBaseClass):
    'IAcadDocument �ӿ�'
    CLSID = IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')
    coclass_clsid = IID('{EEA4FF96-9C53-49ED-977F-D22D2B51F741}')

    def Activate(self):
        'Makes the specified drawing active'
        return self._oleobj_.InvokeTypes(57, LCID, 1, (24, 0), (),)

    def AuditInfo(self, FixErr=defaultNamedNotOptArg):
        'Evaluates the integrity of the drawing'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), ((11, 1),),FixErr
            )

    def BindDatabase(self, pDb=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(76, LCID, 1, (24, 0), ((16403, 1),),pDb
            )

    def Close(self, SaveChanges=defaultNamedOptArg, FileName=defaultNamedOptArg):
        'Closes the specified drawing, or all open drawings'
        return self._oleobj_.InvokeTypes(58, LCID, 1, (24, 0), ((12, 17), (12, 17)),SaveChanges
            , FileName)

    def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
        'Duplicates multiple objects (deep cloning)'
        return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
            , Owner, IdPairs)

    def EndUndoMark(self):
        'Marks the end of a block of operations'
        return self._oleobj_.InvokeTypes(69, LCID, 1, (24, 0), (),)

    def Export(self, FileName=defaultNamedNotOptArg, Extension=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
        'Exports the GstarCAD drawing to a WMF, SAT, EPS, DXF, or BMP format'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((8, 1), (8, 1), (9, 1)),FileName
            , Extension, SelectionSet)

    def GetVariable(self, Name=defaultNamedNotOptArg):
        'Gets the current setting of an GstarCAD system variable'
        return self._ApplyTypes_(51, 1, (12, 0), ((8, 1),), 'GetVariable', None,Name
            )

    def HandleToObject(self, Handle=defaultNamedNotOptArg):
        'Gets the object that corresponds to the given handle'
        ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
            )
        if ret is not None:
            ret = Dispatch(ret, 'HandleToObject', None)
        return ret

    def Import(self, FileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Imports a drawing file in SAT, EPS, DXF, or WMF format'
        ret = self._oleobj_.InvokeTypes(44, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),FileName
            , InsertionPoint, ScaleFactor)
        if ret is not None:
            ret = Dispatch(ret, 'Import', None)
        return ret

    def InitDoc(self, pDoc=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(75, LCID, 1, (24, 0), ((16403, 1),),pDoc
            )

    def LoadShapeFile(self, FullName=defaultNamedNotOptArg):
        'Loads a shape file (SHX)'
        return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), ((8, 1),),FullName
            )

    # Result is of type IAcadDocument
    def New(self, TemplateFileName=defaultNamedNotOptArg):
        'Creates a new document in SDI mode'
        ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), ((8, 1),),TemplateFileName
            )
        if ret is not None:
            ret = Dispatch(ret, 'New', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
        'Gets the object that corresponds to the given object ID'
        ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((20, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject', None)
        return ret

    def ObjectIdToObject32(self, ObjectID=defaultNamedNotOptArg):
        ret = self._oleobj_.InvokeTypes(77, LCID, 1, (9, 0), ((3, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject32', None)
        return ret

    # Result is of type IAcadDocument
    def Open(self, FullName=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Opens an existing drawing file (DWG) and makes it the active document'
        ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), ((8, 1), (12, 17)),FullName
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'Open', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    def PurgeAll(self):
        'Removes unused named references such as unused blocks or layers from the document'
        return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

    def Regen(self, WhichViewports=defaultNamedNotOptArg):
        'Regenerates the entire drawing and recomputes the screen coordinates and view resolution for all objects'
        return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1),),WhichViewports
            )

    def Save(self):
        'Saves the document or menu group'
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), (),)

    def SaveAs(self, FullFileName=defaultNamedNotOptArg, SaveAsType=defaultNamedOptArg, vSecurityParams=defaultNamedOptArg):
        'Saves the document or menu group to a specified file'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),FullFileName
            , SaveAsType, vSecurityParams)

    def SendCommand(self, Command=defaultNamedNotOptArg):
        'Sends a command string from a VB or VBA application to the document for processing'
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((8, 1),),Command
            )

    def SetVariable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets the value of an GstarCAD system variable'
        return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((8, 1), (12, 1)),Name
            , Value)

    def StartUndoMark(self):
        'Marks the beginning of a block of operations'
        return self._oleobj_.InvokeTypes(68, LCID, 1, (24, 0), (),)

    def Wblock(self, FileName=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
        'Writes out the given selection set as a new drawing file'
        return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), ((8, 1), (9, 1)),FileName
            , SelectionSet)

    _prop_map_get_ = {
        "Active": (56, 2, (11, 0), (), "Active", None),
        # Method 'ActiveDimStyle' returns object of type 'IAcadDimStyle'
        "ActiveDimStyle": (26, 2, (9, 0), (), "ActiveDimStyle", '{88A65332-E185-46B4-9520-CA3305361E4B}'),
        # Method 'ActiveLayer' returns object of type 'IAcadLayer'
        "ActiveLayer": (24, 2, (9, 0), (), "ActiveLayer", '{369B3B72-01B7-4C1B-85C9-4E662705D76C}'),
        # Method 'ActiveLayout' returns object of type 'IAcadLayout'
        "ActiveLayout": (62, 2, (9, 0), (), "ActiveLayout", '{F8AE8A77-1909-452A-95E8-0B833451FD4B}'),
        # Method 'ActiveLinetype' returns object of type 'IAcadLineType'
        "ActiveLinetype": (25, 2, (9, 0), (), "ActiveLinetype", '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}'),
        # Method 'ActiveMaterial' returns object of type 'IAcadMaterial'
        "ActiveMaterial": (74, 2, (9, 0), (), "ActiveMaterial", '{A7F84FAB-56C7-4437-9178-04441F062A4A}'),
        # Method 'ActivePViewport' returns object of type 'IAcadPViewport'
        "ActivePViewport": (30, 2, (9, 0), (), "ActivePViewport", '{E1366A0E-60BF-4E69-9728-D524EDF12C69}'),
        # Method 'ActiveSelectionSet' returns object of type 'IAcadSelectionSet'
        "ActiveSelectionSet": (33, 2, (9, 0), (), "ActiveSelectionSet", '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}'),
        "ActiveSpace": (31, 2, (3, 0), (), "ActiveSpace", None),
        # Method 'ActiveTextStyle' returns object of type 'IAcadTextStyle'
        "ActiveTextStyle": (27, 2, (9, 0), (), "ActiveTextStyle", '{703FE959-9B8D-4A91-A69A-844150619DF3}'),
        # Method 'ActiveUCS' returns object of type 'IAcadUCS'
        "ActiveUCS": (28, 2, (9, 0), (), "ActiveUCS", '{50B2A194-C469-4A57-B14A-BAFBA41A4039}'),
        # Method 'ActiveViewport' returns object of type 'IAcadViewport'
        "ActiveViewport": (29, 2, (9, 0), (), "ActiveViewport", '{B2B6FB46-0162-4C09-9612-65371297D78F}'),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (66, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        # Method 'Blocks' returns object of type 'IAcadBlocks'
        "Blocks": (3, 2, (9, 0), (), "Blocks", '{E69E9F83-F577-403C-8F69-7F5E86AB61F4}'),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (67, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        # Method 'Dictionaries' returns object of type 'IAcadDictionaries'
        "Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}'),
        # Method 'DimStyles' returns object of type 'IAcadDimStyles'
        "DimStyles": (6, 2, (9, 0), (), "DimStyles", '{B6084632-4A92-45F4-B8F7-0A91824DADB5}'),
        "ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
        "ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
        # Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
        "FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}'),
        "FullName": (34, 2, (8, 0), (), "FullName", None),
        # Method 'Groups' returns object of type 'IAcadGroups'
        "Groups": (5, 2, (9, 0), (), "Groups", '{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}'),
        "HWND": (64, 2, (20, 0), (), "HWND", None),
        "HWND32": (78, 2, (3, 0), (), "HWND32", None),
        "Height": (61, 2, (3, 0), (), "Height", None),
        # Method 'Layers' returns object of type 'IAcadLayers'
        "Layers": (7, 2, (9, 0), (), "Layers", '{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}'),
        # Method 'Layouts' returns object of type 'IAcadLayouts'
        "Layouts": (20, 2, (9, 0), (), "Layouts", '{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}'),
        "Limits": (17, 2, (12, 0), (), "Limits", None),
        # Method 'Linetypes' returns object of type 'IAcadLineTypes'
        "Linetypes": (8, 2, (9, 0), (), "Linetypes", '{ED574116-AE18-4BB2-9628-1921C110F038}'),
        "MSpace": (40, 2, (11, 0), (), "MSpace", None),
        # Method 'Materials' returns object of type 'IAcadMaterials'
        "Materials": (73, 2, (9, 0), (), "Materials", '{C42C4E52-02C7-441C-B0BA-16771B542EA5}'),
        # Method 'ModelSpace' returns object of type 'IAcadModelSpace'
        "ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}'),
        "Name": (35, 2, (8, 0), (), "Name", None),
        "ObjectSnapMode": (37, 2, (11, 0), (), "ObjectSnapMode", None),
        # Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
        "PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}'),
        "Path": (36, 2, (8, 0), (), "Path", None),
        # Method 'PickfirstSelectionSet' returns object of type 'IAcadSelectionSet'
        "PickfirstSelectionSet": (55, 2, (9, 0), (), "PickfirstSelectionSet", '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}'),
        # Method 'Plot' returns object of type 'IAcadPlot'
        "Plot": (23, 2, (9, 0), (), "Plot", '{E93528F4-F504-4E58-8560-C473AD8445A2}'),
        # Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
        "PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{02242489-515A-4BDD-AC0C-E125FD1BE28C}'),
        # Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
        "Preferences": (22, 2, (9, 0), (), "Preferences", '{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}'),
        "ReadOnly": (38, 2, (11, 0), (), "ReadOnly", None),
        # Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
        "RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{FA985110-D0CB-4E62-AB01-2FE6027C7F05}'),
        "Saved": (39, 2, (11, 0), (), "Saved", None),
        # Method 'SectionManager' returns object of type 'IAcadSectionManager'
        "SectionManager": (72, 2, (9, 0), (), "SectionManager", '{0340058F-D94E-429D-8199-A4ECFF677AC1}'),
        # Method 'SelectionSets' returns object of type 'IAcadSelectionSets'
        "SelectionSets": (32, 2, (9, 0), (), "SelectionSets", '{BA391ABB-844F-42A0-8F57-31EE00D0583A}'),
        # Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
        "SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}'),
        # Method 'TextStyles' returns object of type 'IAcadTextStyles'
        "TextStyles": (11, 2, (9, 0), (), "TextStyles", '{F8425B37-BFCF-4290-8CA2-C718D3201829}'),
        # Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
        "UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{94DA139B-A285-4E3D-9E31-AA597FD909B0}'),
        # Method 'Utility' returns object of type 'IAcadUtility'
        "Utility": (41, 2, (9, 0), (), "Utility", '{CE85BBED-B6CD-446F-B3F6-052465802DB6}'),
        # Method 'Viewports' returns object of type 'IAcadViewports'
        "Viewports": (14, 2, (9, 0), (), "Viewports", '{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}'),
        # Method 'Views' returns object of type 'IAcadViews'
        "Views": (13, 2, (9, 0), (), "Views", '{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}'),
        "Width": (60, 2, (3, 0), (), "Width", None),
        "WindowState": (59, 2, (3, 0), (), "WindowState", None),
        "WindowTitle": (65, 2, (8, 0), (), "WindowTitle", None),
    }
    _prop_map_put_ = {
        "ActiveDimStyle": ((26, LCID, 4, 0),()),
        "ActiveLayer": ((24, LCID, 4, 0),()),
        "ActiveLayout": ((62, LCID, 4, 0),()),
        "ActiveLinetype": ((25, LCID, 4, 0),()),
        "ActiveMaterial": ((74, LCID, 4, 0),()),
        "ActivePViewport": ((30, LCID, 4, 0),()),
        "ActiveSpace": ((31, LCID, 4, 0),()),
        "ActiveTextStyle": ((27, LCID, 4, 0),()),
        "ActiveUCS": ((28, LCID, 4, 0),()),
        "ActiveViewport": ((29, LCID, 4, 0),()),
        "ElevationModelSpace": ((15, LCID, 4, 0),()),
        "ElevationPaperSpace": ((16, LCID, 4, 0),()),
        "Height": ((61, LCID, 4, 0),()),
        "Limits": ((17, LCID, 4, 0),()),
        "MSpace": ((40, LCID, 4, 0),()),
        "ObjectSnapMode": ((37, LCID, 4, 0),()),
        "Width": ((60, LCID, 4, 0),()),
        "WindowState": ((59, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDocuments(DispatchBaseClass):
    'IAcadDocuments �ӿ�'
    CLSID = IID('{31010F88-E412-4A4B-B482-B71D45D1A28A}')
    coclass_clsid = IID('{99EF8026-26E1-43C1-92EE-F5041E7DBE8C}')

    # Result is of type IAcadDocument
    def Add(self, TemplateName=defaultNamedOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743812, LCID, 1, (9, 0), ((12, 17),),TemplateName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    def Close(self):
        'Closes the specified drawing, or all open drawings'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDocument
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    # Result is of type IAcadDocument
    def Open(self, Name=defaultNamedNotOptArg, ReadOnly=defaultNamedOptArg, Password=defaultNamedOptArg):
        'Opens an existing drawing file (DWG) and makes it the active document'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
            , ReadOnly, Password)
        if ret is not None:
            ret = Dispatch(ret, 'Open', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
        return ret

    def __getitem__(self, *args): 
        try:
            return self.__call__(*args)
        except:
            raise IndexError
        
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{9368AF30-60A3-47E3-A743-60D4C21FB580}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDwfUnderlay(DispatchBaseClass):
    CLSID = IID('{DCC7E463-86DB-4343-BD67-EB3E51A0B74F}')
    coclass_clsid = IID('{B8E04FA2-2C8E-4EAE-873C-9ECC978E1628}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Get/Set clipping boundary'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (1, 2, (3, 0), (), "Contrast", None),
        "DWFFormat": (18, 2, (8, 0), (), "DWFFormat", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (2, 2, (3, 0), (), "Fade", None),
        "File": (13, 2, (8, 0), (), "File", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "ItemName": (8, 2, (8, 0), (), "ItemName", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (3, 2, (12, 0), (), "Position", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnderlayLayerOverrideApplied": (17, 2, (3, 0), (), "UnderlayLayerOverrideApplied", None),
        "UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
        "UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AdjustForBackground": ((15, LCID, 4, 0),()),
        "ClippingEnabled": ((16, LCID, 4, 0),()),
        "Contrast": ((1, LCID, 4, 0),()),
        "DWFFormat": ((18, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((2, LCID, 4, 0),()),
        "File": ((13, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "ItemName": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Monochrome": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((3, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((12, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnderlayLayerOverrideApplied": ((17, LCID, 4, 0),()),
        "UnderlayName": ((7, LCID, 4, 0),()),
        "UnderlayVisibility": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDynamicBlockReferenceProperty(DispatchBaseClass):
    'Acad Dynamic Block Property Interface'
    CLSID = IID('{017EAE27-EA30-4151-8272-BA072063C218}')
    coclass_clsid = IID('{114CCE6C-FDBF-4DAD-9157-7078B5664B95}')

    _prop_map_get_ = {
        "AllowedValues": (5, 2, (12, 0), (), "AllowedValues", None),
        "Description": (4, 2, (8, 0), (), "Description", None),
        "PropertyName": (1, 2, (8, 0), (), "PropertyName", None),
        "ReadOnly": (2, 2, (11, 0), (), "ReadOnly", None),
        "Show": (3, 2, (11, 0), (), "Show", None),
        "UnitsType": (7, 2, (3, 0), (), "UnitsType", None),
        "Value": (6, 2, (12, 0), (), "Value", None),
    }
    _prop_map_put_ = {
        "Value": ((6, LCID, 4, 0),()),
    }
    # Default property for this class is 'Value'
    def __call__(self):
        return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadEllipse(DispatchBaseClass):
    'Acad Ellipse Interface'
    CLSID = IID('{21565C97-8E2E-442B-8F69-C9662BC89DCA}')
    coclass_clsid = IID('{7F11EDC5-9468-4C9D-8749-5720C123C13F}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'method Offset'
        return self._ApplyTypes_(15, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'MajorAxis':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (14, 2, (5, 0), (), "Area", None),
        "Center": (2, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndAngle": (8, 2, (5, 0), (), "EndAngle", None),
        "EndParameter": (10, 2, (5, 0), (), "EndParameter", None),
        "EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MajorAxis": (11, 2, (12, 0), (), "MajorAxis", None),
        "MajorRadius": (4, 2, (5, 0), (), "MajorRadius", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MinorAxis": (12, 2, (12, 0), (), "MinorAxis", None),
        "MinorRadius": (5, 2, (5, 0), (), "MinorRadius", None),
        "Normal": (13, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RadiusRatio": (6, 2, (5, 0), (), "RadiusRatio", None),
        "StartAngle": (7, 2, (5, 0), (), "StartAngle", None),
        "StartParameter": (9, 2, (5, 0), (), "StartParameter", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Center": ((2, LCID, 4, 0),()),
        "EndAngle": ((8, LCID, 4, 0),()),
        "EndParameter": ((10, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MajorAxis": ((11, LCID, 4, 0),()),
        "MajorRadius": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "MinorRadius": ((5, LCID, 4, 0),()),
        "Normal": ((13, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RadiusRatio": ((6, LCID, 4, 0),()),
        "StartAngle": ((7, LCID, 4, 0),()),
        "StartParameter": ((9, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadEntity(DispatchBaseClass):
    'IAcadEntity �ӿ�'
    CLSID = IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    coclass_clsid = IID('{3737DD60-3DB3-45AA-A592-49640E47A4CB}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadExternalReference(DispatchBaseClass):
    'IAcadExternalReference Interface'
    CLSID = IID('{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
    coclass_clsid = IID('{78F3EF1F-22D5-4BC8-A186-3CF45759F2DD}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Path": (256, 2, (8, 0), (), "Path", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "Path": ((256, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadExtrudedSurface(DispatchBaseClass):
    'IAcadExtrudedSurface Interface'
    CLSID = IID('{FB90B93B-E0A9-43E8-A5F9-B79015C81B0E}')
    coclass_clsid = IID('{3865F4CA-2245-4517-9550-0FA5E5FC28F8}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (4, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        "TaperAngle": (3, 2, (5, 0), (), "TaperAngle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TaperAngle": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadFileDependencies(DispatchBaseClass):
    'IAcadFileDependencies Interface'
    CLSID = IID('{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}')
    coclass_clsid = IID('{B1406301-FAFE-4332-B481-6DE6B109B206}')

    def CreateEntry(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg, AffectsGraphics=defaultNamedNotOptArg, noIncrement=defaultNamedNotOptArg):
        'Creates an entry.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (8, 1), (11, 1), (11, 1)),Feature
            , FullFileName, AffectsGraphics, noIncrement)

    def IndexOf(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg):
        'Returns the index of the given feature/full filename.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((8, 1), (8, 1)),Feature
            , FullFileName)

    # Result is of type IAcadFileDependency
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an item in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{0CED4F33-C673-485D-AE75-54F88D10FA57}')
        return ret

    def RemoveEntry(self, Index=defaultNamedNotOptArg, forceRemove=defaultNamedNotOptArg):
        'Removes the entry.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
            , forceRemove)

    def UpdateEntry(self, Index=defaultNamedNotOptArg):
        'Updates the entry.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1),),Index
            )

    _prop_map_get_ = {
        "Application": (1, 2, (9, 0), (), "Application", None),
        "Count": (2, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an item in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{0CED4F33-C673-485D-AE75-54F88D10FA57}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{0CED4F33-C673-485D-AE75-54F88D10FA57}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadFileDependency(DispatchBaseClass):
    'IAcadFileDependency Interface'
    CLSID = IID('{0CED4F33-C673-485D-AE75-54F88D10FA57}')
    coclass_clsid = IID('{0E92853F-5027-4A90-999C-118BC73FA6BA}')

    _prop_map_get_ = {
        "AffectsGraphics": (8, 2, (11, 0), (), "AffectsGraphics", None),
        "Feature": (6, 2, (8, 0), (), "Feature", None),
        "FileName": (2, 2, (8, 0), (), "FileName", None),
        "FileSize": (17, 2, (3, 0), (), "FileSize", None),
        "FingerprintGuid": (4, 2, (8, 0), (), "FingerprintGuid", None),
        "FoundPath": (3, 2, (8, 0), (), "FoundPath", None),
        "FullFileName": (1, 2, (8, 0), (), "FullFileName", None),
        "Index": (9, 2, (3, 0), (), "Index", None),
        "IsModified": (7, 2, (11, 0), (), "IsModified", None),
        "ReferenceCount": (18, 2, (3, 0), (), "ReferenceCount", None),
        "TimeStamp": (16, 2, (3, 0), (), "TimeStamp", None),
        "VersionGuid": (5, 2, (8, 0), (), "VersionGuid", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAcCmColor(DispatchBaseClass):
    'IAcadAcCmColor �ӿ�'
    CLSID = IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
    coclass_clsid = IID('{F7848BAF-729D-4217-A1E8-7DCE59B662FA}')

    def Delete(self):
        'Deletes the true color.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

    def SetColorBookColor(self, BookName=defaultNamedNotOptArg, ColorName=defaultNamedNotOptArg):
        'Sets the color to a color from a color book.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (8, 1)),BookName
            , ColorName)

    def SetNames(self, ColorName=defaultNamedNotOptArg, BookName=defaultNamedNotOptArg):
        'Specifies the color name and book name of the color.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1), (8, 1)),ColorName
            , BookName)

    def SetRGB(self, Red=defaultNamedNotOptArg, Green=defaultNamedNotOptArg, Blue=defaultNamedNotOptArg):
        'Specifies the RGB values of the true color.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),Red
            , Green, Blue)

    _prop_map_get_ = {
        "Blue": (7, 2, (3, 0), (), "Blue", None),
        "BookName": (3, 2, (8, 0), (), "BookName", None),
        "ColorIndex": (17, 2, (3, 0), (), "ColorIndex", None),
        "ColorMethod": (16, 2, (3, 0), (), "ColorMethod", None),
        "ColorName": (2, 2, (8, 0), (), "ColorName", None),
        "EntityColor": (1, 2, (3, 0), (), "EntityColor", None),
        "Green": (8, 2, (3, 0), (), "Green", None),
        "Red": (6, 2, (3, 0), (), "Red", None),
    }
    _prop_map_put_ = {
        "ColorIndex": ((17, LCID, 4, 0),()),
        "ColorMethod": ((16, LCID, 4, 0),()),
        "EntityColor": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadGroup(DispatchBaseClass):
    'A named SelectionSet object'
    CLSID = IID('{4B02E349-191E-4736-BDE6-52C2D458E0F5}')
    coclass_clsid = IID('{28EA8439-1EEF-4632-812B-3A8515F93530}')

    def AppendItems(self, Objects=defaultNamedNotOptArg):
        'Appends one or more entities to the specified group'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Sets the highlight status for the given object, or for all objects in a given selection set'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def RemoveItems(self, Objects=defaultNamedNotOptArg):
        'Removes specified items from the group or selection set'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Update(self):
        'Updates the object to the drawing screen'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (10, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Layer": ((3, LCID, 4, 0),()),
        "Linetype": ((4, LCID, 4, 0),()),
        "LinetypeScale": ((5, LCID, 4, 0),()),
        "Lineweight": ((9, LCID, 4, 0),()),
        "Material": ((16, LCID, 4, 0),()),
        "Name": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((8, LCID, 4, 0),()),
        "TrueColor": ((15, LCID, 4, 0),()),
        "Visible": ((6, LCID, 4, 0),()),
        "color": ((2, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadGroups(DispatchBaseClass):
    'The collection of all groups in the drawing'
    CLSID = IID('{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}')
    coclass_clsid = IID('{255F2619-FB9D-4176-BE91-D2C122537155}')

    # Result is of type IAcadGroup
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{4B02E349-191E-4736-BDE6-52C2D458E0F5}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadGroup
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{4B02E349-191E-4736-BDE6-52C2D458E0F5}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{4B02E349-191E-4736-BDE6-52C2D458E0F5}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{4B02E349-191E-4736-BDE6-52C2D458E0F5}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadHatch(DispatchBaseClass):
    'Acad Hatch Interface'
    CLSID = IID('{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}')
    coclass_clsid = IID('{EF74767C-CCF5-4725-935C-39E7BDB8D3B8}')

    def AppendInnerLoop(self, ObjectArray=defaultNamedNotOptArg):
        'Append loops to the hatch'
        ObjectArray = VTDISPArrayOrVal(ObjectArray)
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((12, 1),),ObjectArray
            )

    def AppendOuterLoop(self, ObjectArray=defaultNamedNotOptArg):
        'Append loops to the hatch'
        ObjectArray = VTDISPArrayOrVal(ObjectArray)
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((12, 1),),ObjectArray
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Evaluate(self):
        'Evaluate the hatch'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetLoopAt(self, Index=defaultNamedNotOptArg, ObjectArray=pythoncom.Missing):
        'Get loops at given index of the hatch'
        return self._ApplyTypes_(17, 1, (24, 0), ((3, 1), (16396, 2)), 'GetLoopAt', None,Index
            , ObjectArray)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def InsertLoopAt(self, Index=defaultNamedNotOptArg, LoopType=defaultNamedNotOptArg, ObjectArray=defaultNamedNotOptArg):
        'Insert loops at given index to the hatch'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1)),Index
            , LoopType, ObjectArray)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetPattern(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg):
        'Set Pattern Type and Name of the hatch'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (8, 1)),PatternType
            , PatternName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (25, 2, (5, 0), (), "Area", None),
        "AssociativeHatch": (11, 2, (11, 0), (), "AssociativeHatch", None),
        # Method 'BackgroundColor' returns object of type 'IAcadAcCmColor'
        "BackgroundColor": (27, 2, (9, 0), (), "BackgroundColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (10, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "GradientAngle": (21, 2, (5, 0), (), "GradientAngle", None),
        "GradientCentered": (22, 2, (11, 0), (), "GradientCentered", None),
        # Method 'GradientColor1' returns object of type 'IAcadAcCmColor'
        "GradientColor1": (19, 2, (9, 0), (), "GradientColor1", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        # Method 'GradientColor2' returns object of type 'IAcadAcCmColor'
        "GradientColor2": (20, 2, (9, 0), (), "GradientColor2", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "GradientName": (23, 2, (8, 0), (), "GradientName", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HatchObjectType": (24, 2, (3, 0), (), "HatchObjectType", None),
        "HatchStyle": (12, 2, (3, 0), (), "HatchStyle", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "ISOPenWidth": (8, 2, (3, 0), (), "ISOPenWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1, 2, (12, 0), (), "Normal", None),
        "NumberOfLoops": (2, 2, (3, 0), (), "NumberOfLoops", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (26, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PatternAngle": (5, 2, (5, 0), (), "PatternAngle", None),
        "PatternDouble": (9, 2, (11, 0), (), "PatternDouble", None),
        "PatternName": (4, 2, (8, 0), (), "PatternName", None),
        "PatternScale": (6, 2, (5, 0), (), "PatternScale", None),
        "PatternSpace": (7, 2, (5, 0), (), "PatternSpace", None),
        "PatternType": (3, 2, (3, 0), (), "PatternType", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AssociativeHatch": ((11, LCID, 4, 0),()),
        "BackgroundColor": ((27, LCID, 4, 0),()),
        "Elevation": ((10, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "GradientAngle": ((21, LCID, 4, 0),()),
        "GradientCentered": ((22, LCID, 4, 0),()),
        "GradientColor1": ((19, LCID, 4, 0),()),
        "GradientColor2": ((20, LCID, 4, 0),()),
        "GradientName": ((23, LCID, 4, 0),()),
        "HatchObjectType": ((24, LCID, 4, 0),()),
        "HatchStyle": ((12, LCID, 4, 0),()),
        "ISOPenWidth": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1, LCID, 4, 0),()),
        "Origin": ((26, LCID, 4, 0),()),
        "PatternAngle": ((5, LCID, 4, 0),()),
        "PatternDouble": ((9, LCID, 4, 0),()),
        "PatternScale": ((6, LCID, 4, 0),()),
        "PatternSpace": ((7, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHelix(DispatchBaseClass):
    'IAcadSpring Interface'
    CLSID = IID('{4A201B9C-6555-45ED-A3B5-9342F2F28D71}')
    coclass_clsid = IID('{E817F271-E3BF-44E9-A481-C860D9D8CD13}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BaseRadius": (6, 2, (5, 0), (), "BaseRadius", None),
        "Constrain": (2, 2, (3, 0), (), "Constrain", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (1, 2, (12, 0), (), "Position", None),
        "TopRadius": (7, 2, (5, 0), (), "TopRadius", None),
        "TotalLength": (10, 2, (5, 0), (), "TotalLength", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "TurnHeight": (5, 2, (5, 0), (), "TurnHeight", None),
        "TurnSlope": (9, 2, (5, 0), (), "TurnSlope", None),
        "Turns": (4, 2, (5, 0), (), "Turns", None),
        "Twist": (8, 2, (3, 0), (), "Twist", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BaseRadius": ((6, LCID, 4, 0),()),
        "Constrain": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((1, LCID, 4, 0),()),
        "TopRadius": ((7, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "TurnHeight": ((5, LCID, 4, 0),()),
        "Turns": ((4, LCID, 4, 0),()),
        "Twist": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHyperlink(DispatchBaseClass):
    'A URL and URL description'
    CLSID = IID('{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')
    coclass_clsid = IID('{B4F3F703-2BC5-4074-BD6E-24E5830BBD0A}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (3, 2, (9, 0), (), "Application", None),
        "URL": (1, 2, (8, 0), (), "URL", None),
        "URLDescription": (2, 2, (8, 0), (), "URLDescription", None),
        "URLNamedLocation": (5, 2, (8, 0), (), "URLNamedLocation", None),
    }
    _prop_map_put_ = {
        "URL": ((1, LCID, 4, 0),()),
        "URLDescription": ((2, LCID, 4, 0),()),
        "URLNamedLocation": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHyperlinks(DispatchBaseClass):
    'The collection of all hyperlinks for a given entity'
    CLSID = IID('{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}')
    coclass_clsid = IID('{D1131D16-F4F4-4F50-8AEB-A6ECA83141C0}')

    # Result is of type IAcadHyperlink
    def Add(self, Name=defaultNamedNotOptArg, Description=defaultNamedOptArg, NamedLocation=defaultNamedOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
            , Description, NamedLocation)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')
        return ret

    # Result is of type IAcadHyperlink
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')
        return ret

    _prop_map_get_ = {
        "Application": (2, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadIdPair(DispatchBaseClass):
    'A special object for use with the CopyObjects method that contains the object IDs of both the source and destination objects'
    CLSID = IID('{1D3AF325-66DF-4CF6-B19F-1DCF053D75F9}')
    coclass_clsid = IID('{CDF39880-2237-4180-A675-1601037F78ED}')

    _prop_map_get_ = {
        "Application": (6, 2, (9, 0), (), "Application", None),
        "IsCloned": (1, 2, (11, 0), (), "IsCloned", None),
        "IsOwnerXlated": (2, 2, (11, 0), (), "IsOwnerXlated", None),
        "IsPrimary": (3, 2, (11, 0), (), "IsPrimary", None),
        "Key32": (7, 2, (3, 0), (), "Key32", None),
        "Value": (5, 2, (20, 0), (), "Value", None),
        "Value32": (8, 2, (3, 0), (), "Value32", None),
        "key": (4, 2, (20, 0), (), "key", None),
    }
    _prop_map_put_ = {
    }
    # Default property for this class is 'Value'
    def __call__(self):
        return self._ApplyTypes_(*(5, 2, (20, 0), (), "Value", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLWPolyline(DispatchBaseClass):
    'Acad Lightweight Polyline Interface'
    CLSID = IID('{B32517C5-036E-4CB0-8538-66BD5FC625C4}')
    coclass_clsid = IID('{508C6E95-0B42-4E0B-9A4A-75CF28263857}')

    def AddVertex(self, Index=defaultNamedNotOptArg, vertex=defaultNamedNotOptArg):
        'Adds a vertex to the lightweight polyline'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , vertex)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the lightweight polyline, and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetBulge(self, Index=defaultNamedNotOptArg):
        'Returns the vertex bulge of the lightweight polyline'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=pythoncom.Missing):
        'Returns segment width of the lightweight polyline'
        return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetWidth', None,Index
            , StartWidth, EndWidth)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new entity object by offsetting the lightweight polyline by a given distance'
        return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
        'Sets the vertex bulge of the lightweight polyline'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , bulge)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
        'Sets the segment width of the lightweight polyline'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1)),Index
            , StartWidth, EndWidth)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (13, 2, (5, 0), (), "Area", None),
        "Closed": (15, 2, (11, 0), (), "Closed", None),
        "ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (12, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (17, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeGeneration": (16, 2, (11, 0), (), "LinetypeGeneration", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((15, LCID, 4, 0),()),
        "ConstantWidth": ((10, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "Elevation": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeGeneration": ((16, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayer(DispatchBaseClass):
    'A logical grouping of data, similar to transparent acetate overlays on a drawing'
    CLSID = IID('{369B3B72-01B7-4C1B-85C9-4E662705D76C}')
    coclass_clsid = IID('{C358F0A6-CF01-4B79-BC20-3744A6CE61CE}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Description": (12, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Freeze": (2, 2, (11, 0), (), "Freeze", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "LayerOn": (3, 2, (11, 0), (), "LayerOn", None),
        "Linetype": (4, 2, (8, 0), (), "Linetype", None),
        "Lineweight": (10, 2, (3, 0), (), "Lineweight", None),
        "Lock": (5, 2, (11, 0), (), "Lock", None),
        "Material": (14, 2, (8, 0), (), "Material", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (9, 2, (8, 0), (), "PlotStyleName", None),
        "Plottable": (7, 2, (11, 0), (), "Plottable", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (11, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Used": (13, 2, (11, 0), (), "Used", None),
        "ViewportDefault": (8, 2, (11, 0), (), "ViewportDefault", None),
        "color": (1, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Description": ((12, LCID, 4, 0),()),
        "Freeze": ((2, LCID, 4, 0),()),
        "LayerOn": ((3, LCID, 4, 0),()),
        "Linetype": ((4, LCID, 4, 0),()),
        "Lineweight": ((10, LCID, 4, 0),()),
        "Lock": ((5, LCID, 4, 0),()),
        "Material": ((14, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((9, LCID, 4, 0),()),
        "Plottable": ((7, LCID, 4, 0),()),
        "TrueColor": ((11, LCID, 4, 0),()),
        "ViewportDefault": ((8, LCID, 4, 0),()),
        "color": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayerStateManager(DispatchBaseClass):
    'IAcadLayerStateManager Interface'
    CLSID = IID('{FC6D298C-564D-4ACA-850F-3ADF1C01B6D9}')
    coclass_clsid = IID('{B120B2EF-DD09-4935-94FE-CD57754907B1}')

    def Delete(self, bsName=defaultNamedNotOptArg):
        'Deletes the specified layers state.'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),bsName
            )

    def Export(self, bsName=defaultNamedNotOptArg, bsFilename=defaultNamedNotOptArg):
        'Exports the specified layer state to the specified file.'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
            , bsFilename)

    def Import(self, bsFilename=defaultNamedNotOptArg):
        'Imports all layer states from the specified file.'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1),),bsFilename
            )

    # The method Mask is actually a property, but must be used as a method to correctly pass the arguments
    def Mask(self, bsName=defaultNamedNotOptArg):
        'Sets the mask used for restoring the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743809, LCID, 2, (3, 0), ((8, 1),),bsName
            )

    def Rename(self, bsName=defaultNamedNotOptArg, bsNewName=defaultNamedNotOptArg):
        'Renames the specified layers state.'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
            , bsNewName)

    def Restore(self, bsName=defaultNamedNotOptArg):
        'Restores the layers to the specified state as per the layer state mask.'
        return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1),),bsName
            )

    def Save(self, bsName=defaultNamedNotOptArg, eMask=defaultNamedNotOptArg):
        'Saves the attribute mask and the state of all layers into the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (3, 1)),bsName
            , eMask)

    def SetDatabase(self, iHostDb=defaultNamedNotOptArg):
        'Sets the working database for the layer state manager.'
        return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (24, 0), ((9, 1),),iHostDb
            )

    # The method SetMask is actually a property, but must be used as a method to correctly pass the arguments
    def SetMask(self, bsName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Sets the mask used for restoring the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743809, LCID, 4, (24, 0), ((8, 1), (3, 1)),bsName
            , arg1)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayers(DispatchBaseClass):
    'The collection of all layers in the drawing'
    CLSID = IID('{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}')
    coclass_clsid = IID('{60E6BD18-62F7-4B1A-B701-CEF35537CB59}')

    # Result is of type IAcadLayer
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{369B3B72-01B7-4C1B-85C9-4E662705D76C}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GenerateUsageData(self):
        'Generates layer usage data. See also Used property of Layer.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLayer
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{369B3B72-01B7-4C1B-85C9-4E662705D76C}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{369B3B72-01B7-4C1B-85C9-4E662705D76C}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{369B3B72-01B7-4C1B-85C9-4E662705D76C}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLayout(DispatchBaseClass):
    'The plot settings and visual properties of a model space or paper space block'
    CLSID = IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')
    coclass_clsid = IID('{12664C95-EEAD-4337-A88A-971953571812}')

    def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
        'Copies the settings from the given plotconfiguration'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetCanonicalMediaNames(self):
        'Gets all available canonical media names for the specified plot device.'
        return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

    def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
        'Gets the custom scale for a layout or plot configuration'
        return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
            , Denominator)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
        'Gets the localized version of the canonical media name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
            )

    def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Gets the margins for the layout or plot configuration'
        return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
            , UpperRight)

    def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
        'Gets the width and height of the configured paper'
        return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
            , Height)

    def GetPlotDeviceNames(self):
        'Gets all available plot device names.'
        return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

    def GetPlotStyleTableNames(self):
        'Gets all available plot style table names.'
        return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

    def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Gets the coordinates that define the portion of the layout to plot'
        return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
            , UpperRight)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def RefreshPlotDeviceInfo(self):
        'Updates the plot, canonical media, and plot style table information to reflect the current system state.'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

    def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
        'Sets the custom scale for a layout or plot configuration'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
            , Denominator)

    def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Sets the coordinates that define the portion of the layout to plot'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Block' returns object of type 'IAcadBlock'
        "Block": (48, 2, (9, 0), (), "Block", '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}'),
        "CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
        "CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
        "ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ModelType": (34, 2, (11, 0), (), "ModelType", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
        "PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
        "PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
        "PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
        "PlotType": (13, 2, (3, 0), (), "PlotType", None),
        "PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
        "PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
        "PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
        "PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
        "ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
        "ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
        "StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
        "StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
        "TabOrder": (49, 2, (3, 0), (), "TabOrder", None),
        "UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
        "ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
    }
    _prop_map_put_ = {
        "CanonicalMediaName": ((6, LCID, 4, 0),()),
        "CenterPlot": ((11, LCID, 4, 0),()),
        "ConfigName": ((3, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PaperUnits": ((7, LCID, 4, 0),()),
        "PlotHidden": ((12, LCID, 4, 0),()),
        "PlotOrigin": ((30, LCID, 4, 0),()),
        "PlotRotation": ((10, LCID, 4, 0),()),
        "PlotType": ((13, LCID, 4, 0),()),
        "PlotViewportBorders": ((8, LCID, 4, 0),()),
        "PlotViewportsFirst": ((24, LCID, 4, 0),()),
        "PlotWithLineweights": ((21, LCID, 4, 0),()),
        "PlotWithPlotStyles": ((33, LCID, 4, 0),()),
        "ScaleLineweights": ((20, LCID, 4, 0),()),
        "ShowPlotStyles": ((9, LCID, 4, 0),()),
        "StandardScale": ((16, LCID, 4, 0),()),
        "StyleSheet": ((25, LCID, 4, 0),()),
        "TabOrder": ((49, LCID, 4, 0),()),
        "UseStandardScale": ((15, LCID, 4, 0),()),
        "ViewToPlot": ((14, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayouts(DispatchBaseClass):
    'The collection of all layouts in the drawing'
    CLSID = IID('{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}')
    coclass_clsid = IID('{C6B60202-2BEA-4ED1-9A9F-7CF91E5A295D}')

    # Result is of type IAcadLayout
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{F8AE8A77-1909-452A-95E8-0B833451FD4B}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLayout
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{F8AE8A77-1909-452A-95E8-0B833451FD4B}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{F8AE8A77-1909-452A-95E8-0B833451FD4B}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{F8AE8A77-1909-452A-95E8-0B833451FD4B}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLeader(DispatchBaseClass):
    'Acad Leader Interface'
    CLSID = IID('{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}')
    coclass_clsid = IID('{1B4D2B5E-8406-4167-B42C-09D8136BAE47}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(67, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Evaluate(self):
        'Evaluate the leader'
        return self._oleobj_.InvokeTypes(66, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(67, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        # Method 'Annotation' returns object of type 'IAcadEntity'
        "Annotation": (68, 2, (9, 0), (), "Annotation", '{D78C594E-0412-4D7A-919A-2B6D1662D337}'),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (70, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (1543, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (69, 2, (3, 0), (), "ArrowheadType", None),
        "Coordinates": (64, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (1550, 2, (3, 0), (), "DimensionLineWeight", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Type": (65, 2, (3, 0), (), "Type", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Annotation": ((68, LCID, 4, 0),()),
        "ArrowheadBlock": ((70, LCID, 4, 0),()),
        "ArrowheadSize": ((1543, LCID, 4, 0),()),
        "ArrowheadType": ((69, LCID, 4, 0),()),
        "Coordinates": ((64, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((1550, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((65, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLight(DispatchBaseClass):
    CLSID = IID('{C45579D8-B271-461E-B658-F57BE7B1B4EB}')
    coclass_clsid = IID('{1441A79B-2C78-4568-8F3F-1D068ACFC6CD}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttenuationType": (13, 2, (8, 0), (), "AttenuationType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndLimit": (16, 2, (5, 0), (), "EndLimit", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FallOff": (7, 2, (5, 0), (), "FallOff", None),
        "FromVector": (20, 2, (12, 0), (), "FromVector", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HotSpot": (6, 2, (5, 0), (), "HotSpot", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Intensity": (8, 2, (5, 0), (), "Intensity", None),
        # Method 'LColor' returns object of type 'IAcadAcCmColor'
        "LColor": (9, 2, (9, 0), (), "LColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LightType": (2, 2, (8, 0), (), "LightType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MapSize": (18, 2, (8, 0), (), "MapSize", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotGlyph": (10, 2, (11, 0), (), "PlotGlyph", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (11, 2, (12, 0), (), "Position", None),
        "ShadowType": (17, 2, (8, 0), (), "ShadowType", None),
        "Shadows": (5, 2, (11, 0), (), "Shadows", None),
        "Softness": (19, 2, (3, 0), (), "Softness", None),
        "SourceVectorX": (22, 2, (5, 0), (), "SourceVectorX", None),
        "SourceVectorY": (23, 2, (5, 0), (), "SourceVectorY", None),
        "SourceVectorZ": (24, 2, (5, 0), (), "SourceVectorZ", None),
        "StartLimit": (15, 2, (5, 0), (), "StartLimit", None),
        "Status": (4, 2, (11, 0), (), "Status", None),
        "Target": (12, 2, (12, 0), (), "Target", None),
        "ToVector": (21, 2, (12, 0), (), "ToVector", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UseLimits": (14, 2, (11, 0), (), "UseLimits", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttenuationType": ((13, LCID, 4, 0),()),
        "EndLimit": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FallOff": ((7, LCID, 4, 0),()),
        "FromVector": ((20, LCID, 4, 0),()),
        "HotSpot": ((6, LCID, 4, 0),()),
        "Intensity": ((8, LCID, 4, 0),()),
        "LColor": ((9, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LightType": ((2, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MapSize": ((18, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotGlyph": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((11, LCID, 4, 0),()),
        "ShadowType": ((17, LCID, 4, 0),()),
        "Shadows": ((5, LCID, 4, 0),()),
        "Softness": ((19, LCID, 4, 0),()),
        "SourceVectorX": ((22, LCID, 4, 0),()),
        "SourceVectorY": ((23, LCID, 4, 0),()),
        "SourceVectorZ": ((24, LCID, 4, 0),()),
        "StartLimit": ((15, LCID, 4, 0),()),
        "Status": ((4, LCID, 4, 0),()),
        "Target": ((12, LCID, 4, 0),()),
        "ToVector": ((21, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UseLimits": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLight2(DispatchBaseClass):
    CLSID = IID('{2B8F45C4-3CE8-482C-918E-ECD39EC2B86D}')
    coclass_clsid = IID('{1441A79B-2C78-4568-8F3F-1D068ACFC6CD}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttenuationType": (13, 2, (8, 0), (), "AttenuationType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndLimit": (16, 2, (5, 0), (), "EndLimit", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FallOff": (7, 2, (5, 0), (), "FallOff", None),
        "FromVector": (20, 2, (12, 0), (), "FromVector", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasTarget": (34, 2, (11, 0), (), "HasTarget", None),
        "HotSpot": (6, 2, (5, 0), (), "HotSpot", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "IlluminanceDistance": (39, 2, (5, 0), (), "IlluminanceDistance", None),
        "Intensity": (8, 2, (5, 0), (), "Intensity", None),
        # Method 'LColor' returns object of type 'IAcadAcCmColor'
        "LColor": (9, 2, (9, 0), (), "LColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "LampColor": (27, 2, (12, 0), (), "LampColor", None),
        "LampIntensity": (25, 2, (8, 0), (), "LampIntensity", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LightType": (2, 2, (8, 0), (), "LightType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MapSize": (18, 2, (8, 0), (), "MapSize", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotGlyph": (10, 2, (11, 0), (), "PlotGlyph", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (11, 2, (12, 0), (), "Position", None),
        # Method 'ResultColor' returns object of type 'IAcadAcCmColor'
        "ResultColor": (28, 2, (9, 0), (), "ResultColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "ResultIntensity": (26, 2, (8, 0), (), "ResultIntensity", None),
        "ShadowLength": (40, 2, (5, 0), (), "ShadowLength", None),
        "ShadowRadius": (38, 2, (5, 0), (), "ShadowRadius", None),
        "ShadowSamples": (35, 2, (3, 0), (), "ShadowSamples", None),
        "ShadowShape": (37, 2, (8, 0), (), "ShadowShape", None),
        "ShadowType": (17, 2, (8, 0), (), "ShadowType", None),
        "ShadowVisible": (36, 2, (11, 0), (), "ShadowVisible", None),
        "ShadowWidth": (41, 2, (5, 0), (), "ShadowWidth", None),
        "Shadows": (5, 2, (11, 0), (), "Shadows", None),
        "Softness": (19, 2, (3, 0), (), "Softness", None),
        "SourceVectorX": (22, 2, (5, 0), (), "SourceVectorX", None),
        "SourceVectorY": (23, 2, (5, 0), (), "SourceVectorY", None),
        "SourceVectorZ": (24, 2, (5, 0), (), "SourceVectorZ", None),
        "StartLimit": (15, 2, (5, 0), (), "StartLimit", None),
        "Status": (4, 2, (11, 0), (), "Status", None),
        "Target": (12, 2, (12, 0), (), "Target", None),
        "ToVector": (21, 2, (12, 0), (), "ToVector", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UseLimits": (14, 2, (11, 0), (), "UseLimits", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WebFile": (29, 2, (8, 0), (), "WebFile", None),
        "WebPreview": (30, 2, (12, 0), (), "WebPreview", None),
        "WebRotateX": (31, 2, (5, 0), (), "WebRotateX", None),
        "WebRotateY": (32, 2, (5, 0), (), "WebRotateY", None),
        "WebRotateZ": (33, 2, (5, 0), (), "WebRotateZ", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttenuationType": ((13, LCID, 4, 0),()),
        "EndLimit": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FallOff": ((7, LCID, 4, 0),()),
        "FromVector": ((20, LCID, 4, 0),()),
        "HasTarget": ((34, LCID, 4, 0),()),
        "HotSpot": ((6, LCID, 4, 0),()),
        "IlluminanceDistance": ((39, LCID, 4, 0),()),
        "Intensity": ((8, LCID, 4, 0),()),
        "LColor": ((9, LCID, 4, 0),()),
        "LampColor": ((27, LCID, 4, 0),()),
        "LampIntensity": ((25, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LightType": ((2, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MapSize": ((18, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotGlyph": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((11, LCID, 4, 0),()),
        "ResultColor": ((28, LCID, 4, 0),()),
        "ResultIntensity": ((26, LCID, 4, 0),()),
        "ShadowLength": ((40, LCID, 4, 0),()),
        "ShadowRadius": ((38, LCID, 4, 0),()),
        "ShadowSamples": ((35, LCID, 4, 0),()),
        "ShadowShape": ((37, LCID, 4, 0),()),
        "ShadowType": ((17, LCID, 4, 0),()),
        "ShadowVisible": ((36, LCID, 4, 0),()),
        "ShadowWidth": ((41, LCID, 4, 0),()),
        "Shadows": ((5, LCID, 4, 0),()),
        "Softness": ((19, LCID, 4, 0),()),
        "SourceVectorX": ((22, LCID, 4, 0),()),
        "SourceVectorY": ((23, LCID, 4, 0),()),
        "SourceVectorZ": ((24, LCID, 4, 0),()),
        "StartLimit": ((15, LCID, 4, 0),()),
        "Status": ((4, LCID, 4, 0),()),
        "Target": ((12, LCID, 4, 0),()),
        "ToVector": ((21, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UseLimits": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WebFile": ((29, LCID, 4, 0),()),
        "WebPreview": ((30, LCID, 4, 0),()),
        "WebRotateX": ((31, LCID, 4, 0),()),
        "WebRotateY": ((32, LCID, 4, 0),()),
        "WebRotateZ": ((33, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLight3(DispatchBaseClass):
    CLSID = IID('{0370B70A-6C67-45FD-A247-B2457AEE6ABC}')
    coclass_clsid = IID('{1441A79B-2C78-4568-8F3F-1D068ACFC6CD}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttenuationType": (13, 2, (8, 0), (), "AttenuationType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndLimit": (16, 2, (5, 0), (), "EndLimit", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FallOff": (7, 2, (5, 0), (), "FallOff", None),
        "FromVector": (20, 2, (12, 0), (), "FromVector", None),
        "GlyphDisplay": (42, 2, (8, 0), (), "GlyphDisplay", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasTarget": (34, 2, (11, 0), (), "HasTarget", None),
        "HotSpot": (6, 2, (5, 0), (), "HotSpot", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "IlluminanceDistance": (39, 2, (5, 0), (), "IlluminanceDistance", None),
        "Intensity": (8, 2, (5, 0), (), "Intensity", None),
        # Method 'LColor' returns object of type 'IAcadAcCmColor'
        "LColor": (9, 2, (9, 0), (), "LColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "LampColor": (27, 2, (12, 0), (), "LampColor", None),
        "LampIntensity": (25, 2, (8, 0), (), "LampIntensity", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LightType": (2, 2, (8, 0), (), "LightType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MapSize": (18, 2, (8, 0), (), "MapSize", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotGlyph": (10, 2, (11, 0), (), "PlotGlyph", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (11, 2, (12, 0), (), "Position", None),
        # Method 'ResultColor' returns object of type 'IAcadAcCmColor'
        "ResultColor": (28, 2, (9, 0), (), "ResultColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "ResultIntensity": (26, 2, (8, 0), (), "ResultIntensity", None),
        "ShadowLength": (40, 2, (5, 0), (), "ShadowLength", None),
        "ShadowRadius": (38, 2, (5, 0), (), "ShadowRadius", None),
        "ShadowSamples": (35, 2, (3, 0), (), "ShadowSamples", None),
        "ShadowShape": (37, 2, (8, 0), (), "ShadowShape", None),
        "ShadowType": (17, 2, (8, 0), (), "ShadowType", None),
        "ShadowVisible": (36, 2, (11, 0), (), "ShadowVisible", None),
        "ShadowWidth": (41, 2, (5, 0), (), "ShadowWidth", None),
        "Shadows": (5, 2, (11, 0), (), "Shadows", None),
        "Softness": (19, 2, (3, 0), (), "Softness", None),
        "SourceVectorX": (22, 2, (5, 0), (), "SourceVectorX", None),
        "SourceVectorY": (23, 2, (5, 0), (), "SourceVectorY", None),
        "SourceVectorZ": (24, 2, (5, 0), (), "SourceVectorZ", None),
        "StartLimit": (15, 2, (5, 0), (), "StartLimit", None),
        "Status": (4, 2, (11, 0), (), "Status", None),
        "Target": (12, 2, (12, 0), (), "Target", None),
        "ToVector": (21, 2, (12, 0), (), "ToVector", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UseLimits": (14, 2, (11, 0), (), "UseLimits", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WebFile": (29, 2, (8, 0), (), "WebFile", None),
        "WebPreview": (30, 2, (12, 0), (), "WebPreview", None),
        "WebRotateX": (31, 2, (5, 0), (), "WebRotateX", None),
        "WebRotateY": (32, 2, (5, 0), (), "WebRotateY", None),
        "WebRotateZ": (33, 2, (5, 0), (), "WebRotateZ", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttenuationType": ((13, LCID, 4, 0),()),
        "EndLimit": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FallOff": ((7, LCID, 4, 0),()),
        "FromVector": ((20, LCID, 4, 0),()),
        "GlyphDisplay": ((42, LCID, 4, 0),()),
        "HasTarget": ((34, LCID, 4, 0),()),
        "HotSpot": ((6, LCID, 4, 0),()),
        "IlluminanceDistance": ((39, LCID, 4, 0),()),
        "Intensity": ((8, LCID, 4, 0),()),
        "LColor": ((9, LCID, 4, 0),()),
        "LampColor": ((27, LCID, 4, 0),()),
        "LampIntensity": ((25, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LightType": ((2, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MapSize": ((18, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotGlyph": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((11, LCID, 4, 0),()),
        "ResultColor": ((28, LCID, 4, 0),()),
        "ResultIntensity": ((26, LCID, 4, 0),()),
        "ShadowLength": ((40, LCID, 4, 0),()),
        "ShadowRadius": ((38, LCID, 4, 0),()),
        "ShadowSamples": ((35, LCID, 4, 0),()),
        "ShadowShape": ((37, LCID, 4, 0),()),
        "ShadowType": ((17, LCID, 4, 0),()),
        "ShadowVisible": ((36, LCID, 4, 0),()),
        "ShadowWidth": ((41, LCID, 4, 0),()),
        "Shadows": ((5, LCID, 4, 0),()),
        "Softness": ((19, LCID, 4, 0),()),
        "SourceVectorX": ((22, LCID, 4, 0),()),
        "SourceVectorY": ((23, LCID, 4, 0),()),
        "SourceVectorZ": ((24, LCID, 4, 0),()),
        "StartLimit": ((15, LCID, 4, 0),()),
        "Status": ((4, LCID, 4, 0),()),
        "Target": ((12, LCID, 4, 0),()),
        "ToVector": ((21, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UseLimits": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WebFile": ((29, LCID, 4, 0),()),
        "WebPreview": ((30, LCID, 4, 0),()),
        "WebRotateX": ((31, LCID, 4, 0),()),
        "WebRotateY": ((32, LCID, 4, 0),()),
        "WebRotateZ": ((33, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLine(DispatchBaseClass):
    'Acad Line Interface'
    CLSID = IID('{EB1641A6-750D-49EB-A681-0BAEB77E7388}')
    coclass_clsid = IID('{6ACCA2E1-E804-4519-B95F-235867C214AC}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new line by offsetting the current line by a specified distance'
        return self._ApplyTypes_(5, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadLine override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Angle": (8, 2, (5, 0), (), "Angle", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Delta": (6, 2, (12, 0), (), "Delta", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndPoint": (2, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (7, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        "Thickness": (4, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EndPoint": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartPoint": ((1, LCID, 4, 0),()),
        "Thickness": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLineType(DispatchBaseClass):
    'The line characteristics consisting of combinations of dashes, dots, and spaces'
    CLSID = IID('{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')
    coclass_clsid = IID('{44E0D10E-F951-4B01-BDC0-21256D036952}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Description": (1, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Description": ((1, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLineTypes(DispatchBaseClass):
    'The collection of all linetypes in the drawing'
    CLSID = IID('{ED574116-AE18-4BB2-9628-1921C110F038}')
    coclass_clsid = IID('{09C7B1A6-D60E-43DA-B8DA-445C72D2A022}')

    # Result is of type IAcadLineType
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLineType
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')
        return ret

    def Load(self, Name=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
        'Loads a menu group from a menu file or the definition of a linetype from a library (LIN) file'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1), (8, 1)),Name
            , FileName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLoftedSurface(DispatchBaseClass):
    'IAcadLoftedSurface Interface'
    CLSID = IID('{83049727-9881-4D4D-8E57-63C83CB0CC6E}')
    coclass_clsid = IID('{3A949249-A2A7-412A-92FF-94D134EB3198}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Closed": (9, 2, (11, 0), (), "Closed", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndDraftAngle": (7, 2, (5, 0), (), "EndDraftAngle", None),
        "EndDraftMagnitude": (8, 2, (5, 0), (), "EndDraftMagnitude", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumCrossSections": (2, 2, (3, 0), (), "NumCrossSections", None),
        "NumGuidePaths": (3, 2, (3, 0), (), "NumGuidePaths", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "StartDraftAngle": (5, 2, (5, 0), (), "StartDraftAngle", None),
        "StartDraftMagnitude": (6, 2, (5, 0), (), "StartDraftMagnitude", None),
        "SurfaceNormals": (4, 2, (3, 0), (), "SurfaceNormals", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((9, LCID, 4, 0),()),
        "EndDraftAngle": ((7, LCID, 4, 0),()),
        "EndDraftMagnitude": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "StartDraftAngle": ((5, LCID, 4, 0),()),
        "StartDraftMagnitude": ((6, LCID, 4, 0),()),
        "SurfaceNormals": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMInsertBlock(DispatchBaseClass):
    'IAcadMInsertBlock Interface'
    CLSID = IID('{2EA3AB94-E461-4DDC-9B9B-894406F31256}')
    coclass_clsid = IID('{5B817FD8-0DDF-4283-B794-86434740C658}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block to a regular anonymous block'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block to a regular named block'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Gets Attributes in the block'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Gets constant attributes in the block'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Gets the dynamic block properties'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Resets the dynamic block to the default state'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                                              
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ColumnSpacing": (257, 2, (5, 0), (), "ColumnSpacing", None),
        "Columns": (256, 2, (3, 0), (), "Columns", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "RowSpacing": (259, 2, (5, 0), (), "RowSpacing", None),
        "Rows": (258, 2, (3, 0), (), "Rows", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ColumnSpacing": ((257, LCID, 4, 0),()),
        "Columns": ((256, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "RowSpacing": ((259, LCID, 4, 0),()),
        "Rows": ((258, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLeader(DispatchBaseClass):
    'GstarCAD Multi-Leader Interface'
    CLSID = IID('{59898AB2-E779-4D7C-B77C-86E9E10B2226}')
    coclass_clsid = IID('{E6494613-3893-47A5-B0E7-B6AD41ADA6F4}')

    def AddLeader(self):
        'Adds a new leader cluster to this multileader object'
        return self._oleobj_.InvokeTypes(27, LCID, 1, (3, 0), (),)

    def AddLeaderLine(self, leaderIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
        'Adds a leader line to the leader cluster with specified index'
        return self._oleobj_.InvokeTypes(29, LCID, 1, (3, 0), ((3, 1), (12, 1)),leaderIndex
            , pointArray)

    def AddLeaderLineEx(self, pointArray=defaultNamedNotOptArg):
        'Adds a new leader line to this multileader object determined by input point which will be the first point of new leader line'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (3, 0), ((12, 1),),pointArray
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg):
        'Gets attribute value in block content determined by attribute definition id'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(44, LCID, 1, (8, 0), ((20, 1),),attdefId
            )

    def GetBlockAttributeValue32(self, attdefId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(46, LCID, 1, (8, 0), ((3, 1),),attdefId
            )

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg):
        'Gets the dog leg direction of the specific leader'
        return self._ApplyTypes_(41, 1, (12, 0), ((3, 1),), 'GetDoglegDirection', None,leaderIndex
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetLeaderIndex(self, leaderLineIndex=defaultNamedNotOptArg):
        'Gets the index of leader cluster which the specified leader line is in'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
            )

    def GetLeaderLineIndexes(self, leaderIndex=defaultNamedNotOptArg):
        'Gets the indexes of leader lines of the specific leader'
        return self._ApplyTypes_(36, 1, (12, 0), ((3, 1),), 'GetLeaderLineIndexes', None,leaderIndex
            )

    def GetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg):
        'Specifies the vertices of leader line with specified index'
        return self._ApplyTypes_(33, 1, (12, 0), ((3, 1),), 'GetLeaderLineVertices', None,leaderLineIndex
            )

    def GetVertexCount(self, leaderLineIndex=defaultNamedNotOptArg):
        'Gets the number of vertices in the specified leader line'
        return self._oleobj_.InvokeTypes(37, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RemoveLeader(self, leaderIndex=defaultNamedNotOptArg):
        'Removes the leader cluster with specified index'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1),),leaderIndex
            )

    def RemoveLeaderLine(self, leaderLineIndex=defaultNamedNotOptArg):
        'Removes the leader line with specified index'
        return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((3, 1),),leaderLineIndex
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets attribute value in block content with attribute definition id'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((20, 1), (8, 1)),attdefId
            , Value)

    def SetBlockAttributeValue32(self, attdefId=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), ((3, 1), (8, 1)),attdefId
            , Value)

    def SetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg, dirVec=defaultNamedNotOptArg):
        'Sets the dog leg direction of the specific leader'
        return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderIndex
            , dirVec)

    def SetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
        'Specifies the vertices of leader line with specified index'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderLineIndex
            , pointArray)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (24, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (6, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (5, 2, (3, 0), (), "ArrowheadType", None),
        "BlockConnectionType": (10, 2, (3, 0), (), "BlockConnectionType", None),
        "BlockScale": (51, 2, (5, 0), (), "BlockScale", None),
        "ContentBlockName": (9, 2, (8, 0), (), "ContentBlockName", None),
        "ContentBlockType": (25, 2, (3, 0), (), "ContentBlockType", None),
        "ContentType": (34, 2, (3, 0), (), "ContentType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DogLegged": (7, 2, (11, 0), (), "DogLegged", None),
        "DoglegLength": (8, 2, (5, 0), (), "DoglegLength", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "LandingGap": (23, 2, (5, 0), (), "LandingGap", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LeaderCount": (26, 2, (3, 0), (), "LeaderCount", None),
        # Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
        "LeaderLineColor": (2, 2, (9, 0), (), "LeaderLineColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "LeaderLineWeight": (4, 2, (3, 0), (), "LeaderLineWeight", None),
        "LeaderLinetype": (3, 2, (8, 0), (), "LeaderLinetype", None),
        "LeaderType": (1, 2, (3, 0), (), "LeaderType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (38, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (40, 2, (8, 0), (), "StyleName", None),
        "TextAttachmentDirection": (48, 2, (3, 0), (), "TextAttachmentDirection", None),
        "TextBackgroundFill": (21, 2, (11, 0), (), "TextBackgroundFill", None),
        "TextBottomAttachmentType": (50, 2, (3, 0), (), "TextBottomAttachmentType", None),
        "TextDirection": (14, 2, (3, 0), (), "TextDirection", None),
        "TextFrameDisplay": (39, 2, (11, 0), (), "TextFrameDisplay", None),
        "TextHeight": (16, 2, (5, 0), (), "TextHeight", None),
        "TextJustify": (13, 2, (3, 0), (), "TextJustify", None),
        "TextLeftAttachmentType": (22, 2, (3, 0), (), "TextLeftAttachmentType", None),
        "TextLineSpacingDistance": (19, 2, (5, 0), (), "TextLineSpacingDistance", None),
        "TextLineSpacingFactor": (18, 2, (5, 0), (), "TextLineSpacingFactor", None),
        "TextLineSpacingStyle": (20, 2, (3, 0), (), "TextLineSpacingStyle", None),
        "TextRightAttachmentType": (43, 2, (3, 0), (), "TextRightAttachmentType", None),
        "TextRotation": (17, 2, (5, 0), (), "TextRotation", None),
        "TextString": (11, 2, (8, 0), (), "TextString", None),
        "TextStyleName": (12, 2, (8, 0), (), "TextStyleName", None),
        "TextTopAttachmentType": (49, 2, (3, 0), (), "TextTopAttachmentType", None),
        "TextWidth": (15, 2, (5, 0), (), "TextWidth", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ArrowheadBlock": ((24, LCID, 4, 0),()),
        "ArrowheadSize": ((6, LCID, 4, 0),()),
        "ArrowheadType": ((5, LCID, 4, 0),()),
        "BlockConnectionType": ((10, LCID, 4, 0),()),
        "BlockScale": ((51, LCID, 4, 0),()),
        "ContentBlockName": ((9, LCID, 4, 0),()),
        "ContentBlockType": ((25, LCID, 4, 0),()),
        "ContentType": ((34, LCID, 4, 0),()),
        "DogLegged": ((7, LCID, 4, 0),()),
        "DoglegLength": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "LandingGap": ((23, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLineColor": ((2, LCID, 4, 0),()),
        "LeaderLineWeight": ((4, LCID, 4, 0),()),
        "LeaderLinetype": ((3, LCID, 4, 0),()),
        "LeaderType": ((1, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((38, LCID, 4, 0),()),
        "StyleName": ((40, LCID, 4, 0),()),
        "TextAttachmentDirection": ((48, LCID, 4, 0),()),
        "TextBackgroundFill": ((21, LCID, 4, 0),()),
        "TextBottomAttachmentType": ((50, LCID, 4, 0),()),
        "TextDirection": ((14, LCID, 4, 0),()),
        "TextFrameDisplay": ((39, LCID, 4, 0),()),
        "TextHeight": ((16, LCID, 4, 0),()),
        "TextJustify": ((13, LCID, 4, 0),()),
        "TextLeftAttachmentType": ((22, LCID, 4, 0),()),
        "TextLineSpacingDistance": ((19, LCID, 4, 0),()),
        "TextLineSpacingFactor": ((18, LCID, 4, 0),()),
        "TextLineSpacingStyle": ((20, LCID, 4, 0),()),
        "TextRightAttachmentType": ((43, LCID, 4, 0),()),
        "TextRotation": ((17, LCID, 4, 0),()),
        "TextString": ((11, LCID, 4, 0),()),
        "TextStyleName": ((12, LCID, 4, 0),()),
        "TextTopAttachmentType": ((49, LCID, 4, 0),()),
        "TextWidth": ((15, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLeaderStyle(DispatchBaseClass):
    'Acad MLeaderstyle Interface'
    CLSID = IID('{865CCF2C-B13D-48CB-9605-04E135F8FF30}')
    coclass_clsid = IID('{C3819487-144A-4471-B95E-712E3CC64BEC}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "AlignSpace": (25, 2, (5, 0), (), "AlignSpace", None),
        "Annotative": (35, 2, (11, 0), (), "Annotative", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowSize": (19, 2, (5, 0), (), "ArrowSize", None),
        "ArrowSymbol": (18, 2, (8, 0), (), "ArrowSymbol", None),
        "BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
        "Block": (26, 2, (8, 0), (), "Block", None),
        # Method 'BlockColor' returns object of type 'IAcadAcCmColor'
        "BlockColor": (27, 2, (9, 0), (), "BlockColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "BlockConnectionType": (32, 2, (3, 0), (), "BlockConnectionType", None),
        "BlockRotation": (31, 2, (5, 0), (), "BlockRotation", None),
        "BlockScale": (29, 2, (5, 0), (), "BlockScale", None),
        "BreakSize": (36, 2, (5, 0), (), "BreakSize", None),
        "ContentType": (4, 2, (3, 0), (), "ContentType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Description": (2, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DoglegLength": (17, 2, (5, 0), (), "DoglegLength", None),
        "DrawLeaderOrderType": (6, 2, (3, 0), (), "DrawLeaderOrderType", None),
        "DrawMLeaderOrderType": (5, 2, (3, 0), (), "DrawMLeaderOrderType", None),
        "EnableBlockRotation": (30, 2, (11, 0), (), "EnableBlockRotation", None),
        "EnableBlockScale": (28, 2, (11, 0), (), "EnableBlockScale", None),
        "EnableDogleg": (16, 2, (11, 0), (), "EnableDogleg", None),
        "EnableFrameText": (24, 2, (11, 0), (), "EnableFrameText", None),
        "EnableLanding": (14, 2, (11, 0), (), "EnableLanding", None),
        "FirstSegmentAngleConstraint": (8, 2, (3, 0), (), "FirstSegmentAngleConstraint", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "LandingGap": (15, 2, (5, 0), (), "LandingGap", None),
        # Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
        "LeaderLineColor": (11, 2, (9, 0), (), "LeaderLineColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "LeaderLineTypeId": (12, 2, (8, 0), (), "LeaderLineTypeId", None),
        "LeaderLineWeight": (13, 2, (3, 0), (), "LeaderLineWeight", None),
        "LeaderLinetype": (10, 2, (3, 0), (), "LeaderLinetype", None),
        "MaxLeaderSegmentsPoints": (7, 2, (3, 0), (), "MaxLeaderSegmentsPoints", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OverwritePropChanged": (34, 2, (11, 0), (), "OverwritePropChanged", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "ScaleFactor": (33, 2, (5, 0), (), "ScaleFactor", None),
        "SecondSegmentAngleConstraint": (9, 2, (3, 0), (), "SecondSegmentAngleConstraint", None),
        "TextAlignmentType": (39, 2, (3, 0), (), "TextAlignmentType", None),
        "TextAngleType": (38, 2, (3, 0), (), "TextAngleType", None),
        "TextAttachmentDirection": (41, 2, (3, 0), (), "TextAttachmentDirection", None),
        "TextBottomAttachmentType": (43, 2, (3, 0), (), "TextBottomAttachmentType", None),
        # Method 'TextColor' returns object of type 'IAcadAcCmColor'
        "TextColor": (22, 2, (9, 0), (), "TextColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "TextHeight": (23, 2, (5, 0), (), "TextHeight", None),
        "TextLeftAttachmentType": (21, 2, (3, 0), (), "TextLeftAttachmentType", None),
        "TextRightAttachmentType": (40, 2, (3, 0), (), "TextRightAttachmentType", None),
        "TextString": (37, 2, (8, 0), (), "TextString", None),
        "TextStyle": (20, 2, (8, 0), (), "TextStyle", None),
        "TextTopAttachmentType": (42, 2, (3, 0), (), "TextTopAttachmentType", None),
    }
    _prop_map_put_ = {
        "AlignSpace": ((25, LCID, 4, 0),()),
        "Annotative": ((35, LCID, 4, 0),()),
        "ArrowSize": ((19, LCID, 4, 0),()),
        "ArrowSymbol": ((18, LCID, 4, 0),()),
        "BitFlags": ((3, LCID, 4, 0),()),
        "Block": ((26, LCID, 4, 0),()),
        "BlockColor": ((27, LCID, 4, 0),()),
        "BlockConnectionType": ((32, LCID, 4, 0),()),
        "BlockRotation": ((31, LCID, 4, 0),()),
        "BlockScale": ((29, LCID, 4, 0),()),
        "BreakSize": ((36, LCID, 4, 0),()),
        "ContentType": ((4, LCID, 4, 0),()),
        "Description": ((2, LCID, 4, 0),()),
        "DoglegLength": ((17, LCID, 4, 0),()),
        "DrawLeaderOrderType": ((6, LCID, 4, 0),()),
        "DrawMLeaderOrderType": ((5, LCID, 4, 0),()),
        "EnableBlockRotation": ((30, LCID, 4, 0),()),
        "EnableBlockScale": ((28, LCID, 4, 0),()),
        "EnableDogleg": ((16, LCID, 4, 0),()),
        "EnableFrameText": ((24, LCID, 4, 0),()),
        "EnableLanding": ((14, LCID, 4, 0),()),
        "FirstSegmentAngleConstraint": ((8, LCID, 4, 0),()),
        "LandingGap": ((15, LCID, 4, 0),()),
        "LeaderLineColor": ((11, LCID, 4, 0),()),
        "LeaderLineTypeId": ((12, LCID, 4, 0),()),
        "LeaderLineWeight": ((13, LCID, 4, 0),()),
        "LeaderLinetype": ((10, LCID, 4, 0),()),
        "MaxLeaderSegmentsPoints": ((7, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "ScaleFactor": ((33, LCID, 4, 0),()),
        "SecondSegmentAngleConstraint": ((9, LCID, 4, 0),()),
        "TextAlignmentType": ((39, LCID, 4, 0),()),
        "TextAngleType": ((38, LCID, 4, 0),()),
        "TextAttachmentDirection": ((41, LCID, 4, 0),()),
        "TextBottomAttachmentType": ((43, LCID, 4, 0),()),
        "TextColor": ((22, LCID, 4, 0),()),
        "TextHeight": ((23, LCID, 4, 0),()),
        "TextLeftAttachmentType": ((21, LCID, 4, 0),()),
        "TextRightAttachmentType": ((40, LCID, 4, 0),()),
        "TextString": ((37, LCID, 4, 0),()),
        "TextStyle": ((20, LCID, 4, 0),()),
        "TextTopAttachmentType": ((42, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLine(DispatchBaseClass):
    'IAcadMLine Interface'
    CLSID = IID('{0DA73585-0488-4699-BCD2-AB0F5C91D404}')
    coclass_clsid = IID('{CC35F7B8-1AE8-4C31-9F3D-484A44EAC286}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (2, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Justification": (3, 2, (3, 0), (), "Justification", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MLineScale": (4, 2, (5, 0), (), "MLineScale", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StyleName": (1, 2, (8, 0), (), "StyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Justification": ((3, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MLineScale": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMText(DispatchBaseClass):
    'Acad MText Interface'
    CLSID = IID('{50FA2201-1260-4323-8C00-3EA7E36680B6}')
    coclass_clsid = IID('{9F58700D-4910-4463-AEEB-2406161B0490}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FieldCode(self):
        'Returns the text string with field codes of the Mtext'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(14, LCID, 1, (8, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttachmentPoint": (3, 2, (3, 0), (), "AttachmentPoint", None),
        "BackgroundFill": (13, 2, (11, 0), (), "BackgroundFill", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DrawingDirection": (4, 2, (3, 0), (), "DrawingDirection", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (8, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LineSpacingDistance": (12, 2, (5, 0), (), "LineSpacingDistance", None),
        "LineSpacingFactor": (10, 2, (5, 0), (), "LineSpacingFactor", None),
        "LineSpacingStyle": (11, 2, (3, 0), (), "LineSpacingStyle", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (9, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (7, 2, (5, 0), (), "Rotation", None),
        "StyleName": (2, 2, (8, 0), (), "StyleName", None),
        "TextString": (1, 2, (8, 0), (), "TextString", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttachmentPoint": ((3, LCID, 4, 0),()),
        "BackgroundFill": ((13, LCID, 4, 0),()),
        "DrawingDirection": ((4, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "InsertionPoint": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LineSpacingDistance": ((12, LCID, 4, 0),()),
        "LineSpacingFactor": ((10, LCID, 4, 0),()),
        "LineSpacingStyle": ((11, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((9, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((7, LCID, 4, 0),()),
        "StyleName": ((2, LCID, 4, 0),()),
        "TextString": ((1, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMaterial(DispatchBaseClass):
    'The render material characteristics'
    CLSID = IID('{A7F84FAB-56C7-4437-9178-04441F062A4A}')
    coclass_clsid = IID('{F55DC97F-4A3C-49E9-873C-B1F3B6F4F8D6}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Description": (1, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Description": ((1, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMaterials(DispatchBaseClass):
    CLSID = IID('{C42C4E52-02C7-441C-B0BA-16771B542EA5}')
    coclass_clsid = IID('{C4E55BE8-77A9-4A8A-81DE-2CC03D13FF48}')

    # Result is of type IAcadMaterial
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{A7F84FAB-56C7-4437-9178-04441F062A4A}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadMaterial
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{A7F84FAB-56C7-4437-9178-04441F062A4A}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{A7F84FAB-56C7-4437-9178-04441F062A4A}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{A7F84FAB-56C7-4437-9178-04441F062A4A}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadMenuBar(DispatchBaseClass):
    'A collection of PopupMenu objects representing the currentAcad menu bar'
    CLSID = IID('{87925C1E-ADEA-48BD-8BF1-239F9A116A81}')
    coclass_clsid = IID('{573373A3-EDBE-4369-AF1F-3292EE13538C}')

    # Result is of type IAcadPopupMenu
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadApplication'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{B1872638-6D18-482F-90BA-38086D17625F}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{551A5349-4463-40E2-822C-D3A632409117}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadMenuGroup(DispatchBaseClass):
    'An Acad menu group'
    CLSID = IID('{72D027F2-CD79-4135-AE60-74FD0F8F595B}')
    coclass_clsid = IID('{521C919B-AC49-4F28-A908-D4BD172C92E6}')

    def Save(self, MenuFileType=defaultNamedNotOptArg):
        'Saves the document or menu group'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((3, 1),),MenuFileType
            )

    def SaveAs(self, MenuFileName=defaultNamedNotOptArg, MenuFileType=defaultNamedNotOptArg):
        'Saves the document or menu group to a specified file'
        return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (24, 0), ((8, 1), (3, 1)),MenuFileName
            , MenuFileType)

    def Unload(self):
        'Unloads the menu group or external reference'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "MenuFileName": (1610743812, 2, (8, 0), (), "MenuFileName", None),
        # Method 'Menus' returns object of type 'IAcadPopupMenus'
        "Menus": (1610743813, 2, (9, 0), (), "Menus", '{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}'),
        "Name": (1610743810, 2, (8, 0), (), "Name", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroups'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}'),
        # Method 'Toolbars' returns object of type 'IAcadToolbars'
        "Toolbars": (1610743814, 2, (9, 0), (), "Toolbars", '{8095E3AB-7AB4-4915-A35A-11491F1B45D6}'),
        "Type": (1610743811, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMenuGroups(DispatchBaseClass):
    'IAcadMenuGroups �ӿ�'
    CLSID = IID('{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}')
    coclass_clsid = IID('{79855627-10CA-4054-BB8C-00946292669D}')

    # Result is of type IAcadMenuGroup
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{72D027F2-CD79-4135-AE60-74FD0F8F595B}')
        return ret

    # Result is of type IAcadMenuGroup
    def Load(self, MenuFileName=defaultNamedNotOptArg, BaseMenu=defaultNamedOptArg):
        'Loads a menu group from a menu file or the definition of a linetype from a library (LIN) file'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17)),MenuFileName
            , BaseMenu)
        if ret is not None:
            ret = Dispatch(ret, 'Load', '{72D027F2-CD79-4135-AE60-74FD0F8F595B}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadApplication'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{B1872638-6D18-482F-90BA-38086D17625F}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{72D027F2-CD79-4135-AE60-74FD0F8F595B}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{72D027F2-CD79-4135-AE60-74FD0F8F595B}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadModelSpace(DispatchBaseClass):
    'IAcadModelSpace �ӿ�'
    CLSID = IID('{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}')
    coclass_clsid = IID('{35DF9E00-7285-40A9-BD63-D714AA0CA70F}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object given four vertices'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{46250F63-F4E2-4C99-A12B-0471714BC659}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a free-form 3D mesh, given the number of points in the M and N directions and the coordinates of the points in the M and N directions'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3D polyline from the given array of coordinates'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an arc given the center, radius, start angle, and end angle of the arc'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an attribute definition at the given location with the specified properties'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{DB4711D4-33D9-408F-9E34-93A7F91248F2}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box with edges parallel to the axes of the WCS'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a circle given a center point and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{70B267B4-5885-477C-BE74-F898EE7FE9EA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone with the base on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a Custom object'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder whose base is on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{EA05C039-0D70-4713-865B-71DF0B02F6CA}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{78931DD8-09C7-44F5-9CB5-83198A8CD286}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension for an arc'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{6BE0895F-AB23-4095-8180-0BBD8E790138}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension for a circle or arc given the two points on the diameter and the length of the leader line'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension given the definition point, and leader endpoint'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension for the selected object at the given location'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{6070AA16-B13D-4B73-AA07-722C59BC09B5}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension for an arc, circle, or polyline arc segment'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an ellipse in the XY plane of the WCS given the center point, a point on the major axis, and the radius ratio'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{21565C97-8E2E-442B-8F69-C9662BC89DCA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone on the XY plane of the WCS given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder whose base is on the XY plane of the WCS, given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid given the Profile, Height, and TaperAngle'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid given the profile and an extrusion path'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a leader line, given the coordinates of the points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a lightweight polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{B32517C5-036E-4CB0-8538-66BD5FC625C4}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a line passing through two points'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{EB1641A6-750D-49EB-A681-0BAEB77E7388}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts an array of blocks'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{2EA3AB94-E461-4DDC-9B9B-894406F31256}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{59898AB2-E779-4D7C-B77C-86E9E10B2226}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{0DA73585-0488-4699-BCD2-AB0F5C91D404}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an MText entity in a rectangle defined by the insertion point and width of the bounding box'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{50FA2201-1260-4323-8C00-3EA7E36680B6}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object at a given location'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a new raster image based on an existing image file'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1A5BD135-D93B-4BFD-8027-E8277D629B46}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a ray passing through two unique points'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{D05D772F-86F6-4B10-9898-E22BF8C5F192}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a region from a set of entities. The given entities must form a closed coplanar region'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid, given the region around an axis'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a section plane'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object based on a template identified by name, at the given insertion point, scale factor, and rotation'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{38D2992F-DF38-497F-9E2B-68D813057E8D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a sphere given the center and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a quadratic or cubic NURBS (nonuniform rational B-spline) curve'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{3D506D60-0138-48DD-8166-E5512E441206}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a table at the given insertion point, given the number of rows, number of columns, row height and column width'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a single line of text'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a tolerance entity'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        Direction = VTR8ArrayOrVal(Direction)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{98D4741E-D869-4950-8B28-046B6884A084}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a torus at the given location'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object from an array of points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{4253025F-5BC5-4D78-8D65-138D2DBED220}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a wedge with edges parallel to the axes given the length, width, and height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadXline
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference (xref) to a drawing'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference (xref) from a drawing'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing file or a named block that has been defined in the current drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def Reload(self):
        'Reloads the external reference (xref)'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads the menu group or external reference'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{F8AE8A77-1909-452A-95E8-0B833451FD4B}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadNurbSurface(DispatchBaseClass):
    'IAcadNurbSurface Interface'
    CLSID = IID('{B4087378-9A1B-4996-B1C0-D3EAD492FA7A}')
    coclass_clsid = IID('{3C7846DC-43D5-44CD-B954-F941A0F85DE9}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CvHullDisplay": (12, 2, (11, 0), (), "CvHullDisplay", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "CvHullDisplay": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadObject(DispatchBaseClass):
    'IAcadObject �ӿ�'
    CLSID = IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')
    coclass_clsid = IID('{4F1D3AB3-AAC7-4F57-BA5C-B6D5410FE1D7}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadObjectEvents:
    'IAcadObjectEvents �ӿ�'
    CLSID = CLSID_Sink = IID('{41B85986-5004-4888-9E89-7895663FA77C}')
    coclass_clsid = IID('{028BA451-EBBA-4529-8521-DBFB95EB745C}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
                1 : "OnModified",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnModified(self, pObject=defaultNamedNotOptArg):
#		'Triggered when an object or collection in the drawing has been modified'


class IAcadOle(DispatchBaseClass):
    'IAcadOle Interface'
    CLSID = IID('{75419B16-46F2-4245-A624-7819E87EEA8A}')
    coclass_clsid = IID('{ABA71980-3AA9-40F5-81A7-735886F6F6FD}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (4, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockAspectRatio": (7, 2, (11, 0), (), "LockAspectRatio", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OleItemType": (8, 2, (3, 0), (), "OleItemType", None),
        "OlePlotQuality": (9, 2, (3, 0), (), "OlePlotQuality", None),
        "OleSourceApp": (10, 2, (8, 0), (), "OleSourceApp", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (2, 2, (5, 0), (), "Rotation", None),
        "ScaleHeight": (6, 2, (5, 0), (), "ScaleHeight", None),
        "ScaleWidth": (5, 2, (5, 0), (), "ScaleWidth", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LockAspectRatio": ((7, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "OleItemType": ((8, LCID, 4, 0),()),
        "OlePlotQuality": ((9, LCID, 4, 0),()),
        "OleSourceApp": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((2, LCID, 4, 0),()),
        "ScaleHeight": ((6, LCID, 4, 0),()),
        "ScaleWidth": ((5, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPViewport(DispatchBaseClass):
    'IAcadPViewport Interface'
    CLSID = IID('{E1366A0E-60BF-4E69-9728-D524EDF12C69}')
    coclass_clsid = IID('{BEAF55E0-0A37-499C-B48B-DBC93CF6E29B}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Display(self, bStatus=defaultNamedNotOptArg):
        'Determines whether viewport is On or Off'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((11, 1),),bStatus
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Specifies the grid spacing for the viewport'
        return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
            , YSpacing)

    def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Specifies the snap spacing for the viewport'
        return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
            , YSpacing)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the grid spacing for the viewport'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the snap spacing for the viewport'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SyncModelView(self):
        'Updates the viewport parameters with the parameters in the associated model view.'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SnapBasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcSmoothness": (27, 2, (3, 0), (), "ArcSmoothness", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        "Clipped": (7, 2, (11, 0), (), "Clipped", None),
        "CustomScale": (10, 2, (5, 0), (), "CustomScale", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (2, 2, (12, 0), (), "Direction", None),
        "DisplayLocked": (8, 2, (11, 0), (), "DisplayLocked", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "GridOn": (3, 2, (11, 0), (), "GridOn", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasSheetView": (35, 2, (11, 0), (), "HasSheetView", None),
        "Height": (4, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "LabelBlockId": (34, 2, (3, 0), (), "LabelBlockId", None),
        "LabelBlockId32": (38, 2, (3, 0), (), "LabelBlockId32", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LayerPropertyOverrides": (37, 2, (11, 0), (), "LayerPropertyOverrides", None),
        "LensLength": (24, 2, (5, 0), (), "LensLength", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        # Method 'ModelView' returns object of type 'IAcadView'
        "ModelView": (32, 2, (9, 0), (), "ModelView", '{DE1C99A1-811D-4F40-98A6-A17186C8779A}'),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RemoveHiddenLines": (25, 2, (11, 0), (), "RemoveHiddenLines", None),
        "ShadePlot": (29, 2, (3, 0), (), "ShadePlot", None),
        # Method 'SheetView' returns object of type 'IAcadView'
        "SheetView": (33, 2, (9, 0), (), "SheetView", '{DE1C99A1-811D-4F40-98A6-A17186C8779A}'),
        "SnapBasePoint": (13, 2, (12, 0), (), "SnapBasePoint", None),
        "SnapOn": (14, 2, (11, 0), (), "SnapOn", None),
        "SnapRotationAngle": (15, 2, (5, 0), (), "SnapRotationAngle", None),
        "StandardScale": (9, 2, (3, 0), (), "StandardScale", None),
        "StandardScale2": (39, 2, (3, 0), (), "StandardScale2", None),
        "StyleSheet": (11, 2, (8, 0), (), "StyleSheet", None),
        "Target": (26, 2, (12, 0), (), "Target", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "TwistAngle": (23, 2, (5, 0), (), "TwistAngle", None),
        "UCSIconAtOrigin": (17, 2, (11, 0), (), "UCSIconAtOrigin", None),
        "UCSIconOn": (16, 2, (11, 0), (), "UCSIconOn", None),
        "UCSPerViewport": (12, 2, (11, 0), (), "UCSPerViewport", None),
        "ViewportOn": (6, 2, (11, 0), (), "ViewportOn", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "VisualStyle": (28, 2, (3, 0), (), "VisualStyle", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ArcSmoothness": ((27, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "CustomScale": ((10, LCID, 4, 0),()),
        "Direction": ((2, LCID, 4, 0),()),
        "DisplayLocked": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "GridOn": ((3, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "LabelBlockId": ((34, LCID, 4, 0),()),
        "LabelBlockId32": ((38, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LensLength": ((24, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "ModelView": ((32, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RemoveHiddenLines": ((25, LCID, 4, 0),()),
        "ShadePlot": ((29, LCID, 4, 0),()),
        "SheetView": ((33, LCID, 4, 0),()),
        "SnapBasePoint": ((13, LCID, 4, 0),()),
        "SnapOn": ((14, LCID, 4, 0),()),
        "SnapRotationAngle": ((15, LCID, 4, 0),()),
        "StandardScale": ((9, LCID, 4, 0),()),
        "StandardScale2": ((39, LCID, 4, 0),()),
        "StyleSheet": ((11, LCID, 4, 0),()),
        "Target": ((26, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "TwistAngle": ((23, LCID, 4, 0),()),
        "UCSIconAtOrigin": ((17, LCID, 4, 0),()),
        "UCSIconOn": ((16, LCID, 4, 0),()),
        "UCSPerViewport": ((12, LCID, 4, 0),()),
        "ViewportOn": ((6, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "VisualStyle": ((28, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPaperSpace(DispatchBaseClass):
    'A special Block object containing all the entities in the active paper space layout'
    CLSID = IID('{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}')
    coclass_clsid = IID('{BF0FD147-A1EA-416E-911B-9EF794738AFA}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object given four vertices'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{46250F63-F4E2-4C99-A12B-0471714BC659}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a free-form 3D mesh, given the number of points in the M and N directions and the coordinates of the points in the M and N directions'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3D polyline from the given array of coordinates'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an arc given the center, radius, start angle, and end angle of the arc'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an attribute definition at the given location with the specified properties'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{DB4711D4-33D9-408F-9E34-93A7F91248F2}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box with edges parallel to the axes of the WCS'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a circle given a center point and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{70B267B4-5885-477C-BE74-F898EE7FE9EA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone with the base on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a Custom object'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder whose base is on the XY plane of the WCS'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{EA05C039-0D70-4713-865B-71DF0B02F6CA}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension for an arc, two lines, or a circle'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{78931DD8-09C7-44F5-9CB5-83198A8CD286}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension for an arc'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{6BE0895F-AB23-4095-8180-0BBD8E790138}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension for a circle or arc given the two points on the diameter and the length of the leader line'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension given the definition point, and leader endpoint'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension for the selected object at the given location'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{6070AA16-B13D-4B73-AA07-722C59BC09B5}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension for an arc, circle, or polyline arc segment'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an ellipse in the XY plane of the WCS given the center point, a point on the major axis, and the radius ratio'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{21565C97-8E2E-442B-8F69-C9662BC89DCA}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone on the XY plane of the WCS given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder whose base is on the XY plane of the WCS, given the Center, MajorRadius, MinorRadius, and Height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid given the Profile, Height, and TaperAngle'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid given the profile and an extrusion path'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a leader line, given the coordinates of the points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a lightweight polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{B32517C5-036E-4CB0-8538-66BD5FC625C4}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a line passing through two points'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{EB1641A6-750D-49EB-A681-0BAEB77E7388}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts an array of blocks'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{2EA3AB94-E461-4DDC-9B9B-894406F31256}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{59898AB2-E779-4D7C-B77C-86E9E10B2226}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{0DA73585-0488-4699-BCD2-AB0F5C91D404}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an MText entity in a rectangle defined by the insertion point and width of the bounding box'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{50FA2201-1260-4323-8C00-3EA7E36680B6}')
        return ret

    # Result is of type IAcadPViewport
    def AddPViewport(self, Center=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Adds a paper space viewport, given the center, height, and width'
        ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddPViewport', '{E1366A0E-60BF-4E69-9728-D524EDF12C69}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object at a given location'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a polyface mesh from a list of vertices'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a polyline from a list of vertices'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a new raster image based on an existing image file'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1A5BD135-D93B-4BFD-8027-E8277D629B46}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a ray passing through two unique points'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{D05D772F-86F6-4B10-9898-E22BF8C5F192}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a region from a set of entities. The given entities must form a closed coplanar region'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid, given the region around an axis'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a section plane'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object based on a template identified by name, at the given insertion point, scale factor, and rotation'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{38D2992F-DF38-497F-9E2B-68D813057E8D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a sphere given the center and radius'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a quadratic or cubic NURBS (nonuniform rational B-spline) curve'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{3D506D60-0138-48DD-8166-E5512E441206}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a table at the given insertion point, given the number of rows, number of columns, row height and column width'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a single line of text'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a tolerance entity'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        Direction = VTR8ArrayOrVal(Direction)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{98D4741E-D869-4950-8B28-046B6884A084}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a torus at the given location'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object from an array of points'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{4253025F-5BC5-4D78-8D65-138D2DBED220}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a wedge with edges parallel to the axes given the length, width, and height'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{93102923-D2AD-4429-86B3-A09D589BF38F}')
        return ret

    # Result is of type IAcadXline
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference (xref) to the drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{29EB1F45-3E5E-41E2-B909-2EA909858B11}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference (xref) to a drawing'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference (xref) from a drawing'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing file or a named block that has been defined in the current drawing'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def Reload(self):
        'Reloads the external reference (xref)'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads the menu group or external reference'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{F8AE8A77-1909-452A-95E8-0B833451FD4B}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPlaneSurface(DispatchBaseClass):
    'IAcadPlaneSurface Interface'
    CLSID = IID('{D3A1F3D5-4942-4904-928D-910183FAD5B3}')
    coclass_clsid = IID('{938953B2-646A-428C-895E-203B73B1B05A}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPlot(DispatchBaseClass):
    'IAcadPlot �ӿ�'
    CLSID = IID('{E93528F4-F504-4E58-8560-C473AD8445A2}')
    coclass_clsid = IID('{DF79DE83-2A11-43DB-AE4C-1FE95E57F574}')

    def DisplayPlotPreview(self, Preview=defaultNamedNotOptArg):
        'Displays the Plot Preview dialog box with the specified partial or full view preview'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((3, 1),),Preview
            )

    def PlotToDevice(self, plotConfig=defaultNamedOptArg):
        'Plots a layout to a device'
        return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (11, 0), ((12, 17),),plotConfig
            )

    def PlotToFile(self, plotFile=defaultNamedNotOptArg, plotConfig=defaultNamedOptArg):
        'Plots a layout to the specified file'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (11, 0), ((8, 1), (12, 17)),plotFile
            , plotConfig)

    def SetLayoutsToPlot(self, layoutList=defaultNamedNotOptArg):
        'Specifies the layout or layouts to plot'
        return self._oleobj_.InvokeTypes(1610743818, LCID, 1, (24, 0), ((12, 1),),layoutList
            )

    def StartBatchMode(self, entryCount=defaultNamedNotOptArg):
        'Invokes batchmode printing'
        return self._oleobj_.InvokeTypes(1610743819, LCID, 1, (24, 0), ((3, 1),),entryCount
            )

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "BatchPlotProgress": (1610743813, 2, (11, 0), (), "BatchPlotProgress", None),
        "NumberOfCopies": (1610743811, 2, (3, 0), (), "NumberOfCopies", None),
        "QuietErrorMode": (1610743809, 2, (11, 0), (), "QuietErrorMode", None),
    }
    _prop_map_put_ = {
        "BatchPlotProgress": ((1610743813, LCID, 4, 0),()),
        "NumberOfCopies": ((1610743811, LCID, 4, 0),()),
        "QuietErrorMode": ((1610743809, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfiguration(DispatchBaseClass):
    'A named collection of plot settings'
    CLSID = IID('{37A8DABC-FD78-4509-B9CA-396F4CC30472}')
    coclass_clsid = IID('{211BF34C-5307-4666-B82D-0719CACA809C}')

    def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
        'Copies the settings from the given plotconfiguration'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetCanonicalMediaNames(self):
        'Gets all available canonical media names for the specified plot device.'
        return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

    def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
        'Gets the custom scale for a layout or plot configuration'
        return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
            , Denominator)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
        'Gets the localized version of the canonical media name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
            )

    def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Gets the margins for the layout or plot configuration'
        return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
            , UpperRight)

    def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
        'Gets the width and height of the configured paper'
        return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
            , Height)

    def GetPlotDeviceNames(self):
        'Gets all available plot device names.'
        return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

    def GetPlotStyleTableNames(self):
        'Gets all available plot style table names.'
        return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

    def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Gets the coordinates that define the portion of the layout to plot'
        return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
            , UpperRight)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def RefreshPlotDeviceInfo(self):
        'Updates the plot, canonical media, and plot style table information to reflect the current system state.'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

    def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
        'Sets the custom scale for a layout or plot configuration'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
            , Denominator)

    def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Sets the coordinates that define the portion of the layout to plot'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
        "CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
        "ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ModelType": (34, 2, (11, 0), (), "ModelType", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
        "PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
        "PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
        "PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
        "PlotType": (13, 2, (3, 0), (), "PlotType", None),
        "PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
        "PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
        "PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
        "PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
        "ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
        "ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
        "StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
        "StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
        "UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
        "ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
    }
    _prop_map_put_ = {
        "CanonicalMediaName": ((6, LCID, 4, 0),()),
        "CenterPlot": ((11, LCID, 4, 0),()),
        "ConfigName": ((3, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PaperUnits": ((7, LCID, 4, 0),()),
        "PlotHidden": ((12, LCID, 4, 0),()),
        "PlotOrigin": ((30, LCID, 4, 0),()),
        "PlotRotation": ((10, LCID, 4, 0),()),
        "PlotType": ((13, LCID, 4, 0),()),
        "PlotViewportBorders": ((8, LCID, 4, 0),()),
        "PlotViewportsFirst": ((24, LCID, 4, 0),()),
        "PlotWithLineweights": ((21, LCID, 4, 0),()),
        "PlotWithPlotStyles": ((33, LCID, 4, 0),()),
        "ScaleLineweights": ((20, LCID, 4, 0),()),
        "ShowPlotStyles": ((9, LCID, 4, 0),()),
        "StandardScale": ((16, LCID, 4, 0),()),
        "StyleSheet": ((25, LCID, 4, 0),()),
        "UseStandardScale": ((15, LCID, 4, 0),()),
        "ViewToPlot": ((14, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfigurations(DispatchBaseClass):
    'A collection of named plot settings'
    CLSID = IID('{02242489-515A-4BDD-AC0C-E125FD1BE28C}')
    coclass_clsid = IID('{0EEABD18-B6F5-4E1E-887D-0384A20CD8E9}')

    # Result is of type IAcadPlotConfiguration
    def Add(self, Name=defaultNamedNotOptArg, ModelType=defaultNamedOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
            , ModelType)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{37A8DABC-FD78-4509-B9CA-396F4CC30472}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadPlotConfiguration
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{37A8DABC-FD78-4509-B9CA-396F4CC30472}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{37A8DABC-FD78-4509-B9CA-396F4CC30472}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{37A8DABC-FD78-4509-B9CA-396F4CC30472}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPoint(DispatchBaseClass):
    'Acad Point Interface'
    CLSID = IID('{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}')
    coclass_clsid = IID('{5759A970-9028-4C5C-805B-AFE6D6169382}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadPoint override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPointCloudEx(DispatchBaseClass):
    'IAcadPointCloudEx Interface'
    CLSID = IID('{43DC153E-7BF6-43A8-96AC-C6788C702C9D}')
    coclass_clsid = IID('{028BA451-EBBA-4529-8521-DBFB95EB745C}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ColorScheme": (19, 2, (8, 0), (), "ColorScheme", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Geolocate": (12, 2, (11, 0), (), "Geolocate", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (4, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Locked": (11, 2, (11, 0), (), "Locked", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (8, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Path": (9, 2, (8, 0), (), "Path", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (5, 2, (5, 0), (), "Rotation", None),
        "ShowCropped": (10, 2, (11, 0), (), "ShowCropped", None),
        "Stylization": (18, 2, (3, 0), (), "Stylization", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Unit": (14, 2, (8, 0), (), "Unit", None),
        "UnitFactor": (15, 2, (5, 0), (), "UnitFactor", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "scale": (17, 2, (5, 0), (), "scale", None),
    }
    _prop_map_put_ = {
        "ColorScheme": ((19, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Geolocate": ((12, LCID, 4, 0),()),
        "InsertionPoint": ((4, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Locked": ((11, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((8, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((5, LCID, 4, 0),()),
        "ShowCropped": ((10, LCID, 4, 0),()),
        "Stylization": ((18, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "scale": ((17, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolyfaceMesh(DispatchBaseClass):
    'IAcadPolyfaceMesh Interface'
    CLSID = IID('{FD4B5856-B661-4E10-8B79-1E793FDB0E50}')
    coclass_clsid = IID('{A9879069-87D2-4F15-94B4-92531900783C}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(2, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfFaces": (4, 2, (3, 0), (), "NumberOfFaces", None),
        "NumberOfVertices": (3, 2, (3, 0), (), "NumberOfVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Faces": ((80, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolygonMesh(DispatchBaseClass):
    'Acad PolygonMesh Interface'
    CLSID = IID('{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}')
    coclass_clsid = IID('{7BAA52E2-CBFA-406B-83AB-7D0F939026D4}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a vertex to the polygonmesh'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(11, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the polygonmesh and returns the sub-entities as an array of object'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MClose": (2, 2, (11, 0), (), "MClose", None),
        "MDensity": (4, 2, (3, 0), (), "MDensity", None),
        "MVertexCount": (6, 2, (3, 0), (), "MVertexCount", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NClose": (3, 2, (11, 0), (), "NClose", None),
        "NDensity": (5, 2, (3, 0), (), "NDensity", None),
        "NVertexCount": (7, 2, (3, 0), (), "NVertexCount", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Type": (8, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MClose": ((2, LCID, 4, 0),()),
        "MDensity": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "NClose": ((3, LCID, 4, 0),()),
        "NDensity": ((5, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolyline(DispatchBaseClass):
    'Acad Polyline Interface'
    CLSID = IID('{780E9428-D7F9-4F96-8E91-55C8F3CF3082}')
    coclass_clsid = IID('{DD0ACEEC-B19B-4EC4-A5C8-C85BBE6402B2}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a vertex to the polyline'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(17, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the polyline and returns the sub-entities as an array of Object'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetBulge(self, Index=defaultNamedNotOptArg):
        'Returns the vertex bulge of the polyline'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=defaultNamedNotOptArg):
        'Returns segment width of the polyline'
        return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 0)), 'GetWidth', None,Index
            , StartWidth, EndWidth)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new entity object by offsetting the polyline by a specified distance'
        return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
        'Sets the vertex bulge of the polyline'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , bulge)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
        'Sets the segment width of the polyline'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 0)),Index
            , StartWidth, EndWidth)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (16, 2, (5, 0), (), "Area", None),
        "Closed": (14, 2, (11, 0), (), "Closed", None),
        "ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (12, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (18, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeGeneration": (15, 2, (11, 0), (), "LinetypeGeneration", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Type": (13, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((14, LCID, 4, 0),()),
        "ConstantWidth": ((10, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "Elevation": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeGeneration": ((15, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((13, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenu(DispatchBaseClass):
    'An Acad cascading menu'
    CLSID = IID('{551A5349-4463-40E2-822C-D3A632409117}')
    coclass_clsid = IID('{8774869F-546D-4CE5-9703-CFA67AEEBF26}')

    # Result is of type IAcadPopupMenuItem
    def AddMenuItem(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg):
        'Adds a popup menu item to a popup menu'
        ret = self._oleobj_.InvokeTypes(1610743818, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1)),Index
            , Label, Macro)
        if ret is not None:
            ret = Dispatch(ret, 'AddMenuItem', '{2E00012D-0862-428C-B675-A88781D31934}')
        return ret

    # Result is of type IAcadPopupMenuItem
    def AddSeparator(self, Index=defaultNamedNotOptArg):
        'Adds a separator to an existing menu or toolbar'
        ret = self._oleobj_.InvokeTypes(1610743820, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddSeparator', '{2E00012D-0862-428C-B675-A88781D31934}')
        return ret

    # Result is of type IAcadPopupMenu
    def AddSubMenu(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg):
        'Adds a submenu to an existing menu'
        ret = self._oleobj_.InvokeTypes(1610743819, LCID, 1, (9, 0), ((12, 1), (8, 1)),Index
            , Label)
        if ret is not None:
            ret = Dispatch(ret, 'AddSubMenu', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    def InsertInMenuBar(self, Index=defaultNamedNotOptArg):
        'Inserts the popup menu into the GstarCAD menu bar at a specified location'
        return self._oleobj_.InvokeTypes(1610743821, LCID, 1, (24, 0), ((12, 1),),Index
            )

    # Result is of type IAcadPopupMenuItem
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{2E00012D-0862-428C-B675-A88781D31934}')
        return ret

    def RemoveFromMenuBar(self):
        'Removes the popup menu from the GstarCAD menu bar'
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "Name": (1610743813, 2, (8, 0), (), "Name", None),
        "NameNoMnemonic": (1610743815, 2, (8, 0), (), "NameNoMnemonic", None),
        "OnMenuBar": (1610743817, 2, (11, 0), (), "OnMenuBar", None),
        "Parent": (1610743812, 2, (9, 0), (), "Parent", None),
        "ShortcutMenu": (1610743816, 2, (11, 0), (), "ShortcutMenu", None),
        "TagString": (1610743823, 2, (8, 0), (), "TagString", None),
    }
    _prop_map_put_ = {
        "Name": ((1610743813, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{2E00012D-0862-428C-B675-A88781D31934}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{2E00012D-0862-428C-B675-A88781D31934}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPopupMenuItem(DispatchBaseClass):
    'A single menu item on an GstarCAD pull-down menu'
    CLSID = IID('{2E00012D-0862-428C-B675-A88781D31934}')
    coclass_clsid = IID('{70408B41-584A-4C9C-B31B-F36FF8073798}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1610743826, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Caption": (1610743823, 2, (8, 0), (), "Caption", None),
        "Check": (1610743816, 2, (11, 0), (), "Check", None),
        "Enable": (1610743814, 2, (11, 0), (), "Enable", None),
        "EndSubMenuLevel": (1610743827, 2, (3, 0), (), "EndSubMenuLevel", None),
        "HelpString": (1610743824, 2, (8, 0), (), "HelpString", None),
        "Index": (1610743822, 2, (3, 0), (), "Index", None),
        "Label": (1610743810, 2, (8, 0), (), "Label", None),
        "Macro": (1610743820, 2, (8, 0), (), "Macro", None),
        # Method 'Parent' returns object of type 'IAcadPopupMenu'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{551A5349-4463-40E2-822C-D3A632409117}'),
        # Method 'SubMenu' returns object of type 'IAcadPopupMenu'
        "SubMenu": (1610743819, 2, (9, 0), (), "SubMenu", '{551A5349-4463-40E2-822C-D3A632409117}'),
        "TagString": (1610743812, 2, (8, 0), (), "TagString", None),
        "Type": (1610743818, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
        "Check": ((1610743816, LCID, 4, 0),()),
        "Enable": ((1610743814, LCID, 4, 0),()),
        "EndSubMenuLevel": ((1610743827, LCID, 4, 0),()),
        "HelpString": ((1610743824, LCID, 4, 0),()),
        "Label": ((1610743810, LCID, 4, 0),()),
        "Macro": ((1610743820, LCID, 4, 0),()),
        "TagString": ((1610743812, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenus(DispatchBaseClass):
    'A collection of PopupMenu objects representing all the popup menus loaded in the MenuGroup'
    CLSID = IID('{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}')
    coclass_clsid = IID('{63F5DDA7-C143-42AD-94E8-763C8E770537}')

    # Result is of type IAcadPopupMenu
    def Add(self, MenuName=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1),),MenuName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    def InsertMenuInMenuBar(self, MenuName=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
        'Inserts a menu into the GstarCAD menu bar'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (12, 1)),MenuName
            , Index)

    # Result is of type IAcadPopupMenu
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    def RemoveMenuFromMenuBar(self, Index=defaultNamedNotOptArg):
        'Removes the popup menu, as specified from the collection, from the GstarCAD menu bar'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((12, 1),),Index
            )

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroup'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{72D027F2-CD79-4135-AE60-74FD0F8F595B}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{551A5349-4463-40E2-822C-D3A632409117}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{551A5349-4463-40E2-822C-D3A632409117}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPreferences(DispatchBaseClass):
    'IAcadPreferences �ӿ�'
    CLSID = IID('{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}')
    coclass_clsid = IID('{57FB46D7-D66B-4EEA-969A-5D778BA7B79F}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        # Method 'Display' returns object of type 'IAcadPreferencesDisplay'
        "Display": (1610743810, 2, (9, 0), (), "Display", '{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}'),
        # Method 'Drafting' returns object of type 'IAcadPreferencesDrafting'
        "Drafting": (1610743815, 2, (9, 0), (), "Drafting", '{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}'),
        # Method 'Files' returns object of type 'IAcadPreferencesFiles'
        "Files": (1610743809, 2, (9, 0), (), "Files", '{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}'),
        # Method 'OpenSave' returns object of type 'IAcadPreferencesOpenSave'
        "OpenSave": (1610743811, 2, (9, 0), (), "OpenSave", '{97311A0B-4C28-4D80-8397-40FB3403AEF0}'),
        # Method 'Output' returns object of type 'IAcadPreferencesOutput'
        "Output": (1610743812, 2, (9, 0), (), "Output", '{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}'),
        # Method 'Profiles' returns object of type 'IAcadPreferencesProfiles'
        "Profiles": (1610743817, 2, (9, 0), (), "Profiles", '{807758BB-F12D-4275-A52F-6A2CFCAD9A21}'),
        # Method 'Selection' returns object of type 'IAcadPreferencesSelection'
        "Selection": (1610743816, 2, (9, 0), (), "Selection", '{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}'),
        # Method 'System' returns object of type 'IAcadPreferencesSystem'
        "System": (1610743813, 2, (9, 0), (), "System", '{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}'),
        # Method 'User' returns object of type 'IAcadPreferencesUser'
        "User": (1610743814, 2, (9, 0), (), "User", '{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}'),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDisplay(DispatchBaseClass):
    'This object contains the options from the Display tab on the Options dialog'
    CLSID = IID('{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}')
    coclass_clsid = IID('{865D8226-319C-4784-B160-5D45FE038BF8}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "AutoTrackingVecColor": (1610743841, 2, (19, 0), (), "AutoTrackingVecColor", None),
        "CursorSize": (1610743823, 2, (3, 0), (), "CursorSize", None),
        "DisplayLayoutTabs": (1610743853, 2, (11, 0), (), "DisplayLayoutTabs", None),
        "DisplayScreenMenu": (1610743821, 2, (11, 0), (), "DisplayScreenMenu", None),
        "DisplayScrollBars": (1610743819, 2, (11, 0), (), "DisplayScrollBars", None),
        "DockedVisibleLines": (1610743825, 2, (3, 0), (), "DockedVisibleLines", None),
        "GraphicsWinLayoutBackgrndColor": (1610743833, 2, (19, 0), (), "GraphicsWinLayoutBackgrndColor", None),
        "GraphicsWinModelBackgrndColor": (1610743829, 2, (19, 0), (), "GraphicsWinModelBackgrndColor", None),
        "HistoryLines": (1610743849, 2, (3, 0), (), "HistoryLines", None),
        "ImageFrameHighlight": (1610743855, 2, (11, 0), (), "ImageFrameHighlight", None),
        "LayoutCreateViewport": (1610743817, 2, (11, 0), (), "LayoutCreateViewport", None),
        "LayoutCrosshairColor": (1610743839, 2, (19, 0), (), "LayoutCrosshairColor", None),
        "LayoutDisplayMargins": (1610743809, 2, (11, 0), (), "LayoutDisplayMargins", None),
        "LayoutDisplayPaper": (1610743811, 2, (11, 0), (), "LayoutDisplayPaper", None),
        "LayoutDisplayPaperShadow": (1610743813, 2, (11, 0), (), "LayoutDisplayPaperShadow", None),
        "LayoutShowPlotSetup": (1610743815, 2, (11, 0), (), "LayoutShowPlotSetup", None),
        "MaxAutoCADWindow": (1610743851, 2, (11, 0), (), "MaxAutoCADWindow", None),
        "ModelCrosshairColor": (1610743831, 2, (19, 0), (), "ModelCrosshairColor", None),
        "ShowRasterImage": (1610743827, 2, (11, 0), (), "ShowRasterImage", None),
        "TextFont": (1610743843, 2, (8, 0), (), "TextFont", None),
        "TextFontSize": (1610743847, 2, (3, 0), (), "TextFontSize", None),
        "TextFontStyle": (1610743845, 2, (3, 0), (), "TextFontStyle", None),
        "TextWinBackgrndColor": (1610743835, 2, (19, 0), (), "TextWinBackgrndColor", None),
        "TextWinTextColor": (1610743837, 2, (19, 0), (), "TextWinTextColor", None),
        "TrueColorImages": (1610743857, 2, (11, 0), (), "TrueColorImages", None),
        "XRefFadeIntensity": (1610743859, 2, (3, 0), (), "XRefFadeIntensity", None),
    }
    _prop_map_put_ = {
        "AutoTrackingVecColor": ((1610743841, LCID, 4, 0),()),
        "CursorSize": ((1610743823, LCID, 4, 0),()),
        "DisplayLayoutTabs": ((1610743853, LCID, 4, 0),()),
        "DisplayScreenMenu": ((1610743821, LCID, 4, 0),()),
        "DisplayScrollBars": ((1610743819, LCID, 4, 0),()),
        "DockedVisibleLines": ((1610743825, LCID, 4, 0),()),
        "GraphicsWinLayoutBackgrndColor": ((1610743833, LCID, 4, 0),()),
        "GraphicsWinModelBackgrndColor": ((1610743829, LCID, 4, 0),()),
        "HistoryLines": ((1610743849, LCID, 4, 0),()),
        "ImageFrameHighlight": ((1610743855, LCID, 4, 0),()),
        "LayoutCreateViewport": ((1610743817, LCID, 4, 0),()),
        "LayoutCrosshairColor": ((1610743839, LCID, 4, 0),()),
        "LayoutDisplayMargins": ((1610743809, LCID, 4, 0),()),
        "LayoutDisplayPaper": ((1610743811, LCID, 4, 0),()),
        "LayoutDisplayPaperShadow": ((1610743813, LCID, 4, 0),()),
        "LayoutShowPlotSetup": ((1610743815, LCID, 4, 0),()),
        "MaxAutoCADWindow": ((1610743851, LCID, 4, 0),()),
        "ModelCrosshairColor": ((1610743831, LCID, 4, 0),()),
        "ShowRasterImage": ((1610743827, LCID, 4, 0),()),
        "TextFont": ((1610743843, LCID, 4, 0),()),
        "TextFontSize": ((1610743847, LCID, 4, 0),()),
        "TextFontStyle": ((1610743845, LCID, 4, 0),()),
        "TextWinBackgrndColor": ((1610743835, LCID, 4, 0),()),
        "TextWinTextColor": ((1610743837, LCID, 4, 0),()),
        "TrueColorImages": ((1610743857, LCID, 4, 0),()),
        "XRefFadeIntensity": ((1610743859, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDrafting(DispatchBaseClass):
    'This object contains the options from the Drafting tab on the Options dialog'
    CLSID = IID('{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}')
    coclass_clsid = IID('{AA668926-0FCF-4677-A97F-AD7920AB2C58}')

    _prop_map_get_ = {
        "AlignmentPointAcquisition": (1610743829, 2, (3, 0), (), "AlignmentPointAcquisition", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "AutoSnapAperture": (1610743815, 2, (11, 0), (), "AutoSnapAperture", None),
        "AutoSnapApertureSize": (1610743817, 2, (3, 0), (), "AutoSnapApertureSize", None),
        "AutoSnapMagnet": (1610743811, 2, (11, 0), (), "AutoSnapMagnet", None),
        "AutoSnapMarker": (1610743809, 2, (11, 0), (), "AutoSnapMarker", None),
        "AutoSnapMarkerColor": (1610743819, 2, (3, 0), (), "AutoSnapMarkerColor", None),
        "AutoSnapMarkerSize": (1610743821, 2, (3, 0), (), "AutoSnapMarkerSize", None),
        "AutoSnapTooltip": (1610743813, 2, (11, 0), (), "AutoSnapTooltip", None),
        "AutoTrackTooltip": (1610743827, 2, (11, 0), (), "AutoTrackTooltip", None),
        "FullScreenTrackingVector": (1610743825, 2, (11, 0), (), "FullScreenTrackingVector", None),
        "PolarTrackingVector": (1610743823, 2, (11, 0), (), "PolarTrackingVector", None),
    }
    _prop_map_put_ = {
        "AlignmentPointAcquisition": ((1610743829, LCID, 4, 0),()),
        "AutoSnapAperture": ((1610743815, LCID, 4, 0),()),
        "AutoSnapApertureSize": ((1610743817, LCID, 4, 0),()),
        "AutoSnapMagnet": ((1610743811, LCID, 4, 0),()),
        "AutoSnapMarker": ((1610743809, LCID, 4, 0),()),
        "AutoSnapMarkerColor": ((1610743819, LCID, 4, 0),()),
        "AutoSnapMarkerSize": ((1610743821, LCID, 4, 0),()),
        "AutoSnapTooltip": ((1610743813, LCID, 4, 0),()),
        "AutoTrackTooltip": ((1610743827, LCID, 4, 0),()),
        "FullScreenTrackingVector": ((1610743825, LCID, 4, 0),()),
        "PolarTrackingVector": ((1610743823, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesFiles(DispatchBaseClass):
    'This object contains the options from the Files tab on the Options dialog'
    CLSID = IID('{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}')
    coclass_clsid = IID('{6CE93067-926C-4A41-BFC4-EA0A02C9F7E7}')

    def GetProjectFilePath(self, ProjectName=defaultNamedNotOptArg):
        'Gets the directory in which GstarCAD looks for external reference files'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743858, LCID, 1, (8, 0), ((8, 1),),ProjectName
            )

    def SetProjectFilePath(self, ProjectName=defaultNamedNotOptArg, ProjectFilePath=defaultNamedNotOptArg):
        'Sets the directory in which GstarCAD looks for external reference files'
        return self._oleobj_.InvokeTypes(1610743857, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProjectName
            , ProjectFilePath)

    _prop_map_get_ = {
        "AltFontFile": (1610743831, 2, (8, 0), (), "AltFontFile", None),
        "AltTabletMenuFile": (1610743855, 2, (8, 0), (), "AltTabletMenuFile", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "AutoSavePath": (1610743843, 2, (8, 0), (), "AutoSavePath", None),
        "ColorBookPath": (1610743869, 2, (8, 0), (), "ColorBookPath", None),
        "ConfigFile": (1610743823, 2, (8, 0), (), "ConfigFile", None),
        "CustomDictionary": (1610743829, 2, (8, 0), (), "CustomDictionary", None),
        "CustomIconPath": (1610743817, 2, (8, 0), (), "CustomIconPath", None),
        "DefaultInternetURL": (1610743821, 2, (8, 0), (), "DefaultInternetURL", None),
        "DriversPath": (1610743811, 2, (8, 0), (), "DriversPath", None),
        "EnterpriseMenuFile": (1610743815, 2, (8, 0), (), "EnterpriseMenuFile", None),
        "FontFileMap": (1610743833, 2, (8, 0), (), "FontFileMap", None),
        "HelpFilePath": (1610743819, 2, (8, 0), (), "HelpFilePath", None),
        "LicenseServer": (1610743824, 2, (8, 0), (), "LicenseServer", None),
        "LogFilePath": (1610743847, 2, (8, 0), (), "LogFilePath", None),
        "MainDictionary": (1610743827, 2, (8, 0), (), "MainDictionary", None),
        "MenuFile": (1610743813, 2, (8, 0), (), "MenuFile", None),
        "ObjectARXPath": (1610743867, 2, (8, 0), (), "ObjectARXPath", None),
        "PageSetupOverridesTemplateFile": (1610743877, 2, (8, 0), (), "PageSetupOverridesTemplateFile", None),
        "PlotLogFilePath": (1610743875, 2, (8, 0), (), "PlotLogFilePath", None),
        "PostScriptPrologFile": (1610743839, 2, (8, 0), (), "PostScriptPrologFile", None),
        "PrintFile": (1610743835, 2, (8, 0), (), "PrintFile", None),
        "PrintSpoolExecutable": (1610743837, 2, (8, 0), (), "PrintSpoolExecutable", None),
        "PrintSpoolerPath": (1610743841, 2, (8, 0), (), "PrintSpoolerPath", None),
        "PrinterConfigPath": (1610743859, 2, (8, 0), (), "PrinterConfigPath", None),
        "PrinterDescPath": (1610743861, 2, (8, 0), (), "PrinterDescPath", None),
        "PrinterStyleSheetPath": (1610743863, 2, (8, 0), (), "PrinterStyleSheetPath", None),
        "QNewTemplateFile": (1610743873, 2, (8, 0), (), "QNewTemplateFile", None),
        "SupportPath": (0, 2, (8, 0), (), "SupportPath", None),
        "TempFilePath": (1610743849, 2, (8, 0), (), "TempFilePath", None),
        "TempXrefPath": (1610743851, 2, (8, 0), (), "TempXrefPath", None),
        "TemplateDwgPath": (1610743845, 2, (8, 0), (), "TemplateDwgPath", None),
        "TextEditor": (1610743825, 2, (8, 0), (), "TextEditor", None),
        "TextureMapPath": (1610743853, 2, (8, 0), (), "TextureMapPath", None),
        "ToolPalettePath": (1610743871, 2, (8, 0), (), "ToolPalettePath", None),
        "WorkspacePath": (1610743865, 2, (8, 0), (), "WorkspacePath", None),
    }
    _prop_map_put_ = {
        "AltFontFile": ((1610743831, LCID, 4, 0),()),
        "AltTabletMenuFile": ((1610743855, LCID, 4, 0),()),
        "AutoSavePath": ((1610743843, LCID, 4, 0),()),
        "ColorBookPath": ((1610743869, LCID, 4, 0),()),
        "CustomDictionary": ((1610743829, LCID, 4, 0),()),
        "CustomIconPath": ((1610743817, LCID, 4, 0),()),
        "DefaultInternetURL": ((1610743821, LCID, 4, 0),()),
        "DriversPath": ((1610743811, LCID, 4, 0),()),
        "EnterpriseMenuFile": ((1610743815, LCID, 4, 0),()),
        "FontFileMap": ((1610743833, LCID, 4, 0),()),
        "HelpFilePath": ((1610743819, LCID, 4, 0),()),
        "LogFilePath": ((1610743847, LCID, 4, 0),()),
        "MainDictionary": ((1610743827, LCID, 4, 0),()),
        "MenuFile": ((1610743813, LCID, 4, 0),()),
        "ObjectARXPath": ((1610743867, LCID, 4, 0),()),
        "PageSetupOverridesTemplateFile": ((1610743877, LCID, 4, 0),()),
        "PlotLogFilePath": ((1610743875, LCID, 4, 0),()),
        "PostScriptPrologFile": ((1610743839, LCID, 4, 0),()),
        "PrintFile": ((1610743835, LCID, 4, 0),()),
        "PrintSpoolExecutable": ((1610743837, LCID, 4, 0),()),
        "PrintSpoolerPath": ((1610743841, LCID, 4, 0),()),
        "PrinterConfigPath": ((1610743859, LCID, 4, 0),()),
        "PrinterDescPath": ((1610743861, LCID, 4, 0),()),
        "PrinterStyleSheetPath": ((1610743863, LCID, 4, 0),()),
        "QNewTemplateFile": ((1610743873, LCID, 4, 0),()),
        "SupportPath": ((0, LCID, 4, 0),()),
        "TempFilePath": ((1610743849, LCID, 4, 0),()),
        "TempXrefPath": ((1610743851, LCID, 4, 0),()),
        "TemplateDwgPath": ((1610743845, LCID, 4, 0),()),
        "TextEditor": ((1610743825, LCID, 4, 0),()),
        "TextureMapPath": ((1610743853, LCID, 4, 0),()),
        "ToolPalettePath": ((1610743871, LCID, 4, 0),()),
        "WorkspacePath": ((1610743865, LCID, 4, 0),()),
    }
    # Default property for this class is 'SupportPath'
    def __call__(self):
        return self._ApplyTypes_(*(0, 2, (8, 0), (), "SupportPath", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOpenSave(DispatchBaseClass):
    'This object contains the options from the Open and Save tab on the Options dialog'
    CLSID = IID('{97311A0B-4C28-4D80-8397-40FB3403AEF0}')
    coclass_clsid = IID('{7DBA4518-9AA4-416E-A3D6-45E80A02E979}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "AutoAudit": (1610743831, 2, (11, 0), (), "AutoAudit", None),
        "AutoSaveInterval": (1610743813, 2, (3, 0), (), "AutoSaveInterval", None),
        "CreateBackup": (1610743815, 2, (11, 0), (), "CreateBackup", None),
        "DemandLoadARXApp": (1610743825, 2, (3, 0), (), "DemandLoadARXApp", None),
        "FullCRCValidation": (1610743817, 2, (11, 0), (), "FullCRCValidation", None),
        "IncrementalSavePercent": (1610743811, 2, (3, 0), (), "IncrementalSavePercent", None),
        "LogFileOn": (1610743819, 2, (11, 0), (), "LogFileOn", None),
        "MRUNumber": (1610743835, 2, (3, 0), (), "MRUNumber", None),
        "ProxyImage": (1610743827, 2, (3, 0), (), "ProxyImage", None),
        "SaveAsType": (1610743833, 2, (3, 0), (), "SaveAsType", None),
        "SavePreviewThumbnail": (1610743809, 2, (11, 0), (), "SavePreviewThumbnail", None),
        "ShowProxyDialogBox": (1610743829, 2, (11, 0), (), "ShowProxyDialogBox", None),
        "TempFileExtension": (1610743821, 2, (8, 0), (), "TempFileExtension", None),
        "XrefDemandLoad": (1610743823, 2, (3, 0), (), "XrefDemandLoad", None),
    }
    _prop_map_put_ = {
        "AutoAudit": ((1610743831, LCID, 4, 0),()),
        "AutoSaveInterval": ((1610743813, LCID, 4, 0),()),
        "CreateBackup": ((1610743815, LCID, 4, 0),()),
        "DemandLoadARXApp": ((1610743825, LCID, 4, 0),()),
        "FullCRCValidation": ((1610743817, LCID, 4, 0),()),
        "IncrementalSavePercent": ((1610743811, LCID, 4, 0),()),
        "LogFileOn": ((1610743819, LCID, 4, 0),()),
        "ProxyImage": ((1610743827, LCID, 4, 0),()),
        "SaveAsType": ((1610743833, LCID, 4, 0),()),
        "SavePreviewThumbnail": ((1610743809, LCID, 4, 0),()),
        "ShowProxyDialogBox": ((1610743829, LCID, 4, 0),()),
        "TempFileExtension": ((1610743821, LCID, 4, 0),()),
        "XrefDemandLoad": ((1610743823, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOutput(DispatchBaseClass):
    'This object contains the options from the Output tab on the Options dialog'
    CLSID = IID('{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}')
    coclass_clsid = IID('{62EE39DA-DF13-42B1-861F-487026489C27}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "AutomaticPlotLog": (1610743831, 2, (11, 0), (), "AutomaticPlotLog", None),
        "ContinuousPlotLog": (1610743829, 2, (11, 0), (), "ContinuousPlotLog", None),
        "DefaultOutputDevice": (1610743809, 2, (8, 0), (), "DefaultOutputDevice", None),
        "DefaultPlotStyleForLayer": (1610743827, 2, (8, 0), (), "DefaultPlotStyleForLayer", None),
        "DefaultPlotStyleForObjects": (1610743825, 2, (8, 0), (), "DefaultPlotStyleForObjects", None),
        "DefaultPlotStyleTable": (1610743823, 2, (8, 0), (), "DefaultPlotStyleTable", None),
        "DefaultPlotToFilePath": (1610743833, 2, (8, 0), (), "DefaultPlotToFilePath", None),
        "OLEQuality": (1610743817, 2, (3, 0), (), "OLEQuality", None),
        "PlotLegacy": (1610743815, 2, (11, 0), (), "PlotLegacy", None),
        "PlotPolicy": (1610743821, 2, (3, 0), (), "PlotPolicy", None),
        "PrinterPaperSizeAlert": (1610743813, 2, (11, 0), (), "PrinterPaperSizeAlert", None),
        "PrinterSpoolAlert": (1610743811, 2, (3, 0), (), "PrinterSpoolAlert", None),
        "UseLastPlotSettings": (1610743819, 2, (11, 0), (), "UseLastPlotSettings", None),
    }
    _prop_map_put_ = {
        "AutomaticPlotLog": ((1610743831, LCID, 4, 0),()),
        "ContinuousPlotLog": ((1610743829, LCID, 4, 0),()),
        "DefaultOutputDevice": ((1610743809, LCID, 4, 0),()),
        "DefaultPlotStyleForLayer": ((1610743827, LCID, 4, 0),()),
        "DefaultPlotStyleForObjects": ((1610743825, LCID, 4, 0),()),
        "DefaultPlotStyleTable": ((1610743823, LCID, 4, 0),()),
        "DefaultPlotToFilePath": ((1610743833, LCID, 4, 0),()),
        "OLEQuality": ((1610743817, LCID, 4, 0),()),
        "PlotLegacy": ((1610743815, LCID, 4, 0),()),
        "PlotPolicy": ((1610743821, LCID, 4, 0),()),
        "PrinterPaperSizeAlert": ((1610743813, LCID, 4, 0),()),
        "PrinterSpoolAlert": ((1610743811, LCID, 4, 0),()),
        "UseLastPlotSettings": ((1610743819, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesProfiles(DispatchBaseClass):
    'This object contains the options from the Profiles tab on the Options dialog'
    CLSID = IID('{807758BB-F12D-4275-A52F-6A2CFCAD9A21}')
    coclass_clsid = IID('{38CDCF3E-F321-43F6-B355-6CBE197BD33A}')

    def CopyProfile(self, oldProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
        'Copies the specified profile'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),oldProfileName
            , newProfileName)

    def DeleteProfile(self, ProfileName=defaultNamedNotOptArg):
        'Deletes the specified profile'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),ProfileName
            )

    def ExportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg):
        'Exports the active profile so it can be shared with other users'
        return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProfileName
            , RegFile)

    def GetAllProfileNames(self, pNames=pythoncom.Missing):
        'Gets all available profiles for the system'
        return self._ApplyTypes_(1610743817, 1, (24, 0), ((16396, 2),), 'GetAllProfileNames', None,pNames
            )

    def ImportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg, IncludePathInfo=defaultNamedNotOptArg):
        'Imports a profile created by another user'
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 1)),ProfileName
            , RegFile, IncludePathInfo)

    def RenameProfile(self, origProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
        'Renames the specified profile'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1), (8, 1)),origProfileName
            , newProfileName)

    def ResetProfile(self, Profile=defaultNamedNotOptArg):
        'Resets the value in the specified profile to its default values'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1),),Profile
            )

    _prop_map_get_ = {
        "ActiveProfile": (1610743809, 2, (8, 0), (), "ActiveProfile", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
    }
    _prop_map_put_ = {
        "ActiveProfile": ((1610743809, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSelection(DispatchBaseClass):
    'This object contains the options from the Selection tab on the Options dialog'
    CLSID = IID('{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}')
    coclass_clsid = IID('{1615B81F-2474-4AC3-A6F7-885F0DC5D62F}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "DisplayGrips": (1610743819, 2, (11, 0), (), "DisplayGrips", None),
        "DisplayGripsWithinBlocks": (1610743821, 2, (11, 0), (), "DisplayGripsWithinBlocks", None),
        "GripColorSelected": (1610743823, 2, (3, 0), (), "GripColorSelected", None),
        "GripColorUnselected": (1610743825, 2, (3, 0), (), "GripColorUnselected", None),
        "GripSize": (1610743827, 2, (3, 0), (), "GripSize", None),
        "PickAdd": (1610743811, 2, (11, 0), (), "PickAdd", None),
        "PickAuto": (1610743815, 2, (11, 0), (), "PickAuto", None),
        "PickBoxSize": (1610743817, 2, (3, 0), (), "PickBoxSize", None),
        "PickDrag": (1610743813, 2, (11, 0), (), "PickDrag", None),
        "PickFirst": (1610743809, 2, (11, 0), (), "PickFirst", None),
        "PickGroup": (1610743829, 2, (11, 0), (), "PickGroup", None),
    }
    _prop_map_put_ = {
        "DisplayGrips": ((1610743819, LCID, 4, 0),()),
        "DisplayGripsWithinBlocks": ((1610743821, LCID, 4, 0),()),
        "GripColorSelected": ((1610743823, LCID, 4, 0),()),
        "GripColorUnselected": ((1610743825, LCID, 4, 0),()),
        "GripSize": ((1610743827, LCID, 4, 0),()),
        "PickAdd": ((1610743811, LCID, 4, 0),()),
        "PickAuto": ((1610743815, LCID, 4, 0),()),
        "PickBoxSize": ((1610743817, LCID, 4, 0),()),
        "PickDrag": ((1610743813, LCID, 4, 0),()),
        "PickFirst": ((1610743809, LCID, 4, 0),()),
        "PickGroup": ((1610743829, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSystem(DispatchBaseClass):
    'This object contains the options from the System tab on the Options dialog'
    CLSID = IID('{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}')
    coclass_clsid = IID('{C19DA545-A773-422D-818F-61E60340C184}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "BeepOnError": (1610743819, 2, (11, 0), (), "BeepOnError", None),
        "DisplayOLEScale": (1610743811, 2, (11, 0), (), "DisplayOLEScale", None),
        "EnableStartupDialog": (1610743817, 2, (11, 0), (), "EnableStartupDialog", None),
        "LoadAcadLspInAllDocuments": (1610743823, 2, (11, 0), (), "LoadAcadLspInAllDocuments", None),
        "ShowWarningMessages": (1610743821, 2, (11, 0), (), "ShowWarningMessages", None),
        "SingleDocumentMode": (1610743809, 2, (11, 0), (), "SingleDocumentMode", None),
        "StoreSQLIndex": (1610743813, 2, (11, 0), (), "StoreSQLIndex", None),
        "TablesReadOnly": (1610743815, 2, (11, 0), (), "TablesReadOnly", None),
    }
    _prop_map_put_ = {
        "BeepOnError": ((1610743819, LCID, 4, 0),()),
        "DisplayOLEScale": ((1610743811, LCID, 4, 0),()),
        "EnableStartupDialog": ((1610743817, LCID, 4, 0),()),
        "LoadAcadLspInAllDocuments": ((1610743823, LCID, 4, 0),()),
        "ShowWarningMessages": ((1610743821, LCID, 4, 0),()),
        "SingleDocumentMode": ((1610743809, LCID, 4, 0),()),
        "StoreSQLIndex": ((1610743813, LCID, 4, 0),()),
        "TablesReadOnly": ((1610743815, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesUser(DispatchBaseClass):
    'This object contains the options from the User tab on the Options dialog'
    CLSID = IID('{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}')
    coclass_clsid = IID('{2DF90FE8-4354-4AB3-ABA9-04B9831F94BF}')

    _prop_map_get_ = {
        "ADCInsertUnitsDefaultSource": (1610743817, 2, (3, 0), (), "ADCInsertUnitsDefaultSource", None),
        "ADCInsertUnitsDefaultTarget": (1610743819, 2, (3, 0), (), "ADCInsertUnitsDefaultTarget", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "HyperlinkDisplayCursor": (1610743813, 2, (11, 0), (), "HyperlinkDisplayCursor", None),
        "HyperlinkDisplayTooltip": (1610743815, 2, (11, 0), (), "HyperlinkDisplayTooltip", None),
        "KeyboardAccelerator": (1610743809, 2, (3, 0), (), "KeyboardAccelerator", None),
        "KeyboardPriority": (1610743811, 2, (3, 0), (), "KeyboardPriority", None),
        "SCMCommandMode": (1610743827, 2, (3, 0), (), "SCMCommandMode", None),
        "SCMDefaultMode": (1610743823, 2, (3, 0), (), "SCMDefaultMode", None),
        "SCMEditMode": (1610743825, 2, (3, 0), (), "SCMEditMode", None),
        "SCMTimeMode": (1610743829, 2, (11, 0), (), "SCMTimeMode", None),
        "SCMTimeValue": (1610743831, 2, (3, 0), (), "SCMTimeValue", None),
        "ShortCutMenuDisplay": (1610743821, 2, (11, 0), (), "ShortCutMenuDisplay", None),
    }
    _prop_map_put_ = {
        "ADCInsertUnitsDefaultSource": ((1610743817, LCID, 4, 0),()),
        "ADCInsertUnitsDefaultTarget": ((1610743819, LCID, 4, 0),()),
        "HyperlinkDisplayCursor": ((1610743813, LCID, 4, 0),()),
        "HyperlinkDisplayTooltip": ((1610743815, LCID, 4, 0),()),
        "KeyboardAccelerator": ((1610743809, LCID, 4, 0),()),
        "KeyboardPriority": ((1610743811, LCID, 4, 0),()),
        "SCMCommandMode": ((1610743827, LCID, 4, 0),()),
        "SCMDefaultMode": ((1610743823, LCID, 4, 0),()),
        "SCMEditMode": ((1610743825, LCID, 4, 0),()),
        "SCMTimeMode": ((1610743829, LCID, 4, 0),()),
        "SCMTimeValue": ((1610743831, LCID, 4, 0),()),
        "ShortCutMenuDisplay": ((1610743821, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRasterImage(DispatchBaseClass):
    'Acad Raster Interface'
    CLSID = IID('{1A5BD135-D93B-4BFD-8027-E8277D629B46}')
    coclass_clsid = IID('{FB5AA334-CBF1-41D1-B9E3-98F2ACB2EB83}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Set clipping boundary'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Brightness": (1, 2, (3, 0), (), "Brightness", None),
        "ClippingEnabled": (11, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (2, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (3, 2, (3, 0), (), "Fade", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (14, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "ImageFile": (9, 2, (8, 0), (), "ImageFile", None),
        "ImageHeight": (7, 2, (5, 0), (), "ImageHeight", None),
        "ImageVisibility": (10, 2, (11, 0), (), "ImageVisibility", None),
        "ImageWidth": (6, 2, (5, 0), (), "ImageWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (8, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (4, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (5, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (17, 2, (5, 0), (), "ScaleFactor", None),
        "ShowRotation": (16, 2, (11, 0), (), "ShowRotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (15, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "transparency": (12, 2, (11, 0), (), "transparency", None),
    }
    _prop_map_put_ = {
        "Brightness": ((1, LCID, 4, 0),()),
        "ClippingEnabled": ((11, LCID, 4, 0),()),
        "Contrast": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((3, LCID, 4, 0),()),
        "ImageFile": ((9, LCID, 4, 0),()),
        "ImageHeight": ((7, LCID, 4, 0),()),
        "ImageVisibility": ((10, LCID, 4, 0),()),
        "ImageWidth": ((6, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((8, LCID, 4, 0),()),
        "Origin": ((4, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((5, LCID, 4, 0),()),
        "ScaleFactor": ((17, LCID, 4, 0),()),
        "ShowRotation": ((16, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "transparency": ((12, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRay(DispatchBaseClass):
    'Acad Ray Interface'
    CLSID = IID('{D05D772F-86F6-4B10-9898-E22BF8C5F192}')
    coclass_clsid = IID('{D44D6709-6C13-4C52-A360-A2943C33EEE8}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SecondPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BasePoint": ((1, LCID, 4, 0),()),
        "DirectionVector": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "SecondPoint": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegion(DispatchBaseClass):
    'Acad Region Interface'
    CLSID = IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')
    coclass_clsid = IID('{A83EBA25-CCF0-45CE-A7C2-FEABE0D3AF59}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Boolean(self, Operation=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
        'Perform a Boolean operation against another region.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
            , Object)

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the region and returns the sub-entities as an array of object.'
        return self._ApplyTypes_(11, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (1, 2, (5, 0), (), "Area", None),
        "Centroid": (2, 2, (12, 0), (), "Centroid", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MomentOfInertia": (3, 2, (12, 0), (), "MomentOfInertia", None),
        "Normal": (4, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Perimeter": (5, 2, (5, 0), (), "Perimeter", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrincipalDirections": (6, 2, (12, 0), (), "PrincipalDirections", None),
        "PrincipalMoments": (7, 2, (12, 0), (), "PrincipalMoments", None),
        "ProductOfInertia": (8, 2, (5, 0), (), "ProductOfInertia", None),
        "RadiiOfGyration": (9, 2, (12, 0), (), "RadiiOfGyration", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplication(DispatchBaseClass):
    'An external application that has been added to the drawing'
    CLSID = IID('{F0F9DD45-70ED-42C1-B4AC-562396361489}')
    coclass_clsid = IID('{CF8BF2DA-8602-41B7-8906-3C67F07994FB}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplications(DispatchBaseClass):
    'The collection of all registered applications in the drawing'
    CLSID = IID('{FA985110-D0CB-4E62-AB01-2FE6027C7F05}')
    coclass_clsid = IID('{216D566A-A968-4E87-A8B3-9B5EB06BB19D}')

    # Result is of type IAcadRegisteredApplication
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{F0F9DD45-70ED-42C1-B4AC-562396361489}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadRegisteredApplication
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{F0F9DD45-70ED-42C1-B4AC-562396361489}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{F0F9DD45-70ED-42C1-B4AC-562396361489}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{F0F9DD45-70ED-42C1-B4AC-562396361489}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadRevolvedSurface(DispatchBaseClass):
    'IAcadRevolvedSurface Interface'
    CLSID = IID('{BC4B31D4-9595-43C1-8BC9-AC5F8003F179}')
    coclass_clsid = IID('{CA2C91D1-2D7B-4195-A66C-CFB788EFEB14}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AxisDirection": (4, 2, (12, 0), (), "AxisDirection", None),
        "AxisPosition": (3, 2, (12, 0), (), "AxisPosition", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RevolutionAngle": (2, 2, (5, 0), (), "RevolutionAngle", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AxisPosition": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RevolutionAngle": ((2, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadScriptJet(DispatchBaseClass):
    'IHCScriptJet �ӿ�'
    CLSID = IID('{6BBD85F2-FBE1-414E-8A89-76379B9E2E4B}')
    coclass_clsid = IID('{098976AB-EB69-4330-92C8-C8AC73822785}')

    def AddNamedItem(self, pstrCode=defaultNamedNotOptArg, dwFlags=6):
        '����Close'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((8, 1), (19, 49)),pstrCode
            , dwFlags)

    def AddVariant(self, varName=defaultNamedNotOptArg, var=defaultNamedNotOptArg):
        '����AddVariant'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1), (12, 1)),varName
            , var)

    def Close(self):
        '����Close'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    def Create(self):
        '����Create'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

    def GetVariant(self, varName=defaultNamedNotOptArg):
        '����GetVariant'
        return self._ApplyTypes_(7, 1, (12, 0), ((8, 1),), 'GetVariant', None,varName
            )

    def ParseScriptText_E(self, pstrCode=defaultNamedNotOptArg):
        '����ParseScriptText'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((8, 1),),pstrCode
            )

    def Run(self):
        '����Run'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSection(DispatchBaseClass):
    'IAcadSection Interface'
    CLSID = IID('{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
    coclass_clsid = IID('{DCB0E3B7-B4A4-4D92-A3E8-C27BCAECBE8F}')

    def AddVertex(self, nIndex=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Adds a new vertex to the section line'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1), (12, 1)),nIndex
            , val)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the co-ordinate of the specified vertex'
        return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def CreateJog(self, varPt=defaultNamedNotOptArg):
        'Creates a jog on the section plane'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((12, 1),),varPt
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GenerateSectionGeometry(self, pEntity=defaultNamedNotOptArg, pIntersectionBoundaryObjs=pythoncom.Missing, pIntersectionFillObjs=pythoncom.Missing, pBackgroudnObjs=pythoncom.Missing
            , pForegroudObjs=pythoncom.Missing, pCurveTangencyObjs=pythoncom.Missing):
        'Generates 2D or 3D section geometry'
        return self._ApplyTypes_(20, 1, (24, 0), ((9, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GenerateSectionGeometry', None,pEntity
            , pIntersectionBoundaryObjs, pIntersectionFillObjs, pBackgroudnObjs, pForegroudObjs, pCurveTangencyObjs
            )

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def HitTest(self, varPtHit=defaultNamedNotOptArg, pHit=pythoncom.Missing, pSegmentIndex=pythoncom.Missing, pPtOnSegment=pythoncom.Missing
            , pSubItem=pythoncom.Missing):
        'Does hit test on section plane'
        return self._ApplyTypes_(17, 1, (24, 0), ((12, 1), (16395, 2), (16387, 2), (16396, 2), (16387, 2)), 'HitTest', None,varPtHit
            , pHit, pSegmentIndex, pPtOnSegment, pSubItem)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RemoveVertex(self, nIndex=defaultNamedNotOptArg):
        'Removes a vertex in the section line'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1),),nIndex
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the co-ordinate of the specified vertex'
        return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BottomHeight": (11, 2, (5, 0), (), "BottomHeight", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (9, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        # Method 'IndicatorFillColor' returns object of type 'IAcadAcCmColor'
        "IndicatorFillColor": (8, 2, (9, 0), (), "IndicatorFillColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "IndicatorTransparency": (7, 2, (3, 0), (), "IndicatorTransparency", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LiveSectionEnabled": (6, 2, (11, 0), (), "LiveSectionEnabled", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "Normal": (5, 2, (12, 0), (), "Normal", None),
        "NumVertices": (12, 2, (3, 0), (), "NumVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'Settings' returns object of type 'IAcadSectionSettings'
        "Settings": (19, 2, (9, 0), (), "Settings", '{AC4451F8-ED8E-42F0-B10D-1345A423FA33}'),
        "State": (2, 2, (3, 0), (), "State", None),
        "TopHeight": (10, 2, (5, 0), (), "TopHeight", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalDirection": (4, 2, (12, 0), (), "VerticalDirection", None),
        "Vertices": (13, 2, (12, 0), (), "Vertices", None),
        "ViewingDirection": (3, 2, (12, 0), (), "ViewingDirection", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BottomHeight": ((11, LCID, 4, 0),()),
        "Elevation": ((9, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "IndicatorFillColor": ((8, LCID, 4, 0),()),
        "IndicatorTransparency": ((7, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LiveSectionEnabled": ((6, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "State": ((2, LCID, 4, 0),()),
        "TopHeight": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalDirection": ((4, LCID, 4, 0),()),
        "Vertices": ((13, LCID, 4, 0),()),
        "ViewingDirection": ((3, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSection2(DispatchBaseClass):
    'IAcadSection Interface'
    CLSID = IID('{B894B727-442F-4560-B162-4AFD82F79E09}')
    coclass_clsid = IID('{DCB0E3B7-B4A4-4D92-A3E8-C27BCAECBE8F}')

    def AddVertex(self, nIndex=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Adds a new vertex to the section line'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1), (12, 1)),nIndex
            , val)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the co-ordinate of the specified vertex'
        return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def CreateJog(self, varPt=defaultNamedNotOptArg):
        'Creates a jog on the section plane'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((12, 1),),varPt
            )

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GenerateSectionGeometry(self, pEntity=defaultNamedNotOptArg, pIntersectionBoundaryObjs=pythoncom.Missing, pIntersectionFillObjs=pythoncom.Missing, pBackgroudnObjs=pythoncom.Missing
            , pForegroudObjs=pythoncom.Missing, pCurveTangencyObjs=pythoncom.Missing):
        'Generates 2D or 3D section geometry'
        return self._ApplyTypes_(20, 1, (24, 0), ((9, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GenerateSectionGeometry', None,pEntity
            , pIntersectionBoundaryObjs, pIntersectionFillObjs, pBackgroudnObjs, pForegroudObjs, pCurveTangencyObjs
            )

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def HitTest(self, varPtHit=defaultNamedNotOptArg, pHit=pythoncom.Missing, pSegmentIndex=pythoncom.Missing, pPtOnSegment=pythoncom.Missing
            , pSubItem=pythoncom.Missing):
        'Does hit test on section plane'
        return self._ApplyTypes_(17, 1, (24, 0), ((12, 1), (16395, 2), (16387, 2), (16396, 2), (16387, 2)), 'HitTest', None,varPtHit
            , pHit, pSegmentIndex, pPtOnSegment, pSubItem)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RemoveVertex(self, nIndex=defaultNamedNotOptArg):
        'Removes a vertex in the section line'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1),),nIndex
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the co-ordinate of the specified vertex'
        return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BottomHeight": (11, 2, (5, 0), (), "BottomHeight", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (9, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        # Method 'IndicatorFillColor' returns object of type 'IAcadAcCmColor'
        "IndicatorFillColor": (8, 2, (9, 0), (), "IndicatorFillColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "IndicatorTransparency": (7, 2, (3, 0), (), "IndicatorTransparency", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LiveSectionEnabled": (6, 2, (11, 0), (), "LiveSectionEnabled", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "Normal": (5, 2, (12, 0), (), "Normal", None),
        "NumVertices": (12, 2, (3, 0), (), "NumVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SectionPlaneOffset": (23, 2, (5, 0), (), "SectionPlaneOffset", None),
        # Method 'Settings' returns object of type 'IAcadSectionSettings'
        "Settings": (19, 2, (9, 0), (), "Settings", '{AC4451F8-ED8E-42F0-B10D-1345A423FA33}'),
        "SliceDepth": (21, 2, (5, 0), (), "SliceDepth", None),
        "State": (2, 2, (3, 0), (), "State", None),
        "State2": (22, 2, (3, 0), (), "State2", None),
        "TopHeight": (10, 2, (5, 0), (), "TopHeight", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalDirection": (4, 2, (12, 0), (), "VerticalDirection", None),
        "Vertices": (13, 2, (12, 0), (), "Vertices", None),
        "ViewingDirection": (3, 2, (12, 0), (), "ViewingDirection", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BottomHeight": ((11, LCID, 4, 0),()),
        "Elevation": ((9, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "IndicatorFillColor": ((8, LCID, 4, 0),()),
        "IndicatorTransparency": ((7, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LiveSectionEnabled": ((6, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "SectionPlaneOffset": ((23, LCID, 4, 0),()),
        "SliceDepth": ((21, LCID, 4, 0),()),
        "State": ((2, LCID, 4, 0),()),
        "State2": ((22, LCID, 4, 0),()),
        "TopHeight": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalDirection": ((4, LCID, 4, 0),()),
        "Vertices": ((13, LCID, 4, 0),()),
        "ViewingDirection": ((3, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSectionManager(DispatchBaseClass):
    'Controls which property is constrained when editing other property values'
    CLSID = IID('{0340058F-D94E-429D-8199-A4ECFF677AC1}')
    coclass_clsid = IID('{D1F1BB22-D947-40C8-90D8-B9DC99591EF7}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    # Result is of type IAcadSection
    def GetLiveSection(self):
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetLiveSection', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    def GetUniqueSectionName(self, pBaseName=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(3, LCID, 1, (8, 0), ((8, 1),),pBaseName
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadSection
    def Item(self, Index=defaultNamedNotOptArg):
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadSectionSettings(DispatchBaseClass):
    'IAcadSectionSettings Interface'
    CLSID = IID('{AC4451F8-ED8E-42F0-B10D-1345A423FA33}')
    coclass_clsid = IID('{5246A240-92AB-460B-820D-365247D9B47F}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    # Result is of type IAcadSectionTypeSettings
    def GetSectionTypeSettings(self, secType=defaultNamedNotOptArg):
        'Gets the section type settings object'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),secType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetSectionTypeSettings', '{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CurrentSectionType": (1, 2, (3, 0), (), "CurrentSectionType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
        "CurrentSectionType": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSectionTypeSettings(DispatchBaseClass):
    'IAcadSectionTypeSettings Interface'
    CLSID = IID('{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}')
    coclass_clsid = None

    _prop_map_get_ = {
        # Method 'BackgroundLinesColor' returns object of type 'IAcadAcCmColor'
        "BackgroundLinesColor": (93, 2, (9, 0), (), "BackgroundLinesColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "BackgroundLinesHiddenLine": (92, 2, (11, 0), (), "BackgroundLinesHiddenLine", None),
        "BackgroundLinesLayer": (94, 2, (8, 0), (), "BackgroundLinesLayer", None),
        "BackgroundLinesLinetype": (95, 2, (8, 0), (), "BackgroundLinesLinetype", None),
        "BackgroundLinesLinetypeScale": (96, 2, (5, 0), (), "BackgroundLinesLinetypeScale", None),
        "BackgroundLinesLineweight": (98, 2, (3, 0), (), "BackgroundLinesLineweight", None),
        "BackgroundLinesPlotStyleName": (97, 2, (8, 0), (), "BackgroundLinesPlotStyleName", None),
        "BackgroundLinesVisible": (91, 2, (11, 0), (), "BackgroundLinesVisible", None),
        # Method 'CurveTangencyLinesColor' returns object of type 'IAcadAcCmColor'
        "CurveTangencyLinesColor": (132, 2, (9, 0), (), "CurveTangencyLinesColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "CurveTangencyLinesLayer": (133, 2, (8, 0), (), "CurveTangencyLinesLayer", None),
        "CurveTangencyLinesLinetype": (134, 2, (8, 0), (), "CurveTangencyLinesLinetype", None),
        "CurveTangencyLinesLinetypeScale": (135, 2, (5, 0), (), "CurveTangencyLinesLinetypeScale", None),
        "CurveTangencyLinesLineweight": (137, 2, (3, 0), (), "CurveTangencyLinesLineweight", None),
        "CurveTangencyLinesPlotStyleName": (136, 2, (8, 0), (), "CurveTangencyLinesPlotStyleName", None),
        "CurveTangencyLinesVisible": (131, 2, (11, 0), (), "CurveTangencyLinesVisible", None),
        "DestinationBlock": (3, 2, (12, 0), (), "DestinationBlock", None),
        "DestinationFile": (4, 2, (8, 0), (), "DestinationFile", None),
        # Method 'ForegroundLinesColor' returns object of type 'IAcadAcCmColor'
        "ForegroundLinesColor": (113, 2, (9, 0), (), "ForegroundLinesColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "ForegroundLinesEdgeTransparency": (120, 2, (3, 0), (), "ForegroundLinesEdgeTransparency", None),
        "ForegroundLinesFaceTransparency": (119, 2, (3, 0), (), "ForegroundLinesFaceTransparency", None),
        "ForegroundLinesHiddenLine": (112, 2, (11, 0), (), "ForegroundLinesHiddenLine", None),
        "ForegroundLinesLayer": (114, 2, (8, 0), (), "ForegroundLinesLayer", None),
        "ForegroundLinesLinetype": (115, 2, (8, 0), (), "ForegroundLinesLinetype", None),
        "ForegroundLinesLinetypeScale": (116, 2, (5, 0), (), "ForegroundLinesLinetypeScale", None),
        "ForegroundLinesLineweight": (118, 2, (3, 0), (), "ForegroundLinesLineweight", None),
        "ForegroundLinesPlotStyleName": (117, 2, (8, 0), (), "ForegroundLinesPlotStyleName", None),
        "ForegroundLinesVisible": (111, 2, (11, 0), (), "ForegroundLinesVisible", None),
        "GenerationOptions": (1, 2, (3, 0), (), "GenerationOptions", None),
        # Method 'IntersectionBoundaryColor' returns object of type 'IAcadAcCmColor'
        "IntersectionBoundaryColor": (51, 2, (9, 0), (), "IntersectionBoundaryColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "IntersectionBoundaryDivisionLines": (57, 2, (11, 0), (), "IntersectionBoundaryDivisionLines", None),
        "IntersectionBoundaryLayer": (52, 2, (8, 0), (), "IntersectionBoundaryLayer", None),
        "IntersectionBoundaryLinetype": (53, 2, (8, 0), (), "IntersectionBoundaryLinetype", None),
        "IntersectionBoundaryLinetypeScale": (54, 2, (5, 0), (), "IntersectionBoundaryLinetypeScale", None),
        "IntersectionBoundaryLineweight": (56, 2, (3, 0), (), "IntersectionBoundaryLineweight", None),
        "IntersectionBoundaryPlotStyleName": (55, 2, (8, 0), (), "IntersectionBoundaryPlotStyleName", None),
        # Method 'IntersectionFillColor' returns object of type 'IAcadAcCmColor'
        "IntersectionFillColor": (77, 2, (9, 0), (), "IntersectionFillColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "IntersectionFillFaceTransparency": (83, 2, (3, 0), (), "IntersectionFillFaceTransparency", None),
        "IntersectionFillHatchAngle": (74, 2, (5, 0), (), "IntersectionFillHatchAngle", None),
        "IntersectionFillHatchPatternName": (73, 2, (8, 0), (), "IntersectionFillHatchPatternName", None),
        "IntersectionFillHatchPatternType": (72, 2, (3, 0), (), "IntersectionFillHatchPatternType", None),
        "IntersectionFillHatchScale": (75, 2, (5, 0), (), "IntersectionFillHatchScale", None),
        "IntersectionFillHatchSpacing": (76, 2, (5, 0), (), "IntersectionFillHatchSpacing", None),
        "IntersectionFillLayer": (78, 2, (8, 0), (), "IntersectionFillLayer", None),
        "IntersectionFillLinetype": (79, 2, (8, 0), (), "IntersectionFillLinetype", None),
        "IntersectionFillLinetypeScale": (80, 2, (5, 0), (), "IntersectionFillLinetypeScale", None),
        "IntersectionFillLineweight": (82, 2, (3, 0), (), "IntersectionFillLineweight", None),
        "IntersectionFillPlotStyleName": (81, 2, (8, 0), (), "IntersectionFillPlotStyleName", None),
        "IntersectionFillVisible": (71, 2, (11, 0), (), "IntersectionFillVisible", None),
        "SourceObjects": (2, 2, (12, 0), (), "SourceObjects", None),
    }
    _prop_map_put_ = {
        "BackgroundLinesColor": ((93, LCID, 4, 0),()),
        "BackgroundLinesHiddenLine": ((92, LCID, 4, 0),()),
        "BackgroundLinesLayer": ((94, LCID, 4, 0),()),
        "BackgroundLinesLinetype": ((95, LCID, 4, 0),()),
        "BackgroundLinesLinetypeScale": ((96, LCID, 4, 0),()),
        "BackgroundLinesLineweight": ((98, LCID, 4, 0),()),
        "BackgroundLinesPlotStyleName": ((97, LCID, 4, 0),()),
        "BackgroundLinesVisible": ((91, LCID, 4, 0),()),
        "CurveTangencyLinesColor": ((132, LCID, 4, 0),()),
        "CurveTangencyLinesLayer": ((133, LCID, 4, 0),()),
        "CurveTangencyLinesLinetype": ((134, LCID, 4, 0),()),
        "CurveTangencyLinesLinetypeScale": ((135, LCID, 4, 0),()),
        "CurveTangencyLinesLineweight": ((137, LCID, 4, 0),()),
        "CurveTangencyLinesPlotStyleName": ((136, LCID, 4, 0),()),
        "CurveTangencyLinesVisible": ((131, LCID, 4, 0),()),
        "DestinationBlock": ((3, LCID, 4, 0),()),
        "DestinationFile": ((4, LCID, 4, 0),()),
        "ForegroundLinesColor": ((113, LCID, 4, 0),()),
        "ForegroundLinesEdgeTransparency": ((120, LCID, 4, 0),()),
        "ForegroundLinesFaceTransparency": ((119, LCID, 4, 0),()),
        "ForegroundLinesHiddenLine": ((112, LCID, 4, 0),()),
        "ForegroundLinesLayer": ((114, LCID, 4, 0),()),
        "ForegroundLinesLinetype": ((115, LCID, 4, 0),()),
        "ForegroundLinesLinetypeScale": ((116, LCID, 4, 0),()),
        "ForegroundLinesLineweight": ((118, LCID, 4, 0),()),
        "ForegroundLinesPlotStyleName": ((117, LCID, 4, 0),()),
        "ForegroundLinesVisible": ((111, LCID, 4, 0),()),
        "GenerationOptions": ((1, LCID, 4, 0),()),
        "IntersectionBoundaryColor": ((51, LCID, 4, 0),()),
        "IntersectionBoundaryDivisionLines": ((57, LCID, 4, 0),()),
        "IntersectionBoundaryLayer": ((52, LCID, 4, 0),()),
        "IntersectionBoundaryLinetype": ((53, LCID, 4, 0),()),
        "IntersectionBoundaryLinetypeScale": ((54, LCID, 4, 0),()),
        "IntersectionBoundaryLineweight": ((56, LCID, 4, 0),()),
        "IntersectionBoundaryPlotStyleName": ((55, LCID, 4, 0),()),
        "IntersectionFillColor": ((77, LCID, 4, 0),()),
        "IntersectionFillFaceTransparency": ((83, LCID, 4, 0),()),
        "IntersectionFillHatchAngle": ((74, LCID, 4, 0),()),
        "IntersectionFillHatchPatternName": ((73, LCID, 4, 0),()),
        "IntersectionFillHatchPatternType": ((72, LCID, 4, 0),()),
        "IntersectionFillHatchScale": ((75, LCID, 4, 0),()),
        "IntersectionFillHatchSpacing": ((76, LCID, 4, 0),()),
        "IntersectionFillLayer": ((78, LCID, 4, 0),()),
        "IntersectionFillLinetype": ((79, LCID, 4, 0),()),
        "IntersectionFillLinetypeScale": ((80, LCID, 4, 0),()),
        "IntersectionFillLineweight": ((82, LCID, 4, 0),()),
        "IntersectionFillPlotStyleName": ((81, LCID, 4, 0),()),
        "IntersectionFillVisible": ((71, LCID, 4, 0),()),
        "SourceObjects": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSecurityParams(DispatchBaseClass):
    'IAcadSecurityParams �ӿ�'
    CLSID = IID('{B7BD1413-D044-4527-B229-ECC06EB76040}')
    coclass_clsid = IID('{D4903656-AC07-421A-8648-4804351E9DBE}')

    _prop_map_get_ = {
        "Action": (1, 2, (3, 0), (), "Action", None),
        "Algorithm": (5, 2, (3, 0), (), "Algorithm", None),
        "Comment": (10, 2, (8, 0), (), "Comment", None),
        "Issuer": (8, 2, (8, 0), (), "Issuer", None),
        "KeyLength": (6, 2, (3, 0), (), "KeyLength", None),
        "Password": (2, 2, (8, 0), (), "Password", None),
        "ProviderName": (4, 2, (8, 0), (), "ProviderName", None),
        "ProviderType": (3, 2, (3, 0), (), "ProviderType", None),
        "SerialNumber": (9, 2, (8, 0), (), "SerialNumber", None),
        "Subject": (7, 2, (8, 0), (), "Subject", None),
        "TimeServer": (11, 2, (8, 0), (), "TimeServer", None),
    }
    _prop_map_put_ = {
        "Action": ((1, LCID, 4, 0),()),
        "Algorithm": ((5, LCID, 4, 0),()),
        "Comment": ((10, LCID, 4, 0),()),
        "Issuer": ((8, LCID, 4, 0),()),
        "KeyLength": ((6, LCID, 4, 0),()),
        "Password": ((2, LCID, 4, 0),()),
        "ProviderName": ((4, LCID, 4, 0),()),
        "ProviderType": ((3, LCID, 4, 0),()),
        "SerialNumber": ((9, LCID, 4, 0),()),
        "Subject": ((7, LCID, 4, 0),()),
        "TimeServer": ((11, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSelectionSet(DispatchBaseClass):
    'IAcadSelectionSet �ӿ�'
    CLSID = IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
    coclass_clsid = IID('{81A17A41-793D-4BF0-A902-E1B622D175B5}')

    def AddItems(self, pSelSet=defaultNamedNotOptArg):
        'Adds one or more objects to the specified selection set'
        pSelSet = VTDISPArrayOrVal(pSelSet)
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((12, 1),),pSelSet
            )

    def Clear(self):
        'Clears the specified selection set of all items'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    def Highlight(self, bFlag=defaultNamedNotOptArg):
        'Sets the highlight status for the given object, or for all objects in a given selection set'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((11, 1),),bFlag
            )

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def RemoveItems(self, Objects=defaultNamedNotOptArg):
        'Removes specified items from the group or selection set'
        Objects = VTDISPArrayOrVal(Objects)
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def Select(self, Mode=defaultNamedNotOptArg, Point1=defaultNamedOptArg, Point2=defaultNamedOptArg, FilterType=defaultNamedOptArg
            , FilterData=defaultNamedOptArg):
        'Selects objects and places them into a selection set'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Mode
            , Point1, Point2, FilterType, FilterData)

    def SelectAtPoint(self, Point=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Selects an object passing through a given point and places it into a selection set'
        Point = VTR8ArrayOrVal(Point)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1), (12, 17), (12, 17)),Point
            , FilterType, FilterData)

    def SelectByPolygon(self, Mode=defaultNamedNotOptArg, PointsList=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Selects entities within a fence and adds them to the selection set'
        PointsList = VTR8ArrayOrVal(PointsList)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 17), (12, 17)),Mode
            , PointsList, FilterType, FilterData)

    def SelectOnScreen(self, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Prompts the user to pick an object from the screen'
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 17), (12, 17)),FilterType
            , FilterData)

    def Update(self):
        'Updates the object to the drawing screen'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (6, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1, 2, (3, 0), (), "Count", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
        return ret

    def __getitem__(self, *args): 
        try:
            return self.__call__(*args)
        except:
            raise IndexError
        
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{D78C594E-0412-4D7A-919A-2B6D1662D337}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadSelectionSets(DispatchBaseClass):
    'IAcadSelectionSets �ӿ�'
    CLSID = IID('{BA391ABB-844F-42A0-8F57-31EE00D0583A}')
    coclass_clsid = IID('{EA8022D8-0E43-473D-8646-BB1292EACE19}')

    # Result is of type IAcadSelectionSet
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
        return ret

    # Result is of type IAcadSelectionSet
    def GetActiveSelectionSet(self):
        'GetActive Selectionset'
        ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetActiveSelectionSet', '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
        return ret

    # Result is of type IAcadSelectionSet
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadShape(DispatchBaseClass):
    'Acad Shape Interface'
    CLSID = IID('{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}')
    coclass_clsid = IID('{4EFE4629-C549-4346-9E5A-06F0AE788ED0}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (7, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (5, 2, (5, 0), (), "ScaleFactor", None),
        "Thickness": (8, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((7, LCID, 4, 0),()),
        "ObliqueAngle": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((5, LCID, 4, 0),()),
        "Thickness": ((8, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSolid(DispatchBaseClass):
    'Acad Solid Interface'
    CLSID = IID('{38D2992F-DF38-497F-9E2B-68D813057E8D}')
    coclass_clsid = IID('{7EB18444-4D79-4CA8-8743-0498B64C4D01}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSortentsTable(DispatchBaseClass):
    'Acad AcadSortentsTable Interface'
    CLSID = IID('{DEDB84CD-55C2-4F73-B534-7F06EBF8919F}')
    coclass_clsid = IID('{79C8B818-C544-46EE-BDCF-613095E6DA50}')

    # Result is of type IAcadBlock
    def Block(self):
        'Returns the Block this Sortents Table belongs to.'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Block', '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetFullDrawOrder(self, Objects=pythoncom.Missing, honorSortentsSysvar=defaultNamedNotOptArg):
        'Returns all objects in the block, sorted by draw order, bottommost first.'
        return self._ApplyTypes_(7, 1, (24, 0), ((16396, 2), (11, 1)), 'GetFullDrawOrder', None,Objects
            , honorSortentsSysvar)

    def GetRelativeDrawOrder(self, Objects=pythoncom.Missing, honorSortentsSysvar=defaultNamedNotOptArg):
        'Returns specified objects, sorted by draw order, bottommost first.'
        return self._ApplyTypes_(8, 1, (24, 0), ((16396, 2), (11, 1)), 'GetRelativeDrawOrder', None,Objects
            , honorSortentsSysvar)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def MoveAbove(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
        'Moves objects above target in draw order.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
            , Target)

    def MoveBelow(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
        'Moves objects below target in draw order.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
            , Target)

    def MoveToBottom(self, Objects=defaultNamedNotOptArg):
        'Moves objects to bottom of draw order.'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def MoveToTop(self, Objects=defaultNamedNotOptArg):
        'Moves objects to top of draw order.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetRelativeDrawOrder(self, Objects=defaultNamedNotOptArg):
        'Sets the relative draw order of the objects to the order specifed, bottommost first.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SwapOrder(self, Object1=defaultNamedNotOptArg, Object2=defaultNamedNotOptArg):
        'Swaps draw order position for two objects.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 1), (9, 1)),Object1
            , Object2)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSpline(DispatchBaseClass):
    'Acad Spline Interface'
    CLSID = IID('{3D506D60-0138-48DD-8166-E5512E441206}')
    coclass_clsid = IID('{F2293592-5908-4F24-9B5D-759CDA971FC2}')

    def AddFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Adds the fit point to the spline at a given index'
        fitPoint = VTR8ArrayOrVal(fitPoint)
        return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteFitPoint(self, Index=defaultNamedNotOptArg):
        'Deletes the fit point of the spline at a given index'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1),),Index
            )

    def ElevateOrder(self, Order=defaultNamedNotOptArg):
        'Elevates the order of the spline'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1),),Order
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetControlPoint(self, Index=defaultNamedNotOptArg):
        'Returns the control point of the spline at a given index'
        return self._ApplyTypes_(15, 1, (12, 0), ((3, 1),), 'GetControlPoint', None,Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetFitPoint(self, Index=defaultNamedNotOptArg):
        'Returns the fit point of the spline at a given index'
        return self._ApplyTypes_(17, 1, (12, 0), ((3, 1),), 'GetFitPoint', None,Index
            )

    def GetWeight(self, Index=defaultNamedNotOptArg):
        'Returns the weight of the spline at a given control point index'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (5, 0), ((3, 1),),Index
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new entity object by offsetting the spline by a given value'
        return self._ApplyTypes_(23, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def PurgeFitData(self):
        'Purges the fit data of the spline'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

    def Reverse(self):
        'Reverses the direction of the spline'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetControlPoint(self, Index=defaultNamedNotOptArg, controlPoint=defaultNamedNotOptArg):
        'Sets the indexed control point of the spline at a specified point'
        controlPoint = VTR8ArrayOrVal(controlPoint)
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , controlPoint)

    def SetFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Sets the indexed fit point of the spline at a specified point'
        fitPoint = VTR8ArrayOrVal(fitPoint)
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def SetWeight(self, Index=defaultNamedNotOptArg, weight=defaultNamedNotOptArg):
        'Sets the weight of the spline at a given control point index'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , weight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'ControlPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'FitPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (13, 2, (5, 0), (), "Area", None),
        "Closed": (6, 2, (11, 0), (), "Closed", None),
        "Closed2": (32, 2, (11, 0), (), "Closed2", None),
        "ControlPoints": (2, 2, (12, 0), (), "ControlPoints", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Degree": (5, 2, (3, 0), (), "Degree", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndTangent": (11, 2, (12, 0), (), "EndTangent", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FitPoints": (4, 2, (12, 0), (), "FitPoints", None),
        "FitTolerance": (12, 2, (5, 0), (), "FitTolerance", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "IsPeriodic": (9, 2, (11, 0), (), "IsPeriodic", None),
        "IsPlanar": (7, 2, (11, 0), (), "IsPlanar", None),
        "IsRational": (8, 2, (11, 0), (), "IsRational", None),
        "Knots": (26, 2, (12, 0), (), "Knots", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfControlPoints": (1, 2, (3, 0), (), "NumberOfControlPoints", None),
        "NumberOfFitPoints": (3, 2, (3, 0), (), "NumberOfFitPoints", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartTangent": (10, 2, (12, 0), (), "StartTangent", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Weights": (27, 2, (12, 0), (), "Weights", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed2": ((32, LCID, 4, 0),()),
        "ControlPoints": ((2, LCID, 4, 0),()),
        "EndTangent": ((11, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FitPoints": ((4, LCID, 4, 0),()),
        "FitTolerance": ((12, LCID, 4, 0),()),
        "Knots": ((26, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartTangent": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Weights": ((27, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadState(DispatchBaseClass):
    'IAcadState �ӿ�'
    CLSID = IID('{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}')
    coclass_clsid = IID('{6208CB09-68D9-4D82-A4BB-43003DB56AFA}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "IsQuiescent": (2, 2, (11, 0), (), "IsQuiescent", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSubDMesh(DispatchBaseClass):
    'GstarCAD SubDMesh Interface'
    CLSID = IID('{D594DD08-3145-43F2-B9A9-D2DDAC0E0141}')
    coclass_clsid = IID('{73EBC89D-6A5A-4ED8-BC4D-2995DC879649}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Returns the coordinate of the vertex at a given index'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Returns the coordinate of the vertex at a given index'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (3, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FaceCount": (6, 2, (3, 0), (), "FaceCount", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Smoothness": (1, 2, (3, 0), (), "Smoothness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VertexCount": (5, 2, (3, 0), (), "VertexCount", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Smoothness": ((1, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSummaryInfo(DispatchBaseClass):
    'IAcadSummaryInfo Interface'
    CLSID = IID('{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}')
    coclass_clsid = IID('{BBC325BA-407B-4755-B4D1-7A3E30581BD3}')

    def AddCustomInfo(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Adds a new custom field at the end of the existing list of custom fields.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
            , Value)

    def GetCustomByIndex(self, Index=defaultNamedNotOptArg, pKey=pythoncom.Missing, pValue=pythoncom.Missing):
        'Gets the key and value of the custom field specified its index.'
        return self._ApplyTypes_(10, 1, (24, 0), ((3, 1), (16392, 2), (16392, 2)), 'GetCustomByIndex', None,Index
            , pKey, pValue)

    def GetCustomByKey(self, key=defaultNamedNotOptArg, pValue=pythoncom.Missing):
        'Returns the number of custom information fields that have been set.'
        return self._ApplyTypes_(11, 1, (24, 0), ((8, 1), (16392, 2)), 'GetCustomByKey', None,key
            , pValue)

    def NumCustomInfo(self):
        'Returns the number of custom information fields that have been set.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), (),)

    def RemoveCustomByIndex(self, Index=defaultNamedNotOptArg):
        'Removes a custom field (key and value) indicated by the index. Note, index range is from one to the number of custom fields.'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1),),Index
            )

    def RemoveCustomByKey(self, key=defaultNamedNotOptArg):
        'Removes a custom field (key and value) indicated by the key.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1),),key
            )

    def SetCustomByIndex(self, Index=defaultNamedNotOptArg, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets set the key and value of the custom field specified by the index. Note, index range is from one to the number of custom fields.'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (8, 1), (8, 1)),Index
            , key, Value)

    def SetCustomByKey(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets set the value of the custom field specified by the key.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
            , Value)

    _prop_map_get_ = {
        "Author": (1, 2, (8, 0), (), "Author", None),
        "Comments": (2, 2, (8, 0), (), "Comments", None),
        "HyperlinkBase": (3, 2, (8, 0), (), "HyperlinkBase", None),
        "Keywords": (4, 2, (8, 0), (), "Keywords", None),
        "LastSavedBy": (5, 2, (8, 0), (), "LastSavedBy", None),
        "RevisionNumber": (6, 2, (8, 0), (), "RevisionNumber", None),
        "Subject": (7, 2, (8, 0), (), "Subject", None),
        "Title": (8, 2, (8, 0), (), "Title", None),
    }
    _prop_map_put_ = {
        "Author": ((1, LCID, 4, 0),()),
        "Comments": ((2, LCID, 4, 0),()),
        "HyperlinkBase": ((3, LCID, 4, 0),()),
        "Keywords": ((4, LCID, 4, 0),()),
        "LastSavedBy": ((5, LCID, 4, 0),()),
        "RevisionNumber": ((6, LCID, 4, 0),()),
        "Subject": ((7, LCID, 4, 0),()),
        "Title": ((8, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSurface(DispatchBaseClass):
    'IAcadSurface Interface'
    CLSID = IID('{223679F5-6EE7-45C9-B778-E1B2A00D49B4}')
    coclass_clsid = IID('{25D868BF-4CFD-4CB4-BC30-1A43AAF5F3E1}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSweptSurface(DispatchBaseClass):
    'IAcadSweptSurface Interface'
    CLSID = IID('{0EA16B8C-632D-4AC3-8B6F-FECEB9558A7D}')
    coclass_clsid = IID('{6997E39D-299C-45CC-95BC-A677AC0D1A62}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Bank": (3, 2, (11, 0), (), "Bank", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (6, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MaintainAssociativity": (176, 2, (3, 0), (), "MaintainAssociativity", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ProfileRotation": (2, 2, (5, 0), (), "ProfileRotation", None),
        "ShowAssociativity": (177, 2, (11, 0), (), "ShowAssociativity", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Twist": (4, 2, (5, 0), (), "Twist", None),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WireframeType": (160, 2, (3, 0), (), "WireframeType", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "scale": (5, 2, (5, 0), (), "scale", None),
    }
    _prop_map_put_ = {
        "Bank": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MaintainAssociativity": ((176, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ProfileRotation": ((2, LCID, 4, 0),()),
        "ShowAssociativity": ((177, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Twist": ((4, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WireframeType": ((160, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "scale": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTable(DispatchBaseClass):
    'IAcadTable Interface'
    CLSID = IID('{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}')
    coclass_clsid = IID('{92B86261-DA20-4A60-9982-05863C6D9EBE}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClearSubSelection(self):
        'ClearSubSelection.'
        return self._oleobj_.InvokeTypes(110, LCID, 1, (24, 0), (),)

    def ClearTableStyleOverrides(self, flag=defaultNamedNotOptArg):
        'Clears the tableStyleOverrides.'
        return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((3, 1),),flag
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteCellContent(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Deletes the cell content for the specified row and coluumn.'
        return self._oleobj_.InvokeTypes(67, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , col)

    def DeleteColumns(self, col=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
        'deletes the column(s) from the specified column index.'
        return self._oleobj_.InvokeTypes(96, LCID, 1, (24, 0), ((3, 1), (3, 1)),col
            , cols)

    def DeleteRows(self, row=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
        'deletes the row(s) from the specified row index.'
        return self._oleobj_.InvokeTypes(98, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , Rows)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FormatValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg, pVal=defaultNamedNotOptArg):
        'Gets the formatted text string for the specified row and column.'
        return self._oleobj_.InvokeTypes(121, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (16392, 0)),row
            , col, nOption, pVal)

    def GenerateLayout(self):
        'Generate layout.'
        return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), (),)

    def GetAlignment(self, rowType=defaultNamedNotOptArg):
        'Returns the cell alignment for the specified row type.'
        return self._oleobj_.InvokeTypes(33, LCID, 1, (3, 0), ((3, 1),),rowType
            )

    def GetAttachmentPoint(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Gets the attachment point for the specified row and column.'
        return self._ApplyTypes_(56, 1, (12, 0), ((3, 1), (3, 1)), 'GetAttachmentPoint', None,row
            , col)

    def GetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the auto scale flag value for the specified row and column.'
        return self._oleobj_.InvokeTypes(77, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
        'Returns the background true color value for the specified row type.'
        ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetBackgroundColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
        'Returns the backgroundColorNone flag value for the specified row type.'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), ((3, 1),),rowType
            )

    def GetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
        'Returns the attribute value from the Specified block cell for the attribute definition object contained in the block.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(112, LCID, 1, (8, 0), ((3, 1), (3, 1), (20, 1)),row
            , col, attdefId)

    def GetBlockAttributeValue232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2374, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, blkId)

    def GetBlockAttributeValue32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(124, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, attdefId)

    def GetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block rotation for the specified row and column.'
        return self._oleobj_.InvokeTypes(83, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block scale value for the specified row and column.'
        return self._oleobj_.InvokeTypes(81, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block table record id associated to the block-type cell.'
        return self._oleobj_.InvokeTypes(79, LCID, 1, (20, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockTableRecordId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2372, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the alignment for the specified row and column.'
        return self._oleobj_.InvokeTypes(58, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the background true color value for the specified row and column.'
        ret = self._oleobj_.InvokeTypes(62, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
            , col)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellBackgroundColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the backgroundColorNone flag value for the specified row and column.'
        return self._oleobj_.InvokeTypes(60, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the true color value for the specified row and column.'
        ret = self._oleobj_.InvokeTypes(64, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
            , col)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellContentColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Gets the cell data type and unit type for the specified row and column.'
        return self._ApplyTypes_(1946, 1, (24, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetCellDataType', None,row
            , col, pDataType, pUnitType)

    def GetCellExtents(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bOuterCell=defaultNamedNotOptArg):
        'Gets the cell extents for the specified row and column.'
        return self._ApplyTypes_(55, 1, (12, 0), ((3, 1), (3, 1), (11, 1)), 'GetCellExtents', None,row
            , col, bOuterCell)

    def GetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Gets the cell format for the specified row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1948, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns the gridColor value for the given edge of specified row and column.'
        ret = self._oleobj_.InvokeTypes(87, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellGridColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns the gridLineWeight value for the given edge of specified row and column.'
        return self._oleobj_.InvokeTypes(85, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)

    def GetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns the gridVisibility value for the given edge of specified row and column.'
        return self._oleobj_.InvokeTypes(89, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)

    def GetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Get the cell value for the specified row and column.'
        return self._oleobj_.InvokeTypes(2211, LCID, 1, (3, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def GetCellStyleOverrides(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the cellStyleOverrides.'
        return self._ApplyTypes_(66, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellStyleOverrides', None,row
            , col)

    def GetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text height for the specified row and column.'
        return self._oleobj_.InvokeTypes(73, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text style name for the specified row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(71, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Gets the cell type for the specified row and column.'
        return self._oleobj_.InvokeTypes(53, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Gets the cell value for the specified row and column.'
        return self._ApplyTypes_(1950, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellValue', None,row
            , col)

    def GetColumnWidth(self, col=defaultNamedNotOptArg):
        'Returns the column width for the specified column.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (5, 0), ((3, 1),),col
            )

    # Result is of type IAcadAcCmColor
    def GetContentColor(self, rowType=defaultNamedNotOptArg):
        'Returns the true color value for the specified row type.'
        ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetContentColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Gets the row data type and unit type for the specified row type.'
        return self._ApplyTypes_(117, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
            , pDataType, pUnitType)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the field object id associated to the specifed cell.'
        return self._oleobj_.InvokeTypes(114, LCID, 1, (20, 0), ((3, 1), (3, 1)),row
            , col)

    def GetFieldId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2370, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetFieldId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(126, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetFormat(self, rowType=defaultNamedNotOptArg):
        'Gets the format for the specified row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(119, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    # Result is of type IAcadAcCmColor
    def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridColor value for the specified gridLineType and row type.'
        ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridLineWeight value for the specified gridLineType and row type.'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridLinetype32(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2376, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridVisibility value for the specified gridLineType and row type.'
        return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetMinimumColumnWidth(self, col=defaultNamedNotOptArg):
        'Gets the minimum column width for the specified column.'
        return self._oleobj_.InvokeTypes(26, LCID, 1, (5, 0), ((3, 1),),col
            )

    def GetMinimumRowHeight(self, row=defaultNamedNotOptArg):
        'Gets the minimum row height for the specified row.'
        return self._oleobj_.InvokeTypes(27, LCID, 1, (5, 0), ((3, 1),),row
            )

    def GetRowHeight(self, row=defaultNamedNotOptArg):
        'Returns the row height for the specified row.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((3, 1),),row
            )

    def GetRowType(self, row=defaultNamedNotOptArg):
        'Gets the row type for the specified row.'
        return self._oleobj_.InvokeTypes(68, LCID, 1, (3, 0), ((3, 1),),row
            )

    def GetSubSelection(self, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing, colMax=pythoncom.Missing):
        'GetSubSelection.'
        return self._ApplyTypes_(108, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetSubSelection', None,rowMin
            , rowMax, colMin, colMax)

    def GetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text value value for the specified row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(69, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    def GetTextHeight(self, rowType=defaultNamedNotOptArg):
        'Returns the text height for the specified row type.'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (5, 0), ((3, 1),),rowType
            )

    def GetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text rotation for the specified row and column.'
        return self._oleobj_.InvokeTypes(75, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetTextStyle(self, rowType=defaultNamedNotOptArg):
        'Returns the text style name for the specified row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(41, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def HitTest(self, wpt=defaultNamedNotOptArg, wviewVec=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
        'Hit test.'
        wpt = VTR8ArrayOrVal(wpt)
        wviewVec = VTR8ArrayOrVal(wviewVec)
        return self._ApplyTypes_(104, 1, (11, 0), ((12, 1), (12, 1), (16387, 2), (16387, 2)), 'HitTest', None,wpt
            , wviewVec, resultRowIndex, resultColumnIndex)

    def InsertColumns(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
        'Inserts the column(s) of specified width.'
        return self._oleobj_.InvokeTypes(95, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),col
            , Width, cols)

    def InsertRows(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
        'Inserts the row(s) of specified height.'
        return self._oleobj_.InvokeTypes(97, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),row
            , Height, Rows)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def IsMergedCell(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, minRow=pythoncom.Missing, maxRow=pythoncom.Missing
            , minCol=pythoncom.Missing, maxCol=pythoncom.Missing):
        'is Merged Cell.'
        return self._ApplyTypes_(101, 1, (11, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'IsMergedCell', None,row
            , col, minRow, maxRow, minCol, maxCol
            )

    def MergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
        'merge cells.'
        return self._oleobj_.InvokeTypes(99, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
            , maxRow, minCol, maxCol)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RecomputeTableBlock(self, bForceUpdate=defaultNamedNotOptArg):
        'Recompute TableBlock.'
        return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((11, 1),),bForceUpdate
            )

    def ReselectSubRegion(self):
        'Re select SubRegion.'
        return self._oleobj_.InvokeTypes(107, LCID, 1, (24, 0), (),)

    def ResetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Resets the cell value for the specified row and column.'
        return self._oleobj_.InvokeTypes(2209, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , col)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def Select(self, wpt=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg, wxaper=defaultNamedNotOptArg
            , wyaper=defaultNamedNotOptArg, allowOutside=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
        'Select.'
        wpt = VTR8ArrayOrVal(wpt)
        wvwVec = VTR8ArrayOrVal(wvwVec)
        wvwxVec = VTR8ArrayOrVal(wvwxVec)
        return self._ApplyTypes_(105, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1), (16387, 2), (16387, 2)), 'Select', None,wpt
            , wvwVec, wvwxVec, wxaper, wyaper, allowOutside
            , resultRowIndex, resultColumnIndex)

    def SelectSubRegion(self, wpt1=defaultNamedNotOptArg, wpt2=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg
            , seltype=defaultNamedNotOptArg, bIncludeCurrentSelection=defaultNamedNotOptArg, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing
            , colMax=pythoncom.Missing):
        'Select SubRegion.'
        wpt1 = VTR8ArrayOrVal(wpt1)
        wpt2 = VTR8ArrayOrVal(wpt2)
        wvwVec = VTR8ArrayOrVal(wvwVec)
        wvwxVec = VTR8ArrayOrVal(wvwxVec)
        return self._ApplyTypes_(106, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (3, 1), (11, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'SelectSubRegion', None,wpt1
            , wpt2, wvwVec, wvwxVec, seltype, bIncludeCurrentSelection
            , rowMin, rowMax, colMin, colMax)

    def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Sets the cell alignment for the specified row types.'
        return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
            , cellAlignment)

    def SetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the auto scale flag value for the specified row and column.'
        return self._oleobj_.InvokeTypes(78, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
            , col, bValue)

    def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the background true color value for the specified row types.'
        return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the backgroundColorNone flag value for the specified row types.'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
            , bValue)

    def SetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
        'Sets the attribute value to the Specified block cell for the attribute definition object contained in the block.'
        return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1), (8, 1)),row
            , col, attdefId, bstrValue)

    def SetBlockAttributeValue232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , Value=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2375, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, blkId, Value)

    def SetBlockAttributeValue32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(125, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),row
            , col, attdefId, bstrValue)

    def SetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkRotation=defaultNamedNotOptArg):
        'Sets the block rotation for the specified row and column.'
        return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, blkRotation)

    def SetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkScale=defaultNamedNotOptArg):
        'Sets the block scale value for the specified row and column.'
        return self._oleobj_.InvokeTypes(82, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, blkScale)

    def SetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
        'Sets the block table record id associated to the block-type cell.'
        return self._oleobj_.InvokeTypes(80, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1), (11, 1)),row
            , col, blkId, bAutoFit)

    def SetBlockTableRecordId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , autoFit=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2373, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),nRow
            , nCol, nContent, blkId, autoFit)

    def SetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Sets the cell alignment for the specified row and column.'
        return self._oleobj_.InvokeTypes(59, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, cellAlignment)

    def SetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the background true color value for the specified row and column.'
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
            , col, pColor)

    def SetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the backgroundColorNone flag value for the specified row and column.'
        return self._oleobj_.InvokeTypes(61, LCID, 1, (24, 0), ((3, 1), (3, 1), (16395, 1)),row
            , col, bValue)

    def SetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the true color value for the specified row and column.'
        return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
            , col, pColor)

    def SetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
        'Sets the cell data type and unit type for the specified row and column.'
        return self._oleobj_.InvokeTypes(1947, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (3, 0)),row
            , col, dataType, unitType)

    def SetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
        'Sets the cell format for the specified row and column.'
        return self._oleobj_.InvokeTypes(1949, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 0)),row
            , col, pFormat)

    def SetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the gridColor value for the given edges of specified row and column.'
        return self._oleobj_.InvokeTypes(88, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),row
            , col, edges, pColor)

    def SetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Sets the gridLineWeight value for the given edges of specified row and column.'
        return self._oleobj_.InvokeTypes(86, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),row
            , col, edges, Lineweight)

    def SetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the gridVisibility value for the given edges of specified row and column.'
        return self._oleobj_.InvokeTypes(90, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
            , col, edges, bValue)

    def SetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nState=defaultNamedNotOptArg):
        'Set the cell states for the specified row and column.'
        return self._oleobj_.InvokeTypes(2210, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nState)

    def SetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        'Sets the text height for the specified row and column.'
        return self._oleobj_.InvokeTypes(74, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, TextHeight)

    def SetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Sets the text style name for the specified row and column.'
        return self._oleobj_.InvokeTypes(72, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
            , col, bstrName)

    def SetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, CellType=defaultNamedNotOptArg):
        'Sets the cell type for the specified row and column.'
        return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, CellType)

    def SetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Sets the cell value for the specified row and column.'
        return self._oleobj_.InvokeTypes(1951, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 0)),row
            , col, val)

    def SetCellValueFromText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg):
        'Sets the cell value by parsing the text for the specified row and column.'
        return self._oleobj_.InvokeTypes(2208, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (3, 1)),row
            , col, val, nOption)

    def SetColumnWidth(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Sets the column width for the specified column.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1), (5, 1)),col
            , Width)

    def SetContentColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the true color value for the specified row types.'
        return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetDataType(self, rowTypes=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
        'Sets the row data type and unit type for the specified row type.'
        return self._oleobj_.InvokeTypes(118, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
            , dataType, unitType)

    def SetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
        'Sets the field object id in the specifed cell.'
        return self._oleobj_.InvokeTypes(115, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1)),row
            , col, fieldId)

    def SetFieldId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acDbObjectId=defaultNamedNotOptArg
            , nflag=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2371, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, acDbObjectId, nflag)

    def SetFieldId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(127, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, fieldId)

    def SetFormat(self, rowTypes=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
        'Sets the format for the specified row type.'
        return self._oleobj_.InvokeTypes(120, LCID, 1, (24, 0), ((3, 1), (8, 0)),rowTypes
            , pFormat)

    def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the gridColor value for the specified gridLineType(s) and row type(s).'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
            , rowTypes, pColor)

    def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Sets the gridLineWeight value for the specified gridLineType(s) and row type(s).'
        return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
            , rowTypes, Lineweight)

    def SetGridLinetype32(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, idLinetype=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2377, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType, idLinetype)

    def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the gridVisibility value for the specified gridLineType(s) and row type(s).'
        return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
            , rowTypes, bValue)

    def SetRowHeight(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Sets the row height for the specified row.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (5, 1)),row
            , Height)

    def SetSubSelection(self, rowMin=defaultNamedNotOptArg, rowMax=defaultNamedNotOptArg, colMin=defaultNamedNotOptArg, colMax=defaultNamedNotOptArg):
        'SetSubSelection.'
        return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),rowMin
            , rowMax, colMin, colMax)

    def SetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pStr=defaultNamedNotOptArg):
        'Sets the text value value for the specified row and column.'
        return self._oleobj_.InvokeTypes(70, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
            , col, pStr)

    def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        'Sets the text height for the specified row types.'
        return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
            , TextHeight)

    def SetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextRotation=defaultNamedNotOptArg):
        'Sets the text rotation for the specified row and column.'
        return self._oleobj_.InvokeTypes(76, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, TextRotation)

    def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Sets the text style name for the specified row types.'
        return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , bstrName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def UnmergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
        'Unmerge cells.'
        return self._oleobj_.InvokeTypes(100, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
            , maxRow, minCol, maxCol)

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AllowManualHeights": (65525, 2, (11, 0), (), "AllowManualHeights", None),
        "AllowManualPositions": (65524, 2, (11, 0), (), "AllowManualPositions", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BreakSpacing": (65527, 2, (5, 0), (), "BreakSpacing", None),
        "BreaksEnabled": (65520, 2, (11, 0), (), "BreaksEnabled", None),
        "Columns": (3, 2, (3, 0), (), "Columns", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (30, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasSubSelection": (111, 2, (11, 0), (), "HasSubSelection", None),
        "HeaderSuppressed": (32, 2, (11, 0), (), "HeaderSuppressed", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        "HorzCellMargin": (8, 2, (5, 0), (), "HorzCellMargin", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (9, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MinimumTableHeight": (29, 2, (5, 0), (), "MinimumTableHeight", None),
        "MinimumTableWidth": (28, 2, (5, 0), (), "MinimumTableWidth", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RegenerateTableSuppressed": (116, 2, (11, 0), (), "RegenerateTableSuppressed", None),
        "RepeatBottomLabels": (65522, 2, (11, 0), (), "RepeatBottomLabels", None),
        "RepeatTopLabels": (65521, 2, (11, 0), (), "RepeatTopLabels", None),
        "Rows": (2, 2, (3, 0), (), "Rows", None),
        "StyleName": (1, 2, (8, 0), (), "StyleName", None),
        "TableBreakFlowDirection": (65523, 2, (3, 0), (), "TableBreakFlowDirection", None),
        "TableBreakHeight": (65526, 2, (5, 0), (), "TableBreakHeight", None),
        "TableStyleOverrides": (51, 2, (12, 0), (), "TableStyleOverrides", None),
        "TitleSuppressed": (31, 2, (11, 0), (), "TitleSuppressed", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VertCellMargin": (7, 2, (5, 0), (), "VertCellMargin", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AllowManualHeights": ((65525, LCID, 4, 0),()),
        "AllowManualPositions": ((65524, LCID, 4, 0),()),
        "BreakSpacing": ((65527, LCID, 4, 0),()),
        "BreaksEnabled": ((65520, LCID, 4, 0),()),
        "ColumnWidth": ((12, LCID, 4, 0),()),
        "Columns": ((3, LCID, 4, 0),()),
        "Direction": ((30, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FlowDirection": ((4, LCID, 4, 0),()),
        "HeaderSuppressed": ((32, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "HorzCellMargin": ((8, LCID, 4, 0),()),
        "InsertionPoint": ((9, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RegenerateTableSuppressed": ((116, LCID, 4, 0),()),
        "RepeatBottomLabels": ((65522, LCID, 4, 0),()),
        "RepeatTopLabels": ((65521, LCID, 4, 0),()),
        "RowHeight": ((15, LCID, 4, 0),()),
        "Rows": ((2, LCID, 4, 0),()),
        "StyleName": ((1, LCID, 4, 0),()),
        "TableBreakFlowDirection": ((65523, LCID, 4, 0),()),
        "TableBreakHeight": ((65526, LCID, 4, 0),()),
        "TitleSuppressed": ((31, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VertCellMargin": ((7, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTableCell(DispatchBaseClass):
    CLSID = IID('{5C5196BD-9E8D-4B23-A0CF-5FB8550456FD}')
    coclass_clsid = IID('{6336B61B-EFBF-4325-94FE-59D403CB0C76}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "AdditionalFormat": (25, 2, (8, 0), (), "AdditionalFormat", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockAutofit": (28, 2, (11, 0), (), "BlockAutofit", None),
        # Method 'BlockColor' returns object of type 'IAcadAcCmColor'
        "BlockColor": (31, 2, (9, 0), (), "BlockColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "BlockName": (27, 2, (8, 0), (), "BlockName", None),
        "BlockRotation": (30, 2, (5, 0), (), "BlockRotation", None),
        "BlockScale": (29, 2, (5, 0), (), "BlockScale", None),
        "BlocksInCell": (26, 2, (3, 0), (), "BlocksInCell", None),
        # Method 'CellBackgroundFill' returns object of type 'IAcadAcCmColor'
        "CellBackgroundFill": (7, 2, (9, 0), (), "CellBackgroundFill", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        # Method 'CellBorderColor' returns object of type 'IAcadAcCmColor'
        "CellBorderColor": (8, 2, (9, 0), (), "CellBorderColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "CellBorderLinetype": (10, 2, (8, 0), (), "CellBorderLinetype", None),
        "CellBorderLineweight": (9, 2, (3, 0), (), "CellBorderLineweight", None),
        "CellContents": (17, 2, (8, 0), (), "CellContents", None),
        "CellDataLink": (14, 2, (8, 0), (), "CellDataLink", None),
        "CellDataType": (22, 2, (8, 0), (), "CellDataType", None),
        "CellHeight": (5, 2, (5, 0), (), "CellHeight", None),
        "CellLayout": (16, 2, (8, 0), (), "CellLayout", None),
        "CellLocking": (13, 2, (8, 0), (), "CellLocking", None),
        "CellStyle": (1, 2, (8, 0), (), "CellStyle", None),
        # Method 'CellTextColor' returns object of type 'IAcadAcCmColor'
        "CellTextColor": (21, 2, (9, 0), (), "CellTextColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "CellTextHeight": (19, 2, (5, 0), (), "CellTextHeight", None),
        "CellTextRotation": (20, 2, (5, 0), (), "CellTextRotation", None),
        "CellTextStyle": (18, 2, (8, 0), (), "CellTextStyle", None),
        "CellType": (15, 2, (8, 0), (), "CellType", None),
        "CellWidth": (4, 2, (5, 0), (), "CellWidth", None),
        "ColumnStyle": (3, 2, (8, 0), (), "ColumnStyle", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalCellMargin": (11, 2, (5, 0), (), "HorizontalCellMargin", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Presition": (24, 2, (8, 0), (), "Presition", None),
        "RowStyle": (2, 2, (8, 0), (), "RowStyle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "VerticalCellMargin": (12, 2, (5, 0), (), "VerticalCellMargin", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "cellAlignment": (6, 2, (3, 0), (), "cellAlignment", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "format": (23, 2, (8, 0), (), "format", None),
    }
    _prop_map_put_ = {
        "AdditionalFormat": ((25, LCID, 4, 0),()),
        "BlockAutofit": ((28, LCID, 4, 0),()),
        "BlockColor": ((31, LCID, 4, 0),()),
        "BlockName": ((27, LCID, 4, 0),()),
        "BlockRotation": ((30, LCID, 4, 0),()),
        "BlockScale": ((29, LCID, 4, 0),()),
        "BlocksInCell": ((26, LCID, 4, 0),()),
        "CellBackgroundFill": ((7, LCID, 4, 0),()),
        "CellBorderColor": ((8, LCID, 4, 0),()),
        "CellBorderLinetype": ((10, LCID, 4, 0),()),
        "CellBorderLineweight": ((9, LCID, 4, 0),()),
        "CellContents": ((17, LCID, 4, 0),()),
        "CellDataLink": ((14, LCID, 4, 0),()),
        "CellDataType": ((22, LCID, 4, 0),()),
        "CellHeight": ((5, LCID, 4, 0),()),
        "CellLayout": ((16, LCID, 4, 0),()),
        "CellLocking": ((13, LCID, 4, 0),()),
        "CellStyle": ((1, LCID, 4, 0),()),
        "CellTextColor": ((21, LCID, 4, 0),()),
        "CellTextHeight": ((19, LCID, 4, 0),()),
        "CellTextRotation": ((20, LCID, 4, 0),()),
        "CellTextStyle": ((18, LCID, 4, 0),()),
        "CellType": ((15, LCID, 4, 0),()),
        "CellWidth": ((4, LCID, 4, 0),()),
        "ColumnStyle": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "HorizontalCellMargin": ((11, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Presition": ((24, LCID, 4, 0),()),
        "RowStyle": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalCellMargin": ((12, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "cellAlignment": ((6, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "format": ((23, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTableStyle(DispatchBaseClass):
    'Acad IAcadTableStyle Interface'
    CLSID = IID('{4EC5CAC3-22E8-4B42-BBA8-77271650DEA4}')
    coclass_clsid = IID('{31B9FEC5-563C-464B-B180-5B5E4B530EDD}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetAlignment(self, rowType=defaultNamedNotOptArg):
        'Returns the cell alignment for the specified row type.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (3, 0), ((3, 1),),rowType
            )

    # Result is of type IAcadAcCmColor
    def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
        'Returns the background true color value for the specified row type.'
        ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetBackgroundColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
        'Returns the backgroundColorNone flag value for the specified row type.'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),rowType
            )

    # Result is of type IAcadAcCmColor
    def GetColor(self, rowType=defaultNamedNotOptArg):
        'Returns the true color value for the specified row type.'
        ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Returns the data type and unit type for the specifed row type.'
        return self._ApplyTypes_(27, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
            , pDataType, pUnitType)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetFormat(self, rowType=defaultNamedNotOptArg):
        'Returns the format for the specifed row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(29, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    # Result is of type IAcadAcCmColor
    def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridColor value for the specifed gridLineType and row type.'
        ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor', '{E38E7951-AB58-43F5-9B74-B473C5C6605B}')
        return ret

    def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridLineWeight value for the specifed gridLineType and row type.'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the gridVisibility value for the specifed gridLineType and row type.'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetTextHeight(self, rowType=defaultNamedNotOptArg):
        'Returns the text height for the specified row type.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),rowType
            )

    def GetTextStyle(self, rowType=defaultNamedNotOptArg):
        'Returns the text style name for the specified row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(9, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetTextStyleId32(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(62, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Sets the cell alignment for the specified row types.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
            , cellAlignment)

    def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the background true color value for the specifed row types.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the backgroundColorNone flag value for the specified row types.'
        return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (16395, 1)),rowTypes
            , bValue)

    def SetColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the true color value for the specifed row types.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetDataType(self, rowTypes=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
        'Sets the data type and unit type for the specifed row type.'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
            , nDataType, nUnitType)

    def SetFormat(self, rowTypes=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Sets the format for the specifed row type.'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , val)

    def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the gridColor value for the specifed gridLineTypes and row types.'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
            , rowTypes, pColor)

    def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Sets the gridLineWeight value for the specifed gridLineTypes and row types.'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
            , rowTypes, Lineweight)

    def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the gridVisibility value for the specifed gridLineTypes and row types.'
        return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
            , rowTypes, bValue)

    def SetTemplateId32(self, val=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(66, LCID, 1, (24, 0), ((3, 1), (3, 0)),val
            , option)

    def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        'Sets the text height for the specified row types.'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
            , TextHeight)

    def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Sets the text style name for the specified row types.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , bstrName)

    def SetTextStyleId32(self, bstrCellStyle=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
            , val)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Description": (2, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HeaderSuppressed": (8, 2, (11, 0), (), "HeaderSuppressed", None),
        "HorzCellMargin": (5, 2, (5, 0), (), "HorzCellMargin", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "TemplateId32": (64, 2, (3, 0), (), "TemplateId32", None),
        "TitleSuppressed": (7, 2, (11, 0), (), "TitleSuppressed", None),
        "VertCellMargin": (6, 2, (5, 0), (), "VertCellMargin", None),
    }
    _prop_map_put_ = {
        "BitFlags": ((3, LCID, 4, 0),()),
        "Description": ((2, LCID, 4, 0),()),
        "FlowDirection": ((4, LCID, 4, 0),()),
        "HeaderSuppressed": ((8, LCID, 4, 0),()),
        "HorzCellMargin": ((5, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "TemplateId32": ((64, LCID, 4, 0),()),
        "TitleSuppressed": ((7, LCID, 4, 0),()),
        "VertCellMargin": ((6, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadText(DispatchBaseClass):
    'Acad Text Interface'
    CLSID = IID('{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}')
    coclass_clsid = IID('{12226789-EEA7-4BE8-9FD7-33513C744E3B}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FieldCode(self):
        'Returns the text string with field codes of the text'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(17, LCID, 1, (8, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Alignment": (3, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (16, 2, (11, 0), (), "Backward", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (4, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (11, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (12, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (9, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (7, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (8, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (2, 2, (8, 0), (), "StyleName", None),
        "TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (13, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (1, 2, (8, 0), (), "TextString", None),
        "Thickness": (14, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UpsideDown": (15, 2, (11, 0), (), "UpsideDown", None),
        "VerticalAlignment": (5, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((3, LCID, 4, 0),()),
        "Backward": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "HorizontalAlignment": ((4, LCID, 4, 0),()),
        "InsertionPoint": ((11, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((12, LCID, 4, 0),()),
        "ObliqueAngle": ((9, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((7, LCID, 4, 0),()),
        "ScaleFactor": ((8, LCID, 4, 0),()),
        "StyleName": ((2, LCID, 4, 0),()),
        "TextAlignmentPoint": ((10, LCID, 4, 0),()),
        "TextGenerationFlag": ((13, LCID, 4, 0),()),
        "TextString": ((1, LCID, 4, 0),()),
        "Thickness": ((14, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((15, LCID, 4, 0),()),
        "VerticalAlignment": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTextStyle(DispatchBaseClass):
    'A named, saved collection of settings that determines the appearance of text characters'
    CLSID = IID('{703FE959-9B8D-4A91-A69A-844150619DF3}')
    coclass_clsid = IID('{59F48386-168C-4320-8B3D-77E8556EF9E1}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetFont(self, TypeFace=pythoncom.Missing, Bold=pythoncom.Missing, Italic=pythoncom.Missing, Charset=pythoncom.Missing
            , PitchAndFamily=pythoncom.Missing):
        'Gets the definition data of the font for the TextStyle'
        return self._ApplyTypes_(9, 1, (24, 0), ((16392, 2), (16395, 2), (16395, 2), (16387, 2), (16387, 2)), 'GetFont', None,TypeFace
            , Bold, Italic, Charset, PitchAndFamily)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetFont(self, TypeFace=defaultNamedNotOptArg, Bold=defaultNamedNotOptArg, Italic=defaultNamedNotOptArg, Charset=defaultNamedNotOptArg
            , PitchAndFamily=defaultNamedNotOptArg):
        'Sets the definition data of the font for the TextStyle'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (11, 1), (11, 1), (3, 1), (3, 1)),TypeFace
            , Bold, Italic, Charset, PitchAndFamily)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BigFontFile": (1, 2, (8, 0), (), "BigFontFile", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        "LastHeight": (4, 2, (5, 0), (), "LastHeight", None),
        "Name": (5, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "TextGenerationFlag": (7, 2, (3, 0), (), "TextGenerationFlag", None),
        "Width": (8, 2, (5, 0), (), "Width", None),
        "fontFile": (2, 2, (8, 0), (), "fontFile", None),
    }
    _prop_map_put_ = {
        "BigFontFile": ((1, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "LastHeight": ((4, LCID, 4, 0),()),
        "ObliqueAngle": ((6, LCID, 4, 0),()),
        "TextGenerationFlag": ((7, LCID, 4, 0),()),
        "Width": ((8, LCID, 4, 0),()),
        "fontFile": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTextStyles(DispatchBaseClass):
    'The collection of all text styles in the drawing'
    CLSID = IID('{F8425B37-BFCF-4290-8CA2-C718D3201829}')
    coclass_clsid = IID('{F194C083-83FC-4F35-A76F-F4C577C0689A}')

    # Result is of type IAcadTextStyle
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{703FE959-9B8D-4A91-A69A-844150619DF3}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadTextStyle
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{703FE959-9B8D-4A91-A69A-844150619DF3}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{703FE959-9B8D-4A91-A69A-844150619DF3}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{703FE959-9B8D-4A91-A69A-844150619DF3}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadTolerance(DispatchBaseClass):
    'Acad Tolerance Interface'
    CLSID = IID('{98D4741E-D869-4950-8B28-046B6884A084}')
    coclass_clsid = IID('{092962C2-F320-44E1-8857-C8AFE3885555}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'DirectionVector':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DirectionVector": (80, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "InsertionPoint": (81, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (82, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextString": (1541, 2, (8, 0), (), "TextString", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DirectionVector": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((81, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((82, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextString": ((1541, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadToolbar(DispatchBaseClass):
    'An Acad toolbar'
    CLSID = IID('{EDE9142E-0923-4657-90F7-EB55FC56C99A}')
    coclass_clsid = IID('{D6EE440D-BCFF-443C-960D-4F1DAC6D94F6}')

    # Result is of type IAcadToolbarItem
    def AddSeparator(self, Index=defaultNamedNotOptArg):
        'Adds a separator to an existing menu or toolbar'
        ret = self._oleobj_.InvokeTypes(1610743830, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddSeparator', '{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
        return ret

    # Result is of type IAcadToolbarItem
    def AddToolbarButton(self, Index=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, HelpString=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg
            , FlyoutButton=defaultNamedOptArg):
        'Adds a toolbar item to a toolbar at a specified position'
        ret = self._oleobj_.InvokeTypes(1610743829, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1), (8, 1), (12, 17)),Index
            , Name, HelpString, Macro, FlyoutButton)
        if ret is not None:
            ret = Dispatch(ret, 'AddToolbarButton', '{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1610743833, LCID, 1, (24, 0), (),)

    def Dock(self, Side=defaultNamedNotOptArg):
        'Docks the toolbar to the owning frame window'
        return self._oleobj_.InvokeTypes(1610743831, LCID, 1, (24, 0), ((3, 1),),Side
            )

    def Float(self, top=defaultNamedNotOptArg, left=defaultNamedNotOptArg, NumberFloatRows=defaultNamedNotOptArg):
        'Floats the toolbar'
        return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),top
            , left, NumberFloatRows)

    # Result is of type IAcadToolbarItem
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "DockStatus": (1610743817, 2, (3, 0), (), "DockStatus", None),
        "FloatingRows": (1610743825, 2, (3, 0), (), "FloatingRows", None),
        "Height": (1610743824, 2, (3, 0), (), "Height", None),
        "HelpString": (1610743827, 2, (8, 0), (), "HelpString", None),
        "LargeButtons": (1610743818, 2, (11, 0), (), "LargeButtons", None),
        "Name": (1610743813, 2, (8, 0), (), "Name", None),
        "Parent": (1610743812, 2, (9, 0), (), "Parent", None),
        "TagString": (1610743834, 2, (8, 0), (), "TagString", None),
        "Visible": (1610743815, 2, (11, 0), (), "Visible", None),
        "Width": (1610743823, 2, (3, 0), (), "Width", None),
        "left": (1610743819, 2, (3, 0), (), "left", None),
        "top": (1610743821, 2, (3, 0), (), "top", None),
    }
    _prop_map_put_ = {
        "FloatingRows": ((1610743825, LCID, 4, 0),()),
        "HelpString": ((1610743827, LCID, 4, 0),()),
        "Name": ((1610743813, LCID, 4, 0),()),
        "Visible": ((1610743815, LCID, 4, 0),()),
        "left": ((1610743819, LCID, 4, 0),()),
        "top": ((1610743821, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadToolbarItem(DispatchBaseClass):
    'A single button item on an Acad toolbar'
    CLSID = IID('{72E4902E-AA1A-4F5D-8995-B06088CF363C}')
    coclass_clsid = IID('{D2806DE9-1AFE-42DF-87AC-B0A855F9B891}')

    def AttachToolbarToFlyout(self, MenuGroupName=defaultNamedNotOptArg, ToolbarName=defaultNamedNotOptArg):
        'Attaches a toolbar to a toolbar button defined as a flyout'
        return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (24, 0), ((8, 1), (8, 1)),MenuGroupName
            , ToolbarName)

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1610743824, LCID, 1, (24, 0), (),)

    def GetBitmaps(self, SmallIconName=pythoncom.Missing, LargeIconName=pythoncom.Missing):
        'Gets the large and small bitmaps used as icons for the toolbar item'
        return self._ApplyTypes_(1610743821, 1, (24, 0), ((16392, 2), (16392, 2)), 'GetBitmaps', None,SmallIconName
            , LargeIconName)

    def SetBitmaps(self, SmallIconName=defaultNamedNotOptArg, LargeIconName=defaultNamedNotOptArg):
        'Sets the large and small bitmaps used as icons for the toolbar item'
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), ((8, 1), (8, 1)),SmallIconName
            , LargeIconName)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "CommandDisplayName": (1610743825, 2, (8, 0), (), "CommandDisplayName", None),
        # Method 'Flyout' returns object of type 'IAcadToolbar'
        "Flyout": (1610743815, 2, (9, 0), (), "Flyout", '{EDE9142E-0923-4657-90F7-EB55FC56C99A}'),
        "HelpString": (1610743819, 2, (8, 0), (), "HelpString", None),
        "Index": (1610743818, 2, (3, 0), (), "Index", None),
        "Macro": (1610743816, 2, (8, 0), (), "Macro", None),
        "Name": (1610743810, 2, (8, 0), (), "Name", None),
        # Method 'Parent' returns object of type 'IAcadToolbar'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{EDE9142E-0923-4657-90F7-EB55FC56C99A}'),
        "TagString": (1610743812, 2, (8, 0), (), "TagString", None),
        "Type": (1610743814, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
        "CommandDisplayName": ((1610743825, LCID, 4, 0),()),
        "HelpString": ((1610743819, LCID, 4, 0),()),
        "Macro": ((1610743816, LCID, 4, 0),()),
        "Name": ((1610743810, LCID, 4, 0),()),
        "TagString": ((1610743812, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadToolbars(DispatchBaseClass):
    'A collection of Toolbar objects representing all the toolbars loaded in the current GstarCAD session'
    CLSID = IID('{8095E3AB-7AB4-4915-A35A-11491F1B45D6}')
    coclass_clsid = IID('{30523308-F09B-4C74-A819-9AD14A4A943E}')

    # Result is of type IAcadToolbar
    def Add(self, ToolbarName=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743815, LCID, 1, (9, 0), ((8, 1),),ToolbarName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{EDE9142E-0923-4657-90F7-EB55FC56C99A}')
        return ret

    # Result is of type IAcadToolbar
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{EDE9142E-0923-4657-90F7-EB55FC56C99A}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{B1872638-6D18-482F-90BA-38086D17625F}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "LargeButtons": (1610743813, 2, (11, 0), (), "LargeButtons", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroup'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{72D027F2-CD79-4135-AE60-74FD0F8F595B}'),
    }
    _prop_map_put_ = {
        "LargeButtons": ((1610743813, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{EDE9142E-0923-4657-90F7-EB55FC56C99A}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{EDE9142E-0923-4657-90F7-EB55FC56C99A}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadTrace(DispatchBaseClass):
    'Acad Trace Interface'
    CLSID = IID('{4253025F-5BC5-4D78-8D65-138D2DBED220}')
    coclass_clsid = IID('{D7B6AF1E-5F8B-453C-A26E-828A2BD820CC}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in the object'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadUCS(DispatchBaseClass):
    'A user-defined coordinate system that determines the orientation of the X, Y, and Z axes in 3D space'
    CLSID = IID('{50B2A194-C469-4A57-B14A-BAFBA41A4039}')
    coclass_clsid = IID('{D4E3C6C4-7DAE-4D80-A98C-148C3CD66E32}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetUCSMatrix(self):
        'Gets the transformation matrix consisting of UCS coordinate system data'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'GetUCSMatrix', None,)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'XVector':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'YVector':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (2, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "XVector": (3, 2, (12, 0), (), "XVector", None),
        "YVector": (4, 2, (12, 0), (), "YVector", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
        "Origin": ((2, LCID, 4, 0),()),
        "XVector": ((3, LCID, 4, 0),()),
        "YVector": ((4, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadUCSs(DispatchBaseClass):
    'The collection of all user coordinate systems (UCSs) in the drawing'
    CLSID = IID('{94DA139B-A285-4E3D-9E31-AA597FD909B0}')
    coclass_clsid = IID('{1146DF77-46C8-4F31-AB6A-8815AEE71EB7}')

    # Result is of type IAcadUCS
    def Add(self, Origin=defaultNamedNotOptArg, XAxisPoint=defaultNamedNotOptArg, YAxisPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (8, 1)),Origin
            , XAxisPoint, YAxisPoint, Name)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{50B2A194-C469-4A57-B14A-BAFBA41A4039}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadUCS
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{50B2A194-C469-4A57-B14A-BAFBA41A4039}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{50B2A194-C469-4A57-B14A-BAFBA41A4039}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{50B2A194-C469-4A57-B14A-BAFBA41A4039}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadUnderlay(DispatchBaseClass):
    CLSID = IID('{78A705C7-0B90-4FBC-AF7A-AFFAEDD2CC1F}')
    coclass_clsid = IID('{B8E04FA2-2C8E-4EAE-873C-9ECC978E1628}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Get/Set clipping boundary'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (1, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (2, 2, (3, 0), (), "Fade", None),
        "File": (13, 2, (8, 0), (), "File", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "ItemName": (8, 2, (8, 0), (), "ItemName", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (3, 2, (12, 0), (), "Position", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "UnderlayLayerOverrideApplied": (17, 2, (3, 0), (), "UnderlayLayerOverrideApplied", None),
        "UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
        "UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AdjustForBackground": ((15, LCID, 4, 0),()),
        "ClippingEnabled": ((16, LCID, 4, 0),()),
        "Contrast": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((2, LCID, 4, 0),()),
        "File": ((13, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "ItemName": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Monochrome": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((3, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((12, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnderlayLayerOverrideApplied": ((17, LCID, 4, 0),()),
        "UnderlayName": ((7, LCID, 4, 0),()),
        "UnderlayVisibility": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadUtility(DispatchBaseClass):
    'IAcadUtility �ӿ�'
    CLSID = IID('{CE85BBED-B6CD-446F-B3F6-052465802DB6}')
    coclass_clsid = IID('{9F1290F0-C25D-429E-901E-42CBE63A9836}')

    def AngleFromXAxis(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Gets the angle of a line from the X axis'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        return self._oleobj_.InvokeTypes(1610743820, LCID, 1, (5, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)

    def AngleToReal(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
        'Converts an angle as a string to a real (double) value'
        return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (5, 0), ((8, 1), (3, 1)),Angle
            , Unit)

    def AngleToString(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
        'Converts an angle from a real (double) value to a string'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743809, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Angle
            , Unit, precision)

    def CreateTypedArray(self, *args):
        'Creates a variant that contains an array of typed arguments'
        return self._get_good_object_(self._oleobj_.Invoke(*((1610743826,0,1,1)+args)),'CreateTypedArray')

    def DistanceToReal(self, Distance=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
        'Converts a distance from a string to a real (double) value'
        return self._oleobj_.InvokeTypes(1610743810, LCID, 1, (5, 0), ((8, 1), (3, 1)),Distance
            , Unit)

    def GetAngle(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the angle specified. Considers the setting of the ANGBASE system variable'
        Point = VTR8ArrayOrVal(Point)
        return self._oleobj_.InvokeTypes(1610743819, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetCorner(self, Point=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
        'Gets a corner of a rectangle'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743821, 1, (12, 0), ((12, 1), (12, 17)), 'GetCorner', None,Point
            , Prompt)

    def GetDistance(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the distance from the prompt line or a selected set of points on the screen'
        Point = VTR8ArrayOrVal(Point)
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetEntity(self, Prompt=defaultNamedOptArg):
        'Gets an object interactively'
        Object=None
        PickedPoint=None
        return self._ApplyTypes_(1610743827, 1, (24, 0), ((16393, 2), (16396, 2), (12, 17)), 'GetEntity', None,Object
            , PickedPoint, Prompt)

    def GetInput(self):
        'Converts an input string from the user into a keyword index'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (8, 0), (),)

    def GetInteger(self, Prompt=defaultNamedOptArg):
        'Gets an integer value from the user'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (3, 0), ((12, 17),),Prompt
            )

    def GetKeyword(self, Prompt=defaultNamedOptArg):
        'Gets a keyword string from the user'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (8, 0), ((12, 17),),Prompt
            )

    def GetObjectIdString(self, Object=defaultNamedNotOptArg, bHex=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743839, LCID, 1, (8, 0), ((9, 1), (11, 1)),Object
            , bHex)

    def GetOrientation(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the angle specified. Ignores the setting of the ANGBASE system variable'
        return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetPoint(self, Prompt=defaultNamedOptArg):
        'Gets the point selected in GstarCAD'
        Point = pythoncom.Empty
        return self._ApplyTypes_(1610743824, 1, (12, 0), ((12, 17), (12, 17)), 'GetPoint', None,Point
            , Prompt)
        
    def GetPointWithBase(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the point selected in GstarCAD'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743824, 1, (12, 0), ((12, 17), (12, 17)), 'GetPoint', None,Point
            , Prompt)

    def GetReal(self, Prompt=defaultNamedOptArg):
        'Gets a real (double) value from the user'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (5, 0), ((12, 17),),Prompt
            )

    def GetRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=pythoncom.Missing, IgnoreCache=defaultNamedNotOptArg):
        'Downloads the file specified by a URL'
        return self._ApplyTypes_(1610743831, 1, (24, 0), ((8, 1), (16392, 2), (11, 1)), 'GetRemoteFile', None,URL
            , LocalFile, IgnoreCache)

    def GetString(self, HasSpaces=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
        'Gets a string from the user'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743818, LCID, 1, (8, 0), ((3, 1), (12, 17)),HasSpaces
            , Prompt)

    def GetSubEntity(self, Prompt=defaultNamedOptArg):
        'Gets an object or subentity interactively'
        Object=pythoncom.Missing
        PickedPoint=pythoncom.Missing
        transMatrix=pythoncom.Missing
        ContextData=pythoncom.Missing
        return self._ApplyTypes_(1610743829, 1, (24, 0), ((16393, 2), (16396, 2), (16396, 2), (16396, 2), (12, 17)), 'GetSubEntity', None,Object
            , PickedPoint, transMatrix, ContextData, Prompt)

    def GetSubEntity32(self, Object=pythoncom.Missing, PickedPoint=pythoncom.Missing, transMatrix=pythoncom.Missing, ContextData=pythoncom.Missing
            , Prompt=defaultNamedOptArg):
        return self._ApplyTypes_(1610743837, 1, (24, 0), ((16393, 2), (16396, 2), (16396, 2), (16396, 2), (12, 17)), 'GetSubEntity32', None,Object
            , PickedPoint, transMatrix, ContextData, Prompt)

    def InitializeUserInput(self, Bits=defaultNamedNotOptArg, KeyWordList=defaultNamedOptArg):
        'Initializes the GetKeyword method'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((3, 1), (12, 17)),Bits
            , KeyWordList)

    def IsRemoteFile(self, LocalFile=defaultNamedNotOptArg, URL=pythoncom.Missing):
        'Returns the URL that a remote file was downloaded from'
        return self._ApplyTypes_(1610743833, 1, (11, 0), ((8, 1), (16392, 2)), 'IsRemoteFile', None,LocalFile
            , URL)

    def IsURL(self, URL=defaultNamedNotOptArg):
        'Validates a given URL'
        return self._oleobj_.InvokeTypes(1610743830, LCID, 1, (11, 0), ((8, 1),),URL
            )

    def LaunchBrowserDialog(self, SelectedURL=pythoncom.Missing, DialogTitle=defaultNamedNotOptArg, OpenButtonCaption=defaultNamedNotOptArg, StartPageURL=defaultNamedNotOptArg
            , RegistryRootKey=defaultNamedNotOptArg, OpenButtonAlwaysEnabled=defaultNamedNotOptArg):
        'Launches the Web Browser dialog that allows the user to navigate to any URL and select a URL'
        return self._ApplyTypes_(1610743834, 1, (11, 0), ((16392, 2), (8, 1), (8, 1), (8, 1), (8, 1), (11, 1)), 'LaunchBrowserDialog', None,SelectedURL
            , DialogTitle, OpenButtonCaption, StartPageURL, RegistryRootKey, OpenButtonAlwaysEnabled
            )

    def ObjectId32ToObjectIdString(self, ObjectID32=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743838, LCID, 1, (8, 0), ((3, 1),),ObjectID32
            )

    def PolarPoint(self, Point=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Distance=defaultNamedNotOptArg):
        'Gets the point at a specified angle and distance from a given point'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743825, 1, (12, 0), ((12, 1), (5, 1), (5, 1)), 'PolarPoint', None,Point
            , Angle, Distance)

    def Prompt(self, Message=defaultNamedNotOptArg):
        'Posts a prompt to the command line'
        return self._oleobj_.InvokeTypes(1610743828, LCID, 1, (24, 0), ((8, 1),),Message
            )

    def PutRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=defaultNamedNotOptArg):
        'Uploads a file to a remote location specified by a URL'
        return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((8, 1), (8, 1)),URL
            , LocalFile)

    def RealToString(self, Value=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
        'Converts a real (double) value to a string'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Value
            , Unit, precision)

    def SendModelessOperationEnded(self, Context=defaultNamedNotOptArg):
        'Indicates a modeless operation has ended.'
        return self._oleobj_.InvokeTypes(1610743836, LCID, 1, (24, 0), ((8, 0),),Context
            )

    def SendModelessOperationStart(self, Context=defaultNamedNotOptArg):
        'Indicates a modeless operation will start.'
        return self._oleobj_.InvokeTypes(1610743835, LCID, 1, (24, 0), ((8, 0),),Context
            )

    def TranslateCoordinates(self, Point=defaultNamedNotOptArg, FromCoordSystem=defaultNamedNotOptArg, ToCoordSystem=defaultNamedNotOptArg, Displacement=defaultNamedNotOptArg
            , OCSNormal=defaultNamedOptArg):
        'Translates a point from one coordinate system to another coordinate system'
        return self._ApplyTypes_(1610743812, 1, (12, 0), ((12, 1), (3, 1), (3, 1), (3, 1), (12, 17)), 'TranslateCoordinates', None,Point
            , FromCoordSystem, ToCoordSystem, Displacement, OCSNormal)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadView(DispatchBaseClass):
    'A graphical representation of a 2D drawing or 3D model from a specific location (viewpoint) in space'
    CLSID = IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')
    coclass_clsid = IID('{A2F794C5-9ED5-49B6-A45B-1FB659497505}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CategoryName": (7, 2, (8, 0), (), "CategoryName", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (5, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasVpAssociation": (10, 2, (11, 0), (), "HasVpAssociation", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        "LayerState": (9, 2, (8, 0), (), "LayerState", None),
        "LayoutId": (8, 2, (20, 0), (), "LayoutId", None),
        "LayoutId32": (11, 2, (3, 0), (), "LayoutId32", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "Target": (4, 2, (12, 0), (), "Target", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
    }
    _prop_map_put_ = {
        "CategoryName": ((7, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Direction": ((5, LCID, 4, 0),()),
        "HasVpAssociation": ((10, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "LayerState": ((9, LCID, 4, 0),()),
        "LayoutId": ((8, LCID, 4, 0),()),
        "LayoutId32": ((11, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "Target": ((4, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadViewport(DispatchBaseClass):
    "A bounded area that displays some portion of a drawing's model space"
    CLSID = IID('{B2B6FB46-0162-4C09-9612-65371297D78F}')
    coclass_clsid = IID('{415EAAB8-7D05-4935-A6DF-25DA98FC8FB2}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Gets the grid spacing for the viewport'
        return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
            , YSpacing)

    def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Gets the snap spacing for the viewport'
        return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
            , YSpacing)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the grid spacing for the viewport'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the snap spacing for the viewport'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetView(self, View=defaultNamedNotOptArg):
        'Sets the view in a viewport to a saved view in the Views Collection object'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((9, 1),),View
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Split(self, NumWins=defaultNamedNotOptArg):
        'Splits a viewport into the given number of views'
        return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((3, 1),),NumWins
            )

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SnapBasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcSmoothness": (23, 2, (3, 0), (), "ArcSmoothness", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Direction": (5, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "GridOn": (7, 2, (11, 0), (), "GridOn", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        "LowerLeftCorner": (15, 2, (12, 0), (), "LowerLeftCorner", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OrthoOn": (8, 2, (11, 0), (), "OrthoOn", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "SnapBasePoint": (9, 2, (12, 0), (), "SnapBasePoint", None),
        "SnapOn": (10, 2, (11, 0), (), "SnapOn", None),
        "SnapRotationAngle": (11, 2, (5, 0), (), "SnapRotationAngle", None),
        "Target": (4, 2, (12, 0), (), "Target", None),
        "UCSIconAtOrigin": (14, 2, (11, 0), (), "UCSIconAtOrigin", None),
        "UCSIconOn": (13, 2, (11, 0), (), "UCSIconOn", None),
        "UpperRightCorner": (16, 2, (12, 0), (), "UpperRightCorner", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
    }
    _prop_map_put_ = {
        "ArcSmoothness": ((23, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Direction": ((5, LCID, 4, 0),()),
        "GridOn": ((7, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "OrthoOn": ((8, LCID, 4, 0),()),
        "SnapBasePoint": ((9, LCID, 4, 0),()),
        "SnapOn": ((10, LCID, 4, 0),()),
        "SnapRotationAngle": ((11, LCID, 4, 0),()),
        "Target": ((4, LCID, 4, 0),()),
        "UCSIconAtOrigin": ((14, LCID, 4, 0),()),
        "UCSIconOn": ((13, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadViewports(DispatchBaseClass):
    'The collection of all viewports in the drawing'
    CLSID = IID('{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}')
    coclass_clsid = IID('{FD6D9F4B-1812-4B43-8836-1BCEC2E28F65}')

    # Result is of type IAcadViewport
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{B2B6FB46-0162-4C09-9612-65371297D78F}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteConfiguration(self, Name=defaultNamedNotOptArg):
        'Deletes a viewport configuration'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadViewport
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{B2B6FB46-0162-4C09-9612-65371297D78F}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{B2B6FB46-0162-4C09-9612-65371297D78F}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{B2B6FB46-0162-4C09-9612-65371297D78F}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadViews(DispatchBaseClass):
    'The collection of all views in the drawing'
    CLSID = IID('{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}')
    coclass_clsid = IID('{0165E8DC-3E0B-4102-9C66-DC0228911048}')

    # Result is of type IAcadView
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{DE1C99A1-811D-4F40-98A6-A17186C8779A}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadView
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{DE1C99A1-811D-4F40-98A6-A17186C8779A}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{DE1C99A1-811D-4F40-98A6-A17186C8779A}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{DE1C99A1-811D-4F40-98A6-A17186C8779A}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadXRecord(DispatchBaseClass):
    'XRecord objects are used to store and manage arbitrary data'
    CLSID = IID('{153C1376-952E-4696-94A0-F57364AA6836}')
    coclass_clsid = IID('{1E499AED-C7C7-4EE1-8FA6-AB1119B7268E}')

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def GetXRecordData(self, XRecordDataType=pythoncom.Missing, XRecordDataValue=pythoncom.Missing):
        'Gets the extended record data (XRecordData) associated with a dictionary'
        return self._ApplyTypes_(2, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetXRecordData', None,XRecordDataType
            , XRecordDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SetXRecordData(self, XRecordDataType=defaultNamedNotOptArg, XRecordDataValue=defaultNamedNotOptArg):
        'Sets the extended record data (XRecordData) associated with a dictionary'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (12, 1)),XRecordDataType
            , XRecordDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "TranslateIDs": (4, 2, (11, 0), (), "TranslateIDs", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
        "TranslateIDs": ((4, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadXline(DispatchBaseClass):
    'Acad Xline Interface'
    CLSID = IID('{36494A5A-AADE-46F4-B87C-B213A2AF0083}')
    coclass_clsid = IID('{70371E06-28C5-423C-8912-78A9A6E342CB}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies the entity object.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        'Returns the min and max point of the bounding box of the entity object.'
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Gets the extension dictionary associated with an object'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{6CE21DA5-2896-4D63-9373-2EE672A00D41}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Gets the extended data (XData) associated with an object'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Highlights the entity object.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Intersects with the input entity object.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Mirrors selected objects about a line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg):
        'Mirrors selected objects about a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves the entity object from source to destination.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new entity object by offsetting the Xline by a specified distance'
        return self._ApplyTypes_(4, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates the entity object about a 3D line.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scale the entity object with respect to the base point and the scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on the entity object.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Updates the graphics of the entity object.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SecondPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}'),
        "DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{E38E7951-AB58-43F5-9B74-B473C5C6605B}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BasePoint": ((1, LCID, 4, 0),()),
        "DirectionVector": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "SecondPoint": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class _DAcadApplicationEvents:
    '_IAcadApplicationEvents �ӿ�'
    CLSID = CLSID_Sink = IID('{330F7B9E-C93C-403D-807C-D92CB9698637}')
    coclass_clsid = IID('{E06CA8F7-4554-4993-8460-1127D2513B1E}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
                1 : "OnSysVarChanged",
                2 : "OnNewDrawing",
                3 : "OnAppActivate",
                4 : "OnAppDeactivate",
                5 : "OnWindowMovedOrResized",
                6 : "OnBeginModal",
                7 : "OnEndModal",
                8 : "OnBeginQuit",
               10 : "OnBeginFileDrop",
               11 : "OnARXLoaded",
               12 : "OnARXUnloaded",
               13 : "OnBeginPlot",
               14 : "OnEndPlot",
               19 : "OnBeginSave",
               20 : "OnEndSave",
               21 : "OnBeginOpen",
               22 : "OnEndOpen",
               17 : "OnBeginCommand",
               18 : "OnEndCommand",
               15 : "OnBeginLisp",
               16 : "OnEndLisp",
               24 : "OnLispCancelled",
               25 : "OnWindowChanged",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnSysVarChanged(self, SysvarName=defaultNamedNotOptArg, newVal=defaultNamedNotOptArg):
#		'Triggered when the value of a system variable is changed'
#	def OnNewDrawing(self):
#		'Triggered just before a new drawing is created'
#	def OnAppActivate(self):
#		'Triggered just before the main application window is activated'
#	def OnAppDeactivate(self):
#		'Triggered just before the main application window is deactivated'
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#		'Happens when the main frame window is moved or resized'
#	def OnBeginModal(self):
#		'Triggered just before a modal dialog is displayed'
#	def OnEndModal(self):
#		'Triggered just after a modal dialog is dismissed'
#	def OnBeginQuit(self, Cancel=defaultNamedNotOptArg):
#		'Triggered just before an GstarCAD session ends or a document closes'
#	def OnBeginFileDrop(self, FileName=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#		'Triggered when a file is dropped on the main application window'
#	def OnARXLoaded(self, AppName=defaultNamedNotOptArg):
#		'Triggered when an ObjectGRX application has been loaded'
#	def OnARXUnloaded(self, AppName=defaultNamedNotOptArg):
#		'Triggered when an ObjectGRX application has been unloaded'
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to print a drawing'
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered after a document has been sent to the printer'
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to save the drawing'
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered when GstarCAD has finished saving the drawing'
#	def OnBeginOpen(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to open an existing drawing'
#	def OnEndOpen(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD finishes opening an existing drawing'
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command is issued, but before it completes'
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command completes'
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to evaluate a LISP expression'
#	def OnEndLisp(self):
#		'Triggered upon completion of evaluating a LISP expression'
#	def OnLispCancelled(self):
#		'Triggered when the evaluation of a LISP expression is cancelled'
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):
#		'Triggered when there is a change to the application or document windows'


class _DAcadDocumentEvents:
    '_IAcadDocumentEvents �ӿ�'
    CLSID = CLSID_Sink = IID('{2ABEE42C-D570-4DE3-874F-353204A47B63}')
    coclass_clsid = IID('{EEA4FF96-9C53-49ED-977F-D22D2B51F741}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
               14 : "OnBeginSave",
               15 : "OnEndSave",
                8 : "OnBeginCommand",
                9 : "OnEndCommand",
               16 : "OnBeginLisp",
               17 : "OnEndLisp",
               18 : "OnLispCancelled",
               19 : "OnSelectionChanged",
               20 : "OnActivate",
               21 : "OnDeactivate",
               10 : "OnBeginRightClick",
               11 : "OnBeginDoubleClick",
                4 : "OnObjectAdded",
                5 : "OnObjectErased",
                7 : "OnObjectModified",
               28 : "OnBeginPlot",
               29 : "OnEndPlot",
               30 : "OnWindowMovedOrResized",
               31 : "OnLayoutSwitched",
               32 : "OnWindowChanged",
               12 : "OnBeginClose",
               13 : "OnBeginDocClose",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to save the drawing'
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered when GstarCAD has finished saving the drawing'
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command is issued, but before it completes'
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command completes'
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to evaluate a LISP expression'
#	def OnEndLisp(self):
#		'Triggered upon completion of evaluating a LISP expression'
#	def OnLispCancelled(self):
#		'Triggered when the evaluation of a LISP expression is cancelled'
#	def OnSelectionChanged(self):
#		'Triggered when the current pickfirst selection set changes'
#	def OnActivate(self):
#		'Triggered when a document window is activated'
#	def OnDeactivate(self):
#		'Triggered when the drawing window is deactivated'
#	def OnBeginRightClick(self, PickPoint=defaultNamedNotOptArg):
#		'Triggered after the user right-clicks on the drawing window'
#	def OnBeginDoubleClick(self, PickPoint=defaultNamedNotOptArg):
#		'Triggered after the user double-clicks on an object in the drawing'
#	def OnObjectAdded(self, Object=defaultNamedNotOptArg):
#		'Triggered when an object has been added to the drawing'
#	def OnObjectErased(self, ObjectID=defaultNamedNotOptArg):
#		'Triggered when an object has been erased from the drawing'
#	def OnObjectModified(self, Object=defaultNamedNotOptArg):
#		'Triggered when an object in the drawing has been modified'
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered immediately after GstarCAD receives a request to print a drawing'
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered after a document has been sent to the printer'
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#		'Happens when the drawing window is moved or resized.'
#	def OnLayoutSwitched(self, LayoutName=defaultNamedNotOptArg):
#		'Triggered after the user switches to a different layout'
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):
#		'Triggered when there is a change to the application or document windows'
#	def OnBeginClose(self):
#		'Triggered immediately after GstarCAD receives a request to close a drawing'
#	def OnBeginDocClose(self, Cancel=defaultNamedNotOptArg):
#		'Triggered before the BeginClose event. This is an opportunity to cancel the closing process'


class _IAcadScriptJetEvents(DispatchBaseClass):
    '_IAcadScriptJet�¼��ӿ�'
    CLSID = IID('{1BAA42A6-463E-492D-BB53-0D4028148443}')
    coclass_clsid = None

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

from win32com.client import CoClassBaseClass
class GcPePropertyEditorColor(CoClassBaseClass): # A CoClass
    # GcPePropertyEditorColor Class
    CLSID = IID('{11E6CDE7-1304-488C-8790-3F7AAC891BF2}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IGcPePropertyEditorColor,
    ]
    default_interface = IGcPePropertyEditorColor

class Acad3DFace(CoClassBaseClass): # A CoClass
    # Acad 3dFace Object
    CLSID = IID('{457AD5FC-1656-4606-AB8A-EF7F0215B238}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcad3DFace,
    ]
    default_interface = IAcad3DFace

class Acad3DPolyline(CoClassBaseClass): # A CoClass
    # Acad 3dPolyline Object
    CLSID = IID('{7D7FD20A-AC1D-46BC-8C49-8EBB286F681E}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcad3DPolyline,
    ]
    default_interface = IAcad3DPolyline

class Acad3DSolid(CoClassBaseClass): # A CoClass
    # Acad 3dSolid Object
    CLSID = IID('{C998B595-8233-4859-A51A-492A25E9EB67}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcad3DSolid,
    ]
    default_interface = IAcad3DSolid

# This CoClass is known by the name 'GStarCAD.AcCmColor.24'
class AcadAcCmColor(CoClassBaseClass): # A CoClass
    # AcadAcCmColor Class
    CLSID = IID('{F7848BAF-729D-4217-A1E8-7DCE59B662FA}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadAcCmColor,
    ]
    default_interface = IAcadAcCmColor

# This CoClass is known by the name 'GStarCAD.AcadApplication.24'
class AcadApplication(CoClassBaseClass): # A CoClass
    # AcadApplication Class
    CLSID = IID('{E06CA8F7-4554-4993-8460-1127D2513B1E}')
    coclass_sources = [
        _DAcadApplicationEvents,
    ]
    default_source = _DAcadApplicationEvents
    coclass_interfaces = [
        IAcadApplication,
    ]
    default_interface = IAcadApplication

class AcadArc(CoClassBaseClass): # A CoClass
    # Acad Arc Object
    CLSID = IID('{7E99A93E-D084-43FF-9311-D24A452FF851}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadArc,
    ]
    default_interface = IAcadArc

class AcadArcAlignedText(CoClassBaseClass): # A CoClass
    # AcadArcAlignedText Class
    CLSID = IID('{BA03B2BE-41B3-40E6-A493-7F46CCD7CC05}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadArcAlignedText,
    ]
    default_interface = IAcadArcAlignedText

class AcadAssocArrayPath(CoClassBaseClass): # A CoClass
    # Acad AssocArrayPath Object
    CLSID = IID('{3745EF1D-3D36-4500-8034-7526342623D3}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadAssocArrayPath,
    ]
    default_interface = IAcadAssocArrayPath

class AcadAssocArrayPolar(CoClassBaseClass): # A CoClass
    # Acad AssocArrayPolar Object
    CLSID = IID('{AC93B51F-F467-4928-B094-03EA43B3A681}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadAssocArrayPolar,
    ]
    default_interface = IAcadAssocArrayPolar

class AcadAssocArrayRectangular(CoClassBaseClass): # A CoClass
    # Acad AssocArrayRectangular Object
    CLSID = IID('{48E1D6AC-00B6-41DF-9A4F-26F4F47A8EE6}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadAssocArrayRectangular,
    ]
    default_interface = IAcadAssocArrayRectangular

class AcadAttribute(CoClassBaseClass): # A CoClass
    # Acad Attribute Object
    CLSID = IID('{3BE70A3D-E2C4-42A6-989C-2F1E08C338D4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadAttribute,
    ]
    default_interface = IAcadAttribute

class AcadAttributeReference(CoClassBaseClass): # A CoClass
    # Acad Attribute Reference Object
    CLSID = IID('{326662C0-F9F3-4A5B-BFE5-2431F4AEF3D8}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadAttributeReference,
    ]
    default_interface = IAcadAttributeReference

class AcadBlock(CoClassBaseClass): # A CoClass
    # AcadBlock Class
    CLSID = IID('{60C11D4D-6F51-4A16-88CE-305C5BBC84F1}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadBlock,
    ]
    default_interface = IAcadBlock

class AcadBlockReference(CoClassBaseClass): # A CoClass
    # Acad Block Reference Object
    CLSID = IID('{DA38CF1F-C119-4FE7-A5F9-AEC5E0C22709}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadBlockReference,
    ]
    default_interface = IAcadBlockReference

class AcadBlocks(CoClassBaseClass): # A CoClass
    # AcadBlocks Class
    CLSID = IID('{25F41555-CB62-4FB5-AF5A-FD50D5B99809}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadBlocks,
    ]
    default_interface = IAcadBlocks

class AcadCamera(CoClassBaseClass): # A CoClass
    # Acad Camera
    CLSID = IID('{0C8A268F-2F40-4D78-8582-E900CD39AAB7}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadCamera,
    ]
    default_interface = IAcadCamera

class AcadCircle(CoClassBaseClass): # A CoClass
    # AcadCircle
    CLSID = IID('{C858EE7D-1B1F-4F2E-A61F-3F4AA8C6C1BA}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadCircle,
    ]
    default_interface = IAcadCircle

class AcadDatabase(CoClassBaseClass): # A CoClass
    # AcadDatabase Class
    CLSID = IID('{5E90323E-2CCF-4AE9-9B6F-6603AB611048}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDatabase,
    ]
    default_interface = IAcadDatabase

class AcadDatabasePreferences(CoClassBaseClass): # A CoClass
    # AcadDatabasePreferences Class
    CLSID = IID('{E3AC406B-D118-44DB-AC19-AA594DD65C8A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDatabasePreferences,
    ]
    default_interface = IAcadDatabasePreferences

class AcadDgnUnderlay(CoClassBaseClass): # A CoClass
    # Acad DgnUnderlay
    CLSID = IID('{7A486F98-18BC-424E-9D37-CD975EC3667F}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadUnderlay,
    ]
    default_interface = IAcadUnderlay

class AcadDictionaries(CoClassBaseClass): # A CoClass
    # AcadDictionaries Class
    CLSID = IID('{07244103-C9ED-4EF9-BDD4-5062C58A34D4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDictionaries,
    ]
    default_interface = IAcadDictionaries

class AcadDictionary(CoClassBaseClass): # A CoClass
    # A container object for storing and retrieving objects
    CLSID = IID('{F7A4E90A-DB70-4175-833C-E9F927851832}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDictionary,
    ]
    default_interface = IAcadDictionary

class AcadDim3PointAngular(CoClassBaseClass): # A CoClass
    # Acad 3PointAngular Dimension Object
    CLSID = IID('{348090AB-ECF8-4259-BFA3-45C7A91E30F6}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDim3PointAngular,
    ]
    default_interface = IAcadDim3PointAngular

class AcadDimAligned(CoClassBaseClass): # A CoClass
    # Acad Aligned Dimension Object
    CLSID = IID('{31463489-3D64-4BC7-85B1-0A1C6F0B2ABA}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimAligned,
    ]
    default_interface = IAcadDimAligned

class AcadDimAngular(CoClassBaseClass): # A CoClass
    # Acad Angular Dimension Object
    CLSID = IID('{8CBE37D9-7079-437A-A384-635D4A74A8D3}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimAngular,
    ]
    default_interface = IAcadDimAngular

class AcadDimArcLength(CoClassBaseClass): # A CoClass
    # Acad Arc Length Dimension Object
    CLSID = IID('{2C817A8B-0B7D-4DE6-914A-B3A79F0665E4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimArcLength,
    ]
    default_interface = IAcadDimArcLength

class AcadDimDiametric(CoClassBaseClass): # A CoClass
    # AcadDimDiametric Class
    CLSID = IID('{A4E8085A-25F0-420B-A480-30ABAEF225C8}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimDiametric,
    ]
    default_interface = IAcadDimDiametric

class AcadDimOrdinate(CoClassBaseClass): # A CoClass
    # Acad Ordinate Dimension Object
    CLSID = IID('{A6F7E215-803A-414A-A81D-6299DED292E4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimOrdinate,
    ]
    default_interface = IAcadDimOrdinate

class AcadDimRadial(CoClassBaseClass): # A CoClass
    # Acad Radial Dimension Object
    CLSID = IID('{04A200E7-033D-4ECC-A9B1-806148A24763}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimRadial,
    ]
    default_interface = IAcadDimRadial

class AcadDimRadialLarge(CoClassBaseClass): # A CoClass
    # Acad Jogged Dimension Object
    CLSID = IID('{599C859E-76AB-4A00-8A81-2A71506A3824}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimRadialLarge,
    ]
    default_interface = IAcadDimRadialLarge

class AcadDimRotated(CoClassBaseClass): # A CoClass
    # Acad Rotated Dimension Object
    CLSID = IID('{4D49A4C2-C908-4523-9E62-89B08B19CB1C}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimRotated,
    ]
    default_interface = IAcadDimRotated

class AcadDimStyle(CoClassBaseClass): # A CoClass
    # AcadDimStyle Class
    CLSID = IID('{67211CB3-E07C-4585-B521-CD8F5840BD8D}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimStyle,
    ]
    default_interface = IAcadDimStyle

class AcadDimStyles(CoClassBaseClass): # A CoClass
    # AcadDimStyles Class
    CLSID = IID('{187BD9EB-18F0-40A0-BEA1-4B53AE20A161}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimStyles,
    ]
    default_interface = IAcadDimStyles

class AcadDimension(CoClassBaseClass): # A CoClass
    # AcadDimension Class
    CLSID = IID('{5D0A1B18-A59B-402A-B66B-2E10E2BDAE65}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadDimension,
    ]
    default_interface = IAcadDimension

class AcadDocument(CoClassBaseClass): # A CoClass
    # AcadDocument Class
    CLSID = IID('{EEA4FF96-9C53-49ED-977F-D22D2B51F741}')
    coclass_sources = [
        _DAcadDocumentEvents,
    ]
    default_source = _DAcadDocumentEvents
    coclass_interfaces = [
        IAcadDocument,
    ]
    default_interface = IAcadDocument

class AcadDocuments(CoClassBaseClass): # A CoClass
    # AcadDocuments Class
    CLSID = IID('{99EF8026-26E1-43C1-92EE-F5041E7DBE8C}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDocuments,
    ]
    default_interface = IAcadDocuments

class AcadDwfUnderlay(CoClassBaseClass): # A CoClass
    # Acad DwfnUnderlay
    CLSID = IID('{B8E04FA2-2C8E-4EAE-873C-9ECC978E1628}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadUnderlay,
        IAcadDwfUnderlay,
    ]
    default_interface = IAcadUnderlay

class AcadDynamicBlockReferenceProperty(CoClassBaseClass): # A CoClass
    # Acad Dynamic Block Property Object
    CLSID = IID('{114CCE6C-FDBF-4DAD-9157-7078B5664B95}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDynamicBlockReferenceProperty,
    ]
    default_interface = IAcadDynamicBlockReferenceProperty

class AcadEllipse(CoClassBaseClass): # A CoClass
    # Acad Ellipse Object
    CLSID = IID('{7F11EDC5-9468-4C9D-8749-5720C123C13F}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadEllipse,
    ]
    default_interface = IAcadEllipse

class AcadEntity(CoClassBaseClass): # A CoClass
    # AcadEntity Class
    CLSID = IID('{3737DD60-3DB3-45AA-A592-49640E47A4CB}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadEntity,
    ]
    default_interface = IAcadEntity

class AcadExternalReference(CoClassBaseClass): # A CoClass
    # Acad External Reference Object
    CLSID = IID('{78F3EF1F-22D5-4BC8-A186-3CF45759F2DD}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadExternalReference,
    ]
    default_interface = IAcadExternalReference

class AcadExtrudedSurface(CoClassBaseClass): # A CoClass
    # Acad ExtrudedSurface
    CLSID = IID('{3865F4CA-2245-4517-9550-0FA5E5FC28F8}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadExtrudedSurface,
    ]
    default_interface = IAcadExtrudedSurface

class AcadFileDependencies(CoClassBaseClass): # A CoClass
    # AcadFileDependencies Class
    CLSID = IID('{B1406301-FAFE-4332-B481-6DE6B109B206}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadFileDependencies,
    ]
    default_interface = IAcadFileDependencies

class AcadFileDependency(CoClassBaseClass): # A CoClass
    # AcadFileDependency Class
    CLSID = IID('{0E92853F-5027-4A90-999C-118BC73FA6BA}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadFileDependency,
    ]
    default_interface = IAcadFileDependency

class AcadGroup(CoClassBaseClass): # A CoClass
    # AcadGroup Class
    CLSID = IID('{28EA8439-1EEF-4632-812B-3A8515F93530}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadGroup,
    ]
    default_interface = IAcadGroup

class AcadGroups(CoClassBaseClass): # A CoClass
    # AcadGroups Class
    CLSID = IID('{255F2619-FB9D-4176-BE91-D2C122537155}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadGroups,
    ]
    default_interface = IAcadGroups

class AcadHatch(CoClassBaseClass): # A CoClass
    # Acad Hatch Object
    CLSID = IID('{EF74767C-CCF5-4725-935C-39E7BDB8D3B8}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadHatch,
    ]
    default_interface = IAcadHatch

class AcadHelix(CoClassBaseClass): # A CoClass
    # Acad Helix
    CLSID = IID('{E817F271-E3BF-44E9-A481-C860D9D8CD13}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadHelix,
    ]
    default_interface = IAcadHelix

class AcadHyperlink(CoClassBaseClass): # A CoClass
    # A URL and URL description
    CLSID = IID('{B4F3F703-2BC5-4074-BD6E-24E5830BBD0A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHyperlink,
    ]
    default_interface = IAcadHyperlink

class AcadHyperlinks(CoClassBaseClass): # A CoClass
    # AcadHyperlinks Class
    CLSID = IID('{D1131D16-F4F4-4F50-8AEB-A6ECA83141C0}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHyperlinks,
    ]
    default_interface = IAcadHyperlinks

class AcadIdPair(CoClassBaseClass): # A CoClass
    # Acad IdPair
    CLSID = IID('{CDF39880-2237-4180-A675-1601037F78ED}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadIdPair,
    ]
    default_interface = IAcadIdPair

class AcadLWPolyline(CoClassBaseClass): # A CoClass
    # Acad Lightweight Polyline Object
    CLSID = IID('{508C6E95-0B42-4E0B-9A4A-75CF28263857}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLWPolyline,
    ]
    default_interface = IAcadLWPolyline

class AcadLayer(CoClassBaseClass): # A CoClass
    # AcadLayer Class
    CLSID = IID('{C358F0A6-CF01-4B79-BC20-3744A6CE61CE}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLayer,
    ]
    default_interface = IAcadLayer

# This CoClass is known by the name 'GStarCAD.AcadLayerStateManager.24'
class AcadLayerStateManager(CoClassBaseClass): # A CoClass
    # AcadLayerStateManager Class
    CLSID = IID('{B120B2EF-DD09-4935-94FE-CD57754907B1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayerStateManager,
    ]
    default_interface = IAcadLayerStateManager

class AcadLayers(CoClassBaseClass): # A CoClass
    # AcadLayers Class
    CLSID = IID('{60E6BD18-62F7-4B1A-B701-CEF35537CB59}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLayers,
    ]
    default_interface = IAcadLayers

class AcadLayout(CoClassBaseClass): # A CoClass
    # AcadLayout Class
    CLSID = IID('{12664C95-EEAD-4337-A88A-971953571812}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLayout,
    ]
    default_interface = IAcadLayout

class AcadLayouts(CoClassBaseClass): # A CoClass
    # AcadLayouts Class
    CLSID = IID('{C6B60202-2BEA-4ED1-9A9F-7CF91E5A295D}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLayouts,
    ]
    default_interface = IAcadLayouts

class AcadLeader(CoClassBaseClass): # A CoClass
    # Acad Leader Object
    CLSID = IID('{1B4D2B5E-8406-4167-B42C-09D8136BAE47}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLeader,
    ]
    default_interface = IAcadLeader

class AcadLight(CoClassBaseClass): # A CoClass
    # Acad Light
    CLSID = IID('{1441A79B-2C78-4568-8F3F-1D068ACFC6CD}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLight,
        IAcadLight2,
        IAcadLight3,
    ]
    default_interface = IAcadLight

class AcadLine(CoClassBaseClass): # A CoClass
    # AcadLine Class
    CLSID = IID('{6ACCA2E1-E804-4519-B95F-235867C214AC}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLine,
    ]
    default_interface = IAcadLine

class AcadLineType(CoClassBaseClass): # A CoClass
    # AcadLineType Class
    CLSID = IID('{44E0D10E-F951-4B01-BDC0-21256D036952}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLineType,
    ]
    default_interface = IAcadLineType

class AcadLineTypes(CoClassBaseClass): # A CoClass
    # AcadLineTypes Class
    CLSID = IID('{09C7B1A6-D60E-43DA-B8DA-445C72D2A022}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLineTypes,
    ]
    default_interface = IAcadLineTypes

class AcadLoftedSurface(CoClassBaseClass): # A CoClass
    # Acad LoftedSurface
    CLSID = IID('{3A949249-A2A7-412A-92FF-94D134EB3198}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadLoftedSurface,
    ]
    default_interface = IAcadLoftedSurface

class AcadMInsertBlock(CoClassBaseClass): # A CoClass
    # Acad MInsertBlock Object
    CLSID = IID('{5B817FD8-0DDF-4283-B794-86434740C658}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMInsertBlock,
    ]
    default_interface = IAcadMInsertBlock

class AcadMLeader(CoClassBaseClass): # A CoClass
    # Acad MLeader
    CLSID = IID('{E6494613-3893-47A5-B0E7-B6AD41ADA6F4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMLeader,
    ]
    default_interface = IAcadMLeader

class AcadMLeaderStyle(CoClassBaseClass): # A CoClass
    # AcadMLeaderStyle Class
    CLSID = IID('{C3819487-144A-4471-B95E-712E3CC64BEC}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMLeaderStyle,
    ]
    default_interface = IAcadMLeaderStyle

class AcadMLine(CoClassBaseClass): # A CoClass
    # Acad MLine Object
    CLSID = IID('{CC35F7B8-1AE8-4C31-9F3D-484A44EAC286}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMLine,
    ]
    default_interface = IAcadMLine

class AcadMText(CoClassBaseClass): # A CoClass
    # AcadMText
    CLSID = IID('{9F58700D-4910-4463-AEEB-2406161B0490}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMText,
    ]
    default_interface = IAcadMText

class AcadMaterial(CoClassBaseClass): # A CoClass
    # AcadMaterial Class
    CLSID = IID('{F55DC97F-4A3C-49E9-873C-B1F3B6F4F8D6}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMaterial,
    ]
    default_interface = IAcadMaterial

class AcadMaterials(CoClassBaseClass): # A CoClass
    # AcadMaterials Class
    CLSID = IID('{C4E55BE8-77A9-4A8A-81DE-2CC03D13FF48}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadMaterials,
    ]
    default_interface = IAcadMaterials

class AcadMenuBar(CoClassBaseClass): # A CoClass
    # AcadMenuBar Class
    CLSID = IID('{573373A3-EDBE-4369-AF1F-3292EE13538C}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuBar,
    ]
    default_interface = IAcadMenuBar

class AcadMenuGroup(CoClassBaseClass): # A CoClass
    # An Acad menu group
    CLSID = IID('{521C919B-AC49-4F28-A908-D4BD172C92E6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuGroup,
    ]
    default_interface = IAcadMenuGroup

class AcadMenuGroups(CoClassBaseClass): # A CoClass
    # AcadMenuGroups Class
    CLSID = IID('{79855627-10CA-4054-BB8C-00946292669D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuGroups,
    ]
    default_interface = IAcadMenuGroups

class AcadModelSpace(CoClassBaseClass): # A CoClass
    # AcadModelSpace Class
    CLSID = IID('{35DF9E00-7285-40A9-BD63-D714AA0CA70F}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadModelSpace,
    ]
    default_interface = IAcadModelSpace

class AcadNurbSurface(CoClassBaseClass): # A CoClass
    # AcadNurbSurface Class
    CLSID = IID('{3C7846DC-43D5-44CD-B954-F941A0F85DE9}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadNurbSurface,
    ]
    default_interface = IAcadNurbSurface

class AcadObject(CoClassBaseClass): # A CoClass
    # AcadObject Class
    CLSID = IID('{4F1D3AB3-AAC7-4F57-BA5C-B6D5410FE1D7}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadObject,
    ]
    default_interface = IAcadObject

class AcadOle(CoClassBaseClass): # A CoClass
    # Acad OLE
    CLSID = IID('{ABA71980-3AA9-40F5-81A7-735886F6F6FD}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadOle,
    ]
    default_interface = IAcadOle

class AcadPViewport(CoClassBaseClass): # A CoClass
    # AcadPViewport Class
    CLSID = IID('{BEAF55E0-0A37-499C-B48B-DBC93CF6E29B}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPViewport,
    ]
    default_interface = IAcadPViewport

class AcadPaperSpace(CoClassBaseClass): # A CoClass
    # AcadPaperSpace Class
    CLSID = IID('{BF0FD147-A1EA-416E-911B-9EF794738AFA}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPaperSpace,
    ]
    default_interface = IAcadPaperSpace

class AcadPdfUnderlay(CoClassBaseClass): # A CoClass
    # Acad PdfUnderlay
    CLSID = IID('{8DF57FE7-CEDA-4730-9F54-C308ED442495}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadUnderlay,
    ]
    default_interface = IAcadUnderlay

class AcadPlaneSurface(CoClassBaseClass): # A CoClass
    # Acad PlaneSurface
    CLSID = IID('{938953B2-646A-428C-895E-203B73B1B05A}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPlaneSurface,
    ]
    default_interface = IAcadPlaneSurface

class AcadPlot(CoClassBaseClass): # A CoClass
    # AcadPlot Class
    CLSID = IID('{DF79DE83-2A11-43DB-AE4C-1FE95E57F574}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlot,
    ]
    default_interface = IAcadPlot

class AcadPlotConfiguration(CoClassBaseClass): # A CoClass
    # AcadPlotConfiguration Class
    CLSID = IID('{211BF34C-5307-4666-B82D-0719CACA809C}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlotConfiguration,
    ]
    default_interface = IAcadPlotConfiguration

class AcadPlotConfigurations(CoClassBaseClass): # A CoClass
    # AcadPlotConfigurations Class
    CLSID = IID('{0EEABD18-B6F5-4E1E-887D-0384A20CD8E9}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPlotConfigurations,
    ]
    default_interface = IAcadPlotConfigurations

class AcadPoint(CoClassBaseClass): # A CoClass
    # Acad Point Object
    CLSID = IID('{5759A970-9028-4C5C-805B-AFE6D6169382}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPoint,
    ]
    default_interface = IAcadPoint

class AcadPointCloudEx(CoClassBaseClass): # A CoClass
    # AcadPointCloudEx
    CLSID = IID('{028BA451-EBBA-4529-8521-DBFB95EB745C}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPointCloudEx,
    ]
    default_interface = IAcadPointCloudEx

class AcadPolyfaceMesh(CoClassBaseClass): # A CoClass
    # Acad PolyfaceMesh Object
    CLSID = IID('{A9879069-87D2-4F15-94B4-92531900783C}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPolyfaceMesh,
    ]
    default_interface = IAcadPolyfaceMesh

class AcadPolygonMesh(CoClassBaseClass): # A CoClass
    # Acad PolygonMesh Object
    CLSID = IID('{7BAA52E2-CBFA-406B-83AB-7D0F939026D4}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPolygonMesh,
    ]
    default_interface = IAcadPolygonMesh

class AcadPolyline(CoClassBaseClass): # A CoClass
    # Acad Polyline Object
    CLSID = IID('{DD0ACEEC-B19B-4EC4-A5C8-C85BBE6402B2}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadPolyline,
    ]
    default_interface = IAcadPolyline

class AcadPopupMenu(CoClassBaseClass): # A CoClass
    # An Acad cascading menu
    CLSID = IID('{8774869F-546D-4CE5-9703-CFA67AEEBF26}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenu,
    ]
    default_interface = IAcadPopupMenu

class AcadPopupMenuItem(CoClassBaseClass): # A CoClass
    # A single menu item on an Acad pull-down menu
    CLSID = IID('{70408B41-584A-4C9C-B31B-F36FF8073798}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenuItem,
    ]
    default_interface = IAcadPopupMenuItem

class AcadPopupMenus(CoClassBaseClass): # A CoClass
    # A collection of PopupMenu objects representing all the popup menus loaded in the MenuGroup
    CLSID = IID('{63F5DDA7-C143-42AD-94E8-763C8E770537}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenus,
    ]
    default_interface = IAcadPopupMenus

class AcadPreferences(CoClassBaseClass): # A CoClass
    # This object specifies the current GstarCAD settings
    CLSID = IID('{57FB46D7-D66B-4EEA-969A-5D778BA7B79F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferences,
    ]
    default_interface = IAcadPreferences

class AcadPreferencesDisplay(CoClassBaseClass): # A CoClass
    # This object contains the options from the Display tab on the Options dialog
    CLSID = IID('{865D8226-319C-4784-B160-5D45FE038BF8}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesDisplay,
    ]
    default_interface = IAcadPreferencesDisplay

class AcadPreferencesDrafting(CoClassBaseClass): # A CoClass
    # This object contains the options from the Drafting tab on the Options dialog
    CLSID = IID('{AA668926-0FCF-4677-A97F-AD7920AB2C58}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesDrafting,
    ]
    default_interface = IAcadPreferencesDrafting

class AcadPreferencesFiles(CoClassBaseClass): # A CoClass
    # This object contains the options from the Files tab on the Options dialog
    CLSID = IID('{6CE93067-926C-4A41-BFC4-EA0A02C9F7E7}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesFiles,
    ]
    default_interface = IAcadPreferencesFiles

class AcadPreferencesOpenSave(CoClassBaseClass): # A CoClass
    # This object contains the options from the Open and Save tab on the Options dialog
    CLSID = IID('{7DBA4518-9AA4-416E-A3D6-45E80A02E979}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesOpenSave,
    ]
    default_interface = IAcadPreferencesOpenSave

class AcadPreferencesOutput(CoClassBaseClass): # A CoClass
    # This object contains the options from the Output tab on the Options dialog
    CLSID = IID('{62EE39DA-DF13-42B1-861F-487026489C27}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesOutput,
    ]
    default_interface = IAcadPreferencesOutput

class AcadPreferencesProfiles(CoClassBaseClass): # A CoClass
    # This object contains the options from the Profiles tab on the Options dialog
    CLSID = IID('{38CDCF3E-F321-43F6-B355-6CBE197BD33A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesProfiles,
    ]
    default_interface = IAcadPreferencesProfiles

class AcadPreferencesSelection(CoClassBaseClass): # A CoClass
    # This object contains the options from the Selection tab on the Options dialog
    CLSID = IID('{1615B81F-2474-4AC3-A6F7-885F0DC5D62F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesSelection,
    ]
    default_interface = IAcadPreferencesSelection

class AcadPreferencesSystem(CoClassBaseClass): # A CoClass
    # This object contains the options from the System tab on the Options dialog
    CLSID = IID('{C19DA545-A773-422D-818F-61E60340C184}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesSystem,
    ]
    default_interface = IAcadPreferencesSystem

class AcadPreferencesUser(CoClassBaseClass): # A CoClass
    # This object contains the options from the User tab on the Options dialog
    CLSID = IID('{2DF90FE8-4354-4AB3-ABA9-04B9831F94BF}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesUser,
    ]
    default_interface = IAcadPreferencesUser

class AcadRasterImage(CoClassBaseClass): # A CoClass
    # Acad Raster Object
    CLSID = IID('{FB5AA334-CBF1-41D1-B9E3-98F2ACB2EB83}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRasterImage,
    ]
    default_interface = IAcadRasterImage

class AcadRay(CoClassBaseClass): # A CoClass
    # Acad Ray Object
    CLSID = IID('{D44D6709-6C13-4C52-A360-A2943C33EEE8}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRay,
    ]
    default_interface = IAcadRay

class AcadRegion(CoClassBaseClass): # A CoClass
    # Acad Region Object
    CLSID = IID('{A83EBA25-CCF0-45CE-A7C2-FEABE0D3AF59}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRegion,
    ]
    default_interface = IAcadRegion

class AcadRegisteredApplication(CoClassBaseClass): # A CoClass
    # AcadRegisteredApplication Class
    CLSID = IID('{CF8BF2DA-8602-41B7-8906-3C67F07994FB}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRegisteredApplication,
    ]
    default_interface = IAcadRegisteredApplication

class AcadRegisteredApplications(CoClassBaseClass): # A CoClass
    # AcadRegisteredApplications Class
    CLSID = IID('{216D566A-A968-4E87-A8B3-9B5EB06BB19D}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRegisteredApplications,
    ]
    default_interface = IAcadRegisteredApplications

class AcadRevolvedSurface(CoClassBaseClass): # A CoClass
    # Acad RevolvedSurface
    CLSID = IID('{CA2C91D1-2D7B-4195-A66C-CFB788EFEB14}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadRevolvedSurface,
    ]
    default_interface = IAcadRevolvedSurface

class AcadScriptJet(CoClassBaseClass): # A CoClass
    # AcadScriptJet Class
    CLSID = IID('{098976AB-EB69-4330-92C8-C8AC73822785}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadScriptJet,
    ]
    default_interface = IAcadScriptJet

class AcadSection(CoClassBaseClass): # A CoClass
    # Acad Section
    CLSID = IID('{DCB0E3B7-B4A4-4D92-A3E8-C27BCAECBE8F}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSection,
        IAcadSection2,
    ]
    default_interface = IAcadSection

class AcadSectionManager(CoClassBaseClass): # A CoClass
    # AcadSectionManager Class
    CLSID = IID('{D1F1BB22-D947-40C8-90D8-B9DC99591EF7}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSectionManager,
    ]
    default_interface = IAcadSectionManager

class AcadSectionSettings(CoClassBaseClass): # A CoClass
    # Acad Section Settings Object
    CLSID = IID('{5246A240-92AB-460B-820D-365247D9B47F}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSectionSettings,
    ]
    default_interface = IAcadSectionSettings

# This CoClass is known by the name 'GStarCAD.AcadSecurityParams.24'
class AcadSecurityParams(CoClassBaseClass): # A CoClass
    # AcadSecurityParams Class
    CLSID = IID('{D4903656-AC07-421A-8648-4804351E9DBE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSecurityParams,
    ]
    default_interface = IAcadSecurityParams

class AcadSelectionSet(CoClassBaseClass): # A CoClass
    # A group of one or more Acad objects specified for processing as a single unit
    CLSID = IID('{81A17A41-793D-4BF0-A902-E1B622D175B5}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSelectionSet,
    ]
    default_interface = IAcadSelectionSet

class AcadSelectionSets(CoClassBaseClass): # A CoClass
    # The collection of all selection sets in the drawing
    CLSID = IID('{EA8022D8-0E43-473D-8646-BB1292EACE19}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSelectionSets,
    ]
    default_interface = IAcadSelectionSets

class AcadShadowDisplay(CoClassBaseClass): # A CoClass
    # Acad Entity with Shadows interface
    CLSID = IID('{0F994C78-5B0F-4A2C-B63A-DB74B93B5537}')
    coclass_sources = [
    ]
    coclass_interfaces = [
    ]

class AcadShape(CoClassBaseClass): # A CoClass
    # Acad Shape Object
    CLSID = IID('{4EFE4629-C549-4346-9E5A-06F0AE788ED0}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadShape,
    ]
    default_interface = IAcadShape

class AcadSolid(CoClassBaseClass): # A CoClass
    # Acad Solid Object
    CLSID = IID('{7EB18444-4D79-4CA8-8743-0498B64C4D01}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSolid,
    ]
    default_interface = IAcadSolid

class AcadSortentsTable(CoClassBaseClass): # A CoClass
    # AcadSortentsTable Class
    CLSID = IID('{79C8B818-C544-46EE-BDCF-613095E6DA50}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSortentsTable,
    ]
    default_interface = IAcadSortentsTable

class AcadSpline(CoClassBaseClass): # A CoClass
    # Acad Spline Object
    CLSID = IID('{F2293592-5908-4F24-9B5D-759CDA971FC2}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSpline,
    ]
    default_interface = IAcadSpline

class AcadState(CoClassBaseClass): # A CoClass
    # Acad State Object
    CLSID = IID('{6208CB09-68D9-4D82-A4BB-43003DB56AFA}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadState,
    ]
    default_interface = IAcadState

class AcadSubDMesh(CoClassBaseClass): # A CoClass
    # Acad SubDMesh
    CLSID = IID('{73EBC89D-6A5A-4ED8-BC4D-2995DC879649}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSubDMesh,
    ]
    default_interface = IAcadSubDMesh

class AcadSummaryInfo(CoClassBaseClass): # A CoClass
    # AcadSummaryInfo Class
    CLSID = IID('{BBC325BA-407B-4755-B4D1-7A3E30581BD3}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSummaryInfo,
    ]
    default_interface = IAcadSummaryInfo

class AcadSurface(CoClassBaseClass): # A CoClass
    # Acad Surface
    CLSID = IID('{25D868BF-4CFD-4CB4-BC30-1A43AAF5F3E1}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSurface,
    ]
    default_interface = IAcadSurface

class AcadSweptSurface(CoClassBaseClass): # A CoClass
    # Acad SweptSurface
    CLSID = IID('{6997E39D-299C-45CC-95BC-A677AC0D1A62}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadSweptSurface,
    ]
    default_interface = IAcadSweptSurface

class AcadTable(CoClassBaseClass): # A CoClass
    # Acad Table Object
    CLSID = IID('{92B86261-DA20-4A60-9982-05863C6D9EBE}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTable,
    ]
    default_interface = IAcadTable

class AcadTableCell(CoClassBaseClass): # A CoClass
    # Acad TableCell Object
    CLSID = IID('{6336B61B-EFBF-4325-94FE-59D403CB0C76}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTableCell,
    ]
    default_interface = IAcadTableCell

class AcadTableStyle(CoClassBaseClass): # A CoClass
    # AcadTableStyle Class
    CLSID = IID('{31B9FEC5-563C-464B-B180-5B5E4B530EDD}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTableStyle,
    ]
    default_interface = IAcadTableStyle

class AcadText(CoClassBaseClass): # A CoClass
    # Acad Text Object
    CLSID = IID('{12226789-EEA7-4BE8-9FD7-33513C744E3B}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadText,
    ]
    default_interface = IAcadText

class AcadTextStyle(CoClassBaseClass): # A CoClass
    # AcadTextStyle Class
    CLSID = IID('{59F48386-168C-4320-8B3D-77E8556EF9E1}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTextStyle,
    ]
    default_interface = IAcadTextStyle

class AcadTextStyles(CoClassBaseClass): # A CoClass
    # AcadTextStyles Class
    CLSID = IID('{F194C083-83FC-4F35-A76F-F4C577C0689A}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTextStyles,
    ]
    default_interface = IAcadTextStyles

class AcadTolerance(CoClassBaseClass): # A CoClass
    # Acad Tolerance Object
    CLSID = IID('{092962C2-F320-44E1-8857-C8AFE3885555}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTolerance,
    ]
    default_interface = IAcadTolerance

class AcadToolbar(CoClassBaseClass): # A CoClass
    # Acad Toolbar
    CLSID = IID('{D6EE440D-BCFF-443C-960D-4F1DAC6D94F6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbar,
    ]
    default_interface = IAcadToolbar

class AcadToolbarItem(CoClassBaseClass): # A CoClass
    # Acad ToolbarItem
    CLSID = IID('{D2806DE9-1AFE-42DF-87AC-B0A855F9B891}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbarItem,
    ]
    default_interface = IAcadToolbarItem

class AcadToolbars(CoClassBaseClass): # A CoClass
    # Acad Toolbars
    CLSID = IID('{30523308-F09B-4C74-A819-9AD14A4A943E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbars,
    ]
    default_interface = IAcadToolbars

class AcadTrace(CoClassBaseClass): # A CoClass
    # Acad Trace Object
    CLSID = IID('{D7B6AF1E-5F8B-453C-A26E-828A2BD820CC}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadTrace,
    ]
    default_interface = IAcadTrace

class AcadUCS(CoClassBaseClass): # A CoClass
    # AcadUCS Class
    CLSID = IID('{D4E3C6C4-7DAE-4D80-A98C-148C3CD66E32}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadUCS,
    ]
    default_interface = IAcadUCS

class AcadUCSs(CoClassBaseClass): # A CoClass
    # AcadUCSs Class
    CLSID = IID('{1146DF77-46C8-4F31-AB6A-8815AEE71EB7}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadUCSs,
    ]
    default_interface = IAcadUCSs

class AcadUtility(CoClassBaseClass): # A CoClass
    # AcadUtility Class
    CLSID = IID('{9F1290F0-C25D-429E-901E-42CBE63A9836}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUtility,
    ]
    default_interface = IAcadUtility

class AcadView(CoClassBaseClass): # A CoClass
    # A graphical representation of a 2D drawing or 3D model from a specific location (viewpoint) in space
    CLSID = IID('{A2F794C5-9ED5-49B6-A45B-1FB659497505}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadView,
    ]
    default_interface = IAcadView

class AcadViewport(CoClassBaseClass): # A CoClass
    # AcadViewport Class
    CLSID = IID('{415EAAB8-7D05-4935-A6DF-25DA98FC8FB2}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadViewport,
    ]
    default_interface = IAcadViewport

class AcadViewports(CoClassBaseClass): # A CoClass
    # AcadViewports Class
    CLSID = IID('{FD6D9F4B-1812-4B43-8836-1BCEC2E28F65}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadViewports,
    ]
    default_interface = IAcadViewports

class AcadViews(CoClassBaseClass): # A CoClass
    # AcadViews Class
    CLSID = IID('{0165E8DC-3E0B-4102-9C66-DC0228911048}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadViews,
    ]
    default_interface = IAcadViews

class AcadXRecord(CoClassBaseClass): # A CoClass
    # XRecord objects are used to store and manage arbitrary data
    CLSID = IID('{1E499AED-C7C7-4EE1-8FA6-AB1119B7268E}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadXRecord,
    ]
    default_interface = IAcadXRecord

class AcadXline(CoClassBaseClass): # A CoClass
    # Acad Xline Object
    CLSID = IID('{70371E06-28C5-423C-8912-78A9A6E342CB}')
    coclass_sources = [
        IAcadObjectEvents,
    ]
    default_source = IAcadObjectEvents
    coclass_interfaces = [
        IAcadXline,
    ]
    default_interface = IAcadXline

IGcPePropertyEditorColor_vtables_dispatch_ = 1
IGcPePropertyEditorColor_vtables_ = [
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcad3DFace_vtables_dispatch_ = 1
IAcad3DFace_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetInvisibleEdge' , 'Index' , 'bVisible' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SetInvisibleEdge' , 'Index' , 'State' , ), 7, (7, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
]

IAcad3DPolyline_vtables_dispatch_ = 1
IAcad3DPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
]

IAcad3DSolid_vtables_dispatch_ = 1
IAcad3DSolid_vtables_ = [
    (( 'Centroid' , 'Centroid' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'MomentOfInertia' , 'momentInertia' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalDirections' , 'prinDir' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalMoments' , 'prinMoments' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ProductOfInertia' , 'prodInertia' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'RadiiOfGyration' , 'radiiGyration' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Volume' , 'Volume' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Boolean' , 'Operation' , 'SolidObject' , ), 8, (8, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'CheckInterference' , 'Object' , 'CreateInterferenceSolid' , 'pIntSolid' , ), 9, (9, (), [ 
             (9, 1, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , (11, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'SectionSolid' , 'Point1' , 'Point2' , 'point3' , 'pRegion' , 
             ), 10, (10, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')") , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'SliceSolid' , 'Point1' , 'Point2' , 'point3' , 'Negative' , 
             'pNegSideSolid' , ), 11, (11, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (11, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SolidType' , 'SolidType' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'Position' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'Position' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'History' , 'bHistory' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'History' , 'bHistory' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadApplication_vtables_dispatch_ = 1
IAcadApplication_vtables_ = [
    (( 'Visible' , 'Visible' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'Visible' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pAppName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Caption' , 'bstrCaption' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 4, (4, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (9, 1, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'FullName' , 'FullName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'WindowLeft' , 'left' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'WindowLeft' , 'left' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrPath' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'LocaleId' , 'lcid' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'WindowTop' , 'top' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'WindowTop' , 'top' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Version' , 'bstrVer' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Preferences' , 'pPreferences' , ), 14, (14, (), [ (16393, 10, None, "IID('{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'StatusId' , 'VportObj' , 'bStatus' , ), 17, (17, (), [ (9, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ListGrx' , 'pVarListArray' , ), 18, (18, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'LoadGrx' , 'Name' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'GetInterfaceObject' , 'ProgID' , 'pObj' , ), 20, (20, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'UnloadGrx' , 'Name' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Quit' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Zoom' , 'Type' , 'vParams' , ), 26, (26, (), [ (3, 1, None, None) , 
             (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
    (( 'VBE' , 'pDispVBE' , ), 27, (27, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'MenuGroups' , 'pMenuGroups' , ), 28, (28, (), [ (16393, 10, None, "IID('{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'MenuBar' , 'pMenuBar' , ), 29, (29, (), [ (16393, 10, None, "IID('{87925C1E-ADEA-48BD-8BF1-239F9A116A81}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LoadVBI' , 'Name' , ), 30, (30, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'UnloadVBI' , 'Name' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'Documents' , 'pDocuments' , ), 32, (32, (), [ (16393, 10, None, "IID('{31010F88-E412-4A4B-B482-B71D45D1A28A}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'Eval' , 'Expression' , ), 33, (33, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'RunMacro' , 'MacroPath' , ), 35, (35, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'ZoomExtents' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'ZoomAll' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'ZoomCenter' , 'Center' , 'Magnify' , ), 38, (38, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'ZoomScaled' , 'scale' , 'ScaleType' , ), 39, (39, (), [ (5, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'ZoomWindow' , 'LowerLeft' , 'UpperRight' , ), 40, (40, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'ZoomPickWindow' , ), 41, (41, (), [ ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'GetAcadState' , 'pVal' , ), 42, (42, (), [ (16393, 10, None, "IID('{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'ZoomPrevious' , ), 43, (43, (), [ ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'HWND' , 'HWND' , ), 44, (44, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'InitApp' , 'pApp' , ), 45, (45, (), [ (16403, 1, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
    (( 'LoadDVB' , 'Name' , ), 46, (46, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'UnloadDVB' , 'Name' , ), 47, (47, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'HWND32' , 'HWND' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

IAcadArc_vtables_dispatch_ = 1
IAcadArc_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TotalAngle' , 'TotalAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ArcLength' , 'ArcLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 10, (10, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadArcAlignedText_vtables_dispatch_ = 1
IAcadArcAlignedText_vtables_ = [
    (( 'contents' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'contents' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'pVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'pVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'pVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'pVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'pVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'pVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ArcOffset' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ArcOffset' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'LeftOffset' , 'pVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'LeftOffset' , 'pVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'RightOffset' , 'pVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'RightOffset' , 'pVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'WidthFactor' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'WidthFactor' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'CharSpacing' , 'pVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
]

IAcadAssocArrayPath_vtables_dispatch_ = 1
IAcadAssocArrayPath_vtables_ = [
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'ItemCount' , 'nCnt' , ), 613, (613, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'ItemCount' , 'nCnt' , ), 613, (613, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'ItemSpacing' , 'dSpaceing' , ), 614, (614, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'ItemSpacing' , 'dSpaceing' , ), 614, (614, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'StartOffset' , 'dOffset' , ), 615, (615, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'StartOffset' , 'dOffset' , ), 615, (615, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'EndOffset' , 'dOffset' , ), 616, (616, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'EndOffset' , 'dOffset' , ), 616, (616, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'method' , 'nMethod' , ), 641, (641, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'method' , 'nMethod' , ), 641, (641, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'FillPath' , 'bValue' , ), 642, (642, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'FillPath' , 'bValue' , ), 642, (642, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'AlignItems' , 'bValue' , ), 643, (643, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'AlignItems' , 'bValue' , ), 643, (643, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'dLength' , ), 644, (644, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
]

IAcadAssocArrayPolar_vtables_dispatch_ = 1
IAcadAssocArrayPolar_vtables_ = [
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'ItemCount' , 'nCnt' , ), 613, (613, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'ItemCount' , 'nCnt' , ), 613, (613, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'bClockwise' , ), 641, (641, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'bClockwise' , ), 641, (641, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'RotateItems' , 'bValue' , ), 642, (642, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'RotateItems' , 'bValue' , ), 642, (642, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'ptOrigin' , ), 643, (643, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'ptOrigin' , ), 643, (643, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'dRadius' , ), 644, (644, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'dRadius' , ), 644, (644, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'AngleBetweenItems' , 'dAngle' , ), 657, (657, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'AngleBetweenItems' , 'dAngle' , ), 657, (657, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'FillAngle' , 'dAngle' , ), 658, (658, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'FillAngle' , 'dAngle' , ), 658, (658, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
]

IAcadAssocArrayRectangular_vtables_dispatch_ = 1
IAcadAssocArrayRectangular_vtables_ = [
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'ptBasePoint' , ), 601, (601, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'RowCount' , 'nCnt' , ), 608, (608, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'dSpaceing' , ), 609, (609, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'RowElevation' , 'dElev' , ), 610, (610, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'LevelCount' , 'nCnt' , ), 611, (611, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'LevelSpacing' , 'dSpaceing' , ), 612, (612, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'AxisDirection' , 'Normal' , ), 614, (614, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'AxisDirection' , 'Normal' , ), 614, (614, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'ColumnCount' , 'nCnt' , ), 615, (615, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'ColumnCount' , 'nCnt' , ), 615, (615, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'dSpaceing' , ), 616, (616, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'dSpaceing' , ), 616, (616, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'AxesAngle' , 'dAngle' , ), 657, (657, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'AxesAngle' , 'dAngle' , ), 657, (657, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
]

IAcadAttribute_vtables_dispatch_ = 1
IAcadAttribute_vtables_ = [
    (( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'Tag' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'Tag' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 64 , )),
    (( 'Height' , 'Height' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Mode' , 'Mode' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Mode' , 'Mode' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'Verify' , 'bVerify' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'Verify' , 'bVerify' , ), 23, (23, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'Preset' , 'bPreset' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'Preset' , 'bPreset' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'UpdateMTextAttribute' , ), 28, (28, (), [ ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (5, 0, None, None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
]

IAcadAttributeReference_vtables_dispatch_ = 1
IAcadAttributeReference_vtables_ = [
    (( 'Height' , 'Height' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 64 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 64 , )),
    (( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadBlock_vtables_dispatch_ = 1
IAcadBlock_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1536, (1536, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'AddCustomObject' , 'ClassName' , 'pObject' , ), 1539, (1539, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Add3DFace' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
             'pFace3d' , ), 1540, (1540, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{46250F63-F4E2-4C99-A12B-0471714BC659}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Add3DMesh' , 'M' , 'N' , 'PointsMatrix' , 'pMesh3d' , 
             ), 1541, (1541, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Add3DPoly' , 'PointsArray' , 'pPoly3d' , ), 1542, (1542, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AddArc' , 'Center' , 'Radius' , 'StartAngle' , 'EndAngle' , 
             'pArc' , ), 1543, (1543, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'AddAttribute' , 'Height' , 'Mode' , 'Prompt' , 'InsertionPoint' , 
             'Tag' , 'Value' , 'pAttr' , ), 1544, (1544, (), [ (5, 1, None, None) , 
             (3, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
             (16393, 10, None, "IID('{DB4711D4-33D9-408F-9E34-93A7F91248F2}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'AddBox' , 'Origin' , 'Length' , 'Width' , 'Height' , 
             'pBox' , ), 1545, (1545, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'AddCircle' , 'Center' , 'Radius' , 'pCircle' , ), 1546, (1546, (), [ 
             (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{70B267B4-5885-477C-BE74-F898EE7FE9EA}')") , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'AddCone' , 'Center' , 'BaseRadius' , 'Height' , 'pCone' , 
             ), 1547, (1547, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'AddCylinder' , 'Center' , 'Radius' , 'Height' , 'pCyl' , 
             ), 1548, (1548, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'AddDimAligned' , 'ExtLine1Point' , 'ExtLine2Point' , 'TextPosition' , 'pDim' , 
             ), 1549, (1549, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'AddDimAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
             'pDim' , ), 1550, (1550, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{78931DD8-09C7-44F5-9CB5-83198A8CD286}')") , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'AddDimDiametric' , 'ChordPoint' , 'FarChordPoint' , 'LeaderLength' , 'pDim' , 
             ), 1551, (1551, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{CF7DAB54-2669-4E42-B5A5-297B0154CE04}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRotated' , 'ExtLine1Point' , 'ExtLine2Point' , 'DimLineLocation' , 'RotationAngle' , 
             'pDim' , ), 1552, (1552, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}')") , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'AddDimOrdinate' , 'DefinitionPoint' , 'LeaderEndPoint' , 'UseXAxis' , 'pDim' , 
             ), 1553, (1553, (), [ (12, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRadial' , 'Center' , 'ChordPoint' , 'LeaderLength' , 'pDim' , 
             ), 1554, (1554, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{6070AA16-B13D-4B73-AA07-722C59BC09B5}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipse' , 'Center' , 'MajorAxis' , 'RadiusRatio' , 'pEllipse' , 
             ), 1555, (1555, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{21565C97-8E2E-442B-8F69-C9662BC89DCA}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipticalCone' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
             'pEllipCone' , ), 1556, (1556, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipticalCylinder' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
             'pEllipCyl' , ), 1557, (1557, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'AddExtrudedSolid' , 'Profile' , 'Height' , 'TaperAngle' , 'pExtrSolid' , 
             ), 1558, (1558, (), [ (9, 1, None, "IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')") , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'AddExtrudedSolidAlongPath' , 'Profile' , 'Path' , 'pExtrSolid' , ), 1559, (1559, (), [ 
             (9, 1, None, "IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')") , (9, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'AddLeader' , 'PointsArray' , 'Annotation' , 'Type' , 'pLeader' , 
             ), 1560, (1560, (), [ (12, 1, None, None) , (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , (3, 1, None, None) , (16393, 10, None, "IID('{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}')") , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'AddMText' , 'InsertionPoint' , 'Width' , 'Text' , 'pMtext' , 
             ), 1561, (1561, (), [ (12, 1, None, None) , (5, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{50FA2201-1260-4323-8C00-3EA7E36680B6}')") , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'AddPoint' , 'Point' , 'pPoint' , ), 1562, (1562, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'AddLightWeightPolyline' , 'VerticesList' , 'pLWPolyline' , ), 1563, (1563, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{B32517C5-036E-4CB0-8538-66BD5FC625C4}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'AddPolyline' , 'VerticesList' , 'pPolyline' , ), 1564, (1564, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{780E9428-D7F9-4F96-8E91-55C8F3CF3082}')") , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'AddRay' , 'Point1' , 'Point2' , 'pRay' , ), 1565, (1565, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{D05D772F-86F6-4B10-9898-E22BF8C5F192}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'AddRegion' , 'ObjectList' , 'pRegions' , ), 1566, (1566, (), [ (12, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'AddRevolvedSolid' , 'Profile' , 'AxisPoint' , 'AxisDir' , 'Angle' , 
             'pRevolSolid' , ), 1567, (1567, (), [ (9, 1, None, "IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')") , (12, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'AddShape' , 'Name' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
             'pShape' , ), 1568, (1568, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}')") , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'AddSolid' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
             'pSolid' , ), 1569, (1569, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{38D2992F-DF38-497F-9E2B-68D813057E8D}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'AddSphere' , 'Center' , 'Radius' , 'pSphere' , ), 1570, (1570, (), [ 
             (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'AddSpline' , 'PointsArray' , 'StartTangent' , 'EndTangent' , 'pSpline' , 
             ), 1571, (1571, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{3D506D60-0138-48DD-8166-E5512E441206}')") , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'AddText' , 'TextString' , 'InsertionPoint' , 'Height' , 'pText' , 
             ), 1572, (1572, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}')") , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'AddTolerance' , 'Text' , 'InsertionPoint' , 'Direction' , 'pTolerance' , 
             ), 1573, (1573, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{98D4741E-D869-4950-8B28-046B6884A084}')") , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'AddTorus' , 'Center' , 'TorusRadius' , 'TubeRadius' , 'pTorus' , 
             ), 1574, (1574, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'AddTrace' , 'PointsArray' , 'pTrace' , ), 1575, (1575, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{4253025F-5BC5-4D78-8D65-138D2DBED220}')") , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'AddWedge' , 'Center' , 'Length' , 'Width' , 'Height' , 
             'pWedge' , ), 1576, (1576, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{93102923-D2AD-4429-86B3-A09D589BF38F}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'AddXline' , 'Point1' , 'Point2' , 'pXline' , ), 1577, (1577, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{36494A5A-AADE-46F4-B87C-B213A2AF0083}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'InsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
             'Zscale' , 'Rotation' , 'Password' , 'pBlkRef' , ), 1578, (1578, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{0E143589-AFCC-44FC-8000-4C8D44F80ED6}')") , ], 1 , 1 , 4 , 1 , 528 , (3, 0, None, None) , 0 , )),
    (( 'AddHatch' , 'PatternType' , 'PatternName' , 'Associativity' , 'HatchObjectType' , 
             'pHatch' , ), 1579, (1579, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (12, 17, None, None) , (16393, 10, None, "IID('{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}')") , ], 1 , 1 , 4 , 1 , 536 , (3, 0, None, None) , 0 , )),
    (( 'AddRaster' , 'imageFileName' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
             'pRaster' , ), 1580, (1580, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{1A5BD135-D93B-4BFD-8027-E8277D629B46}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'AddLine' , 'StartPoint' , 'EndPoint' , 'pLine' , ), 1581, (1581, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{EB1641A6-750D-49EB-A681-0BAEB77E7388}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'IsLayout' , 'bIsLayout' , ), 1582, (1582, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Layout' , 'pLayout' , ), 1583, (1583, (), [ (16393, 10, None, "IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'IsXRef' , 'pIsXRref' , ), 1584, (1584, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'AddMInsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
             'Zscale' , 'Rotation' , 'NumRows' , 'NumColumns' , 'RowSpacing' , 
             'ColumnSpacing' , 'Password' , 'pMInsertBlk' , ), 1585, (1585, (), [ (12, 1, None, None) , 
             (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , 
             (16393, 10, None, "IID('{2EA3AB94-E461-4DDC-9B9B-894406F31256}')") , ], 1 , 1 , 4 , 1 , 584 , (3, 0, None, None) , 0 , )),
    (( 'AddPolyfaceMesh' , 'VertexList' , 'FaceList' , 'pPFMesh' , ), 1586, (1586, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{FD4B5856-B661-4E10-8B79-1E793FDB0E50}')") , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'AddMLine' , 'VertexList' , 'pMLine' , ), 1587, (1587, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{0DA73585-0488-4699-BCD2-AB0F5C91D404}')") , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'AddDim3PointAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
             'pDim' , ), 1588, (1588, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{EA05C039-0D70-4713-865B-71DF0B02F6CA}')") , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'XRefDatabase' , 'pDatabase' , ), 1589, (1589, (), [ (16393, 10, None, "IID('{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}')") , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'AttachExternalReference' , 'PathName' , 'Name' , 'InsertionPoint' , 'Xscale' , 
             'Yscale' , 'Zscale' , 'Rotation' , 'bOverlay' , 'Password' , 
             'pXRef' , ), 1590, (1590, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
             (12, 17, None, None) , (16393, 10, None, "IID('{29EB1F45-3E5E-41E2-B909-2EA909858B11}')") , ], 1 , 1 , 4 , 1 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Unload' , ), 1591, (1591, (), [ ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Reload' , ), 1592, (1592, (), [ ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Bind' , 'bPrefixName' , ), 1593, (1593, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Detach' , ), 1594, (1594, (), [ ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'AddTable' , 'InsertionPoint' , 'NumRows' , 'NumColumns' , 'RowHeight' , 
             'ColWidth' , 'pTable' , ), 1595, (1595, (), [ (12, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}')") , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Units' , 'pIU' , ), 1598, (1598, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Units' , 'pIU' , ), 1598, (1598, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'IsDynamicBlock' , 'pDynamicBlock' , ), 1601, (1601, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'AddDimArc' , 'ArcCenter' , 'FirstEndPoint' , 'SecondEndPoint' , 'ArcPoint' , 
             'pDim' , ), 1602, (1602, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{6BE0895F-AB23-4095-8180-0BBD8E790138}')") , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRadialLarge' , 'Center' , 'ChordPoint' , 'OverrideCenter' , 'JogPoint' , 
             'JogAngle' , 'pDim' , ), 1603, (1603, (), [ (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{E3D1CABD-C84B-49D2-9D47-984F880D33A2}')") , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'AddSection' , 'FromPoint' , 'ToPoint' , 'planeVector' , 'ppSecPlane' , 
             ), 1604, (1604, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'AddMLeader' , 'PointsArray' , 'leaderLineIndex' , 'pMLeader' , ), 1605, (1605, (), [ 
             (12, 1, None, None) , (16387, 2, None, None) , (16393, 10, None, "IID('{59898AB2-E779-4D7C-B77C-86E9E10B2226}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadBlockReference_vtables_dispatch_ = 1
IAcadBlockReference_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'GetAttributes' , 'pAttrObjs' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'GetConstantAttributes' , 'pAttrObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'HasAttributes' , 'bHas' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'EffectiveName' , 'EffectiveName' , ), 512, (512, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'IsDynamicBlock' , 'pDynamicBlock' , ), 513, (513, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'GetDynamicBlockProperties' , 'dynamicPropertyArray' , ), 514, (514, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ResetBlock' , ), 515, (515, (), [ ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ConvertToAnonymousBlock' , ), 516, (516, (), [ ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ConvertToStaticBlock' , 'newBlockName' , ), 517, (517, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'InsUnits' , 'Units' , ), 521, (521, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'InsUnitsFactor' , 'factor' , ), 528, (528, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
]

IAcadBlocks_vtables_dispatch_ = 1
IAcadBlocks_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'InsertionPoint' , 'Name' , 'pBlock' , ), 2, (2, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadCamera_vtables_dispatch_ = 1
IAcadCamera_vtables_ = [
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Location' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Location' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'pVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'pVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'FieldOfView' , 'pVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'FieldOfView' , 'pVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'FrameHeight' , 'pVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'FrameHeight' , 'pVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'FrameWidth' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'FrameWidth' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'RollAngle' , 'pVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'RollAngle' , 'pVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'IsPlotable' , 'pVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'IsPlotable' , 'pVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'FrontPlane' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'FrontPlane' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'BackPlane' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'BackPlane' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Clipping' , 'pVal' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Clipping' , 'pVal' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
]

IAcadCircle_vtables_dispatch_ = 1
IAcadCircle_vtables_ = [
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 8, (8, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
]

IAcadDatabase_vtables_dispatch_ = 1
IAcadDatabase_vtables_ = [
    (( 'ModelSpace' , 'pMSpace' , ), 1, (1, (), [ (16393, 10, None, "IID('{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'PaperSpace' , 'pPSpace' , ), 2, (2, (), [ (16393, 10, None, "IID('{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Blocks' , 'pBlocks' , ), 3, (3, (), [ (16393, 10, None, "IID('{E69E9F83-F577-403C-8F69-7F5E86AB61F4}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'CopyObjects' , 'Objects' , 'Owner' , 'IdPairs' , 'pNewObjects' , 
             ), 4, (4, (), [ (12, 1, None, None) , (12, 17, None, None) , (16396, 19, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Groups' , 'pGroups' , ), 5, (5, (), [ (16393, 10, None, "IID('{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DimStyles' , 'pDimStyles' , ), 6, (6, (), [ (16393, 10, None, "IID('{B6084632-4A92-45F4-B8F7-0A91824DADB5}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Layers' , 'pLayers' , ), 7, (7, (), [ (16393, 10, None, "IID('{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Linetypes' , 'pLinetypes' , ), 8, (8, (), [ (16393, 10, None, "IID('{ED574116-AE18-4BB2-9628-1921C110F038}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Dictionaries' , 'pDictionaries' , ), 9, (9, (), [ (16393, 10, None, "IID('{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'RegisteredApplications' , 'pRegApps' , ), 10, (10, (), [ (16393, 10, None, "IID('{FA985110-D0CB-4E62-AB01-2FE6027C7F05}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'TextStyles' , 'pTextStyles' , ), 11, (11, (), [ (16393, 10, None, "IID('{F8425B37-BFCF-4290-8CA2-C718D3201829}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'UserCoordinateSystems' , 'pUCSs' , ), 12, (12, (), [ (16393, 10, None, "IID('{94DA139B-A285-4E3D-9E31-AA597FD909B0}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Views' , 'pViews' , ), 13, (13, (), [ (16393, 10, None, "IID('{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Viewports' , 'pViewports' , ), 14, (14, (), [ (16393, 10, None, "IID('{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Limits' , 'Limits' , ), 17, (17, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Limits' , 'Limits' , ), 17, (17, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'HandleToObject' , 'Handle' , 'pObj' , ), 18, (18, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ObjectIdToObject' , 'ObjectID' , 'pObj' , ), 19, (19, (), [ (20, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Layouts' , 'pLayouts' , ), 20, (20, (), [ (16393, 10, None, "IID('{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'PlotConfigurations' , 'pPlotConfigs' , ), 21, (21, (), [ (16393, 10, None, "IID('{02242489-515A-4BDD-AC0C-E125FD1BE28C}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Preferences' , 'pPref' , ), 22, (22, (), [ (16393, 10, None, "IID('{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'FileDependencies' , 'pFDM' , ), 70, (70, (), [ (16393, 10, None, "IID('{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'SummaryInfo' , 'pSummaryInfo' , ), 71, (71, (), [ (16393, 10, None, "IID('{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'SectionManager' , 'pSecMgr' , ), 72, (72, (), [ (16393, 10, None, "IID('{0340058F-D94E-429D-8199-A4ECFF677AC1}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Materials' , 'pMaterials' , ), 73, (73, (), [ (16393, 10, None, "IID('{C42C4E52-02C7-441C-B0BA-16771B542EA5}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ObjectIdToObject32' , 'ObjectID' , 'pObj' , ), 77, (77, (), [ (3, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IAcadDatabasePreferences_vtables_dispatch_ = 1
IAcadDatabasePreferences_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Path' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Path' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IAcadDictionaries_vtables_dispatch_ = 1
IAcadDictionaries_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{6CE21DA5-2896-4D63-9373-2EE672A00D41}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadDictionary_vtables_dispatch_ = 1
IAcadDictionary_vtables_ = [
    (( 'Name' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'AddObject' , 'Keyword' , 'ObjectName' , 'pNewObj' , ), 3, (3, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GetName' , 'Object' , 'bstrName' , ), 4, (4, (), [ (9, 1, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetObject' , 'Name' , 'pObj' , ), 5, (5, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Remove' , 'Name' , 'pObj' , ), 6, (6, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Rename' , 'OldName' , 'NewName' , ), 7, (7, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Replace' , 'OldName' , 'pObj' , ), 8, (8, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{B0F45D84-478D-4E42-8261-0F0C89BE7E99}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AddXRecord' , 'Keyword' , 'pNewXRecord' , ), 9, (9, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{153C1376-952E-4696-94A0-F57364AA6836}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAcadDim3PointAngular_vtables_dispatch_ = 1
IAcadDim3PointAngular_vtables_ = [
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
]

IAcadDimAligned_vtables_dispatch_ = 1
IAcadDimAligned_vtables_ = [
    (( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
]

IAcadDimAngular_vtables_dispatch_ = 1
IAcadDimAngular_vtables_ = [
    (( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
]

IAcadDimArcLength_vtables_dispatch_ = 1
IAcadDimArcLength_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
]

IAcadDimDiametric_vtables_dispatch_ = 1
IAcadDimDiametric_vtables_ = [
    (( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
]

IAcadDimOrdinate_vtables_dispatch_ = 1
IAcadDimOrdinate_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadial_vtables_dispatch_ = 1
IAcadDimRadial_vtables_ = [
    (( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadialLarge_vtables_dispatch_ = 1
IAcadDimRadialLarge_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVar' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVar' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
]

IAcadDimRotated_vtables_dispatch_ = 1
IAcadDimRotated_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyle_vtables_dispatch_ = 1
IAcadDimStyle_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'CopyFrom' , 'StyleSource' , ), 2, (2, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyles_vtables_dispatch_ = 1
IAcadDimStyles_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{88A65332-E185-46B4-9520-CA3305361E4B}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{88A65332-E185-46B4-9520-CA3305361E4B}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadDimension_vtables_dispatch_ = 1
IAcadDimension_vtables_ = [
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'DimTxtDirection' , 'pbVal' , ), 1573, (1573, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'DimTxtDirection' , 'pbVal' , ), 1573, (1573, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
]

IAcadDocument_vtables_dispatch_ = 1
IAcadDocument_vtables_ = [
    (( 'Plot' , 'pPlot' , ), 23, (23, (), [ (16393, 10, None, "IID('{E93528F4-F504-4E58-8560-C473AD8445A2}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (16393, 10, None, "IID('{369B3B72-01B7-4C1B-85C9-4E662705D76C}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (9, 1, None, "IID('{369B3B72-01B7-4C1B-85C9-4E662705D76C}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (16393, 10, None, "IID('{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (9, 1, None, "IID('{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (16393, 10, None, "IID('{88A65332-E185-46B4-9520-CA3305361E4B}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (9, 1, None, "IID('{88A65332-E185-46B4-9520-CA3305361E4B}')") , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (16393, 10, None, "IID('{703FE959-9B8D-4A91-A69A-844150619DF3}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (9, 1, None, "IID('{703FE959-9B8D-4A91-A69A-844150619DF3}')") , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (16393, 10, None, "IID('{50B2A194-C469-4A57-B14A-BAFBA41A4039}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (9, 1, None, "IID('{50B2A194-C469-4A57-B14A-BAFBA41A4039}')") , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (16393, 10, None, "IID('{B2B6FB46-0162-4C09-9612-65371297D78F}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (9, 1, None, "IID('{B2B6FB46-0162-4C09-9612-65371297D78F}')") , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (16393, 10, None, "IID('{E1366A0E-60BF-4E69-9728-D524EDF12C69}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (9, 1, None, "IID('{E1366A0E-60BF-4E69-9728-D524EDF12C69}')") , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'SelectionSets' , 'pSelSets' , ), 32, (32, (), [ (16393, 10, None, "IID('{BA391ABB-844F-42A0-8F57-31EE00D0583A}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSelectionSet' , 'pSelSet' , ), 33, (33, (), [ (16393, 10, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'FullName' , 'FullName' , ), 34, (34, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 35, (35, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'Path' , ), 36, (36, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ReadOnly' , 'bReadOnly' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Saved' , 'bSaved' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MSpace' , 'Mode' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MSpace' , 'Mode' , ), 40, (40, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Utility' , 'pUtil' , ), 41, (41, (), [ (16393, 10, None, "IID('{CE85BBED-B6CD-446F-B3F6-052465802DB6}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Open' , 'FullName' , 'Password' , 'pDocObj' , ), 42, (42, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 1 , 4 , 1 , 528 , (3, 0, None, None) , 0 , )),
    (( 'AuditInfo' , 'FixErr' , ), 43, (43, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Import' , 'FileName' , 'InsertionPoint' , 'ScaleFactor' , 'pObj' , 
             ), 44, (44, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Export' , 'FileName' , 'Extension' , 'SelectionSet' , ), 45, (45, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'New' , 'TemplateFileName' , 'pDocObj' , ), 46, (46, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Save' , ), 47, (47, (), [ ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'SaveAs' , 'FullFileName' , 'SaveAsType' , 'vSecurityParams' , ), 48, (48, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Wblock' , 'FileName' , 'SelectionSet' , ), 49, (49, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'PurgeAll' , ), 50, (50, (), [ ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'GetVariable' , 'Name' , 'Value' , ), 51, (51, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'SetVariable' , 'Name' , 'Value' , ), 52, (52, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'LoadShapeFile' , 'FullName' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Regen' , 'WhichViewports' , ), 54, (54, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'PickfirstSelectionSet' , 'pSelSet' , ), 55, (55, (), [ (16393, 10, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Active' , 'pvbActive' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Activate' , ), 57, (57, (), [ ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Close' , 'SaveChanges' , 'FileName' , ), 58, (58, (), [ (12, 17, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 656 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (9, 1, None, "IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')") , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (16393, 10, None, "IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')") , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'SendCommand' , 'Command' , ), 63, (63, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'HWND' , 'HWND' , ), 64, (64, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'WindowTitle' , 'Title' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 66, (66, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Database' , 'pDatabase' , ), 67, (67, (), [ (16393, 10, None, "IID('{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}')") , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'StartUndoMark' , ), 68, (68, (), [ ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'EndUndoMark' , ), 69, (69, (), [ ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'ActiveMaterial' , 'pActMaterial' , ), 74, (74, (), [ (16393, 10, None, "IID('{A7F84FAB-56C7-4437-9178-04441F062A4A}')") , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'ActiveMaterial' , 'pActMaterial' , ), 74, (74, (), [ (9, 1, None, "IID('{A7F84FAB-56C7-4437-9178-04441F062A4A}')") , ], 1 , 4 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'InitDoc' , 'pDoc' , ), 75, (75, (), [ (16403, 1, None, None) , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 64 , )),
    (( 'BindDatabase' , 'pDb' , ), 76, (76, (), [ (16403, 1, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 64 , )),
    (( 'HWND32' , 'HWND' , ), 78, (78, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
]

IAcadDocuments_vtables_dispatch_ = 1
IAcadDocuments_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'TemplateName' , 'pDispDoc' , ), 1610743812, (1610743812, (), [ (12, 17, None, None) , 
             (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Open' , 'Name' , 'ReadOnly' , 'Password' , 'pDispDoc' , 
             ), 1610743813, (1610743813, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{9368AF30-60A3-47E3-A743-60D4C21FB580}')") , ], 1 , 1 , 4 , 2 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Close' , ), 1610743814, (1610743814, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAcadDwfUnderlay_vtables_dispatch_ = 1
IAcadDwfUnderlay_vtables_ = [
    (( 'DWFFormat' , 'Name' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'DWFFormat' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
]

IAcadDynamicBlockReferenceProperty_vtables_dispatch_ = 1
IAcadDynamicBlockReferenceProperty_vtables_ = [
    (( 'PropertyName' , 'PropertyName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ReadOnly' , 'ReadOnly' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Show' , 'Show' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'AllowedValues' , 'AllowedValues' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'Value' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'Value' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'UnitsType' , 'Units' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadEllipse_vtables_dispatch_ = 1
IAcadEllipse_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'MinorAxis' , 'MinorAxis' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 15, (15, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IAcadEntity_vtables_dispatch_ = 1
IAcadEntity_vtables_ = [
    (( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ArrayPolar' , 'NumberOfObjects' , 'AngleToFill' , 'CenterPoint' , 'pArrayObjs' , 
             ), 1285, (1285, (), [ (3, 1, None, None) , (5, 1, None, None) , (12, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ArrayRectangular' , 'NumberOfRows' , 'NumberOfColumns' , 'NumberOfLevels' , 'DistBetweenRows' , 
             'DistBetweenCols' , 'DistBetweenLevels' , 'pArrayObjs' , ), 1286, (1286, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'HighlightFlag' , ), 1287, (1287, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Copy' , 'pCopyObj' , ), 1288, (1288, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Move' , 'FromPoint' , 'ToPoint' , ), 1289, (1289, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Rotate' , 'BasePoint' , 'RotationAngle' , ), 1290, (1290, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'Rotate3D' , 'Point1' , 'Point2' , 'RotationAngle' , ), 1291, (1291, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'Mirror' , 'Point1' , 'Point2' , 'pMirrorObj' , ), 1292, (1292, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'Mirror3D' , 'Point1' , 'Point2' , 'point3' , 'pMirrorObj' , 
             ), 1293, (1293, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'ScaleEntity' , 'BasePoint' , 'ScaleFactor' , ), 1294, (1294, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'TransformBy' , 'TransformationMatrix' , ), 1295, (1295, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 1296, (1296, (), [ ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'GetBoundingBox' , 'MinPoint' , 'MaxPoint' , ), 1297, (1297, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'IntersectWith' , 'IntersectObject' , 'option' , 'intPoints' , ), 1298, (1298, (), [ 
             (9, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'EntityTransparency' , 'transparency' , ), 1401, (1401, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'EntityTransparency' , 'transparency' , ), 1401, (1401, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'Hyperlinks' , 'Hyperlinks' , ), 1301, (1301, (), [ (16393, 10, None, "IID('{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'EntityName' , 'EntityName' , ), 1397, (1397, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
    (( 'EntityType' , 'entType' , ), 1398, (1398, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1280, (1280, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1280, (1280, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 64 , )),
]

IAcadExternalReference_vtables_dispatch_ = 1
IAcadExternalReference_vtables_ = [
    (( 'Path' , 'bstrName' , ), 256, (256, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 256, (256, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
]

IAcadExtrudedSurface_vtables_dispatch_ = 1
IAcadExtrudedSurface_vtables_ = [
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'Direction' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependencies_vtables_dispatch_ = 1
IAcadFileDependencies_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{0CED4F33-C673-485D-AE75-54F88D10FA57}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'CreateEntry' , 'Feature' , 'FullFileName' , 'AffectsGraphics' , 'noIncrement' , 
             'Index' , ), 3, (3, (), [ (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'IndexOf' , 'Feature' , 'FullFileName' , 'Index' , ), 4, (4, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'RemoveEntry' , 'Index' , 'forceRemove' , ), 5, (5, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'UpdateEntry' , 'Index' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependency_vtables_dispatch_ = 1
IAcadFileDependency_vtables_ = [
    (( 'FullFileName' , 'FullFileName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'FileName' , 'FileName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'FoundPath' , 'FoundPath' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'FingerprintGuid' , 'FingerprintGuid' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'VersionGuid' , 'VersionGuid' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Feature' , 'Feature' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'IsModified' , 'IsModified' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'AffectsGraphics' , 'AffectsGraphics' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'TimeStamp' , 'TimeStamp' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'FileSize' , 'FileSize' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ReferenceCount' , 'refCount' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadAcCmColor_vtables_dispatch_ = 1
IAcadAcCmColor_vtables_ = [
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'ColorName' , 'Name' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'BookName' , 'Name' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'SetNames' , 'ColorName' , 'BookName' , ), 4, (4, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Red' , 'Red' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Blue' , 'Blue' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Green' , 'Green' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'SetRGB' , 'Red' , 'Green' , 'Blue' , ), 9, (9, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ColorIndex' , 'color' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ColorIndex' , 'color' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SetColorBookColor' , 'BookName' , 'ColorName' , ), 18, (18, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadGroup_vtables_dispatch_ = 1
IAcadGroup_vtables_ = [
    (( 'Item' , 'Index' , 'ppEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , ), 15, (15, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'HighlightFlag' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'AppendItems' , 'Objects' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'RemoveItems' , 'Objects' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'Material' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'color' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
]

IAcadGroups_vtables_dispatch_ = 1
IAcadGroups_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{4B02E349-191E-4736-BDE6-52C2D458E0F5}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{4B02E349-191E-4736-BDE6-52C2D458E0F5}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadHatch_vtables_dispatch_ = 1
IAcadHatch_vtables_ = [
    (( 'Normal' , 'Normal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfLoops' , 'numLoops' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'PatternType' , 'PatternType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'PatternName' , 'bstrName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'SetPattern' , 'PatternType' , 'PatternName' , ), 13, (13, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'AppendOuterLoop' , 'ObjectArray' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'AppendInnerLoop' , 'ObjectArray' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'InsertLoopAt' , 'Index' , 'LoopType' , 'ObjectArray' , ), 16, (16, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'GetLoopAt' , 'Index' , 'ObjectArray' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Evaluate' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundColor' , 'BackgroundColor' , ), 27, (27, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundColor' , 'BackgroundColor' , ), 27, (27, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
]

IAcadHelix_vtables_dispatch_ = 1
IAcadHelix_vtables_ = [
    (( 'Position' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Length' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Length' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Turns' , 'Turns' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Turns' , 'Turns' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'twistType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'twistType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TurnSlope' , 'slopeAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TotalLength' , 'TotalLength' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlink_vtables_dispatch_ = 1
IAcadHyperlink_vtables_ = [
    (( 'URL' , 'URLPath' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'URL' , 'URLPath' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'URLDescription' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'URLDescription' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlinks_vtables_dispatch_ = 1
IAcadHyperlinks_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'ApplicationObject' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'Name' , 'Description' , 'NamedLocation' , 'pHyperlink' , 
             ), 3, (3, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}')") , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadIdPair_vtables_dispatch_ = 1
IAcadIdPair_vtables_ = [
    (( 'IsCloned' , 'pVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'IsOwnerXlated' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'IsPrimary' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'key' , 'pVal' , ), 4, (4, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'pVal' , ), 5, (5, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Key32' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Value32' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadLWPolyline_vtables_dispatch_ = 1
IAcadLWPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'AddVertex' , 'Index' , 'vertex' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
             (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IAcadLayer_vtables_dispatch_ = 1
IAcadLayer_vtables_ = [
    (( 'color' , 'color' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
    (( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Lock' , 'Block' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Lock' , 'Block' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'Used' , 'bUsed' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

IAcadLayerStateManager_vtables_dispatch_ = 1
IAcadLayerStateManager_vtables_ = [
    (( 'SetDatabase' , 'iHostDb' , ), 1610743808, (1610743808, (), [ (9, 1, None, "IID('{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Save' , 'bsName' , 'eMask' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Restore' , 'bsName' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , 'bsName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Rename' , 'bsName' , 'bsNewName' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Import' , 'bsFilename' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Export' , 'bsName' , 'bsFilename' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAcadLayers_vtables_dispatch_ = 1
IAcadLayers_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{369B3B72-01B7-4C1B-85C9-4E662705D76C}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLayer' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{369B3B72-01B7-4C1B-85C9-4E662705D76C}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GenerateUsageData' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadLayout_vtables_dispatch_ = 1
IAcadLayout_vtables_ = [
    (( 'Block' , 'pBlock' , ), 48, (48, (), [ (16393, 10, None, "IID('{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
]

IAcadLayouts_vtables_dispatch_ = 1
IAcadLayouts_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLayout' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{F8AE8A77-1909-452A-95E8-0B833451FD4B}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadLeader_vtables_dispatch_ = 1
IAcadLeader_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 65, (65, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 65, (65, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Evaluate' , ), 66, (66, (), [ ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Annotation' , 'pVal' , ), 68, (68, (), [ (16393, 10, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Annotation' , 'pVal' , ), 68, (68, (), [ (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
]

IAcadLight_vtables_dispatch_ = 1
IAcadLight_vtables_ = [
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'LightType' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'LightType' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Status' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Status' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Shadows' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Shadows' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'HotSpot' , 'pVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'HotSpot' , 'pVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'FallOff' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'FallOff' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Intensity' , 'pVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Intensity' , 'pVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'LColor' , 'ppColor' , ), 9, (9, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'LColor' , 'ppColor' , ), 9, (9, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'PlotGlyph' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'PlotGlyph' , 'pVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pVal' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pVal' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'AttenuationType' , 'pVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'AttenuationType' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'UseLimits' , 'pVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'UseLimits' , 'pVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'StartLimit' , 'pVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'StartLimit' , 'pVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'EndLimit' , 'pVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'EndLimit' , 'pVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ShadowType' , 'pVal' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ShadowType' , 'pVal' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'MapSize' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'MapSize' , 'pVal' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Softness' , 'pVal' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Softness' , 'pVal' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'FromVector' , 'pVal' , ), 20, (20, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'FromVector' , 'pVal' , ), 20, (20, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'ToVector' , 'pVal' , ), 21, (21, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'ToVector' , 'pVal' , ), 21, (21, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorX' , 'pVal' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorX' , 'pVal' , ), 22, (22, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorY' , 'pVal' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorY' , 'pVal' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorZ' , 'pVal' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorZ' , 'pVal' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
]

IAcadLight2_vtables_dispatch_ = 1
IAcadLight2_vtables_ = [
    (( 'LampIntensity' , 'pVal' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'LampIntensity' , 'pVal' , ), 25, (25, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'ResultIntensity' , 'pVal' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'ResultIntensity' , 'pVal' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'LampColor' , 'pVal' , ), 27, (27, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'LampColor' , 'pVal' , ), 27, (27, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'ResultColor' , 'ppColor' , ), 28, (28, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'ResultColor' , 'ppColor' , ), 28, (28, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'WebFile' , 'pVal' , ), 29, (29, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'WebFile' , 'pVal' , ), 29, (29, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'WebPreview' , 'pVal' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'WebPreview' , 'pVal' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateX' , 'pVal' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateX' , 'pVal' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateY' , 'pVal' , ), 32, (32, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateY' , 'pVal' , ), 32, (32, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateZ' , 'pVal' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateZ' , 'pVal' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'HasTarget' , 'pVal' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'HasTarget' , 'pVal' , ), 34, (34, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'ShadowSamples' , 'pVal' , ), 35, (35, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'ShadowSamples' , 'pVal' , ), 35, (35, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'ShadowVisible' , 'pVal' , ), 36, (36, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'ShadowVisible' , 'pVal' , ), 36, (36, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ShadowShape' , 'pVal' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ShadowShape' , 'pVal' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ShadowRadius' , 'pVal' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ShadowRadius' , 'pVal' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'IlluminanceDistance' , 'pVal' , ), 39, (39, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'IlluminanceDistance' , 'pVal' , ), 39, (39, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'ShadowLength' , 'pVal' , ), 40, (40, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'ShadowLength' , 'pVal' , ), 40, (40, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ShadowWidth' , 'pVal' , ), 41, (41, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ShadowWidth' , 'pVal' , ), 41, (41, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
]

IAcadLight3_vtables_dispatch_ = 1
IAcadLight3_vtables_ = [
    (( 'GlyphDisplay' , 'pVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'GlyphDisplay' , 'pVal' , ), 42, (42, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
]

IAcadLine_vtables_dispatch_ = 1
IAcadLine_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 5, (5, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Delta' , 'Delta' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Angle' , 'Angle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
]

IAcadLineType_vtables_dispatch_ = 1
IAcadLineType_vtables_ = [
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadLineTypes_vtables_dispatch_ = 1
IAcadLineTypes_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLinetype' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Load' , 'Name' , 'FileName' , ), 3, (3, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadLoftedSurface_vtables_dispatch_ = 1
IAcadLoftedSurface_vtables_ = [
    (( 'NumCrossSections' , 'NumCrossSections' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'NumGuidePaths' , 'NumGuidePaths' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'bClosed' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'bClosed' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IAcadMInsertBlock_vtables_dispatch_ = 1
IAcadMInsertBlock_vtables_ = [
    (( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'NumRows' , ), 258, (258, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'NumRows' , ), 258, (258, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
]

IAcadMLeader_vtables_dispatch_ = 1
IAcadMLeader_vtables_ = [
    (( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLinetype' , 'Linetype' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLinetype' , 'Linetype' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'DogLegged' , 'val' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'DogLegged' , 'val' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'factor' , ), 51, (51, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'factor' , ), 51, (51, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'TextWidth' , 'Width' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'TextWidth' , 'Width' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 50, (50, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'gap' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'gap' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'LeaderCount' , 'number' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AddLeader' , 'leaderIndex' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'RemoveLeader' , 'leaderIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AddLeaderLine' , 'leaderIndex' , 'pointArray' , 'leaderLineIndex' , ), 29, (29, (), [ 
             (3, 1, None, None) , (12, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AddLeaderLineEx' , 'pointArray' , 'leaderLineIndex' , ), 30, (30, (), [ (12, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'RemoveLeaderLine' , 'leaderLineIndex' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'SetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 32, (32, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 33, (33, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderIndex' , 'leaderLineIndex' , 'leaderIndex' , ), 35, (35, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderLineIndexes' , 'leaderIndex' , 'leaderLineIndexes' , ), 36, (36, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'GetVertexCount' , 'leaderLineIndex' , 'number' , ), 37, (37, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 40, (40, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'GetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 41, (41, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'SetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 42, (42, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue' , 'attdefId' , 'Value' , ), 44, (44, (), [ (20, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue' , 'attdefId' , 'Value' , ), 45, (45, (), [ (20, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue32' , 'attdefId' , 'Value' , ), 46, (46, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue32' , 'attdefId' , 'Value' , ), 47, (47, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
]

IAcadMLeaderStyle_vtables_dispatch_ = 1
IAcadMLeaderStyle_vtables_ = [
    (( 'Name' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLinetype' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLinetype' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSize' , 'size' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSize' , 'size' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'Name' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'Name' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 22, (22, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 22, (22, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'Name' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'Name' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'color' , ), 27, (27, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'color' , ), 27, (27, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'OverwritePropChanged' , 'changed' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'BreakSize' , 'size' , ), 36, (36, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'BreakSize' , 'size' , ), 36, (36, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'Text' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'Text' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
]

IAcadMLine_vtables_dispatch_ = 1
IAcadMLine_vtables_ = [
    (( 'StyleName' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Justification' , 'Justification' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Justification' , 'Justification' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'MLineScale' , 'scale' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MLineScale' , 'scale' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

IAcadMText_vtables_dispatch_ = 1
IAcadMText_vtables_ = [
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'FieldCode' , 'bstrText' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
]

IAcadMaterial_vtables_dispatch_ = 1
IAcadMaterial_vtables_ = [
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadMaterials_vtables_dispatch_ = 1
IAcadMaterials_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{A7F84FAB-56C7-4437-9178-04441F062A4A}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{A7F84FAB-56C7-4437-9178-04441F062A4A}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadMenuBar_vtables_dispatch_ = 1
IAcadMenuBar_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroup_vtables_dispatch_ = 1
IAcadMenuGroup_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'menuType' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'MenuFileName' , 'Name' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Menus' , 'pMenus' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Toolbars' , 'pToolbars' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{8095E3AB-7AB4-4915-A35A-11491F1B45D6}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Unload' , ), 1610743815, (1610743815, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Save' , 'MenuFileType' , ), 1610743816, (1610743816, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'SaveAs' , 'MenuFileName' , 'MenuFileType' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroups_vtables_dispatch_ = 1
IAcadMenuGroups_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{72D027F2-CD79-4135-AE60-74FD0F8F595B}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Load' , 'MenuFileName' , 'BaseMenu' , 'pMenuGroup' , ), 1610743813, (1610743813, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{72D027F2-CD79-4135-AE60-74FD0F8F595B}')") , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
]

IAcadModelSpace_vtables_dispatch_ = 1
IAcadModelSpace_vtables_ = [
]

IAcadNurbSurface_vtables_dispatch_ = 1
IAcadNurbSurface_vtables_ = [
    (( 'CvHullDisplay' , 'Display' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'CvHullDisplay' , 'Display' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IAcadObject_vtables_dispatch_ = 1
IAcadObject_vtables_ = [
    (( 'Handle' , 'Handle' , ), 1024, (1024, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ObjectName' , 'ObjectName' , ), 1025, (1025, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'GetXData' , 'AppName' , 'XDataType' , 'XDataValue' , ), 1026, (1026, (), [ 
             (8, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'SetXData' , 'XDataType' , 'XDataValue' , ), 1027, (1027, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1028, (1028, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ObjectID' , 'ObjectID' , ), 1029, (1029, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 1030, (1030, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Database' , 'pDatabase' , ), 1031, (1031, (), [ (16393, 10, None, "IID('{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
    (( 'HasExtensionDictionary' , 'bHasDictionary' , ), 1032, (1032, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetExtensionDictionary' , 'pExtDictionary' , ), 1033, (1033, (), [ (16393, 10, None, "IID('{6CE21DA5-2896-4D63-9373-2EE672A00D41}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'OwnerID' , 'OwnerID' , ), 1034, (1034, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Document' , 'pDocument' , ), 1035, (1035, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Erase' , ), 1141, (1141, (), [ ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
]

IAcadOle_vtables_dispatch_ = 1
IAcadOle_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rot' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rot' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'OleItemType' , 'pType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'OleItemType' , 'pType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadPViewport_vtables_dispatch_ = 1
IAcadPViewport_vtables_ = [
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVector' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVector' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Clipped' , 'bClipped' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'scale' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'scale' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'CustomScale' , 'scale' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'CustomScale' , 'scale' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 64 , )),
    (( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 64 , )),
    (( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Display' , 'bStatus' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'Length' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'Length' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 64 , )),
    (( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 64 , )),
    (( 'Target' , 'targetPoint' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'ModelView' , 'View' , ), 32, (32, (), [ (16393, 10, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'ModelView' , 'View' , ), 32, (32, (), [ (9, 1, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'SheetView' , 'View' , ), 33, (33, (), [ (16393, 10, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'SheetView' , 'View' , ), 33, (33, (), [ (9, 1, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (16387, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'HasSheetView' , 'bSheetView' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'SyncModelView' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'LayerPropertyOverrides' , '__MIDL__IAcadPViewport0000' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale2' , '__MIDL__IAcadPViewport0001' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale2' , '__MIDL__IAcadPViewport0001' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId32' , 'ObjectID' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId32' , 'ObjectID' , ), 38, (38, (), [ (16387, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
]

IAcadPaperSpace_vtables_dispatch_ = 1
IAcadPaperSpace_vtables_ = [
    (( 'AddPViewport' , 'Center' , 'Width' , 'Height' , 'pPViewport' , 
             ), 1, (1, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{E1366A0E-60BF-4E69-9728-D524EDF12C69}')") , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
]

IAcadPlaneSurface_vtables_dispatch_ = 1
IAcadPlaneSurface_vtables_ = [
]

IAcadPlot_vtables_dispatch_ = 1
IAcadPlot_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'QuietErrorMode' , 'bErrorMode' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'QuietErrorMode' , 'bErrorMode' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfCopies' , 'numCopies' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfCopies' , 'numCopies' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'BatchPlotProgress' , 'bProgressStatus' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'BatchPlotProgress' , 'bProgressStatus' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'DisplayPlotPreview' , 'Preview' , ), 1610743815, (1610743815, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'PlotToFile' , 'plotFile' , 'plotConfig' , 'success' , ), 1610743816, (1610743816, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 120 , (3, 0, None, None) , 0 , )),
    (( 'PlotToDevice' , 'plotConfig' , 'success' , ), 1610743817, (1610743817, (), [ (12, 17, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 128 , (3, 0, None, None) , 0 , )),
    (( 'SetLayoutsToPlot' , 'layoutList' , ), 1610743818, (1610743818, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'StartBatchMode' , 'entryCount' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadPlotConfiguration_vtables_dispatch_ = 1
IAcadPlotConfiguration_vtables_ = [
    (( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ConfigName' , 'pName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'ConfigName' , 'pName' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'PlotType' , 'pType' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'PlotType' , 'pType' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomScale' , 'Numerator' , 'Denominator' , ), 17, (17, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomScale' , 'Numerator' , 'Denominator' , ), 18, (18, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'GetPaperMargins' , 'LowerLeft' , 'UpperRight' , ), 26, (26, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'GetPaperSize' , 'Width' , 'Height' , ), 28, (28, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'GetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 31, (31, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'SetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 32, (32, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'ModelType' , 'pType' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'CopyFrom' , 'pPlotConfig' , ), 35, (35, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'GetCanonicalMediaNames' , 'pNames' , ), 36, (36, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetPlotDeviceNames' , 'pNames' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'GetPlotStyleTableNames' , 'pNames' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'RefreshPlotDeviceInfo' , ), 39, (39, (), [ ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'GetLocaleMediaName' , 'Name' , 'pLocalName' , ), 40, (40, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
]

IAcadPlotConfigurations_vtables_dispatch_ = 1
IAcadPlotConfigurations_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{37A8DABC-FD78-4509-B9CA-396F4CC30472}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'ModelType' , 'pPlotConfig' , ), 2, (2, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{37A8DABC-FD78-4509-B9CA-396F4CC30472}')") , ], 1 , 1 , 4 , 1 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadPoint_vtables_dispatch_ = 1
IAcadPoint_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
]

IAcadPointCloudEx_vtables_dispatch_ = 1
IAcadPointCloudEx_vtables_ = [
    (( 'Stylization' , 'Type' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Stylization' , 'Type' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'ColorScheme' , 'Type' , ), 19, (19, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'ColorScheme' , 'Type' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'EndPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'EndPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'val' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'val' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'val' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'val' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'val' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'val' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'val' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ShowCropped' , 'val' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ShowCropped' , 'val' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Locked' , 'val' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Locked' , 'val' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Geolocate' , 'val' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Geolocate' , 'val' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Unit' , 'val' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'UnitFactor' , 'val' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
]

IAcadPolyfaceMesh_vtables_dispatch_ = 1
IAcadPolyfaceMesh_vtables_ = [
    (( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfVertices' , 'NumVertices' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfFaces' , 'NumFaces' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Faces' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
]

IAcadPolygonMesh_vtables_dispatch_ = 1
IAcadPolygonMesh_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'MClose' , 'bClose' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'MClose' , 'bClose' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'NClose' , 'bClose' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'NClose' , 'bClose' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MDensity' , 'density' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MDensity' , 'density' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'NDensity' , 'density' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'NDensity' , 'density' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'MVertexCount' , 'Count' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'NVertexCount' , 'Count' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadPolyline_vtables_dispatch_ = 1
IAcadPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
             (3, 1, None, None) , (16389, 2, None, None) , (16389, 0, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (5, 0, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenu_vtables_dispatch_ = 1
IAcadPopupMenu_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{2E00012D-0862-428C-B675-A88781D31934}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'NameNoMnemonic' , 'bstrName' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'ShortcutMenu' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'OnMenuBar' , 'bFlag' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AddMenuItem' , 'Index' , 'Label' , 'Macro' , 'pItem' , 
             ), 1610743818, (1610743818, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{2E00012D-0862-428C-B675-A88781D31934}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'AddSubMenu' , 'Index' , 'Label' , 'pMenu' , ), 1610743819, (1610743819, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743820, (1610743820, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{2E00012D-0862-428C-B675-A88781D31934}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'InsertInMenuBar' , 'Index' , ), 1610743821, (1610743821, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'RemoveFromMenuBar' , ), 1610743822, (1610743822, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenuItem_vtables_dispatch_ = 1
IAcadPopupMenuItem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'itemType' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'SubMenu' , 'pMenu' , ), 1610743819, (1610743819, (), [ (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'nIndex' , ), 1610743822, (1610743822, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Caption' , 'bstrCaption' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743826, (1610743826, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenus_vtables_dispatch_ = 1
IAcadPopupMenus_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{72D027F2-CD79-4135-AE60-74FD0F8F595B}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'MenuName' , 'pMenu' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{551A5349-4463-40E2-822C-D3A632409117}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'InsertMenuInMenuBar' , 'MenuName' , 'Index' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'RemoveMenuFromMenuBar' , 'Index' , ), 1610743815, (1610743815, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadPreferences_vtables_dispatch_ = 1
IAcadPreferences_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Files' , 'pObj' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Display' , 'pObj' , ), 1610743810, (1610743810, (), [ (16393, 10, None, "IID('{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'OpenSave' , 'pObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{97311A0B-4C28-4D80-8397-40FB3403AEF0}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Output' , 'pObj' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'System' , 'pObj' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'User' , 'pObj' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Drafting' , 'pObj' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Selection' , 'pObj' , ), 1610743816, (1610743816, (), [ (16393, 10, None, "IID('{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Profiles' , 'pObj' , ), 1610743817, (1610743817, (), [ (16393, 10, None, "IID('{807758BB-F12D-4275-A52F-6A2CFCAD9A21}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDisplay_vtables_dispatch_ = 1
IAcadPreferencesDisplay_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDrafting_vtables_dispatch_ = 1
IAcadPreferencesDrafting_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesFiles_vtables_dispatch_ = 1
IAcadPreferencesFiles_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SupportPath' , 'orient' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SupportPath' , 'orient' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'EnterpriseMenuFile' , 'Path' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'EnterpriseMenuFile' , 'Path' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'CustomIconPath' , 'Path' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'CustomIconPath' , 'Path' , ), 1610743817, (1610743817, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'HelpFilePath' , 'Path' , ), 1610743819, (1610743819, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'HelpFilePath' , 'Path' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'DefaultInternetURL' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'DefaultInternetURL' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ConfigFile' , 'ConfigFile' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'LicenseServer' , 'Path' , ), 1610743824, (1610743824, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
    (( 'TextEditor' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'TextEditor' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'MainDictionary' , 'Path' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'MainDictionary' , 'Path' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'CustomDictionary' , 'Path' , ), 1610743829, (1610743829, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'CustomDictionary' , 'Path' , ), 1610743829, (1610743829, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'AltFontFile' , 'fontFile' , ), 1610743831, (1610743831, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AltFontFile' , 'fontFile' , ), 1610743831, (1610743831, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'FontFileMap' , 'Path' , ), 1610743833, (1610743833, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'FontFileMap' , 'Path' , ), 1610743833, (1610743833, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'PrintFile' , 'Path' , ), 1610743835, (1610743835, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'PrintFile' , 'Path' , ), 1610743835, (1610743835, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolExecutable' , 'Path' , ), 1610743837, (1610743837, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolExecutable' , 'Path' , ), 1610743837, (1610743837, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'PostScriptPrologFile' , 'Path' , ), 1610743839, (1610743839, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'PostScriptPrologFile' , 'Path' , ), 1610743839, (1610743839, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolerPath' , 'Path' , ), 1610743841, (1610743841, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolerPath' , 'Path' , ), 1610743841, (1610743841, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'AutoSavePath' , 'AutoSavePath' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'AutoSavePath' , 'AutoSavePath' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'TemplateDwgPath' , 'Path' , ), 1610743845, (1610743845, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'TemplateDwgPath' , 'Path' , ), 1610743845, (1610743845, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'LogFilePath' , 'Path' , ), 1610743847, (1610743847, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'LogFilePath' , 'Path' , ), 1610743847, (1610743847, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'TempFilePath' , 'Path' , ), 1610743849, (1610743849, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'TempFilePath' , 'Path' , ), 1610743849, (1610743849, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'TempXrefPath' , 'Path' , ), 1610743851, (1610743851, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'TempXrefPath' , 'Path' , ), 1610743851, (1610743851, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'TextureMapPath' , 'Path' , ), 1610743853, (1610743853, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'TextureMapPath' , 'Path' , ), 1610743853, (1610743853, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743855, (1610743855, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743855, (1610743855, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'SetProjectFilePath' , 'ProjectName' , 'ProjectFilePath' , ), 1610743857, (1610743857, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'GetProjectFilePath' , 'ProjectName' , 'Path' , ), 1610743858, (1610743858, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'PrinterConfigPath' , 'Path' , ), 1610743859, (1610743859, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'PrinterConfigPath' , 'Path' , ), 1610743859, (1610743859, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'PrinterDescPath' , 'Path' , ), 1610743861, (1610743861, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'PrinterDescPath' , 'Path' , ), 1610743861, (1610743861, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PrinterStyleSheetPath' , 'Path' , ), 1610743863, (1610743863, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PrinterStyleSheetPath' , 'Path' , ), 1610743863, (1610743863, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'WorkspacePath' , 'Path' , ), 1610743865, (1610743865, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'WorkspacePath' , 'Path' , ), 1610743865, (1610743865, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ObjectARXPath' , 'Path' , ), 1610743867, (1610743867, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 64 , )),
    (( 'ObjectARXPath' , 'Path' , ), 1610743867, (1610743867, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 64 , )),
    (( 'ColorBookPath' , 'Path' , ), 1610743869, (1610743869, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ColorBookPath' , 'Path' , ), 1610743869, (1610743869, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ToolPalettePath' , 'Path' , ), 1610743871, (1610743871, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ToolPalettePath' , 'Path' , ), 1610743871, (1610743871, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'QNewTemplateFile' , 'templateFile' , ), 1610743873, (1610743873, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'QNewTemplateFile' , 'templateFile' , ), 1610743873, (1610743873, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'PlotLogFilePath' , 'templateFile' , ), 1610743875, (1610743875, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'PlotLogFilePath' , 'templateFile' , ), 1610743875, (1610743875, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'PageSetupOverridesTemplateFile' , 'templateFile' , ), 1610743877, (1610743877, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'PageSetupOverridesTemplateFile' , 'templateFile' , ), 1610743877, (1610743877, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOpenSave_vtables_dispatch_ = 1
IAcadPreferencesOpenSave_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'MRUNumber' , 'Path' , ), 1610743835, (1610743835, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOutput_vtables_dispatch_ = 1
IAcadPreferencesOutput_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ContinuousPlotLog' , 'Path' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ContinuousPlotLog' , 'Path' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'AutomaticPlotLog' , 'Path' , ), 1610743831, (1610743831, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AutomaticPlotLog' , 'Path' , ), 1610743831, (1610743831, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotToFilePath' , 'Path' , ), 1610743833, (1610743833, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotToFilePath' , 'Path' , ), 1610743833, (1610743833, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesProfiles_vtables_dispatch_ = 1
IAcadPreferencesProfiles_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'ImportProfile' , 'ProfileName' , 'RegFile' , 'IncludePathInfo' , ), 1610743811, (1610743811, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'ExportProfile' , 'ProfileName' , 'RegFile' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DeleteProfile' , 'ProfileName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ResetProfile' , 'Profile' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'RenameProfile' , 'origProfileName' , 'newProfileName' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'CopyProfile' , 'oldProfileName' , 'newProfileName' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetAllProfileNames' , 'pNames' , ), 1610743817, (1610743817, (), [ (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSelection_vtables_dispatch_ = 1
IAcadPreferencesSelection_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSystem_vtables_dispatch_ = 1
IAcadPreferencesSystem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesUser_vtables_dispatch_ = 1
IAcadPreferencesUser_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAcadRasterImage_vtables_dispatch_ = 1
IAcadRasterImage_vtables_ = [
    (( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'transparency' , 'bTransp' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'transparency' , 'bTransp' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ClipBoundary' , 'boundry' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pixelHeight' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pixelWidth' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
]

IAcadRay_vtables_dispatch_ = 1
IAcadRay_vtables_ = [
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
]

IAcadRegion_vtables_dispatch_ = 1
IAcadRegion_vtables_ = [
    (( 'Area' , 'Area' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Centroid' , 'Centroid' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'MomentOfInertia' , 'momentInertia' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Perimeter' , 'Perimeter' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalDirections' , 'prinDir' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalMoments' , 'prinMoments' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'ProductOfInertia' , 'prodInertia' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'RadiiOfGyration' , 'radiiGyration' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Boolean' , 'Operation' , 'Object' , ), 10, (10, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}')") , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplication_vtables_dispatch_ = 1
IAcadRegisteredApplication_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplications_vtables_dispatch_ = 1
IAcadRegisteredApplications_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{F0F9DD45-70ED-42C1-B4AC-562396361489}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{F0F9DD45-70ED-42C1-B4AC-562396361489}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadRevolvedSurface_vtables_dispatch_ = 1
IAcadRevolvedSurface_vtables_ = [
    (( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'AxisDirection' , 'AxisDirection' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadScriptJet_vtables_dispatch_ = 1
IAcadScriptJet_vtables_ = [
    (( 'ParseScriptText_E' , 'pstrCode' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Create' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Run' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Close' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'AddNamedItem' , 'pstrCode' , 'dwFlags' , ), 5, (5, (), [ (8, 1, None, None) , 
             (19, 49, '6', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'AddVariant' , 'varName' , 'var' , ), 6, (6, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'GetVariant' , 'varName' , 'Value' , ), 7, (7, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAcadSection_vtables_dispatch_ = 1
IAcadSection_vtables_ = [
    (( 'Name' , 'pbstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pbstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'State' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'State' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'pVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'pVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'pVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'NumVertices' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Vertices' , 'pVal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Vertices' , 'pVal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'AddVertex' , 'nIndex' , 'val' , ), 15, (15, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'RemoveVertex' , 'nIndex' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'HitTest' , 'varPtHit' , 'pHit' , 'pSegmentIndex' , 'pPtOnSegment' , 
             'pSubItem' , ), 17, (17, (), [ (12, 1, None, None) , (16395, 2, None, None) , (16387, 2, None, None) , 
             (16396, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'CreateJog' , 'varPt' , ), 18, (18, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Settings' , 'pUnk' , ), 19, (19, (), [ (16393, 10, None, "IID('{AC4451F8-ED8E-42F0-B10D-1345A423FA33}')") , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'GenerateSectionGeometry' , 'pEntity' , 'pIntersectionBoundaryObjs' , 'pIntersectionFillObjs' , 'pBackgroudnObjs' , 
             'pForegroudObjs' , 'pCurveTangencyObjs' , ), 20, (20, (), [ (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , (16396, 2, None, None) , 
             (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
]

IAcadSection2_vtables_dispatch_ = 1
IAcadSection2_vtables_ = [
    (( 'State2' , 'pVal' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'State2' , 'pVal' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'SliceDepth' , 'pVal' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'SliceDepth' , 'pVal' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'SectionPlaneOffset' , 'pVal' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'SectionPlaneOffset' , 'pVal' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
]

IAcadSectionManager_vtables_dispatch_ = 1
IAcadSectionManager_vtables_ = [
    (( 'Item' , 'Index' , 'pSection' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GetLiveSection' , 'pSection' , ), 2, (2, (), [ (16393, 10, None, "IID('{13C9B549-488C-48B2-A7D1-9B299FEE3C22}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetUniqueSectionName' , 'pBaseName' , 'ppUniqueName' , ), 3, (3, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadSectionSettings_vtables_dispatch_ = 1
IAcadSectionSettings_vtables_ = [
    (( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GetSectionTypeSettings' , 'secType' , 'pUnk' , ), 2, (2, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadSectionTypeSettings_vtables_dispatch_ = 1
IAcadSectionTypeSettings_vtables_ = [
    (( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
]

IAcadSecurityParams_vtables_dispatch_ = 1
IAcadSecurityParams_vtables_ = [
    (( 'Action' , 'pOperations' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Action' , 'pOperations' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pSecret' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pSecret' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Comment' , 'pText' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Comment' , 'pText' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSet_vtables_dispatch_ = 1
IAcadSelectionSet_vtables_ = [
    (( 'Item' , 'Index' , 'pEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'bFlag' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Erase' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 6, (6, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'AddItems' , 'pSelSet' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'RemoveItems' , 'Objects' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Clear' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Select' , 'Mode' , 'Point1' , 'Point2' , 'FilterType' , 
             'FilterData' , ), 10, (10, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
             (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 144 , (3, 0, None, None) , 0 , )),
    (( 'SelectAtPoint' , 'Point' , 'FilterType' , 'FilterData' , ), 11, (11, (), [ 
             (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 152 , (3, 0, None, None) , 0 , )),
    (( 'SelectByPolygon' , 'Mode' , 'PointsList' , 'FilterType' , 'FilterData' , 
             ), 12, (12, (), [ (3, 1, None, None) , (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SelectOnScreen' , 'FilterType' , 'FilterData' , ), 13, (13, (), [ (12, 17, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSets_vtables_dispatch_ = 1
IAcadSelectionSets_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'Name' , 'pSet' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'GetActiveSelectionSet' , 'pSet' , ), 4, (4, (), [ (16393, 10, None, "IID('{E7DEA163-B4F1-4DDF-A408-2A3989603B09}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
]

IAcadShadowDisplay_vtables_dispatch_ = 0
IAcadShadowDisplay_vtables_ = [
    (( 'ShadowDisplay' , 'ShadowDisplay' , ), 1610678272, (1610678272, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
    (( 'ShadowDisplay' , 'ShadowDisplay' , ), 1610678272, (1610678272, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
    (( 'EnableShadowDisplay' , 'ShadowDisplay' , ), 1610678274, (1610678274, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
]

IAcadShape_vtables_dispatch_ = 1
IAcadShape_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadSolid_vtables_dispatch_ = 1
IAcadSolid_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadSortentsTable_vtables_dispatch_ = 1
IAcadSortentsTable_vtables_ = [
    (( 'MoveToBottom' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'MoveToTop' , 'Objects' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'MoveBelow' , 'Objects' , 'Target' , ), 3, (3, (), [ (12, 1, None, None) , 
             (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'MoveAbove' , 'Objects' , 'Target' , ), 4, (4, (), [ (12, 1, None, None) , 
             (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'SwapOrder' , 'Object1' , 'Object2' , ), 5, (5, (), [ (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , 
             (9, 1, None, "IID('{D78C594E-0412-4D7A-919A-2B6D1662D337}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'pBlock' , ), 6, (6, (), [ (16393, 10, None, "IID('{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GetFullDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 7, (7, (), [ (16396, 2, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'GetRelativeDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 8, (8, (), [ (16396, 2, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'SetRelativeDrawOrder' , 'Objects' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadSpline_vtables_dispatch_ = 1
IAcadSpline_vtables_ = [
    (( 'NumberOfControlPoints' , 'numCtrlPoints' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfFitPoints' , 'numFitPoints' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Degree' , 'Degree' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'IsPlanar' , 'fPlanar' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'IsRational' , 'fRational' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'IsPeriodic' , 'fPeriodic' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'SetControlPoint' , 'Index' , 'controlPoint' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'GetControlPoint' , 'Index' , 'controlPoint' , ), 15, (15, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'SetFitPoint' , 'Index' , 'fitPoint' , ), 16, (16, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'GetFitPoint' , 'Index' , 'fitPoint' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'SetWeight' , 'Index' , 'weight' , ), 18, (18, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'GetWeight' , 'Index' , 'weight' , ), 19, (19, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'AddFitPoint' , 'Index' , 'fitPoint' , ), 20, (20, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'DeleteFitPoint' , 'Index' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'ElevateOrder' , 'Order' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 23, (23, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'PurgeFitData' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Reverse' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Closed2' , 'bVal' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Closed2' , 'bVal' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
]

IAcadState_vtables_dispatch_ = 1
IAcadState_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'IsQuiescent' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IAcadSubDMesh_vtables_dispatch_ = 1
IAcadSubDMesh_vtables_ = [
    (( 'Smoothness' , 'Level' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Smoothness' , 'Level' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'VertexCount' , 'Count' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'FaceCount' , 'Count' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadSummaryInfo_vtables_dispatch_ = 1
IAcadSummaryInfo_vtables_ = [
    (( 'Author' , 'pAuthor' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Author' , 'pAuthor' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pComments' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pComments' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pTitle' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pTitle' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'NumCustomInfo' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomByIndex' , 'Index' , 'pKey' , 'pValue' , ), 10, (10, (), [ 
             (3, 1, None, None) , (16392, 2, None, None) , (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomByKey' , 'key' , 'pValue' , ), 11, (11, (), [ (8, 1, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomByIndex' , 'Index' , 'key' , 'Value' , ), 12, (12, (), [ 
             (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomByKey' , 'key' , 'Value' , ), 13, (13, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AddCustomInfo' , 'key' , 'Value' , ), 14, (14, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'RemoveCustomByIndex' , 'Index' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'RemoveCustomByKey' , 'key' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadSurface_vtables_dispatch_ = 1
IAcadSurface_vtables_ = [
    (( 'SurfaceType' , 'SurfaceType' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'WireframeType' , 'Type' , ), 160, (160, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'WireframeType' , 'Type' , ), 160, (160, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MaintainAssociativity' , 'rhs' , ), 176, (176, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'MaintainAssociativity' , 'rhs' , ), 176, (176, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ShowAssociativity' , 'rhs' , ), 177, (177, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ShowAssociativity' , 'rhs' , ), 177, (177, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
]

IAcadSweptSurface_vtables_dispatch_ = 1
IAcadSweptSurface_vtables_ = [
    (( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Bank' , 'bBank' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Bank' , 'bBank' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadTable_vtables_dispatch_ = 1
IAcadTable_vtables_ = [
    (( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'pRows' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'pRows' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'pColumns' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'pColumns' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'GetColumnWidth' , 'col' , 'pWidth' , ), 10, (10, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'SetColumnWidth' , 'col' , 'Width' , ), 11, (11, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ColumnWidth' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'GetRowHeight' , 'row' , 'pHeight' , ), 13, (13, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'SetRowHeight' , 'row' , 'Height' , ), 14, (14, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'RowHeight' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'GetMinimumColumnWidth' , 'col' , 'pWidth' , ), 26, (26, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'GetMinimumRowHeight' , 'row' , 'pHeight' , ), 27, (27, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'MinimumTableWidth' , 'pWidth' , ), 28, (28, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'MinimumTableHeight' , 'pHeight' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 33, (33, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 34, (34, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 35, (35, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 36, (36, (), [ (3, 1, None, None) , 
             (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 37, (37, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 38, (38, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'GetContentColor' , 'rowType' , 'pColor' , ), 39, (39, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'SetContentColor' , 'rowTypes' , 'pColor' , ), 40, (40, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 41, (41, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 42, (42, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 43, (43, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 44, (44, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 45, (45, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 46, (46, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 47, (47, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 48, (48, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 49, (49, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 50, (50, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'TableStyleOverrides' , 'pIntArray' , ), 51, (51, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'ClearTableStyleOverrides' , 'flag' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'GetCellType' , 'row' , 'col' , 'pCellType' , ), 53, (53, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'SetCellType' , 'row' , 'col' , 'CellType' , ), 54, (54, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'GetCellExtents' , 'row' , 'col' , 'bOuterCell' , 'pPts' , 
             ), 55, (55, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'GetAttachmentPoint' , 'row' , 'col' , 'pAttachmentPoint' , ), 56, (56, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'GetCellAlignment' , 'row' , 'col' , 'pCellAlignment' , ), 58, (58, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'SetCellAlignment' , 'row' , 'col' , 'cellAlignment' , ), 59, (59, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'GetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 60, (60, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'SetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 61, (61, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'GetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 62, (62, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'SetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 63, (63, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'GetCellContentColor' , 'row' , 'col' , 'pColor' , ), 64, (64, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'SetCellContentColor' , 'row' , 'col' , 'pColor' , ), 65, (65, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'GetCellStyleOverrides' , 'row' , 'col' , 'pIntArray' , ), 66, (66, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'DeleteCellContent' , 'row' , 'col' , ), 67, (67, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'GetRowType' , 'row' , 'pRowType' , ), 68, (68, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'GetText' , 'row' , 'col' , 'pStr' , ), 69, (69, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'SetText' , 'row' , 'col' , 'pStr' , ), 70, (70, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'GetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 71, (71, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'SetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 72, (72, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'GetCellTextHeight' , 'row' , 'col' , 'pTextHeight' , ), 73, (73, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'SetCellTextHeight' , 'row' , 'col' , 'TextHeight' , ), 74, (74, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'GetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 75, (75, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'SetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 76, (76, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'GetAutoScale' , 'row' , 'col' , 'bValue' , ), 77, (77, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'SetAutoScale' , 'row' , 'col' , 'bValue' , ), 78, (78, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId' , 'row' , 'col' , 'blkId' , ), 79, (79, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId' , 'row' , 'col' , 'blkId' , 'bAutoFit' , 
             ), 80, (80, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockScale' , 'row' , 'col' , 'blkScale' , ), 81, (81, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockScale' , 'row' , 'col' , 'blkScale' , ), 82, (82, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 83, (83, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 84, (84, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 112, (112, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 113, (113, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridLineWeight' , 'row' , 'col' , 'edge' , 'plineweight' , 
             ), 85, (85, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridLineWeight' , 'row' , 'col' , 'edges' , 'Lineweight' , 
             ), 86, (86, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridColor' , 'row' , 'col' , 'edge' , 'pColor' , 
             ), 87, (87, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridColor' , 'row' , 'col' , 'edges' , 'pColor' , 
             ), 88, (88, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridVisibility' , 'row' , 'col' , 'edge' , 'bValue' , 
             ), 89, (89, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridVisibility' , 'row' , 'col' , 'edges' , 'bValue' , 
             ), 90, (90, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'InsertColumns' , 'col' , 'Width' , 'cols' , ), 95, (95, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'DeleteColumns' , 'col' , 'cols' , ), 96, (96, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'InsertRows' , 'row' , 'Height' , 'Rows' , ), 97, (97, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'DeleteRows' , 'row' , 'Rows' , ), 98, (98, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'MergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
             ), 99, (99, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'UnmergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
             ), 100, (100, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'IsMergedCell' , 'row' , 'col' , 'minRow' , 'maxRow' , 
             'minCol' , 'maxCol' , 'pbValue' , ), 101, (101, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId' , 'row' , 'col' , 'fieldId' , ), 114, (114, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId' , 'row' , 'col' , 'fieldId' , ), 115, (115, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , ], 1 , 1 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'GenerateLayout' , ), 102, (102, (), [ ], 1 , 1 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'RecomputeTableBlock' , 'bForceUpdate' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'HitTest' , 'wpt' , 'wviewVec' , 'resultRowIndex' , 'resultColumnIndex' , 
             'bReturn' , ), 104, (104, (), [ (12, 1, None, None) , (12, 1, None, None) , (16387, 2, None, None) , 
             (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'Select' , 'wpt' , 'wvwVec' , 'wvwxVec' , 'wxaper' , 
             'wyaper' , 'allowOutside' , 'resultRowIndex' , 'resultColumnIndex' , ), 105, (105, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (11, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'SelectSubRegion' , 'wpt1' , 'wpt2' , 'wvwVec' , 'wvwxVec' , 
             'seltype' , 'bIncludeCurrentSelection' , 'rowMin' , 'rowMax' , 'colMin' , 
             'colMax' , ), 106, (106, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
             (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'ReselectSubRegion' , ), 107, (107, (), [ ], 1 , 1 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'GetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
             ), 108, (108, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'SetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
             ), 109, (109, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'ClearSubSelection' , ), 110, (110, (), [ ], 1 , 1 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'HasSubSelection' , 'pbValue' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 117, (117, (), [ 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType' , 'rowTypes' , 'dataType' , 'unitType' , ), 118, (118, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'GetFormat' , 'rowType' , 'pFormat' , ), 119, (119, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'SetFormat' , 'rowTypes' , 'pFormat' , ), 120, (120, (), [ (3, 1, None, None) , 
             (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'FormatValue' , 'row' , 'col' , 'nOption' , 'pVal' , 
             ), 121, (121, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (16392, 0, None, None) , ], 1 , 1 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'GetCellDataType' , 'row' , 'col' , 'pDataType' , 'pUnitType' , 
             ), 1946, (1946, (), [ (3, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'SetCellDataType' , 'row' , 'col' , 'dataType' , 'unitType' , 
             ), 1947, (1947, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'GetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1948, (1948, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1949, (1949, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'GetCellValue' , 'row' , 'col' , 'pVal' , ), 1950, (1950, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SetCellValue' , 'row' , 'col' , 'val' , ), 1951, (1951, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (12, 0, None, None) , ], 1 , 1 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'SetCellValueFromText' , 'row' , 'col' , 'val' , 'nOption' , 
             ), 2208, (2208, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'ResetCellValue' , 'row' , 'col' , ), 2209, (2209, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'SetCellState' , 'nRow' , 'nCol' , 'nState' , ), 2210, (2210, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'GetCellState' , 'nRow' , 'nCol' , 'nState' , ), 2211, (2211, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue32' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 124, (124, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue32' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 125, (125, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId32' , 'row' , 'col' , 'fieldId' , ), 126, (126, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId32' , 'row' , 'col' , 'fieldId' , ), 127, (127, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId232' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 2370, (2370, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId232' , 'nRow' , 'nCol' , 'nContent' , 'acDbObjectId' , 
             'nflag' , ), 2371, (2371, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId232' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 2372, (2372, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'autoFit' , ), 2373, (2373, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2374, (2374, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2375, (2375, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLinetype32' , 'nRow' , 'nCol' , 'nGridLineType' , 'pacDbObjId' , 
             ), 2376, (2376, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLinetype32' , 'nRow' , 'nCol' , 'nGridLineType' , 'idLinetype' , 
             ), 2377, (2377, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
]

IAcadTableCell_vtables_dispatch_ = 1
IAcadTableCell_vtables_ = [
    (( 'CellStyle' , 'CellStyle' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'CellStyle' , 'CellStyle' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'RowStyle' , 'RowStyle' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'RowStyle' , 'RowStyle' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ColumnStyle' , 'ColumnStyle' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'ColumnStyle' , 'ColumnStyle' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'CellWidth' , 'CellWidth' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'CellWidth' , 'CellWidth' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'CellHeight' , 'CellHeight' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'CellHeight' , 'CellHeight' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'cellAlignment' , 'cellAlignment' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'cellAlignment' , 'cellAlignment' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'CellBackgroundFill' , 'ppColor' , ), 7, (7, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'CellBackgroundFill' , 'ppColor' , ), 7, (7, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderColor' , 'ppColor' , ), 8, (8, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderColor' , 'ppColor' , ), 8, (8, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderLineweight' , 'borderLineweight' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderLineweight' , 'borderLineweight' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderLinetype' , 'borderLinetype' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'CellBorderLinetype' , 'borderLinetype' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalCellMargin' , 'HorizontalCellMargin' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalCellMargin' , 'HorizontalCellMargin' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'VerticalCellMargin' , 'VerticalCellMargin' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'VerticalCellMargin' , 'VerticalCellMargin' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'CellLocking' , 'CellLocking' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'CellLocking' , 'CellLocking' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'CellDataLink' , 'dataLink' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'CellDataLink' , 'dataLink' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'CellType' , 'CellType' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'CellType' , 'CellType' , ), 15, (15, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'CellLayout' , 'Layout' , ), 16, (16, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'CellLayout' , 'Layout' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'CellContents' , 'contents' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'CellContents' , 'contents' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'CellTextStyle' , 'TextStyle' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'CellTextStyle' , 'TextStyle' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'CellTextHeight' , 'TextHeight' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'CellTextHeight' , 'TextHeight' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'CellTextRotation' , 'TextRotation' , ), 20, (20, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'CellTextRotation' , 'TextRotation' , ), 20, (20, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'CellTextColor' , 'ppColor' , ), 21, (21, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'CellTextColor' , 'ppColor' , ), 21, (21, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'CellDataType' , 'dataType' , ), 22, (22, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'CellDataType' , 'dataType' , ), 22, (22, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'format' , 'format' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'format' , 'format' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'Presition' , 'Presition' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'Presition' , 'Presition' , ), 24, (24, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'AdditionalFormat' , 'AdditionalFormat' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'AdditionalFormat' , 'AdditionalFormat' , ), 25, (25, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'BlocksInCell' , 'blockIndexInCellBlockOrder' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'BlocksInCell' , 'blockIndexInCellBlockOrder' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'BlockName' , 'BlockName' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'BlockName' , 'BlockName' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'BlockAutofit' , 'bAutoFit' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'BlockAutofit' , 'bAutoFit' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'BlockScale' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'BlockScale' , ), 29, (29, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'BlockRotation' , ), 30, (30, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'BlockRotation' , ), 30, (30, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'ppColor' , ), 31, (31, (), [ (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'ppColor' , ), 31, (31, (), [ (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
]

IAcadTableStyle_vtables_dispatch_ = 1
IAcadTableStyle_vtables_ = [
    (( 'Name' , 'bstrValue' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrValue' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstr' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstr' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 9, (9, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 10, (10, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 11, (11, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 12, (12, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 13, (13, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 14, (14, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'GetColor' , 'rowType' , 'pColor' , ), 15, (15, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'SetColor' , 'rowTypes' , 'pColor' , ), 16, (16, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 18, (18, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 19, (19, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 20, (20, (), [ (3, 1, None, None) , 
             (16395, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 21, (21, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 22, (22, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 23, (23, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 24, (24, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E38E7951-AB58-43F5-9B74-B473C5C6605B}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 25, (25, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 26, (26, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 27, (27, (), [ 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType' , 'rowTypes' , 'nDataType' , 'nUnitType' , ), 28, (28, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'GetFormat' , 'rowType' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'SetFormat' , 'rowTypes' , 'val' , ), 30, (30, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyleId32' , 'bstrCellStyle' , 'pVal' , ), 62, (62, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyleId32' , 'bstrCellStyle' , 'val' , ), 63, (63, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId32' , 'pVal' , ), 64, (64, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId32' , 'pVal' , ), 64, (64, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'SetTemplateId32' , 'val' , 'option' , ), 66, (66, (), [ (3, 1, None, None) , 
             (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
]

IAcadText_vtables_dispatch_ = 1
IAcadText_vtables_ = [
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 64 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'Backward' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'Backward' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'FieldCode' , 'bstrText' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyle_vtables_dispatch_ = 1
IAcadTextStyle_vtables_ = [
    (( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'LastHeight' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'LastHeight' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'GetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
             'PitchAndFamily' , ), 9, (9, (), [ (16392, 2, None, None) , (16395, 2, None, None) , (16395, 2, None, None) , 
             (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'SetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
             'PitchAndFamily' , ), 16, (16, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyles_vtables_dispatch_ = 1
IAcadTextStyles_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{703FE959-9B8D-4A91-A69A-844150619DF3}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pTextStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{703FE959-9B8D-4A91-A69A-844150619DF3}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadTolerance_vtables_dispatch_ = 1
IAcadTolerance_vtables_ = [
    (( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 82, (82, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 82, (82, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadToolbar_vtables_dispatch_ = 1
IAcadToolbar_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{72E4902E-AA1A-4F5D-8995-B06088CF363C}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'DockStatus' , 'nStatus' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743818, (1610743818, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'nWidth' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'nHeight' , ), 1610743824, (1610743824, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AddToolbarButton' , 'Index' , 'Name' , 'HelpString' , 'Macro' , 
             'FlyoutButton' , 'pItem' , ), 1610743829, (1610743829, (), [ (12, 1, None, None) , (8, 1, None, None) , 
             (8, 1, None, None) , (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{72E4902E-AA1A-4F5D-8995-B06088CF363C}')") , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
    (( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743830, (1610743830, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{72E4902E-AA1A-4F5D-8995-B06088CF363C}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Dock' , 'Side' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Float' , 'top' , 'left' , 'NumberFloatRows' , ), 1610743832, (1610743832, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743833, (1610743833, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743834, (1610743834, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadToolbarItem_vtables_dispatch_ = 1
IAcadToolbarItem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{EDE9142E-0923-4657-90F7-EB55FC56C99A}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'itemType' , ), 1610743814, (1610743814, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Flyout' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{EDE9142E-0923-4657-90F7-EB55FC56C99A}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'nIndex' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'GetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743821, (1610743821, (), [ (16392, 2, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743822, (1610743822, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'AttachToolbarToFlyout' , 'MenuGroupName' , 'ToolbarName' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743824, (1610743824, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'CommandDisplayName' , 'bstrCmdDisName' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'CommandDisplayName' , 'bstrCmdDisName' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadToolbars_vtables_dispatch_ = 1
IAcadToolbars_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{EDE9142E-0923-4657-90F7-EB55FC56C99A}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{B1872638-6D18-482F-90BA-38086D17625F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{72D027F2-CD79-4135-AE60-74FD0F8F595B}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'ToolbarName' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{EDE9142E-0923-4657-90F7-EB55FC56C99A}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadTrace_vtables_dispatch_ = 1
IAcadTrace_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadUCS_vtables_dispatch_ = 1
IAcadUCS_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'XVector' , 'XVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'XVector' , 'XVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'YVector' , 'YVector' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'YVector' , 'YVector' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GetUCSMatrix' , 'transMatrix' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadUCSs_vtables_dispatch_ = 1
IAcadUCSs_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{50B2A194-C469-4A57-B14A-BAFBA41A4039}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Origin' , 'XAxisPoint' , 'YAxisPoint' , 'Name' , 
             'pUCS' , ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (8, 1, None, None) , (16393, 10, None, "IID('{50B2A194-C469-4A57-B14A-BAFBA41A4039}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadUnderlay_vtables_dispatch_ = 1
IAcadUnderlay_vtables_ = [
    (( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pos' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pos' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ClipBoundary' , 'boundry' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'File' , 'Name' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'File' , 'Name' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
]

IAcadUtility_vtables_dispatch_ = 1
IAcadUtility_vtables_ = [
    (( 'AngleToReal' , 'Angle' , 'Unit' , 'Value' , ), 1610743808, (1610743808, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'AngleToString' , 'Angle' , 'Unit' , 'precision' , 'bstrValue' , 
             ), 1610743809, (1610743809, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'DistanceToReal' , 'Distance' , 'Unit' , 'Value' , ), 1610743810, (1610743810, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'RealToString' , 'Value' , 'Unit' , 'precision' , 'bstrValue' , 
             ), 1610743811, (1610743811, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TranslateCoordinates' , 'Point' , 'FromCoordSystem' , 'ToCoordSystem' , 'Displacement' , 
             'OCSNormal' , 'transPt' , ), 1610743812, (1610743812, (), [ (12, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
    (( 'InitializeUserInput' , 'Bits' , 'KeyWordList' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
    (( 'GetInteger' , 'Prompt' , 'Value' , ), 1610743814, (1610743814, (), [ (12, 17, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
    (( 'GetReal' , 'Prompt' , 'Value' , ), 1610743815, (1610743815, (), [ (12, 17, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 1 , 112 , (3, 0, None, None) , 0 , )),
    (( 'GetInput' , 'Value' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetKeyword' , 'Prompt' , 'bstrKeyword' , ), 1610743817, (1610743817, (), [ (12, 17, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 128 , (3, 0, None, None) , 0 , )),
    (( 'GetString' , 'HasSpaces' , 'Prompt' , 'bstrValue' , ), 1610743818, (1610743818, (), [ 
             (3, 1, None, None) , (12, 17, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 136 , (3, 0, None, None) , 0 , )),
    (( 'GetAngle' , 'Point' , 'Prompt' , 'Angle' , ), 1610743819, (1610743819, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AngleFromXAxis' , 'StartPoint' , 'EndPoint' , 'Angle' , ), 1610743820, (1610743820, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'GetCorner' , 'Point' , 'Prompt' , 'corner' , ), 1610743821, (1610743821, (), [ 
             (12, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 160 , (3, 0, None, None) , 0 , )),
    (( 'GetDistance' , 'Point' , 'Prompt' , 'dist' , ), 1610743822, (1610743822, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GetOrientation' , 'Point' , 'Prompt' , 'Angle' , ), 1610743823, (1610743823, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GetPoint' , 'Point' , 'Prompt' , 'inputPoint' , ), 1610743824, (1610743824, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 184 , (3, 0, None, None) , 0 , )),
    (( 'PolarPoint' , 'Point' , 'Angle' , 'Distance' , 'inputPoint' , 
             ), 1610743825, (1610743825, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'CreateTypedArray' , 'varArr' , 'Type' , 'inArgs' , ), 1610743826, (1610743826, (), [ 
             (16396, 2, None, None) , (3, 1, None, None) , (8204, 1, None, None) , ], 1 , 1 , 4 , -1 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GetEntity' , 'Object' , 'PickedPoint' , 'Prompt' , ), 1610743827, (1610743827, (), [ 
             (16393, 2, None, None) , (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Prompt' , 'Message' , ), 1610743828, (1610743828, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GetSubEntity' , 'Object' , 'PickedPoint' , 'transMatrix' , 'ContextData' , 
             'Prompt' , ), 1610743829, (1610743829, (), [ (16393, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
             (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
    (( 'IsURL' , 'URL' , 'IsValidURL' , ), 1610743830, (1610743830, (), [ (8, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'GetRemoteFile' , 'URL' , 'LocalFile' , 'IgnoreCache' , ), 1610743831, (1610743831, (), [ 
             (8, 1, None, None) , (16392, 2, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PutRemoteFile' , 'URL' , 'LocalFile' , ), 1610743832, (1610743832, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'IsRemoteFile' , 'LocalFile' , 'URL' , 'IsDownloadedFile' , ), 1610743833, (1610743833, (), [ 
             (8, 1, None, None) , (16392, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'LaunchBrowserDialog' , 'SelectedURL' , 'DialogTitle' , 'OpenButtonCaption' , 'StartPageURL' , 
             'RegistryRootKey' , 'OpenButtonAlwaysEnabled' , 'success' , ), 1610743834, (1610743834, (), [ (16392, 2, None, None) , 
             (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'SendModelessOperationStart' , 'Context' , ), 1610743835, (1610743835, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'SendModelessOperationEnded' , 'Context' , ), 1610743836, (1610743836, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'GetSubEntity32' , 'Object' , 'PickedPoint' , 'transMatrix' , 'ContextData' , 
             'Prompt' , ), 1610743837, (1610743837, (), [ (16393, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
             (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 288 , (3, 0, None, None) , 0 , )),
    (( 'ObjectId32ToObjectIdString' , 'ObjectID32' , 'ObjectIdString' , ), 1610743838, (1610743838, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'GetObjectIdString' , 'Object' , 'bHex' , 'ObjectIdString' , ), 1610743839, (1610743839, (), [ 
             (9, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IAcadView_vtables_dispatch_ = 1
IAcadView_vtables_ = [
    (( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'CategoryName' , 'category' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'CategoryName' , 'category' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (20, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId32' , 'ObjectID' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId32' , 'ObjectID' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IAcadViewport_vtables_dispatch_ = 1
IAcadViewport_vtables_ = [
    (( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'LowerLeftCorner' , 'lowLeft' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'UpperRightCorner' , 'UpperRight' , ), 16, (16, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'Split' , 'NumWins' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'SetView' , 'View' , ), 22, (22, (), [ (9, 1, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
]

IAcadViewports_vtables_dispatch_ = 1
IAcadViewports_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{B2B6FB46-0162-4C09-9612-65371297D78F}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{B2B6FB46-0162-4C09-9612-65371297D78F}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DeleteConfiguration' , 'Name' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadViews_vtables_dispatch_ = 1
IAcadViews_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{DE1C99A1-811D-4F40-98A6-A17186C8779A}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadXRecord_vtables_dispatch_ = 1
IAcadXRecord_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 2, (2, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'SetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 3, (3, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadXline_vtables_dispatch_ = 1
IAcadXline_vtables_ = [
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 4, (4, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
    '{330F7B9E-C93C-403D-807C-D92CB9698637}' : _DAcadApplicationEvents,
    '{B1872638-6D18-482F-90BA-38086D17625F}' : IAcadApplication,
    '{E06CA8F7-4554-4993-8460-1127D2513B1E}' : AcadApplication,
    '{9368AF30-60A3-47E3-A743-60D4C21FB580}' : IAcadDocument,
    '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}' : IAcadDatabase,
    '{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}' : IAcadModelSpace,
    '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}' : IAcadBlock,
    '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}' : IAcadObject,
    '{6CE21DA5-2896-4D63-9373-2EE672A00D41}' : IAcadDictionary,
    '{153C1376-952E-4696-94A0-F57364AA6836}' : IAcadXRecord,
    '{D78C594E-0412-4D7A-919A-2B6D1662D337}' : IAcadEntity,
    '{E38E7951-AB58-43F5-9B74-B473C5C6605B}' : IAcadAcCmColor,
    '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}' : IAcadHyperlinks,
    '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}' : IAcadHyperlink,
    '{46250F63-F4E2-4C99-A12B-0471714BC659}' : IAcad3DFace,
    '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}' : IAcadPolygonMesh,
    '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}' : IAcad3DPolyline,
    '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}' : IAcadArc,
    '{DB4711D4-33D9-408F-9E34-93A7F91248F2}' : IAcadAttribute,
    '{93102923-D2AD-4429-86B3-A09D589BF38F}' : IAcad3DSolid,
    '{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}' : IAcadRegion,
    '{70B267B4-5885-477C-BE74-F898EE7FE9EA}' : IAcadCircle,
    '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}' : IAcadDimAligned,
    '{6330AC5A-B41E-4E0F-A133-9AA84C9A4E94}' : IAcadDimension,
    '{78931DD8-09C7-44F5-9CB5-83198A8CD286}' : IAcadDimAngular,
    '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}' : IAcadDimDiametric,
    '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}' : IAcadDimRotated,
    '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}' : IAcadDimOrdinate,
    '{6070AA16-B13D-4B73-AA07-722C59BC09B5}' : IAcadDimRadial,
    '{21565C97-8E2E-442B-8F69-C9662BC89DCA}' : IAcadEllipse,
    '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}' : IAcadLeader,
    '{50FA2201-1260-4323-8C00-3EA7E36680B6}' : IAcadMText,
    '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}' : IAcadPoint,
    '{B32517C5-036E-4CB0-8538-66BD5FC625C4}' : IAcadLWPolyline,
    '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}' : IAcadPolyline,
    '{D05D772F-86F6-4B10-9898-E22BF8C5F192}' : IAcadRay,
    '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}' : IAcadShape,
    '{38D2992F-DF38-497F-9E2B-68D813057E8D}' : IAcadSolid,
    '{3D506D60-0138-48DD-8166-E5512E441206}' : IAcadSpline,
    '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}' : IAcadText,
    '{98D4741E-D869-4950-8B28-046B6884A084}' : IAcadTolerance,
    '{4253025F-5BC5-4D78-8D65-138D2DBED220}' : IAcadTrace,
    '{36494A5A-AADE-46F4-B87C-B213A2AF0083}' : IAcadXline,
    '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}' : IAcadBlockReference,
    '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}' : IAcadHatch,
    '{1A5BD135-D93B-4BFD-8027-E8277D629B46}' : IAcadRasterImage,
    '{EB1641A6-750D-49EB-A681-0BAEB77E7388}' : IAcadLine,
    '{F8AE8A77-1909-452A-95E8-0B833451FD4B}' : IAcadLayout,
    '{37A8DABC-FD78-4509-B9CA-396F4CC30472}' : IAcadPlotConfiguration,
    '{2EA3AB94-E461-4DDC-9B9B-894406F31256}' : IAcadMInsertBlock,
    '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}' : IAcadPolyfaceMesh,
    '{0DA73585-0488-4699-BCD2-AB0F5C91D404}' : IAcadMLine,
    '{EA05C039-0D70-4713-865B-71DF0B02F6CA}' : IAcadDim3PointAngular,
    '{29EB1F45-3E5E-41E2-B909-2EA909858B11}' : IAcadExternalReference,
    '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}' : IAcadTable,
    '{6BE0895F-AB23-4095-8180-0BBD8E790138}' : IAcadDimArcLength,
    '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}' : IAcadDimRadialLarge,
    '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}' : IAcadSection,
    '{AC4451F8-ED8E-42F0-B10D-1345A423FA33}' : IAcadSectionSettings,
    '{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}' : IAcadSectionTypeSettings,
    '{59898AB2-E779-4D7C-B77C-86E9E10B2226}' : IAcadMLeader,
    '{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}' : IAcadPaperSpace,
    '{E1366A0E-60BF-4E69-9728-D524EDF12C69}' : IAcadPViewport,
    '{DE1C99A1-811D-4F40-98A6-A17186C8779A}' : IAcadView,
    '{E69E9F83-F577-403C-8F69-7F5E86AB61F4}' : IAcadBlocks,
    '{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}' : IAcadGroups,
    '{4B02E349-191E-4736-BDE6-52C2D458E0F5}' : IAcadGroup,
    '{B6084632-4A92-45F4-B8F7-0A91824DADB5}' : IAcadDimStyles,
    '{88A65332-E185-46B4-9520-CA3305361E4B}' : IAcadDimStyle,
    '{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}' : IAcadLayers,
    '{369B3B72-01B7-4C1B-85C9-4E662705D76C}' : IAcadLayer,
    '{ED574116-AE18-4BB2-9628-1921C110F038}' : IAcadLineTypes,
    '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}' : IAcadLineType,
    '{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}' : IAcadDictionaries,
    '{FA985110-D0CB-4E62-AB01-2FE6027C7F05}' : IAcadRegisteredApplications,
    '{F0F9DD45-70ED-42C1-B4AC-562396361489}' : IAcadRegisteredApplication,
    '{F8425B37-BFCF-4290-8CA2-C718D3201829}' : IAcadTextStyles,
    '{703FE959-9B8D-4A91-A69A-844150619DF3}' : IAcadTextStyle,
    '{94DA139B-A285-4E3D-9E31-AA597FD909B0}' : IAcadUCSs,
    '{50B2A194-C469-4A57-B14A-BAFBA41A4039}' : IAcadUCS,
    '{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}' : IAcadViews,
    '{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}' : IAcadViewports,
    '{B2B6FB46-0162-4C09-9612-65371297D78F}' : IAcadViewport,
    '{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}' : IAcadLayouts,
    '{02242489-515A-4BDD-AC0C-E125FD1BE28C}' : IAcadPlotConfigurations,
    '{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}' : IAcadDatabasePreferences,
    '{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}' : IAcadFileDependencies,
    '{0CED4F33-C673-485D-AE75-54F88D10FA57}' : IAcadFileDependency,
    '{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}' : IAcadSummaryInfo,
    '{0340058F-D94E-429D-8199-A4ECFF677AC1}' : IAcadSectionManager,
    '{C42C4E52-02C7-441C-B0BA-16771B542EA5}' : IAcadMaterials,
    '{A7F84FAB-56C7-4437-9178-04441F062A4A}' : IAcadMaterial,
    '{E93528F4-F504-4E58-8560-C473AD8445A2}' : IAcadPlot,
    '{BA391ABB-844F-42A0-8F57-31EE00D0583A}' : IAcadSelectionSets,
    '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}' : IAcadSelectionSet,
    '{CE85BBED-B6CD-446F-B3F6-052465802DB6}' : IAcadUtility,
    '{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}' : IAcadPreferences,
    '{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}' : IAcadPreferencesFiles,
    '{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}' : IAcadPreferencesDisplay,
    '{97311A0B-4C28-4D80-8397-40FB3403AEF0}' : IAcadPreferencesOpenSave,
    '{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}' : IAcadPreferencesOutput,
    '{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}' : IAcadPreferencesSystem,
    '{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}' : IAcadPreferencesUser,
    '{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}' : IAcadPreferencesDrafting,
    '{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}' : IAcadPreferencesSelection,
    '{807758BB-F12D-4275-A52F-6A2CFCAD9A21}' : IAcadPreferencesProfiles,
    '{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}' : IAcadMenuGroups,
    '{72D027F2-CD79-4135-AE60-74FD0F8F595B}' : IAcadMenuGroup,
    '{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}' : IAcadPopupMenus,
    '{551A5349-4463-40E2-822C-D3A632409117}' : IAcadPopupMenu,
    '{2E00012D-0862-428C-B675-A88781D31934}' : IAcadPopupMenuItem,
    '{8095E3AB-7AB4-4915-A35A-11491F1B45D6}' : IAcadToolbars,
    '{EDE9142E-0923-4657-90F7-EB55FC56C99A}' : IAcadToolbar,
    '{72E4902E-AA1A-4F5D-8995-B06088CF363C}' : IAcadToolbarItem,
    '{87925C1E-ADEA-48BD-8BF1-239F9A116A81}' : IAcadMenuBar,
    '{31010F88-E412-4A4B-B482-B71D45D1A28A}' : IAcadDocuments,
    '{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}' : IAcadState,
    '{79855627-10CA-4054-BB8C-00946292669D}' : AcadMenuGroups,
    '{573373A3-EDBE-4369-AF1F-3292EE13538C}' : AcadMenuBar,
    '{99EF8026-26E1-43C1-92EE-F5041E7DBE8C}' : AcadDocuments,
    '{5E90323E-2CCF-4AE9-9B6F-6603AB611048}' : AcadDatabase,
    '{41B85986-5004-4888-9E89-7895663FA77C}' : IAcadObjectEvents,
    '{35DF9E00-7285-40A9-BD63-D714AA0CA70F}' : AcadModelSpace,
    '{BF0FD147-A1EA-416E-911B-9EF794738AFA}' : AcadPaperSpace,
    '{25F41555-CB62-4FB5-AF5A-FD50D5B99809}' : AcadBlocks,
    '{255F2619-FB9D-4176-BE91-D2C122537155}' : AcadGroups,
    '{187BD9EB-18F0-40A0-BEA1-4B53AE20A161}' : AcadDimStyles,
    '{60E6BD18-62F7-4B1A-B701-CEF35537CB59}' : AcadLayers,
    '{09C7B1A6-D60E-43DA-B8DA-445C72D2A022}' : AcadLineTypes,
    '{07244103-C9ED-4EF9-BDD4-5062C58A34D4}' : AcadDictionaries,
    '{CF8BF2DA-8602-41B7-8906-3C67F07994FB}' : AcadRegisteredApplication,
    '{216D566A-A968-4E87-A8B3-9B5EB06BB19D}' : AcadRegisteredApplications,
    '{F194C083-83FC-4F35-A76F-F4C577C0689A}' : AcadTextStyles,
    '{1146DF77-46C8-4F31-AB6A-8815AEE71EB7}' : AcadUCSs,
    '{0165E8DC-3E0B-4102-9C66-DC0228911048}' : AcadViews,
    '{FD6D9F4B-1812-4B43-8836-1BCEC2E28F65}' : AcadViewports,
    '{C6B60202-2BEA-4ED1-9A9F-7CF91E5A295D}' : AcadLayouts,
    '{0EEABD18-B6F5-4E1E-887D-0384A20CD8E9}' : AcadPlotConfigurations,
    '{E3AC406B-D118-44DB-AC19-AA594DD65C8A}' : AcadDatabasePreferences,
    '{B1406301-FAFE-4332-B481-6DE6B109B206}' : AcadFileDependencies,
    '{BBC325BA-407B-4755-B4D1-7A3E30581BD3}' : AcadSummaryInfo,
    '{D1F1BB22-D947-40C8-90D8-B9DC99591EF7}' : AcadSectionManager,
    '{C4E55BE8-77A9-4A8A-81DE-2CC03D13FF48}' : AcadMaterials,
    '{28EA8439-1EEF-4632-812B-3A8515F93530}' : AcadGroup,
    '{DF79DE83-2A11-43DB-AE4C-1FE95E57F574}' : AcadPlot,
    '{C358F0A6-CF01-4B79-BC20-3744A6CE61CE}' : AcadLayer,
    '{44E0D10E-F951-4B01-BDC0-21256D036952}' : AcadLineType,
    '{67211CB3-E07C-4585-B521-CD8F5840BD8D}' : AcadDimStyle,
    '{865CCF2C-B13D-48CB-9605-04E135F8FF30}' : IAcadMLeaderStyle,
    '{C3819487-144A-4471-B95E-712E3CC64BEC}' : AcadMLeaderStyle,
    '{59F48386-168C-4320-8B3D-77E8556EF9E1}' : AcadTextStyle,
    '{D4E3C6C4-7DAE-4D80-A98C-148C3CD66E32}' : AcadUCS,
    '{415EAAB8-7D05-4935-A6DF-25DA98FC8FB2}' : AcadViewport,
    '{BEAF55E0-0A37-499C-B48B-DBC93CF6E29B}' : AcadPViewport,
    '{9F1290F0-C25D-429E-901E-42CBE63A9836}' : AcadUtility,
    '{F55DC97F-4A3C-49E9-873C-B1F3B6F4F8D6}' : AcadMaterial,
    '{12664C95-EEAD-4337-A88A-971953571812}' : AcadLayout,
    '{2ABEE42C-D570-4DE3-874F-353204A47B63}' : _DAcadDocumentEvents,
    '{EEA4FF96-9C53-49ED-977F-D22D2B51F741}' : AcadDocument,
    '{4F1D3AB3-AAC7-4F57-BA5C-B6D5410FE1D7}' : AcadObject,
    '{3737DD60-3DB3-45AA-A592-49640E47A4CB}' : AcadEntity,
    '{F7848BAF-729D-4217-A1E8-7DCE59B662FA}' : AcadAcCmColor,
    '{D1131D16-F4F4-4F50-8AEB-A6ECA83141C0}' : AcadHyperlinks,
    '{6ACCA2E1-E804-4519-B95F-235867C214AC}' : AcadLine,
    '{211BF34C-5307-4666-B82D-0719CACA809C}' : AcadPlotConfiguration,
    '{60C11D4D-6F51-4A16-88CE-305C5BBC84F1}' : AcadBlock,
    '{6208CB09-68D9-4D82-A4BB-43003DB56AFA}' : AcadState,
    '{81A17A41-793D-4BF0-A902-E1B622D175B5}' : AcadSelectionSet,
    '{EA8022D8-0E43-473D-8646-BB1292EACE19}' : AcadSelectionSets,
    '{57FB46D7-D66B-4EEA-969A-5D778BA7B79F}' : AcadPreferences,
    '{AA668926-0FCF-4677-A97F-AD7920AB2C58}' : AcadPreferencesDrafting,
    '{865D8226-319C-4784-B160-5D45FE038BF8}' : AcadPreferencesDisplay,
    '{6CE93067-926C-4A41-BFC4-EA0A02C9F7E7}' : AcadPreferencesFiles,
    '{7DBA4518-9AA4-416E-A3D6-45E80A02E979}' : AcadPreferencesOpenSave,
    '{62EE39DA-DF13-42B1-861F-487026489C27}' : AcadPreferencesOutput,
    '{38CDCF3E-F321-43F6-B355-6CBE197BD33A}' : AcadPreferencesProfiles,
    '{1615B81F-2474-4AC3-A6F7-885F0DC5D62F}' : AcadPreferencesSelection,
    '{C19DA545-A773-422D-818F-61E60340C184}' : AcadPreferencesSystem,
    '{2DF90FE8-4354-4AB3-ABA9-04B9831F94BF}' : AcadPreferencesUser,
    '{521C919B-AC49-4F28-A908-D4BD172C92E6}' : AcadMenuGroup,
    '{63F5DDA7-C143-42AD-94E8-763C8E770537}' : AcadPopupMenus,
    '{8774869F-546D-4CE5-9703-CFA67AEEBF26}' : AcadPopupMenu,
    '{70408B41-584A-4C9C-B31B-F36FF8073798}' : AcadPopupMenuItem,
    '{9F58700D-4910-4463-AEEB-2406161B0490}' : AcadMText,
    '{DA38CF1F-C119-4FE7-A5F9-AEC5E0C22709}' : AcadBlockReference,
    '{C858EE7D-1B1F-4F2E-A61F-3F4AA8C6C1BA}' : AcadCircle,
    '{0F994C78-5B0F-4A2C-B63A-DB74B93B5537}' : AcadShadowDisplay,
    '{B4F3F703-2BC5-4074-BD6E-24E5830BBD0A}' : AcadHyperlink,
    '{017EAE27-EA30-4151-8272-BA072063C218}' : IAcadDynamicBlockReferenceProperty,
    '{114CCE6C-FDBF-4DAD-9157-7078B5664B95}' : AcadDynamicBlockReferenceProperty,
    '{1E499AED-C7C7-4EE1-8FA6-AB1119B7268E}' : AcadXRecord,
    '{5246A240-92AB-460B-820D-365247D9B47F}' : AcadSectionSettings,
    '{FB5AA334-CBF1-41D1-B9E3-98F2ACB2EB83}' : AcadRasterImage,
    '{457AD5FC-1656-4606-AB8A-EF7F0215B238}' : Acad3DFace,
    '{7D7FD20A-AC1D-46BC-8C49-8EBB286F681E}' : Acad3DPolyline,
    '{A83EBA25-CCF0-45CE-A7C2-FEABE0D3AF59}' : AcadRegion,
    '{C998B595-8233-4859-A51A-492A25E9EB67}' : Acad3DSolid,
    '{7E99A93E-D084-43FF-9311-D24A452FF851}' : AcadArc,
    '{3BE70A3D-E2C4-42A6-989C-2F1E08C338D4}' : AcadAttribute,
    '{183D30F5-55EB-4409-9FC8-06B66E6578FA}' : IAcadAttributeReference,
    '{326662C0-F9F3-4A5B-BFE5-2431F4AEF3D8}' : AcadAttributeReference,
    '{7F11EDC5-9468-4C9D-8749-5720C123C13F}' : AcadEllipse,
    '{EF74767C-CCF5-4725-935C-39E7BDB8D3B8}' : AcadHatch,
    '{1B4D2B5E-8406-4167-B42C-09D8136BAE47}' : AcadLeader,
    '{508C6E95-0B42-4E0B-9A4A-75CF28263857}' : AcadLWPolyline,
    '{5759A970-9028-4C5C-805B-AFE6D6169382}' : AcadPoint,
    '{DD0ACEEC-B19B-4EC4-A5C8-C85BBE6402B2}' : AcadPolyline,
    '{7BAA52E2-CBFA-406B-83AB-7D0F939026D4}' : AcadPolygonMesh,
    '{D44D6709-6C13-4C52-A360-A2943C33EEE8}' : AcadRay,
    '{4EFE4629-C549-4346-9E5A-06F0AE788ED0}' : AcadShape,
    '{7EB18444-4D79-4CA8-8743-0498B64C4D01}' : AcadSolid,
    '{F2293592-5908-4F24-9B5D-759CDA971FC2}' : AcadSpline,
    '{12226789-EEA7-4BE8-9FD7-33513C744E3B}' : AcadText,
    '{092962C2-F320-44E1-8857-C8AFE3885555}' : AcadTolerance,
    '{D7B6AF1E-5F8B-453C-A26E-828A2BD820CC}' : AcadTrace,
    '{70371E06-28C5-423C-8912-78A9A6E342CB}' : AcadXline,
    '{5B817FD8-0DDF-4283-B794-86434740C658}' : AcadMInsertBlock,
    '{A9879069-87D2-4F15-94B4-92531900783C}' : AcadPolyfaceMesh,
    '{CC35F7B8-1AE8-4C31-9F3D-484A44EAC286}' : AcadMLine,
    '{F39B739A-A0E8-49C5-95B9-23F7C6496075}' : IAcadAssocArrayPath,
    '{3745EF1D-3D36-4500-8034-7526342623D3}' : AcadAssocArrayPath,
    '{79D41413-42B3-449F-8959-DA04EE748C1B}' : IAcadAssocArrayPolar,
    '{AC93B51F-F467-4928-B094-03EA43B3A681}' : AcadAssocArrayPolar,
    '{A0D37AF5-3A72-4ACC-84DC-D815BE30FF65}' : IAcadAssocArrayRectangular,
    '{48E1D6AC-00B6-41DF-9A4F-26F4F47A8EE6}' : AcadAssocArrayRectangular,
    '{78F3EF1F-22D5-4BC8-A186-3CF45759F2DD}' : AcadExternalReference,
    '{92B86261-DA20-4A60-9982-05863C6D9EBE}' : AcadTable,
    '{5C5196BD-9E8D-4B23-A0CF-5FB8550456FD}' : IAcadTableCell,
    '{6336B61B-EFBF-4325-94FE-59D403CB0C76}' : AcadTableCell,
    '{5D0A1B18-A59B-402A-B66B-2E10E2BDAE65}' : AcadDimension,
    '{31463489-3D64-4BC7-85B1-0A1C6F0B2ABA}' : AcadDimAligned,
    '{8CBE37D9-7079-437A-A384-635D4A74A8D3}' : AcadDimAngular,
    '{A4E8085A-25F0-420B-A480-30ABAEF225C8}' : AcadDimDiametric,
    '{A6F7E215-803A-414A-A81D-6299DED292E4}' : AcadDimOrdinate,
    '{04A200E7-033D-4ECC-A9B1-806148A24763}' : AcadDimRadial,
    '{4D49A4C2-C908-4523-9E62-89B08B19CB1C}' : AcadDimRotated,
    '{348090AB-ECF8-4259-BFA3-45C7A91E30F6}' : AcadDim3PointAngular,
    '{2C817A8B-0B7D-4DE6-914A-B3A79F0665E4}' : AcadDimArcLength,
    '{599C859E-76AB-4A00-8A81-2A71506A3824}' : AcadDimRadialLarge,
    '{F7A4E90A-DB70-4175-833C-E9F927851832}' : AcadDictionary,
    '{A2F794C5-9ED5-49B6-A45B-1FB659497505}' : AcadView,
    '{30523308-F09B-4C74-A819-9AD14A4A943E}' : AcadToolbars,
    '{D6EE440D-BCFF-443C-960D-4F1DAC6D94F6}' : AcadToolbar,
    '{D2806DE9-1AFE-42DF-87AC-B0A855F9B891}' : AcadToolbarItem,
    '{B7BD1413-D044-4527-B229-ECC06EB76040}' : IAcadSecurityParams,
    '{D4903656-AC07-421A-8648-4804351E9DBE}' : AcadSecurityParams,
    '{1BAA42A6-463E-492D-BB53-0D4028148443}' : _IAcadScriptJetEvents,
    '{6BBD85F2-FBE1-414E-8A89-76379B9E2E4B}' : IAcadScriptJet,
    '{098976AB-EB69-4330-92C8-C8AC73822785}' : AcadScriptJet,
    '{0E92853F-5027-4A90-999C-118BC73FA6BA}' : AcadFileDependency,
    '{E6494613-3893-47A5-B0E7-B6AD41ADA6F4}' : AcadMLeader,
    '{75419B16-46F2-4245-A624-7819E87EEA8A}' : IAcadOle,
    '{ABA71980-3AA9-40F5-81A7-735886F6F6FD}' : AcadOle,
    '{D594DD08-3145-43F2-B9A9-D2DDAC0E0141}' : IAcadSubDMesh,
    '{73EBC89D-6A5A-4ED8-BC4D-2995DC879649}' : AcadSubDMesh,
    '{4A201B9C-6555-45ED-A3B5-9342F2F28D71}' : IAcadHelix,
    '{E817F271-E3BF-44E9-A481-C860D9D8CD13}' : AcadHelix,
    '{B894B727-442F-4560-B162-4AFD82F79E09}' : IAcadSection2,
    '{DCB0E3B7-B4A4-4D92-A3E8-C27BCAECBE8F}' : AcadSection,
    '{78A705C7-0B90-4FBC-AF7A-AFFAEDD2CC1F}' : IAcadUnderlay,
    '{7A486F98-18BC-424E-9D37-CD975EC3667F}' : AcadDgnUnderlay,
    '{8DF57FE7-CEDA-4730-9F54-C308ED442495}' : AcadPdfUnderlay,
    '{DCC7E463-86DB-4343-BD67-EB3E51A0B74F}' : IAcadDwfUnderlay,
    '{B8E04FA2-2C8E-4EAE-873C-9ECC978E1628}' : AcadDwfUnderlay,
    '{223679F5-6EE7-45C9-B778-E1B2A00D49B4}' : IAcadSurface,
    '{25D868BF-4CFD-4CB4-BC30-1A43AAF5F3E1}' : AcadSurface,
    '{FB90B93B-E0A9-43E8-A5F9-B79015C81B0E}' : IAcadExtrudedSurface,
    '{3865F4CA-2245-4517-9550-0FA5E5FC28F8}' : AcadExtrudedSurface,
    '{83049727-9881-4D4D-8E57-63C83CB0CC6E}' : IAcadLoftedSurface,
    '{3A949249-A2A7-412A-92FF-94D134EB3198}' : AcadLoftedSurface,
    '{D3A1F3D5-4942-4904-928D-910183FAD5B3}' : IAcadPlaneSurface,
    '{938953B2-646A-428C-895E-203B73B1B05A}' : AcadPlaneSurface,
    '{BC4B31D4-9595-43C1-8BC9-AC5F8003F179}' : IAcadRevolvedSurface,
    '{CA2C91D1-2D7B-4195-A66C-CFB788EFEB14}' : AcadRevolvedSurface,
    '{0EA16B8C-632D-4AC3-8B6F-FECEB9558A7D}' : IAcadSweptSurface,
    '{6997E39D-299C-45CC-95BC-A677AC0D1A62}' : AcadSweptSurface,
    '{6AB2CF34-6BE5-4E86-B1A7-BF6E8FC43E5E}' : IAcadCamera,
    '{0C8A268F-2F40-4D78-8582-E900CD39AAB7}' : AcadCamera,
    '{C45579D8-B271-461E-B658-F57BE7B1B4EB}' : IAcadLight,
    '{2B8F45C4-3CE8-482C-918E-ECD39EC2B86D}' : IAcadLight2,
    '{0370B70A-6C67-45FD-A247-B2457AEE6ABC}' : IAcadLight3,
    '{1441A79B-2C78-4568-8F3F-1D068ACFC6CD}' : AcadLight,
    '{1D3AF325-66DF-4CF6-B19F-1DCF053D75F9}' : IAcadIdPair,
    '{CDF39880-2237-4180-A675-1601037F78ED}' : AcadIdPair,
    '{FC6D298C-564D-4ACA-850F-3ADF1C01B6D9}' : IAcadLayerStateManager,
    '{B120B2EF-DD09-4935-94FE-CD57754907B1}' : AcadLayerStateManager,
    '{DEDB84CD-55C2-4F73-B534-7F06EBF8919F}' : IAcadSortentsTable,
    '{79C8B818-C544-46EE-BDCF-613095E6DA50}' : AcadSortentsTable,
    '{4EC5CAC3-22E8-4B42-BBA8-77271650DEA4}' : IAcadTableStyle,
    '{31B9FEC5-563C-464B-B180-5B5E4B530EDD}' : AcadTableStyle,
    '{1AAE5275-D7FE-47D0-9264-9BE6D9A4A9E4}' : IAcadArcAlignedText,
    '{BA03B2BE-41B3-40E6-A493-7F46CCD7CC05}' : AcadArcAlignedText,
    '{B4087378-9A1B-4996-B1C0-D3EAD492FA7A}' : IAcadNurbSurface,
    '{3C7846DC-43D5-44CD-B954-F941A0F85DE9}' : AcadNurbSurface,
    '{43DC153E-7BF6-43A8-96AC-C6788C702C9D}' : IAcadPointCloudEx,
    '{028BA451-EBBA-4529-8521-DBFB95EB745C}' : AcadPointCloudEx,
    '{30DA6F50-6158-43ED-97F7-E9B19E58BB1A}' : IGcPePropertyEditorColor,
    '{11E6CDE7-1304-488C-8790-3F7AAC891BF2}' : GcPePropertyEditorColor,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
    '{B1872638-6D18-482F-90BA-38086D17625F}' : 'IAcadApplication',
    '{9368AF30-60A3-47E3-A743-60D4C21FB580}' : 'IAcadDocument',
    '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}' : 'IAcadDatabase',
    '{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}' : 'IAcadModelSpace',
    '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}' : 'IAcadBlock',
    '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}' : 'IAcadObject',
    '{6CE21DA5-2896-4D63-9373-2EE672A00D41}' : 'IAcadDictionary',
    '{153C1376-952E-4696-94A0-F57364AA6836}' : 'IAcadXRecord',
    '{D78C594E-0412-4D7A-919A-2B6D1662D337}' : 'IAcadEntity',
    '{E38E7951-AB58-43F5-9B74-B473C5C6605B}' : 'IAcadAcCmColor',
    '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}' : 'IAcadHyperlinks',
    '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}' : 'IAcadHyperlink',
    '{46250F63-F4E2-4C99-A12B-0471714BC659}' : 'IAcad3DFace',
    '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}' : 'IAcadPolygonMesh',
    '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}' : 'IAcad3DPolyline',
    '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}' : 'IAcadArc',
    '{DB4711D4-33D9-408F-9E34-93A7F91248F2}' : 'IAcadAttribute',
    '{93102923-D2AD-4429-86B3-A09D589BF38F}' : 'IAcad3DSolid',
    '{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}' : 'IAcadRegion',
    '{70B267B4-5885-477C-BE74-F898EE7FE9EA}' : 'IAcadCircle',
    '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}' : 'IAcadDimAligned',
    '{6330AC5A-B41E-4E0F-A133-9AA84C9A4E94}' : 'IAcadDimension',
    '{78931DD8-09C7-44F5-9CB5-83198A8CD286}' : 'IAcadDimAngular',
    '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}' : 'IAcadDimDiametric',
    '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}' : 'IAcadDimRotated',
    '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}' : 'IAcadDimOrdinate',
    '{6070AA16-B13D-4B73-AA07-722C59BC09B5}' : 'IAcadDimRadial',
    '{21565C97-8E2E-442B-8F69-C9662BC89DCA}' : 'IAcadEllipse',
    '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}' : 'IAcadLeader',
    '{50FA2201-1260-4323-8C00-3EA7E36680B6}' : 'IAcadMText',
    '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}' : 'IAcadPoint',
    '{B32517C5-036E-4CB0-8538-66BD5FC625C4}' : 'IAcadLWPolyline',
    '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}' : 'IAcadPolyline',
    '{D05D772F-86F6-4B10-9898-E22BF8C5F192}' : 'IAcadRay',
    '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}' : 'IAcadShape',
    '{38D2992F-DF38-497F-9E2B-68D813057E8D}' : 'IAcadSolid',
    '{3D506D60-0138-48DD-8166-E5512E441206}' : 'IAcadSpline',
    '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}' : 'IAcadText',
    '{98D4741E-D869-4950-8B28-046B6884A084}' : 'IAcadTolerance',
    '{4253025F-5BC5-4D78-8D65-138D2DBED220}' : 'IAcadTrace',
    '{36494A5A-AADE-46F4-B87C-B213A2AF0083}' : 'IAcadXline',
    '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}' : 'IAcadBlockReference',
    '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}' : 'IAcadHatch',
    '{1A5BD135-D93B-4BFD-8027-E8277D629B46}' : 'IAcadRasterImage',
    '{EB1641A6-750D-49EB-A681-0BAEB77E7388}' : 'IAcadLine',
    '{F8AE8A77-1909-452A-95E8-0B833451FD4B}' : 'IAcadLayout',
    '{37A8DABC-FD78-4509-B9CA-396F4CC30472}' : 'IAcadPlotConfiguration',
    '{2EA3AB94-E461-4DDC-9B9B-894406F31256}' : 'IAcadMInsertBlock',
    '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}' : 'IAcadPolyfaceMesh',
    '{0DA73585-0488-4699-BCD2-AB0F5C91D404}' : 'IAcadMLine',
    '{EA05C039-0D70-4713-865B-71DF0B02F6CA}' : 'IAcadDim3PointAngular',
    '{29EB1F45-3E5E-41E2-B909-2EA909858B11}' : 'IAcadExternalReference',
    '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}' : 'IAcadTable',
    '{6BE0895F-AB23-4095-8180-0BBD8E790138}' : 'IAcadDimArcLength',
    '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}' : 'IAcadDimRadialLarge',
    '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}' : 'IAcadSection',
    '{AC4451F8-ED8E-42F0-B10D-1345A423FA33}' : 'IAcadSectionSettings',
    '{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}' : 'IAcadSectionTypeSettings',
    '{59898AB2-E779-4D7C-B77C-86E9E10B2226}' : 'IAcadMLeader',
    '{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}' : 'IAcadPaperSpace',
    '{E1366A0E-60BF-4E69-9728-D524EDF12C69}' : 'IAcadPViewport',
    '{DE1C99A1-811D-4F40-98A6-A17186C8779A}' : 'IAcadView',
    '{E69E9F83-F577-403C-8F69-7F5E86AB61F4}' : 'IAcadBlocks',
    '{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}' : 'IAcadGroups',
    '{4B02E349-191E-4736-BDE6-52C2D458E0F5}' : 'IAcadGroup',
    '{B6084632-4A92-45F4-B8F7-0A91824DADB5}' : 'IAcadDimStyles',
    '{88A65332-E185-46B4-9520-CA3305361E4B}' : 'IAcadDimStyle',
    '{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}' : 'IAcadLayers',
    '{369B3B72-01B7-4C1B-85C9-4E662705D76C}' : 'IAcadLayer',
    '{ED574116-AE18-4BB2-9628-1921C110F038}' : 'IAcadLineTypes',
    '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}' : 'IAcadLineType',
    '{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}' : 'IAcadDictionaries',
    '{FA985110-D0CB-4E62-AB01-2FE6027C7F05}' : 'IAcadRegisteredApplications',
    '{F0F9DD45-70ED-42C1-B4AC-562396361489}' : 'IAcadRegisteredApplication',
    '{F8425B37-BFCF-4290-8CA2-C718D3201829}' : 'IAcadTextStyles',
    '{703FE959-9B8D-4A91-A69A-844150619DF3}' : 'IAcadTextStyle',
    '{94DA139B-A285-4E3D-9E31-AA597FD909B0}' : 'IAcadUCSs',
    '{50B2A194-C469-4A57-B14A-BAFBA41A4039}' : 'IAcadUCS',
    '{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}' : 'IAcadViews',
    '{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}' : 'IAcadViewports',
    '{B2B6FB46-0162-4C09-9612-65371297D78F}' : 'IAcadViewport',
    '{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}' : 'IAcadLayouts',
    '{02242489-515A-4BDD-AC0C-E125FD1BE28C}' : 'IAcadPlotConfigurations',
    '{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}' : 'IAcadDatabasePreferences',
    '{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}' : 'IAcadFileDependencies',
    '{0CED4F33-C673-485D-AE75-54F88D10FA57}' : 'IAcadFileDependency',
    '{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}' : 'IAcadSummaryInfo',
    '{0340058F-D94E-429D-8199-A4ECFF677AC1}' : 'IAcadSectionManager',
    '{C42C4E52-02C7-441C-B0BA-16771B542EA5}' : 'IAcadMaterials',
    '{A7F84FAB-56C7-4437-9178-04441F062A4A}' : 'IAcadMaterial',
    '{E93528F4-F504-4E58-8560-C473AD8445A2}' : 'IAcadPlot',
    '{BA391ABB-844F-42A0-8F57-31EE00D0583A}' : 'IAcadSelectionSets',
    '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}' : 'IAcadSelectionSet',
    '{CE85BBED-B6CD-446F-B3F6-052465802DB6}' : 'IAcadUtility',
    '{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}' : 'IAcadPreferences',
    '{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}' : 'IAcadPreferencesFiles',
    '{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}' : 'IAcadPreferencesDisplay',
    '{97311A0B-4C28-4D80-8397-40FB3403AEF0}' : 'IAcadPreferencesOpenSave',
    '{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}' : 'IAcadPreferencesOutput',
    '{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}' : 'IAcadPreferencesSystem',
    '{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}' : 'IAcadPreferencesUser',
    '{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}' : 'IAcadPreferencesDrafting',
    '{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}' : 'IAcadPreferencesSelection',
    '{807758BB-F12D-4275-A52F-6A2CFCAD9A21}' : 'IAcadPreferencesProfiles',
    '{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}' : 'IAcadMenuGroups',
    '{72D027F2-CD79-4135-AE60-74FD0F8F595B}' : 'IAcadMenuGroup',
    '{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}' : 'IAcadPopupMenus',
    '{551A5349-4463-40E2-822C-D3A632409117}' : 'IAcadPopupMenu',
    '{2E00012D-0862-428C-B675-A88781D31934}' : 'IAcadPopupMenuItem',
    '{8095E3AB-7AB4-4915-A35A-11491F1B45D6}' : 'IAcadToolbars',
    '{EDE9142E-0923-4657-90F7-EB55FC56C99A}' : 'IAcadToolbar',
    '{72E4902E-AA1A-4F5D-8995-B06088CF363C}' : 'IAcadToolbarItem',
    '{87925C1E-ADEA-48BD-8BF1-239F9A116A81}' : 'IAcadMenuBar',
    '{31010F88-E412-4A4B-B482-B71D45D1A28A}' : 'IAcadDocuments',
    '{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}' : 'IAcadState',
    '{865CCF2C-B13D-48CB-9605-04E135F8FF30}' : 'IAcadMLeaderStyle',
    '{0552FF7C-E7C5-4890-984F-FD499B4B566F}' : 'IAcadShadowDisplay',
    '{017EAE27-EA30-4151-8272-BA072063C218}' : 'IAcadDynamicBlockReferenceProperty',
    '{183D30F5-55EB-4409-9FC8-06B66E6578FA}' : 'IAcadAttributeReference',
    '{F39B739A-A0E8-49C5-95B9-23F7C6496075}' : 'IAcadAssocArrayPath',
    '{79D41413-42B3-449F-8959-DA04EE748C1B}' : 'IAcadAssocArrayPolar',
    '{A0D37AF5-3A72-4ACC-84DC-D815BE30FF65}' : 'IAcadAssocArrayRectangular',
    '{5C5196BD-9E8D-4B23-A0CF-5FB8550456FD}' : 'IAcadTableCell',
    '{B7BD1413-D044-4527-B229-ECC06EB76040}' : 'IAcadSecurityParams',
    '{6BBD85F2-FBE1-414E-8A89-76379B9E2E4B}' : 'IAcadScriptJet',
    '{75419B16-46F2-4245-A624-7819E87EEA8A}' : 'IAcadOle',
    '{D594DD08-3145-43F2-B9A9-D2DDAC0E0141}' : 'IAcadSubDMesh',
    '{4A201B9C-6555-45ED-A3B5-9342F2F28D71}' : 'IAcadHelix',
    '{B894B727-442F-4560-B162-4AFD82F79E09}' : 'IAcadSection2',
    '{78A705C7-0B90-4FBC-AF7A-AFFAEDD2CC1F}' : 'IAcadUnderlay',
    '{DCC7E463-86DB-4343-BD67-EB3E51A0B74F}' : 'IAcadDwfUnderlay',
    '{223679F5-6EE7-45C9-B778-E1B2A00D49B4}' : 'IAcadSurface',
    '{FB90B93B-E0A9-43E8-A5F9-B79015C81B0E}' : 'IAcadExtrudedSurface',
    '{83049727-9881-4D4D-8E57-63C83CB0CC6E}' : 'IAcadLoftedSurface',
    '{D3A1F3D5-4942-4904-928D-910183FAD5B3}' : 'IAcadPlaneSurface',
    '{BC4B31D4-9595-43C1-8BC9-AC5F8003F179}' : 'IAcadRevolvedSurface',
    '{0EA16B8C-632D-4AC3-8B6F-FECEB9558A7D}' : 'IAcadSweptSurface',
    '{6AB2CF34-6BE5-4E86-B1A7-BF6E8FC43E5E}' : 'IAcadCamera',
    '{C45579D8-B271-461E-B658-F57BE7B1B4EB}' : 'IAcadLight',
    '{2B8F45C4-3CE8-482C-918E-ECD39EC2B86D}' : 'IAcadLight2',
    '{0370B70A-6C67-45FD-A247-B2457AEE6ABC}' : 'IAcadLight3',
    '{1D3AF325-66DF-4CF6-B19F-1DCF053D75F9}' : 'IAcadIdPair',
    '{FC6D298C-564D-4ACA-850F-3ADF1C01B6D9}' : 'IAcadLayerStateManager',
    '{DEDB84CD-55C2-4F73-B534-7F06EBF8919F}' : 'IAcadSortentsTable',
    '{4EC5CAC3-22E8-4B42-BBA8-77271650DEA4}' : 'IAcadTableStyle',
    '{1AAE5275-D7FE-47D0-9264-9BE6D9A4A9E4}' : 'IAcadArcAlignedText',
    '{B4087378-9A1B-4996-B1C0-D3EAD492FA7A}' : 'IAcadNurbSurface',
    '{43DC153E-7BF6-43A8-96AC-C6788C702C9D}' : 'IAcadPointCloudEx',
    '{30DA6F50-6158-43ED-97F7-E9B19E58BB1A}' : 'IGcPePropertyEditorColor',
}


NamesToIIDMap = {
    '_DAcadApplicationEvents' : '{330F7B9E-C93C-403D-807C-D92CB9698637}',
    'IAcadApplication' : '{B1872638-6D18-482F-90BA-38086D17625F}',
    'IAcadDocument' : '{9368AF30-60A3-47E3-A743-60D4C21FB580}',
    'IAcadDatabase' : '{A870B378-DB7F-4DA2-8E41-6E37B163A1C3}',
    'IAcadModelSpace' : '{2F4EF1D8-60BB-4737-8BD6-5B57A90E4C84}',
    'IAcadBlock' : '{DA8148BC-3A06-4ACF-844D-36DF63CDAD78}',
    'IAcadObject' : '{B0F45D84-478D-4E42-8261-0F0C89BE7E99}',
    'IAcadDictionary' : '{6CE21DA5-2896-4D63-9373-2EE672A00D41}',
    'IAcadXRecord' : '{153C1376-952E-4696-94A0-F57364AA6836}',
    'IAcadEntity' : '{D78C594E-0412-4D7A-919A-2B6D1662D337}',
    'IAcadAcCmColor' : '{E38E7951-AB58-43F5-9B74-B473C5C6605B}',
    'IAcadHyperlinks' : '{3B00FF4A-56D0-4CB2-8D6D-E1EB343ECBDE}',
    'IAcadHyperlink' : '{D1DF7DB6-95E1-4721-AE9D-0C668FB28825}',
    'IAcad3DFace' : '{46250F63-F4E2-4C99-A12B-0471714BC659}',
    'IAcadPolygonMesh' : '{A48E1718-9751-4ACD-BC5E-A247DAC5FC44}',
    'IAcad3DPolyline' : '{2D6B36AF-53ED-44A5-A97B-AD5C91872CF1}',
    'IAcadArc' : '{6D9FE1BB-5B25-41AA-A962-E55DE2B6210D}',
    'IAcadAttribute' : '{DB4711D4-33D9-408F-9E34-93A7F91248F2}',
    'IAcad3DSolid' : '{93102923-D2AD-4429-86B3-A09D589BF38F}',
    'IAcadRegion' : '{6B5D2248-E3ED-4807-8AFB-0CAA49BAF64A}',
    'IAcadCircle' : '{70B267B4-5885-477C-BE74-F898EE7FE9EA}',
    'IAcadDimAligned' : '{21E8F2DD-9EB3-4B41-AF26-1D32C67294B6}',
    'IAcadDimension' : '{6330AC5A-B41E-4E0F-A133-9AA84C9A4E94}',
    'IAcadDimAngular' : '{78931DD8-09C7-44F5-9CB5-83198A8CD286}',
    'IAcadDimDiametric' : '{CF7DAB54-2669-4E42-B5A5-297B0154CE04}',
    'IAcadDimRotated' : '{BFA28400-5AA8-4322-950A-CB92AD2EBCE5}',
    'IAcadDimOrdinate' : '{251DE54B-53EE-47A2-8A4F-53D2EE9E7C57}',
    'IAcadDimRadial' : '{6070AA16-B13D-4B73-AA07-722C59BC09B5}',
    'IAcadEllipse' : '{21565C97-8E2E-442B-8F69-C9662BC89DCA}',
    'IAcadLeader' : '{4E0C6FC4-8B82-40CA-A3BB-0C645F788048}',
    'IAcadMText' : '{50FA2201-1260-4323-8C00-3EA7E36680B6}',
    'IAcadPoint' : '{E2A6DDD8-204E-4A0B-9F0B-C27640B98B7A}',
    'IAcadLWPolyline' : '{B32517C5-036E-4CB0-8538-66BD5FC625C4}',
    'IAcadPolyline' : '{780E9428-D7F9-4F96-8E91-55C8F3CF3082}',
    'IAcadRay' : '{D05D772F-86F6-4B10-9898-E22BF8C5F192}',
    'IAcadShape' : '{850C5DB8-5052-4C0B-99B7-C0A385ECE85F}',
    'IAcadSolid' : '{38D2992F-DF38-497F-9E2B-68D813057E8D}',
    'IAcadSpline' : '{3D506D60-0138-48DD-8166-E5512E441206}',
    'IAcadText' : '{910CD144-7EC6-4BA5-9B63-AA6D8AEA3A6B}',
    'IAcadTolerance' : '{98D4741E-D869-4950-8B28-046B6884A084}',
    'IAcadTrace' : '{4253025F-5BC5-4D78-8D65-138D2DBED220}',
    'IAcadXline' : '{36494A5A-AADE-46F4-B87C-B213A2AF0083}',
    'IAcadBlockReference' : '{0E143589-AFCC-44FC-8000-4C8D44F80ED6}',
    'IAcadHatch' : '{78EEB562-92AD-4C9E-AE4B-BE3E73AEFE32}',
    'IAcadRasterImage' : '{1A5BD135-D93B-4BFD-8027-E8277D629B46}',
    'IAcadLine' : '{EB1641A6-750D-49EB-A681-0BAEB77E7388}',
    'IAcadLayout' : '{F8AE8A77-1909-452A-95E8-0B833451FD4B}',
    'IAcadPlotConfiguration' : '{37A8DABC-FD78-4509-B9CA-396F4CC30472}',
    'IAcadMInsertBlock' : '{2EA3AB94-E461-4DDC-9B9B-894406F31256}',
    'IAcadPolyfaceMesh' : '{FD4B5856-B661-4E10-8B79-1E793FDB0E50}',
    'IAcadMLine' : '{0DA73585-0488-4699-BCD2-AB0F5C91D404}',
    'IAcadDim3PointAngular' : '{EA05C039-0D70-4713-865B-71DF0B02F6CA}',
    'IAcadExternalReference' : '{29EB1F45-3E5E-41E2-B909-2EA909858B11}',
    'IAcadTable' : '{449C1C61-4BD2-445C-BA5E-ED97DF538B9D}',
    'IAcadDimArcLength' : '{6BE0895F-AB23-4095-8180-0BBD8E790138}',
    'IAcadDimRadialLarge' : '{E3D1CABD-C84B-49D2-9D47-984F880D33A2}',
    'IAcadSection' : '{13C9B549-488C-48B2-A7D1-9B299FEE3C22}',
    'IAcadSectionSettings' : '{AC4451F8-ED8E-42F0-B10D-1345A423FA33}',
    'IAcadSectionTypeSettings' : '{4ACE8AF8-EC50-438D-93BF-B5434CE6245B}',
    'IAcadMLeader' : '{59898AB2-E779-4D7C-B77C-86E9E10B2226}',
    'IAcadPaperSpace' : '{66FA50E9-6EB2-47CA-8EBA-7085C5E6C3A5}',
    'IAcadPViewport' : '{E1366A0E-60BF-4E69-9728-D524EDF12C69}',
    'IAcadView' : '{DE1C99A1-811D-4F40-98A6-A17186C8779A}',
    'IAcadBlocks' : '{E69E9F83-F577-403C-8F69-7F5E86AB61F4}',
    'IAcadGroups' : '{1AFDB2C1-88C9-4BEE-8F5E-F4661538F170}',
    'IAcadGroup' : '{4B02E349-191E-4736-BDE6-52C2D458E0F5}',
    'IAcadDimStyles' : '{B6084632-4A92-45F4-B8F7-0A91824DADB5}',
    'IAcadDimStyle' : '{88A65332-E185-46B4-9520-CA3305361E4B}',
    'IAcadLayers' : '{7A9DE5C4-4D94-42BC-87DB-3D85D953A128}',
    'IAcadLayer' : '{369B3B72-01B7-4C1B-85C9-4E662705D76C}',
    'IAcadLineTypes' : '{ED574116-AE18-4BB2-9628-1921C110F038}',
    'IAcadLineType' : '{39F82095-F5D0-4E82-8C15-483E1EA2DB2C}',
    'IAcadDictionaries' : '{7258BEDC-7CBD-4758-9F17-4ADC3C2C7C9E}',
    'IAcadRegisteredApplications' : '{FA985110-D0CB-4E62-AB01-2FE6027C7F05}',
    'IAcadRegisteredApplication' : '{F0F9DD45-70ED-42C1-B4AC-562396361489}',
    'IAcadTextStyles' : '{F8425B37-BFCF-4290-8CA2-C718D3201829}',
    'IAcadTextStyle' : '{703FE959-9B8D-4A91-A69A-844150619DF3}',
    'IAcadUCSs' : '{94DA139B-A285-4E3D-9E31-AA597FD909B0}',
    'IAcadUCS' : '{50B2A194-C469-4A57-B14A-BAFBA41A4039}',
    'IAcadViews' : '{9789FDA2-4DD1-44EA-8BC0-8B8B922EDE88}',
    'IAcadViewports' : '{EF5599E0-9D92-4DA2-A8B0-B3A5728E019C}',
    'IAcadViewport' : '{B2B6FB46-0162-4C09-9612-65371297D78F}',
    'IAcadLayouts' : '{3B4B6A63-85E6-463A-9F6F-D99D77C731E7}',
    'IAcadPlotConfigurations' : '{02242489-515A-4BDD-AC0C-E125FD1BE28C}',
    'IAcadDatabasePreferences' : '{A4F5877D-D0B7-46C3-A69B-0AB7B36531AB}',
    'IAcadFileDependencies' : '{96FC4DA6-19CF-4E4A-A256-406D1386FAB9}',
    'IAcadFileDependency' : '{0CED4F33-C673-485D-AE75-54F88D10FA57}',
    'IAcadSummaryInfo' : '{A40DB73E-ED88-4AA8-8886-5CC3F2E63868}',
    'IAcadSectionManager' : '{0340058F-D94E-429D-8199-A4ECFF677AC1}',
    'IAcadMaterials' : '{C42C4E52-02C7-441C-B0BA-16771B542EA5}',
    'IAcadMaterial' : '{A7F84FAB-56C7-4437-9178-04441F062A4A}',
    'IAcadPlot' : '{E93528F4-F504-4E58-8560-C473AD8445A2}',
    'IAcadSelectionSets' : '{BA391ABB-844F-42A0-8F57-31EE00D0583A}',
    'IAcadSelectionSet' : '{E7DEA163-B4F1-4DDF-A408-2A3989603B09}',
    'IAcadUtility' : '{CE85BBED-B6CD-446F-B3F6-052465802DB6}',
    'IAcadPreferences' : '{253889D2-ABBB-4DB6-AB75-00DCACCB59A5}',
    'IAcadPreferencesFiles' : '{39B8DED6-4AAA-4E2F-9EAF-4BBD930EFCED}',
    'IAcadPreferencesDisplay' : '{EFA91E4C-5304-45CC-AA56-F57F39D7FCCD}',
    'IAcadPreferencesOpenSave' : '{97311A0B-4C28-4D80-8397-40FB3403AEF0}',
    'IAcadPreferencesOutput' : '{FA0A2ECE-5E7C-46EF-ACCA-F2528C0C2566}',
    'IAcadPreferencesSystem' : '{51B2EDFB-066F-40E2-A298-D3DA4355BAE7}',
    'IAcadPreferencesUser' : '{AC90CA06-AABE-40DB-BE6B-D4C18C5BF232}',
    'IAcadPreferencesDrafting' : '{E4A0A141-99BD-44B8-9A4F-5B813BE85A68}',
    'IAcadPreferencesSelection' : '{CDCD600E-0299-4127-89C6-3C8FA33F7EBC}',
    'IAcadPreferencesProfiles' : '{807758BB-F12D-4275-A52F-6A2CFCAD9A21}',
    'IAcadMenuGroups' : '{1CB4149C-D49B-45BE-AEBC-D27A5B666A0B}',
    'IAcadMenuGroup' : '{72D027F2-CD79-4135-AE60-74FD0F8F595B}',
    'IAcadPopupMenus' : '{4B67342A-4DF3-450B-8E12-CF0A8B16DBC0}',
    'IAcadPopupMenu' : '{551A5349-4463-40E2-822C-D3A632409117}',
    'IAcadPopupMenuItem' : '{2E00012D-0862-428C-B675-A88781D31934}',
    'IAcadToolbars' : '{8095E3AB-7AB4-4915-A35A-11491F1B45D6}',
    'IAcadToolbar' : '{EDE9142E-0923-4657-90F7-EB55FC56C99A}',
    'IAcadToolbarItem' : '{72E4902E-AA1A-4F5D-8995-B06088CF363C}',
    'IAcadMenuBar' : '{87925C1E-ADEA-48BD-8BF1-239F9A116A81}',
    'IAcadDocuments' : '{31010F88-E412-4A4B-B482-B71D45D1A28A}',
    'IAcadState' : '{31E08BF4-3D9F-45DC-B456-D2A2CA16E126}',
    'IAcadObjectEvents' : '{41B85986-5004-4888-9E89-7895663FA77C}',
    'IAcadMLeaderStyle' : '{865CCF2C-B13D-48CB-9605-04E135F8FF30}',
    '_DAcadDocumentEvents' : '{2ABEE42C-D570-4DE3-874F-353204A47B63}',
    'IAcadDynamicBlockReferenceProperty' : '{017EAE27-EA30-4151-8272-BA072063C218}',
    'IAcadAttributeReference' : '{183D30F5-55EB-4409-9FC8-06B66E6578FA}',
    'IAcadAssocArrayPath' : '{F39B739A-A0E8-49C5-95B9-23F7C6496075}',
    'IAcadAssocArrayPolar' : '{79D41413-42B3-449F-8959-DA04EE748C1B}',
    'IAcadAssocArrayRectangular' : '{A0D37AF5-3A72-4ACC-84DC-D815BE30FF65}',
    'IAcadTableCell' : '{5C5196BD-9E8D-4B23-A0CF-5FB8550456FD}',
    'IAcadSecurityParams' : '{B7BD1413-D044-4527-B229-ECC06EB76040}',
    '_IAcadScriptJetEvents' : '{1BAA42A6-463E-492D-BB53-0D4028148443}',
    'IAcadScriptJet' : '{6BBD85F2-FBE1-414E-8A89-76379B9E2E4B}',
    'IAcadOle' : '{75419B16-46F2-4245-A624-7819E87EEA8A}',
    'IAcadSubDMesh' : '{D594DD08-3145-43F2-B9A9-D2DDAC0E0141}',
    'IAcadHelix' : '{4A201B9C-6555-45ED-A3B5-9342F2F28D71}',
    'IAcadSection2' : '{B894B727-442F-4560-B162-4AFD82F79E09}',
    'IAcadUnderlay' : '{78A705C7-0B90-4FBC-AF7A-AFFAEDD2CC1F}',
    'IAcadDwfUnderlay' : '{DCC7E463-86DB-4343-BD67-EB3E51A0B74F}',
    'IAcadSurface' : '{223679F5-6EE7-45C9-B778-E1B2A00D49B4}',
    'IAcadExtrudedSurface' : '{FB90B93B-E0A9-43E8-A5F9-B79015C81B0E}',
    'IAcadLoftedSurface' : '{83049727-9881-4D4D-8E57-63C83CB0CC6E}',
    'IAcadPlaneSurface' : '{D3A1F3D5-4942-4904-928D-910183FAD5B3}',
    'IAcadRevolvedSurface' : '{BC4B31D4-9595-43C1-8BC9-AC5F8003F179}',
    'IAcadSweptSurface' : '{0EA16B8C-632D-4AC3-8B6F-FECEB9558A7D}',
    'IAcadCamera' : '{6AB2CF34-6BE5-4E86-B1A7-BF6E8FC43E5E}',
    'IAcadLight' : '{C45579D8-B271-461E-B658-F57BE7B1B4EB}',
    'IAcadLight2' : '{2B8F45C4-3CE8-482C-918E-ECD39EC2B86D}',
    'IAcadLight3' : '{0370B70A-6C67-45FD-A247-B2457AEE6ABC}',
    'IAcadIdPair' : '{1D3AF325-66DF-4CF6-B19F-1DCF053D75F9}',
    'IAcadLayerStateManager' : '{FC6D298C-564D-4ACA-850F-3ADF1C01B6D9}',
    'IAcadSortentsTable' : '{DEDB84CD-55C2-4F73-B534-7F06EBF8919F}',
    'IAcadTableStyle' : '{4EC5CAC3-22E8-4B42-BBA8-77271650DEA4}',
    'IAcadArcAlignedText' : '{1AAE5275-D7FE-47D0-9264-9BE6D9A4A9E4}',
    'IAcadNurbSurface' : '{B4087378-9A1B-4996-B1C0-D3EAD492FA7A}',
    'IAcadPointCloudEx' : '{43DC153E-7BF6-43A8-96AC-C6788C702C9D}',
    'IGcPePropertyEditorColor' : '{30DA6F50-6158-43ED-97F7-E9B19E58BB1A}',
    'IAcadShadowDisplay' : '{0552FF7C-E7C5-4890-984F-FD499B4B566F}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

def getApp() -> IAcadApplication:
    iptr = Ap.Application.acadGetIDispatch()
    punk = pythoncom.ObjectFromAddress(iptr,pythoncom.IID_IDispatch)
    return win32com.client.Dispatch(punk, resultCLSID=AcadApplication.CLSID)

def createEventObject(obj, eventclass):
    win32com.client.WithEvents(obj,eventclass)