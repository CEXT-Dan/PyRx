# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.12.0 (tags/v3.12.0:0fb18b0, Oct  2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)]
# From type library 'axbricscaddb1.tlb'
# On Wed Dec  6 08:20:12 2023
'BricsCAD Db 24.0 Type Library (x64)'
makepy_version = '0.5.01'
python_version = 0x30c00f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch
import PyRx as Rx
import PyAp as Ap


# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{0449B457-98C6-4359-BD4A-2C3C292D9C48}')
MajorVersion = 24
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

def VTR8ArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_R8, __values)
    return __values

def VTI2ArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_I2, __values)
    return __values

def VTVARArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_VARIANT, __values)
    return __values

def VTDISPArrayOrVal(__values):
    if isinstance(__values, list) or isinstance(__values, tuple):
        return win32com.client.VARIANT(pythoncom.VT_ARRAY | pythoncom.VT_DISPATCH, __values)
    return __values

class constants:
    acCubicSpline3DPoly           =2          # from enum Ac3DPolylineType
    acQuadSpline3DPoly            =1          # from enum Ac3DPolylineType
    acSimple3DPoly                =0          # from enum Ac3DPolylineType
    acDemanLoadDisable            =0          # from enum AcARXDemandLoad
    acDemandLoadCmdInvoke         =2          # from enum AcARXDemandLoad
    acDemandLoadOnObjectDetect    =1          # from enum AcARXDemandLoad
    acModelSpace                  =1          # from enum AcActiveSpace
    acPaperSpace                  =0          # from enum AcActiveSpace
    acAlignmentAligned            =3          # from enum AcAlignment
    acAlignmentBottomCenter       =13         # from enum AcAlignment
    acAlignmentBottomLeft         =12         # from enum AcAlignment
    acAlignmentBottomRight        =14         # from enum AcAlignment
    acAlignmentCenter             =1          # from enum AcAlignment
    acAlignmentFit                =5          # from enum AcAlignment
    acAlignmentLeft               =0          # from enum AcAlignment
    acAlignmentMiddle             =4          # from enum AcAlignment
    acAlignmentMiddleCenter       =10         # from enum AcAlignment
    acAlignmentMiddleLeft         =9          # from enum AcAlignment
    acAlignmentMiddleRight        =11         # from enum AcAlignment
    acAlignmentRight              =2          # from enum AcAlignment
    acAlignmentTopCenter          =7          # from enum AcAlignment
    acAlignmentTopLeft            =6          # from enum AcAlignment
    acAlignmentTopRight           =8          # from enum AcAlignment
    acAlignPntAcquisitionAutomatic=0          # from enum AcAlignmentPointAcquisition
    acAlignPntAcquisitionShiftToAcquire=1          # from enum AcAlignmentPointAcquisition
    acDegreeMinuteSeconds         =1          # from enum AcAngleUnits
    acDegrees                     =0          # from enum AcAngleUnits
    acGrads                       =2          # from enum AcAngleUnits
    acRadians                     =3          # from enum AcAngleUnits
    acSurveyors                   =4          # from enum AcAngleUnits
    acAttachmentPointBottomCenter =8          # from enum AcAttachmentPoint
    acAttachmentPointBottomLeft   =7          # from enum AcAttachmentPoint
    acAttachmentPointBottomRight  =9          # from enum AcAttachmentPoint
    acAttachmentPointMiddleCenter =5          # from enum AcAttachmentPoint
    acAttachmentPointMiddleLeft   =4          # from enum AcAttachmentPoint
    acAttachmentPointMiddleRight  =6          # from enum AcAttachmentPoint
    acAttachmentPointTopCenter    =2          # from enum AcAttachmentPoint
    acAttachmentPointTopLeft      =1          # from enum AcAttachmentPoint
    acAttachmentPointTopRight     =3          # from enum AcAttachmentPoint
    acAttributeModeConstant       =2          # from enum AcAttributeMode
    acAttributeModeInvisible      =1          # from enum AcAttributeMode
    acAttributeModeLockPosition   =16         # from enum AcAttributeMode
    acAttributeModeMultipleLine   =32         # from enum AcAttributeMode
    acAttributeModeNormal         =0          # from enum AcAttributeMode
    acAttributeModePreset         =8          # from enum AcAttributeMode
    acAttributeModeVerify         =4          # from enum AcAttributeMode
    acConnectBase                 =1          # from enum AcBlockConnectionType
    acConnectExtents              =0          # from enum AcBlockConnectionType
    acAny                         =0          # from enum AcBlockScaling
    acUniform                     =1          # from enum AcBlockScaling
    acFalse                       =0          # from enum AcBoolean
    acTrue                        =1          # from enum AcBoolean
    acIntersection                =1          # from enum AcBooleanType
    acSubtraction                 =2          # from enum AcBooleanType
    acUnion                       =0          # from enum AcBooleanType
    acBottomCenter                =8          # from enum AcCellAlignment
    acBottomLeft                  =7          # from enum AcCellAlignment
    acBottomRight                 =9          # from enum AcCellAlignment
    acMiddleCenter                =5          # from enum AcCellAlignment
    acMiddleLeft                  =4          # from enum AcCellAlignment
    acMiddleRight                 =6          # from enum AcCellAlignment
    acTopCenter                   =2          # from enum AcCellAlignment
    acTopLeft                     =1          # from enum AcCellAlignment
    acTopRight                    =3          # from enum AcCellAlignment
    acCellContentLayoutFlow       =1          # from enum AcCellContentLayout
    acCellContentLayoutStackedHorizontal=2          # from enum AcCellContentLayout
    acCellContentLayoutStackedVertical=4          # from enum AcCellContentLayout
    acCellContentTypeBlock        =4          # from enum AcCellContentType
    acCellContentTypeField        =2          # from enum AcCellContentType
    acCellContentTypeUnknown      =0          # from enum AcCellContentType
    acCellContentTypeValue        =1          # from enum AcCellContentType
    acBottomMask                  =4          # from enum AcCellEdgeMask
    acLeftMask                    =8          # from enum AcCellEdgeMask
    acRightMask                   =2          # from enum AcCellEdgeMask
    acTopMask                     =1          # from enum AcCellEdgeMask
    acCellMarginBottom            =4          # from enum AcCellMargin
    acCellMarginHorzSpacing       =16         # from enum AcCellMargin
    acCellMarginLeft              =2          # from enum AcCellMargin
    acCellMarginRight             =8          # from enum AcCellMargin
    acCellMarginTop               =1          # from enum AcCellMargin
    acCellMarginVertSpacing       =32         # from enum AcCellMargin
    kCellOptionNone               =0          # from enum AcCellOption
    kInheritCellFormat            =1          # from enum AcCellOption
    acAlignmentProperty           =32         # from enum AcCellProperty
    acAllCellProperties           =524287     # from enum AcCellProperty
    acAutoScale                   =32768      # from enum AcCellProperty
    acBackgroundColor             =128        # from enum AcCellProperty
    acBitProperties               =245760     # from enum AcCellProperty
    acContentColor                =64         # from enum AcCellProperty
    acContentLayout               =262144     # from enum AcCellProperty
    acContentProperties           =33662      # from enum AcCellProperty
    acDataFormat                  =4          # from enum AcCellProperty
    acDataType                    =2          # from enum AcCellProperty
    acDataTypeAndFormat           =6          # from enum AcCellProperty
    acEnableBackgroundColor       =16384      # from enum AcCellProperty
    acFlowDirBtoT                 =131072     # from enum AcCellProperty
    acInvalidCellProperty         =0          # from enum AcCellProperty
    acLock                        =1          # from enum AcCellProperty
    acMarginBottom                =8192       # from enum AcCellProperty
    acMarginLeft                  =1024       # from enum AcCellProperty
    acMarginRight                 =4096       # from enum AcCellProperty
    acMarginTop                   =2048       # from enum AcCellProperty
    acMergeAll                    =65536      # from enum AcCellProperty
    acRotation                    =8          # from enum AcCellProperty
    acScale                       =16         # from enum AcCellProperty
    acTextHeight                  =512        # from enum AcCellProperty
    acTextStyle                   =256        # from enum AcCellProperty
    acCellStateContentLocked      =1          # from enum AcCellState
    acCellStateContentModified    =32         # from enum AcCellState
    acCellStateContentReadOnly    =2          # from enum AcCellState
    acCellStateFormatLocked       =4          # from enum AcCellState
    acCellStateFormatModified     =64         # from enum AcCellState
    acCellStateFormatReadOnly     =8          # from enum AcCellState
    acCellStateLinked             =16         # from enum AcCellState
    acCellStateNone               =0          # from enum AcCellState
    acBlockCell                   =2          # from enum AcCellType
    acTextCell                    =1          # from enum AcCellType
    acUnknownCell                 =0          # from enum AcCellType
    acBlue                        =5          # from enum AcColor
    acByBlock                     =0          # from enum AcColor
    acByLayer                     =256        # from enum AcColor
    acCyan                        =4          # from enum AcColor
    acGreen                       =3          # from enum AcColor
    acMagenta                     =6          # from enum AcColor
    acRed                         =1          # from enum AcColor
    acWhite                       =7          # from enum AcColor
    acYellow                      =2          # from enum AcColor
    acColorMethodByACI            =195        # from enum AcColorMethod
    acColorMethodByBlock          =193        # from enum AcColorMethod
    acColorMethodByLayer          =192        # from enum AcColorMethod
    acColorMethodByRGB            =194        # from enum AcColorMethod
    acColorMethodForeground       =197        # from enum AcColorMethod
    acDisplayDCS                  =2          # from enum AcCoordinateSystem
    acOCS                         =4          # from enum AcCoordinateSystem
    acPaperSpaceDCS               =3          # from enum AcCoordinateSystem
    acUCS                         =1          # from enum AcCoordinateSystem
    acWorld                       =0          # from enum AcCoordinateSystem
    acUpdateDataFromSource        =1          # from enum AcDataLinkUpdateDirection
    acUpdateSourceFromData        =2          # from enum AcDataLinkUpdateDirection
    acUpdateOptionIncludeXrefs    =1048576    # from enum AcDataLinkUpdateOption
    acUpdateOptionNone            =0          # from enum AcDataLinkUpdateOption
    acUpdateOptionOverwriteContentModifiedAfterUpdate=131072     # from enum AcDataLinkUpdateOption
    acUpdateOptionOverwriteFormatModifiedAfterUpdate=262144     # from enum AcDataLinkUpdateOption
    acUpdateOptionUpdateFullSourceRange=524288     # from enum AcDataLinkUpdateOption
    acSymAbove                    =1          # from enum AcDimArcLengthSymbol
    acSymInFront                  =0          # from enum AcDimArcLengthSymbol
    acSymNone                     =2          # from enum AcDimArcLengthSymbol
    acArrowArchTick               =4          # from enum AcDimArrowheadType
    acArrowBoxBlank               =14         # from enum AcDimArrowheadType
    acArrowBoxFilled              =15         # from enum AcDimArrowheadType
    acArrowClosed                 =2          # from enum AcDimArrowheadType
    acArrowClosedBlank            =1          # from enum AcDimArrowheadType
    acArrowDatumBlank             =16         # from enum AcDimArrowheadType
    acArrowDatumFilled            =17         # from enum AcDimArrowheadType
    acArrowDefault                =0          # from enum AcDimArrowheadType
    acArrowDot                    =3          # from enum AcDimArrowheadType
    acArrowDotBlank               =12         # from enum AcDimArrowheadType
    acArrowDotSmall               =11         # from enum AcDimArrowheadType
    acArrowIntegral               =18         # from enum AcDimArrowheadType
    acArrowNone                   =19         # from enum AcDimArrowheadType
    acArrowOblique                =5          # from enum AcDimArrowheadType
    acArrowOpen                   =6          # from enum AcDimArrowheadType
    acArrowOpen30                 =10         # from enum AcDimArrowheadType
    acArrowOpen90                 =9          # from enum AcDimArrowheadType
    acArrowOrigin                 =7          # from enum AcDimArrowheadType
    acArrowOrigin2                =8          # from enum AcDimArrowheadType
    acArrowSmall                  =13         # from enum AcDimArrowheadType
    acArrowUserDefined            =20         # from enum AcDimArrowheadType
    acCenterLine                  =1          # from enum AcDimCenterType
    acCenterMark                  =0          # from enum AcDimCenterType
    acCenterNone                  =2          # from enum AcDimCenterType
    acArrowsOnly                  =1          # from enum AcDimFit
    acBestFit                     =3          # from enum AcDimFit
    acTextAndArrows               =0          # from enum AcDimFit
    acTextOnly                    =2          # from enum AcDimFit
    acDiagonal                    =1          # from enum AcDimFractionType
    acHorizontal                  =0          # from enum AcDimFractionType
    acNotStacked                  =2          # from enum AcDimFractionType
    acFirstExtensionLine          =1          # from enum AcDimHorizontalJustification
    acHorzCentered                =0          # from enum AcDimHorizontalJustification
    acOverFirstExtension          =3          # from enum AcDimHorizontalJustification
    acOverSecondExtension         =4          # from enum AcDimHorizontalJustification
    acSecondExtensionLine         =2          # from enum AcDimHorizontalJustification
    acDimLArchitectural           =4          # from enum AcDimLUnits
    acDimLDecimal                 =2          # from enum AcDimLUnits
    acDimLEngineering             =3          # from enum AcDimLUnits
    acDimLFractional              =5          # from enum AcDimLUnits
    acDimLScientific              =1          # from enum AcDimLUnits
    acDimLWindowsDesktop          =6          # from enum AcDimLUnits
    acDimPrecisionEight           =8          # from enum AcDimPrecision
    acDimPrecisionFive            =5          # from enum AcDimPrecision
    acDimPrecisionFour            =4          # from enum AcDimPrecision
    acDimPrecisionOne             =1          # from enum AcDimPrecision
    acDimPrecisionSeven           =7          # from enum AcDimPrecision
    acDimPrecisionSix             =6          # from enum AcDimPrecision
    acDimPrecisionThree           =3          # from enum AcDimPrecision
    acDimPrecisionTwo             =2          # from enum AcDimPrecision
    acDimPrecisionZero            =0          # from enum AcDimPrecision
    acDimLineWithText             =0          # from enum AcDimTextMovement
    acMoveTextAddLeader           =1          # from enum AcDimTextMovement
    acMoveTextNoLeader            =2          # from enum AcDimTextMovement
    acTolBottom                   =0          # from enum AcDimToleranceJustify
    acTolMiddle                   =1          # from enum AcDimToleranceJustify
    acTolTop                      =2          # from enum AcDimToleranceJustify
    acTolBasic                    =4          # from enum AcDimToleranceMethod
    acTolDeviation                =2          # from enum AcDimToleranceMethod
    acTolLimits                   =3          # from enum AcDimToleranceMethod
    acTolNone                     =0          # from enum AcDimToleranceMethod
    acTolSymmetrical              =1          # from enum AcDimToleranceMethod
    acDimArchitectural            =6          # from enum AcDimUnits
    acDimArchitecturalStacked     =4          # from enum AcDimUnits
    acDimDecimal                  =2          # from enum AcDimUnits
    acDimEngineering              =3          # from enum AcDimUnits
    acDimFractional               =7          # from enum AcDimUnits
    acDimFractionalStacked        =5          # from enum AcDimUnits
    acDimScientific               =1          # from enum AcDimUnits
    acDimWindowsDesktop           =8          # from enum AcDimUnits
    acAbove                       =1          # from enum AcDimVerticalJustification
    acJIS                         =3          # from enum AcDimVerticalJustification
    acOutside                     =2          # from enum AcDimVerticalJustification
    acUnder                       =4          # from enum AcDimVerticalJustification
    acVertCentered                =0          # from enum AcDimVerticalJustification
    acDragDisplayAutomatically    =2          # from enum AcDragDisplayMode
    acDragDisplayOnRequest        =1          # from enum AcDragDisplayMode
    acDragDoNotDisplay            =0          # from enum AcDragDisplayMode
    acDrawLeaderHeadFirst         =0          # from enum AcDrawLeaderOrderType
    acDrawLeaderTailFirst         =1          # from enum AcDrawLeaderOrderType
    acDrawContentFirst            =0          # from enum AcDrawMLeaderOrderType
    acDrawLeaderFirst             =1          # from enum AcDrawMLeaderOrderType
    acEnableSCM                   =2          # from enum AcDrawingAreaSCMCommand
    acEnableSCMOptions            =1          # from enum AcDrawingAreaSCMCommand
    acEnter                       =0          # from enum AcDrawingAreaSCMCommand
    acRepeatLastCommand           =0          # from enum AcDrawingAreaSCMDefault
    acSCM                         =1          # from enum AcDrawingAreaSCMDefault
    acEdRepeatLastCommand         =0          # from enum AcDrawingAreaSCMEdit
    acEdSCM                       =1          # from enum AcDrawingAreaSCMEdit
    acNoDrawingAreaShortCutMenu   =0          # from enum AcDrawingAreaShortCutMenu
    acUseDefaultDrawingAreaShortCutMenu=1          # from enum AcDrawingAreaShortCutMenu
    acBottomToTop                 =4          # from enum AcDrawingDirection
    acByStyle                     =5          # from enum AcDrawingDirection
    acLeftToRight                 =1          # from enum AcDrawingDirection
    acRightToLeft                 =2          # from enum AcDrawingDirection
    acTopToBottom                 =3          # from enum AcDrawingDirection
    acAngular                     =1          # from enum AcDynamicBlockReferencePropertyUnitsType
    acArea                        =3          # from enum AcDynamicBlockReferencePropertyUnitsType
    acDistance                    =2          # from enum AcDynamicBlockReferencePropertyUnitsType
    acNoUnits                     =0          # from enum AcDynamicBlockReferencePropertyUnitsType
    ac3dFace                      =1          # from enum AcEntityName
    ac3dPolyline                  =2          # from enum AcEntityName
    ac3dSolid                     =3          # from enum AcEntityName
    acArc                         =4          # from enum AcEntityName
    acAttribute                   =5          # from enum AcEntityName
    acAttributeReference          =6          # from enum AcEntityName
    acBlockReference              =7          # from enum AcEntityName
    acCircle                      =8          # from enum AcEntityName
    acDgnUnderlay                 =47         # from enum AcEntityName
    acDim3PointAngular            =41         # from enum AcEntityName
    acDimAligned                  =9          # from enum AcEntityName
    acDimAngular                  =10         # from enum AcEntityName
    acDimArcLength                =44         # from enum AcEntityName
    acDimDiametric                =12         # from enum AcEntityName
    acDimOrdinate                 =13         # from enum AcEntityName
    acDimRadial                   =14         # from enum AcEntityName
    acDimRadialLarge              =45         # from enum AcEntityName
    acDimRotated                  =15         # from enum AcEntityName
    acDwfUnderlay                 =46         # from enum AcEntityName
    acEllipse                     =16         # from enum AcEntityName
    acExternalReference           =42         # from enum AcEntityName
    acGroup                       =37         # from enum AcEntityName
    acHatch                       =17         # from enum AcEntityName
    acLeader                      =18         # from enum AcEntityName
    acLine                        =19         # from enum AcEntityName
    acMInsertBlock                =38         # from enum AcEntityName
    acMLeader                     =48         # from enum AcEntityName
    acMLine                       =40         # from enum AcEntityName
    acMtext                       =21         # from enum AcEntityName
    acPViewport                   =35         # from enum AcEntityName
    acPdfUnderlay                 =50         # from enum AcEntityName
    acPoint                       =22         # from enum AcEntityName
    acPolyfaceMesh                =39         # from enum AcEntityName
    acPolyline                    =23         # from enum AcEntityName
    acPolylineLight               =24         # from enum AcEntityName
    acPolymesh                    =25         # from enum AcEntityName
    acRaster                      =26         # from enum AcEntityName
    acRay                         =27         # from enum AcEntityName
    acRegion                      =28         # from enum AcEntityName
    acShape                       =29         # from enum AcEntityName
    acSolid                       =30         # from enum AcEntityName
    acSpline                      =31         # from enum AcEntityName
    acSubDMesh                    =49         # from enum AcEntityName
    acTable                       =43         # from enum AcEntityName
    acText                        =32         # from enum AcEntityName
    acTolerance                   =33         # from enum AcEntityName
    acTrace                       =34         # from enum AcEntityName
    acXline                       =36         # from enum AcEntityName
    acExtendBoth                  =3          # from enum AcExtendOption
    acExtendNone                  =0          # from enum AcExtendOption
    acExtendOtherEntity           =2          # from enum AcExtendOption
    acExtendThisEntity            =1          # from enum AcExtendOption
    acForEditing                  =1          # from enum AcFormatOption
    acForExpression               =2          # from enum AcFormatOption
    acIgnoreMtextFormat           =8          # from enum AcFormatOption
    acUseMaximumPrecision         =4          # from enum AcFormatOption
    kFormatOptionNone             =0          # from enum AcFormatOption
    acPreDefinedGradient          =0          # from enum AcGradientPatternType
    acUserDefinedGradient         =1          # from enum AcGradientPatternType
    acGridLineStyleDouble         =2          # from enum AcGridLineStyle
    acGridLineStyleSingle         =1          # from enum AcGridLineStyle
    acHorzBottom                  =4          # from enum AcGridLineType
    acHorzInside                  =2          # from enum AcGridLineType
    acHorzTop                     =1          # from enum AcGridLineType
    acInvalidGridLine             =0          # from enum AcGridLineType
    acVertInside                  =16         # from enum AcGridLineType
    acVertLeft                    =8          # from enum AcGridLineType
    acVertRight                   =32         # from enum AcGridLineType
    acGradientObject              =1          # from enum AcHatchObjectType
    acHatchObject                 =0          # from enum AcHatchObjectType
    acHatchStyleIgnore            =2          # from enum AcHatchStyle
    acHatchStyleNormal            =0          # from enum AcHatchStyle
    acHatchStyleOuter             =1          # from enum AcHatchStyle
    acHeight                      =2          # from enum AcHelixConstrainType
    acTurnHeight                  =0          # from enum AcHelixConstrainType
    acTurns                       =1          # from enum AcHelixConstrainType
    acCCW                         =0          # from enum AcHelixTwistType
    acCW                          =1          # from enum AcHelixTwistType
    acHorizontalAlignmentAligned  =3          # from enum AcHorizontalAlignment
    acHorizontalAlignmentCenter   =1          # from enum AcHorizontalAlignment
    acHorizontalAlignmentFit      =5          # from enum AcHorizontalAlignment
    acHorizontalAlignmentLeft     =0          # from enum AcHorizontalAlignment
    acHorizontalAlignmentMiddle   =4          # from enum AcHorizontalAlignment
    acHorizontalAlignmentRight    =2          # from enum AcHorizontalAlignment
    acPenWidth013                 =13         # from enum AcISOPenWidth
    acPenWidth018                 =18         # from enum AcISOPenWidth
    acPenWidth025                 =25         # from enum AcISOPenWidth
    acPenWidth035                 =35         # from enum AcISOPenWidth
    acPenWidth050                 =50         # from enum AcISOPenWidth
    acPenWidth070                 =70         # from enum AcISOPenWidth
    acPenWidth100                 =100        # from enum AcISOPenWidth
    acPenWidth140                 =140        # from enum AcISOPenWidth
    acPenWidth200                 =200        # from enum AcISOPenWidth
    acPenWidthUnk                 =-1         # from enum AcISOPenWidth
    acInsertUnitsAngstroms        =11         # from enum AcInsertUnits
    acInsertUnitsAstronomicalUnits=18         # from enum AcInsertUnits
    acInsertUnitsCentimeters      =5          # from enum AcInsertUnits
    acInsertUnitsDecameters       =15         # from enum AcInsertUnits
    acInsertUnitsDecimeters       =14         # from enum AcInsertUnits
    acInsertUnitsFeet             =2          # from enum AcInsertUnits
    acInsertUnitsGigameters       =17         # from enum AcInsertUnits
    acInsertUnitsHectometers      =16         # from enum AcInsertUnits
    acInsertUnitsInches           =1          # from enum AcInsertUnits
    acInsertUnitsKilometers       =7          # from enum AcInsertUnits
    acInsertUnitsLightYears       =19         # from enum AcInsertUnits
    acInsertUnitsMeters           =6          # from enum AcInsertUnits
    acInsertUnitsMicroinches      =8          # from enum AcInsertUnits
    acInsertUnitsMicrons          =13         # from enum AcInsertUnits
    acInsertUnitsMiles            =3          # from enum AcInsertUnits
    acInsertUnitsMillimeters      =4          # from enum AcInsertUnits
    acInsertUnitsMils             =9          # from enum AcInsertUnits
    acInsertUnitsNanometers       =12         # from enum AcInsertUnits
    acInsertUnitsParsecs          =20         # from enum AcInsertUnits
    acInsertUnitsUSSurveyFeet     =21         # from enum AcInsertUnits
    acInsertUnitsUSSurveyInch     =22         # from enum AcInsertUnits
    acInsertUnitsUSSurveyMile     =24         # from enum AcInsertUnits
    acInsertUnitsUSSurveyYard     =23         # from enum AcInsertUnits
    acInsertUnitsUnitless         =0          # from enum AcInsertUnits
    acInsertUnitsYards            =10         # from enum AcInsertUnits
    acInsertUnitsAutoAssign       =1          # from enum AcInsertUnitsAction
    acInsertUnitsPrompt           =0          # from enum AcInsertUnitsAction
    acPreferenceClassic           =0          # from enum AcKeyboardAccelerator
    acPreferenceCustom            =1          # from enum AcKeyboardAccelerator
    acKeyboardEntry               =1          # from enum AcKeyboardPriority
    acKeyboardEntryExceptScripts  =2          # from enum AcKeyboardPriority
    acKeyboardRunningObjSnap      =0          # from enum AcKeyboardPriority
    acLineNoArrow                 =0          # from enum AcLeaderType
    acLineWithArrow               =2          # from enum AcLeaderType
    acSplineNoArrow               =1          # from enum AcLeaderType
    acSplineWithArrow             =3          # from enum AcLeaderType
    acLineSpacingStyleAtLeast     =1          # from enum AcLineSpacingStyle
    acLineSpacingStyleExactly     =2          # from enum AcLineSpacingStyle
    acLnWt000                     =0          # from enum AcLineWeight
    acLnWt005                     =5          # from enum AcLineWeight
    acLnWt009                     =9          # from enum AcLineWeight
    acLnWt013                     =13         # from enum AcLineWeight
    acLnWt015                     =15         # from enum AcLineWeight
    acLnWt018                     =18         # from enum AcLineWeight
    acLnWt020                     =20         # from enum AcLineWeight
    acLnWt025                     =25         # from enum AcLineWeight
    acLnWt030                     =30         # from enum AcLineWeight
    acLnWt035                     =35         # from enum AcLineWeight
    acLnWt040                     =40         # from enum AcLineWeight
    acLnWt050                     =50         # from enum AcLineWeight
    acLnWt053                     =53         # from enum AcLineWeight
    acLnWt060                     =60         # from enum AcLineWeight
    acLnWt070                     =70         # from enum AcLineWeight
    acLnWt080                     =80         # from enum AcLineWeight
    acLnWt090                     =90         # from enum AcLineWeight
    acLnWt100                     =100        # from enum AcLineWeight
    acLnWt106                     =106        # from enum AcLineWeight
    acLnWt120                     =120        # from enum AcLineWeight
    acLnWt140                     =140        # from enum AcLineWeight
    acLnWt158                     =158        # from enum AcLineWeight
    acLnWt200                     =200        # from enum AcLineWeight
    acLnWt211                     =211        # from enum AcLineWeight
    acLnWtByBlock                 =-2         # from enum AcLineWeight
    acLnWtByLayer                 =-1         # from enum AcLineWeight
    acLnWtByLwDefault             =-3         # from enum AcLineWeight
    acPaletteByDrawing            =0          # from enum AcLoadPalette
    acPaletteBySession            =1          # from enum AcLoadPalette
    acAllNormal                   =5          # from enum AcLoftedSurfaceNormalType
    acEndsNormal                  =4          # from enum AcLoftedSurfaceNormalType
    acFirstNormal                 =2          # from enum AcLoftedSurfaceNormalType
    acLastNormal                  =3          # from enum AcLoftedSurfaceNormalType
    acRuled                       =0          # from enum AcLoftedSurfaceNormalType
    acSmooth                      =1          # from enum AcLoftedSurfaceNormalType
    acUseDraftAngles              =6          # from enum AcLoftedSurfaceNormalType
    acHatchLoopTypeDefault        =0          # from enum AcLoopType
    acHatchLoopTypeDerived        =4          # from enum AcLoopType
    acHatchLoopTypeExternal       =1          # from enum AcLoopType
    acHatchLoopTypePolyline       =2          # from enum AcLoopType
    acHatchLoopTypeTextbox        =8          # from enum AcLoopType
    acBlockContent                =1          # from enum AcMLeaderContentType
    acMTextContent                =2          # from enum AcMLeaderContentType
    acNoneContent                 =0          # from enum AcMLeaderContentType
    acInVisibleLeader             =0          # from enum AcMLeaderType
    acSplineLeader                =2          # from enum AcMLeaderType
    acStraightLeader              =1          # from enum AcMLeaderType
    acBottom                      =2          # from enum AcMLineJustification
    acTop                         =0          # from enum AcMLineJustification
    acZero                        =1          # from enum AcMLineJustification
    acEnglish                     =0          # from enum AcMeasurementUnits
    acMetric                      =1          # from enum AcMeasurementUnits
    acMenuFileCompiled            =0          # from enum AcMenuFileType
    acMenuFileSource              =1          # from enum AcMenuFileType
    acBaseMenuGroup               =0          # from enum AcMenuGroupType
    acPartialMenuGroup            =1          # from enum AcMenuGroupType
    acMenuItem                    =0          # from enum AcMenuItemType
    acMenuSeparator               =1          # from enum AcMenuItemType
    acMenuSubMenu                 =2          # from enum AcMenuItemType
    acMergeCellStyleConvertDuplicatesToOverrides=4          # from enum AcMergeCellStyleOption
    acMergeCellStyleCopyDuplicates=1          # from enum AcMergeCellStyleOption
    acMergeCellStyleIgnoreNewStyles=8          # from enum AcMergeCellStyleOption
    acMergeCellStyleNone          =0          # from enum AcMergeCellStyleOption
    acMergeCellStyleOverwriteDuplicates=2          # from enum AcMergeCellStyleOption
    acAlwaysCrease                =1          # from enum AcMeshCreaseType
    acCreaseByLevel               =2          # from enum AcMeshCreaseType
    acNoneCrease                  =0          # from enum AcMeshCreaseType
    acOPQHighGraphics             =2          # from enum AcOlePlotQuality
    acOPQLowGraphics              =1          # from enum AcOlePlotQuality
    acOPQMonochrome               =0          # from enum AcOlePlotQuality
    acOQGraphics                  =2          # from enum AcOleQuality
    acOQHighPhoto                 =4          # from enum AcOleQuality
    acOQLineArt                   =0          # from enum AcOleQuality
    acOQPhoto                     =3          # from enum AcOleQuality
    acOQText                      =1          # from enum AcOleQuality
    acOTEmbedded                  =2          # from enum AcOleType
    acOTLink                      =1          # from enum AcOleType
    acOTStatic                    =3          # from enum AcOleType
    acOff                         =0          # from enum AcOnOff
    acOn                          =1          # from enum AcOnOff
    acParseOptionNone             =0          # from enum AcParseOption
    acPreserveMtextFormat         =2          # from enum AcParseOption
    acSetDefaultFormat            =1          # from enum AcParseOption
    acHatchPatternTypeCustomDefined=2          # from enum AcPatternType
    acHatchPatternTypePreDefined  =1          # from enum AcPatternType
    acHatchPatternTypeUserDefined =0          # from enum AcPatternType
    acPlotOrientationLandscape    =1          # from enum AcPlotOrientation
    acPlotOrientationPortrait     =0          # from enum AcPlotOrientation
    acInches                      =0          # from enum AcPlotPaperUnits
    acMillimeters                 =1          # from enum AcPlotPaperUnits
    acPixels                      =2          # from enum AcPlotPaperUnits
    acPolicyLegacy                =1          # from enum AcPlotPolicy
    acPolicyNamed                 =0          # from enum AcPlotPolicy
    acPolicyLegacyDefault         =0          # from enum AcPlotPolicyForLegacyDwgs
    acPolicyLegacyLegacy          =2          # from enum AcPlotPolicyForLegacyDwgs
    acPolicyLegacyQuery           =1          # from enum AcPlotPolicyForLegacyDwgs
    acPolicyNewDefault            =0          # from enum AcPlotPolicyForNewDwgs
    acPolicyNewLegacy             =1          # from enum AcPlotPolicyForNewDwgs
    ac0degrees                    =0          # from enum AcPlotRotation
    ac180degrees                  =2          # from enum AcPlotRotation
    ac270degrees                  =3          # from enum AcPlotRotation
    ac90degrees                   =1          # from enum AcPlotRotation
    ac100_1                       =32         # from enum AcPlotScale
    ac10_1                        =31         # from enum AcPlotScale
    ac1_1                         =16         # from enum AcPlotScale
    ac1_10                        =21         # from enum AcPlotScale
    ac1_100                       =27         # from enum AcPlotScale
    ac1_128in_1ft                 =1          # from enum AcPlotScale
    ac1_16                        =22         # from enum AcPlotScale
    ac1_16in_1ft                  =4          # from enum AcPlotScale
    ac1_2                         =17         # from enum AcPlotScale
    ac1_20                        =23         # from enum AcPlotScale
    ac1_2in_1ft                   =10         # from enum AcPlotScale
    ac1_30                        =24         # from enum AcPlotScale
    ac1_32in_1ft                  =3          # from enum AcPlotScale
    ac1_4                         =18         # from enum AcPlotScale
    ac1_40                        =25         # from enum AcPlotScale
    ac1_4in_1ft                   =8          # from enum AcPlotScale
    ac1_5                         =19         # from enum AcPlotScale
    ac1_50                        =26         # from enum AcPlotScale
    ac1_64in_1ft                  =2          # from enum AcPlotScale
    ac1_8                         =20         # from enum AcPlotScale
    ac1_8in_1ft                   =6          # from enum AcPlotScale
    ac1ft_1ft                     =15         # from enum AcPlotScale
    ac1in_1ft                     =12         # from enum AcPlotScale
    ac2_1                         =28         # from enum AcPlotScale
    ac3_16in_1ft                  =7          # from enum AcPlotScale
    ac3_32in_1ft                  =5          # from enum AcPlotScale
    ac3_4in_1ft                   =11         # from enum AcPlotScale
    ac3_8in_1ft                   =9          # from enum AcPlotScale
    ac3in_1ft                     =13         # from enum AcPlotScale
    ac4_1                         =29         # from enum AcPlotScale
    ac6in_1ft                     =14         # from enum AcPlotScale
    ac8_1                         =30         # from enum AcPlotScale
    acScaleToFit                  =0          # from enum AcPlotScale
    acDisplay                     =0          # from enum AcPlotType
    acExtents                     =1          # from enum AcPlotType
    acLayout                      =5          # from enum AcPlotType
    acLimits                      =2          # from enum AcPlotType
    acView                        =3          # from enum AcPlotType
    acWindow                      =4          # from enum AcPlotType
    acCubicSplinePoly             =3          # from enum AcPolylineType
    acFitCurvePoly                =1          # from enum AcPolylineType
    acQuadSplinePoly              =2          # from enum AcPolylineType
    acSimplePoly                  =0          # from enum AcPolylineType
    acBezierSurfaceMesh           =8          # from enum AcPolymeshType
    acCubicSurfaceMesh            =6          # from enum AcPolymeshType
    acQuadSurfaceMesh             =5          # from enum AcPolymeshType
    acSimpleMesh                  =0          # from enum AcPolymeshType
    acBlockBox                    =3          # from enum AcPredefBlockType
    acBlockCircle                 =2          # from enum AcPredefBlockType
    acBlockHexagon                =4          # from enum AcPredefBlockType
    acBlockImperial               =0          # from enum AcPredefBlockType
    acBlockSlot                   =1          # from enum AcPredefBlockType
    acBlockTriangle               =5          # from enum AcPredefBlockType
    acBlockUserDefined            =6          # from enum AcPredefBlockType
    acFullPreview                 =1          # from enum AcPreviewMode
    acPartialPreview              =0          # from enum AcPreviewMode
    acPrinterAlertOnce            =1          # from enum AcPrinterSpoolAlert
    acPrinterAlwaysAlert          =0          # from enum AcPrinterSpoolAlert
    acPrinterNeverAlert           =3          # from enum AcPrinterSpoolAlert
    acPrinterNeverAlertLogOnce    =2          # from enum AcPrinterSpoolAlert
    acProxyBoundingBox            =2          # from enum AcProxyImage
    acProxyNotShow                =0          # from enum AcProxyImage
    acProxyShow                   =1          # from enum AcProxyImage
    acActiveViewport              =0          # from enum AcRegenType
    acAllViewports                =1          # from enum AcRegenType
    acDegrees000                  =0          # from enum AcRotationAngle
    acDegrees090                  =1          # from enum AcRotationAngle
    acDegrees180                  =2          # from enum AcRotationAngle
    acDegrees270                  =3          # from enum AcRotationAngle
    acDegreesUnknown              =-1         # from enum AcRotationAngle
    acDataRow                     =1          # from enum AcRowType
    acHeaderRow                   =4          # from enum AcRowType
    acTitleRow                    =2          # from enum AcRowType
    acUnknownRow                  =0          # from enum AcRowType
    ac2000_Template               =14         # from enum AcSaveAsType
    ac2000_dwg                    =12         # from enum AcSaveAsType
    ac2000_dxf                    =13         # from enum AcSaveAsType
    ac2004_Template               =26         # from enum AcSaveAsType
    ac2004_dwg                    =24         # from enum AcSaveAsType
    ac2004_dxf                    =25         # from enum AcSaveAsType
    ac2007_Template               =38         # from enum AcSaveAsType
    ac2007_dwg                    =36         # from enum AcSaveAsType
    ac2007_dxf                    =37         # from enum AcSaveAsType
    ac2010_Template               =50         # from enum AcSaveAsType
    ac2010_dwg                    =48         # from enum AcSaveAsType
    ac2010_dxf                    =49         # from enum AcSaveAsType
    ac2013_Template               =62         # from enum AcSaveAsType
    ac2013_dwg                    =60         # from enum AcSaveAsType
    ac2013_dxf                    =61         # from enum AcSaveAsType
    ac2018_Template               =66         # from enum AcSaveAsType
    ac2018_dwg                    =64         # from enum AcSaveAsType
    ac2018_dxf                    =65         # from enum AcSaveAsType
    acNative                      =64         # from enum AcSaveAsType
    acR09_dxf                     =-5         # from enum AcSaveAsType
    acR10_dxf                     =-4         # from enum AcSaveAsType
    acR12_dwg                     =-3         # from enum AcSaveAsType
    acR12_dxf                     =1          # from enum AcSaveAsType
    acR13_dwg                     =4          # from enum AcSaveAsType
    acR13_dxf                     =5          # from enum AcSaveAsType
    acR14_dwg                     =8          # from enum AcSaveAsType
    acR14_dxf                     =9          # from enum AcSaveAsType
    acR15_Template                =14         # from enum AcSaveAsType
    acR15_dwg                     =12         # from enum AcSaveAsType
    acR15_dxf                     =13         # from enum AcSaveAsType
    acR18_Template                =26         # from enum AcSaveAsType
    acR18_dwg                     =24         # from enum AcSaveAsType
    acR18_dxf                     =25         # from enum AcSaveAsType
    acUnknown                     =-1         # from enum AcSaveAsType
    acSectionGenerationDestinationFile=64         # from enum AcSectionGeneration
    acSectionGenerationDestinationNewBlock=16         # from enum AcSectionGeneration
    acSectionGenerationDestinationReplaceBlock=32         # from enum AcSectionGeneration
    acSectionGenerationSourceAllObjects=1          # from enum AcSectionGeneration
    acSectionGenerationSourceSelectedObjects=2          # from enum AcSectionGeneration
    acSectionStateBoundary        =2          # from enum AcSectionState
    acSectionStatePlane           =1          # from enum AcSectionState
    acSectionStateVolume          =4          # from enum AcSectionState
    acSectionSubItemBackLine      =8          # from enum AcSectionSubItem
    acSectionSubItemBackLineBottom=32         # from enum AcSectionSubItem
    acSectionSubItemBackLineTop   =16         # from enum AcSectionSubItem
    acSectionSubItemSectionLine   =1          # from enum AcSectionSubItem
    acSectionSubItemSectionLineBottom=4          # from enum AcSectionSubItem
    acSectionSubItemSectionLineTop=2          # from enum AcSectionSubItem
    acSectionSubItemVerticalLineBottom=128        # from enum AcSectionSubItem
    acSectionSubItemVerticalLineTop=64         # from enum AcSectionSubItem
    acSectionSubItemkNone         =0          # from enum AcSectionSubItem
    acSectionType2dSection        =2          # from enum AcSectionType
    acSectionType3dSection        =4          # from enum AcSectionType
    acSectionTypeLiveSection      =1          # from enum AcSectionType
    acDegrees15                   =1          # from enum AcSegmentAngleType
    acDegrees30                   =2          # from enum AcSegmentAngleType
    acDegrees45                   =3          # from enum AcSegmentAngleType
    acDegrees60                   =4          # from enum AcSegmentAngleType
    acDegrees90                   =6          # from enum AcSegmentAngleType
    acDegreesAny                  =0          # from enum AcSegmentAngleType
    acDegreesHorz                 =12         # from enum AcSegmentAngleType
    acSelectionSetAll             =5          # from enum AcSelect
    acSelectionSetCrossing        =1          # from enum AcSelect
    acSelectionSetCrossingPolygon =7          # from enum AcSelect
    acSelectionSetFence           =2          # from enum AcSelect
    acSelectionSetLast            =4          # from enum AcSelect
    acSelectionSetPrevious        =3          # from enum AcSelect
    acSelectionSetWindow          =0          # from enum AcSelect
    acSelectionSetWindowPolygon   =6          # from enum AcSelect
    acTableSelectCrossing         =2          # from enum AcSelectType
    acTableSelectWindow           =1          # from enum AcSelectType
    acShadePlotAsDisplayed        =0          # from enum AcShadePlot
    acShadePlotHidden             =2          # from enum AcShadePlot
    acShadePlotRendered           =3          # from enum AcShadePlot
    acShadePlotWireframe          =1          # from enum AcShadePlot
    acCastsAndReceivesShadows     =0          # from enum AcShadowDisplayType
    acCastsShadows                =1          # from enum AcShadowDisplayType
    acIgnoreShadows               =3          # from enum AcShadowDisplayType
    acReceivesShadows             =2          # from enum AcShadowDisplayType
    acTableBottomToTop            =1          # from enum AcTableDirection
    acTableTopToBottom            =0          # from enum AcTableDirection
    acTableFlowDownOrUp           =2          # from enum AcTableFlowDirection
    acTableFlowLeft               =4          # from enum AcTableFlowDirection
    acTableFlowRight              =1          # from enum AcTableFlowDirection
    acCellAlign                   =130        # from enum AcTableStyleOverrides
    acCellBackgroundColor         =132        # from enum AcTableStyleOverrides
    acCellBackgroundFillNone      =131        # from enum AcTableStyleOverrides
    acCellBottomGridColor         =138        # from enum AcTableStyleOverrides
    acCellBottomGridLineWeight    =142        # from enum AcTableStyleOverrides
    acCellBottomVisibility        =146        # from enum AcTableStyleOverrides
    acCellContentColor            =133        # from enum AcTableStyleOverrides
    acCellDataType                =148        # from enum AcTableStyleOverrides
    acCellLeftGridColor           =139        # from enum AcTableStyleOverrides
    acCellLeftGridLineWeight      =143        # from enum AcTableStyleOverrides
    acCellLeftVisibility          =147        # from enum AcTableStyleOverrides
    acCellRightGridColor          =137        # from enum AcTableStyleOverrides
    acCellRightGridLineWeight     =141        # from enum AcTableStyleOverrides
    acCellRightVisibility         =145        # from enum AcTableStyleOverrides
    acCellTextHeight              =135        # from enum AcTableStyleOverrides
    acCellTextStyle               =134        # from enum AcTableStyleOverrides
    acCellTopGridColor            =136        # from enum AcTableStyleOverrides
    acCellTopGridLineWeight       =140        # from enum AcTableStyleOverrides
    acCellTopVisibility           =144        # from enum AcTableStyleOverrides
    acDataHorzBottomColor         =54         # from enum AcTableStyleOverrides
    acDataHorzBottomLineWeight    =84         # from enum AcTableStyleOverrides
    acDataHorzBottomVisibility    =114        # from enum AcTableStyleOverrides
    acDataHorzInsideColor         =53         # from enum AcTableStyleOverrides
    acDataHorzInsideLineWeight    =83         # from enum AcTableStyleOverrides
    acDataHorzInsideVisibility    =113        # from enum AcTableStyleOverrides
    acDataHorzTopColor            =52         # from enum AcTableStyleOverrides
    acDataHorzTopLineWeight       =82         # from enum AcTableStyleOverrides
    acDataHorzTopVisibility       =112        # from enum AcTableStyleOverrides
    acDataRowAlignment            =17         # from enum AcTableStyleOverrides
    acDataRowColor                =8          # from enum AcTableStyleOverrides
    acDataRowDataType             =26         # from enum AcTableStyleOverrides
    acDataRowFillColor            =14         # from enum AcTableStyleOverrides
    acDataRowFillNone             =11         # from enum AcTableStyleOverrides
    acDataRowTextHeight           =23         # from enum AcTableStyleOverrides
    acDataRowTextStyle            =20         # from enum AcTableStyleOverrides
    acDataVertInsideColor         =56         # from enum AcTableStyleOverrides
    acDataVertInsideLineWeight    =86         # from enum AcTableStyleOverrides
    acDataVertInsideVisibility    =116        # from enum AcTableStyleOverrides
    acDataVertLeftColor           =55         # from enum AcTableStyleOverrides
    acDataVertLeftLineWeight      =85         # from enum AcTableStyleOverrides
    acDataVertLeftVisibility      =115        # from enum AcTableStyleOverrides
    acDataVertRightColor          =57         # from enum AcTableStyleOverrides
    acDataVertRightLineWeight     =87         # from enum AcTableStyleOverrides
    acDataVertRightVisibility     =117        # from enum AcTableStyleOverrides
    acFlowDirection               =3          # from enum AcTableStyleOverrides
    acHeaderHorzBottomColor       =48         # from enum AcTableStyleOverrides
    acHeaderHorzBottomLineWeight  =78         # from enum AcTableStyleOverrides
    acHeaderHorzBottomVisibility  =108        # from enum AcTableStyleOverrides
    acHeaderHorzInsideColor       =47         # from enum AcTableStyleOverrides
    acHeaderHorzInsideLineWeight  =77         # from enum AcTableStyleOverrides
    acHeaderHorzInsideVisibility  =107        # from enum AcTableStyleOverrides
    acHeaderHorzTopColor          =46         # from enum AcTableStyleOverrides
    acHeaderHorzTopLineWeight     =76         # from enum AcTableStyleOverrides
    acHeaderHorzTopVisibility     =106        # from enum AcTableStyleOverrides
    acHeaderRowAlignment          =16         # from enum AcTableStyleOverrides
    acHeaderRowColor              =7          # from enum AcTableStyleOverrides
    acHeaderRowDataType           =25         # from enum AcTableStyleOverrides
    acHeaderRowFillColor          =13         # from enum AcTableStyleOverrides
    acHeaderRowFillNone           =10         # from enum AcTableStyleOverrides
    acHeaderRowTextHeight         =22         # from enum AcTableStyleOverrides
    acHeaderRowTextStyle          =19         # from enum AcTableStyleOverrides
    acHeaderSuppressed            =2          # from enum AcTableStyleOverrides
    acHeaderVertInsideColor       =50         # from enum AcTableStyleOverrides
    acHeaderVertInsideLineWeight  =80         # from enum AcTableStyleOverrides
    acHeaderVertInsideVisibility  =110        # from enum AcTableStyleOverrides
    acHeaderVertLeftColor         =49         # from enum AcTableStyleOverrides
    acHeaderVertLeftLineWeight    =79         # from enum AcTableStyleOverrides
    acHeaderVertLeftVisibility    =109        # from enum AcTableStyleOverrides
    acHeaderVertRightColor        =51         # from enum AcTableStyleOverrides
    acHeaderVertRightLineWeight   =81         # from enum AcTableStyleOverrides
    acHeaderVertRightVisibility   =111        # from enum AcTableStyleOverrides
    acHorzCellMargin              =4          # from enum AcTableStyleOverrides
    acTitleHorzBottomColor        =42         # from enum AcTableStyleOverrides
    acTitleHorzBottomLineWeight   =72         # from enum AcTableStyleOverrides
    acTitleHorzBottomVisibility   =102        # from enum AcTableStyleOverrides
    acTitleHorzInsideColor        =41         # from enum AcTableStyleOverrides
    acTitleHorzInsideLineWeight   =71         # from enum AcTableStyleOverrides
    acTitleHorzInsideVisibility   =101        # from enum AcTableStyleOverrides
    acTitleHorzTopColor           =40         # from enum AcTableStyleOverrides
    acTitleHorzTopLineWeight      =70         # from enum AcTableStyleOverrides
    acTitleHorzTopVisibility      =100        # from enum AcTableStyleOverrides
    acTitleRowAlignment           =15         # from enum AcTableStyleOverrides
    acTitleRowColor               =6          # from enum AcTableStyleOverrides
    acTitleRowDataType            =24         # from enum AcTableStyleOverrides
    acTitleRowFillColor           =12         # from enum AcTableStyleOverrides
    acTitleRowFillNone            =9          # from enum AcTableStyleOverrides
    acTitleRowTextHeight          =21         # from enum AcTableStyleOverrides
    acTitleRowTextStyle           =18         # from enum AcTableStyleOverrides
    acTitleSuppressed             =1          # from enum AcTableStyleOverrides
    acTitleVertInsideColor        =44         # from enum AcTableStyleOverrides
    acTitleVertInsideLineWeight   =74         # from enum AcTableStyleOverrides
    acTitleVertInsideVisibility   =104        # from enum AcTableStyleOverrides
    acTitleVertLeftColor          =43         # from enum AcTableStyleOverrides
    acTitleVertLeftLineWeight     =73         # from enum AcTableStyleOverrides
    acTitleVertLeftVisibility     =103        # from enum AcTableStyleOverrides
    acTitleVertRightColor         =45         # from enum AcTableStyleOverrides
    acTitleVertRightLineWeight    =75         # from enum AcTableStyleOverrides
    acTitleVertRightVisibility    =105        # from enum AcTableStyleOverrides
    acVertCellMargin              =5          # from enum AcTableStyleOverrides
    acCenterAlignment             =1          # from enum AcTextAlignmentType
    acLeftAlignment               =0          # from enum AcTextAlignmentType
    acRightAlignment              =2          # from enum AcTextAlignmentType
    acAlwaysRightReadingAngle     =2          # from enum AcTextAngleType
    acHorizontalAngle             =1          # from enum AcTextAngleType
    acInsertAngle                 =0          # from enum AcTextAngleType
    acAttachmentHorizontal        =0          # from enum AcTextAttachmentDirection
    acAttachmentVertical          =1          # from enum AcTextAttachmentDirection
    acAttachmentAllLine           =8          # from enum AcTextAttachmentType
    acAttachmentBottomLine        =7          # from enum AcTextAttachmentType
    acAttachmentBottomOfBottom    =6          # from enum AcTextAttachmentType
    acAttachmentBottomOfTop       =2          # from enum AcTextAttachmentType
    acAttachmentBottomOfTopLine   =3          # from enum AcTextAttachmentType
    acAttachmentMiddle            =4          # from enum AcTextAttachmentType
    acAttachmentMiddleOfBottom    =5          # from enum AcTextAttachmentType
    acAttachmentMiddleOfTop       =1          # from enum AcTextAttachmentType
    acAttachmentTopOfTop          =0          # from enum AcTextAttachmentType
    acFontBold                    =2          # from enum AcTextFontStyle
    acFontBoldItalic              =3          # from enum AcTextFontStyle
    acFontItalic                  =1          # from enum AcTextFontStyle
    acFontRegular                 =0          # from enum AcTextFontStyle
    acTextFlagBackward            =2          # from enum AcTextGenerationFlag
    acTextFlagUpsideDown          =4          # from enum AcTextGenerationFlag
    acToolbarDockBottom           =1          # from enum AcToolbarDockStatus
    acToolbarDockLeft             =2          # from enum AcToolbarDockStatus
    acToolbarDockRight            =3          # from enum AcToolbarDockStatus
    acToolbarDockTop              =0          # from enum AcToolbarDockStatus
    acToolbarFloating             =4          # from enum AcToolbarDockStatus
    acToolbarButton               =0          # from enum AcToolbarItemType
    acToolbarControl              =2          # from enum AcToolbarItemType
    acToolbarFlyout               =3          # from enum AcToolbarItemType
    acToolbarSeparator            =1          # from enum AcToolbarItemType
    acApplied                     =1          # from enum AcUnderlayLayerOverrideType
    acNoOverrides                 =0          # from enum AcUnderlayLayerOverrideType
    acArchitectural               =4          # from enum AcUnits
    acDecimal                     =2          # from enum AcUnits
    acDefaultUnits                =-1         # from enum AcUnits
    acEngineering                 =3          # from enum AcUnits
    acFractional                  =5          # from enum AcUnits
    acScientific                  =1          # from enum AcUnits
    acBuffer                      =128        # from enum AcValueDataType
    acDate                        =8          # from enum AcValueDataType
    acDouble                      =2          # from enum AcValueDataType
    acGeneral                     =512        # from enum AcValueDataType
    acLong                        =1          # from enum AcValueDataType
    acObjectId                    =64         # from enum AcValueDataType
    acPoint2d                     =16         # from enum AcValueDataType
    acPoint3d                     =32         # from enum AcValueDataType
    acResbuf                      =256        # from enum AcValueDataType
    acString                      =4          # from enum AcValueDataType
    acUnknownDataType             =0          # from enum AcValueDataType
    acUnitAngle                   =2          # from enum AcValueUnitType
    acUnitArea                    =4          # from enum AcValueUnitType
    acUnitDistance                =1          # from enum AcValueUnitType
    acUnitVolume                  =8          # from enum AcValueUnitType
    acUnitless                    =0          # from enum AcValueUnitType
    acVerticalAlignmentBaseline   =0          # from enum AcVerticalAlignment
    acVerticalAlignmentBottom     =1          # from enum AcVerticalAlignment
    acVerticalAlignmentMiddle     =2          # from enum AcVerticalAlignment
    acVerticalAlignmentTop        =3          # from enum AcVerticalAlignment
    acAttachmentCenter            =0          # from enum AcVerticalTextAttachmentType
    acAttachmentLinedCenter       =1          # from enum AcVerticalTextAttachmentType
    acVp100_1                     =18         # from enum AcViewportScale
    acVp10_1                      =17         # from enum AcViewportScale
    acVp1_1                       =2          # from enum AcViewportScale
    acVp1_10                      =7          # from enum AcViewportScale
    acVp1_100                     =13         # from enum AcViewportScale
    acVp1_128in_1ft               =19         # from enum AcViewportScale
    acVp1_16                      =8          # from enum AcViewportScale
    acVp1_16in_1ft                =22         # from enum AcViewportScale
    acVp1_2                       =3          # from enum AcViewportScale
    acVp1_20                      =9          # from enum AcViewportScale
    acVp1_2in_1ft                 =28         # from enum AcViewportScale
    acVp1_30                      =10         # from enum AcViewportScale
    acVp1_32in_1ft                =21         # from enum AcViewportScale
    acVp1_4                       =4          # from enum AcViewportScale
    acVp1_40                      =11         # from enum AcViewportScale
    acVp1_4in_1ft                 =26         # from enum AcViewportScale
    acVp1_5                       =5          # from enum AcViewportScale
    acVp1_50                      =12         # from enum AcViewportScale
    acVp1_64in_1ft                =20         # from enum AcViewportScale
    acVp1_8                       =6          # from enum AcViewportScale
    acVp1_8in_1ft                 =24         # from enum AcViewportScale
    acVp1and1_2in_1ft             =31         # from enum AcViewportScale
    acVp1ft_1ft                   =34         # from enum AcViewportScale
    acVp1in_1ft                   =30         # from enum AcViewportScale
    acVp2_1                       =14         # from enum AcViewportScale
    acVp3_16in_1ft                =25         # from enum AcViewportScale
    acVp3_32in_1ft                =23         # from enum AcViewportScale
    acVp3_4in_1ft                 =29         # from enum AcViewportScale
    acVp3_8in_1ft                 =27         # from enum AcViewportScale
    acVp3in_1ft                   =32         # from enum AcViewportScale
    acVp4_1                       =15         # from enum AcViewportScale
    acVp6in_1ft                   =33         # from enum AcViewportScale
    acVp8_1                       =16         # from enum AcViewportScale
    acVpCustomScale               =1          # from enum AcViewportScale
    acVpScaleToFit                =0          # from enum AcViewportScale
    acViewport2Horizontal         =0          # from enum AcViewportSplitType
    acViewport2Vertical           =1          # from enum AcViewportSplitType
    acViewport3Above              =6          # from enum AcViewportSplitType
    acViewport3Below              =7          # from enum AcViewportSplitType
    acViewport3Horizontal         =4          # from enum AcViewportSplitType
    acViewport3Left               =2          # from enum AcViewportSplitType
    acViewport3Right              =3          # from enum AcViewportSplitType
    acViewport3Vertical           =5          # from enum AcViewportSplitType
    acViewport4                   =8          # from enum AcViewportSplitType
    acMax                         =3          # from enum AcWindowState
    acMin                         =2          # from enum AcWindowState
    acNorm                        =1          # from enum AcWindowState
    acDemandLoadDisabled          =0          # from enum AcXRefDemandLoad
    acDemandLoadEnabled           =1          # from enum AcXRefDemandLoad
    acDemandLoadEnabledWithCopy   =2          # from enum AcXRefDemandLoad
    acZoomScaledAbsolute          =0          # from enum AcZoomScaleType
    acZoomScaledRelative          =1          # from enum AcZoomScaleType
    acZoomScaledRelativePSpace    =2          # from enum AcZoomScaleType
    acLsAll                       =65535      # from enum AcLayerStateMask
    acLsColor                     =32         # from enum AcLayerStateMask
    acLsFrozen                    =2          # from enum AcLayerStateMask
    acLsLineType                  =64         # from enum AcLayerStateMask
    acLsLineWeight                =128        # from enum AcLayerStateMask
    acLsLocked                    =4          # from enum AcLayerStateMask
    acLsNewViewport               =16         # from enum AcLayerStateMask
    acLsNone                      =0          # from enum AcLayerStateMask
    acLsOn                        =1          # from enum AcLayerStateMask
    acLsPlot                      =8          # from enum AcLayerStateMask
    acLsPlotStyle                 =256        # from enum AcLayerStateMask
    ACADSECURITYPARAMS_ALGID_RC4  =26625      # from enum AcadSecurityParamsConstants
    ACADSECURITYPARAMS_ADD_TIMESTAMP=32         # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_ENCRYPT_DATA=1          # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_ENCRYPT_PROPS=2          # from enum AcadSecurityParamsType
    ACADSECURITYPARAMS_SIGN_DATA  =16         # from enum AcadSecurityParamsType
    odDwfAscii                    =2          # from enum OdDwfFormat
    odDwfCompressedBinary         =0          # from enum OdDwfFormat
    odDwfUncompressedBinary       =1          # from enum OdDwfFormat
    odDwf_v42                     =42         # from enum OdDwfVersion
    odDwf_v55                     =55         # from enum OdDwfVersion
    odDwf_v60                     =600        # from enum OdDwfVersion
    od2000_Template               =14         # from enum OdSaveAsType
    od2000_dwg                    =12         # from enum OdSaveAsType
    od2000_dxf                    =13         # from enum OdSaveAsType
    od2004_Template               =26         # from enum OdSaveAsType
    od2004_dwg                    =24         # from enum OdSaveAsType
    od2004_dxf                    =25         # from enum OdSaveAsType
    od2007_Template               =38         # from enum OdSaveAsType
    od2007_dwg                    =36         # from enum OdSaveAsType
    od2007_dxf                    =37         # from enum OdSaveAsType
    od2010_Template               =50         # from enum OdSaveAsType
    od2010_dwg                    =48         # from enum OdSaveAsType
    od2010_dxf                    =49         # from enum OdSaveAsType
    od2013_Template               =62         # from enum OdSaveAsType
    od2013_dwg                    =60         # from enum OdSaveAsType
    od2013_dxf                    =61         # from enum OdSaveAsType
    od2018_Template               =66         # from enum OdSaveAsType
    od2018_dwg                    =64         # from enum OdSaveAsType
    od2018_dxf                    =65         # from enum OdSaveAsType
    odNative                      =64         # from enum OdSaveAsType
    odR09_dxf                     =-5         # from enum OdSaveAsType
    odR10_dxf                     =-4         # from enum OdSaveAsType
    odR12_dwg                     =-3         # from enum OdSaveAsType
    odR12_dxf                     =1          # from enum OdSaveAsType
    odR13_dwg                     =4          # from enum OdSaveAsType
    odR13_dxf                     =5          # from enum OdSaveAsType
    odR14_dwg                     =8          # from enum OdSaveAsType
    odR14_dxf                     =9          # from enum OdSaveAsType
    odR15_Template                =14         # from enum OdSaveAsType
    odR15_dwg                     =12         # from enum OdSaveAsType
    odR15_dxf                     =13         # from enum OdSaveAsType
    odR18_Template                =26         # from enum OdSaveAsType
    odR18_dwg                     =24         # from enum OdSaveAsType
    odR18_dxf                     =25         # from enum OdSaveAsType
    odR21_Template                =38         # from enum OdSaveAsType
    odR21_dwg                     =36         # from enum OdSaveAsType
    odR21_dxf                     =37         # from enum OdSaveAsType
    odR24_Template                =50         # from enum OdSaveAsType
    odR24_dwg                     =48         # from enum OdSaveAsType
    odR24_dxf                     =49         # from enum OdSaveAsType
    odR27_Template                =62         # from enum OdSaveAsType
    odR27_dwg                     =60         # from enum OdSaveAsType
    odR27_dxf                     =61         # from enum OdSaveAsType
    odR32_Template                =66         # from enum OdSaveAsType
    odR32_dwg                     =64         # from enum OdSaveAsType
    odR32_dxf                     =65         # from enum OdSaveAsType
    odUnknown                     =-1         # from enum OdSaveAsType
    PDFEXPORT_EXCLUDE_OFFLAYER    =1          # from enum PdfExportLayerSettingType
    PDFEXPORT_INCLUDE_OFFLAYER    =2          # from enum PdfExportLayerSettingType
    PDFEXPORT_NOLAYER             =0          # from enum PdfExportLayerSettingType
    PDFEXPORT_LAYOUTS_ACTIVE      =0          # from enum PdfExportLayoutSettingType
    PDFEXPORT_LAYOUTS_ALL         =1          # from enum PdfExportLayoutSettingType
    e3rdPartyAddedFile            =14         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eAltFontFile                  =7          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eDGNUnderlay                  =20         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eDWFUnderlay                  =21         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eDataLinkFile                 =25         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eDwgFile                      =0          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eEdgeTextureFile              =26         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eFontFile                     =3          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eFontMapFile                  =13         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eGeneratedFile                =27         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eImageFile                    =2          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eMaterialTextureFile          =23         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eNoType                       =-1         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePDFUnderlay                  =22         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePfbAltFontFile               =9          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePfbFontFile                  =5          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePhotometricWebFile           =24         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePlotCfgFile                  =11         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    ePlotStyleTableFile           =12         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eSheetSetFile                 =18         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eSheetSetSupportFile          =19         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eShxAltFontFile               =8          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eShxFontFile                  =4          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eTtfAltFontFile               =10         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eTtfFontFile                  =6          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eUserAddedFile                =15         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eXrefAttachFile               =16         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eXrefFile                     =1          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eXrefOverlayFile              =17         # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0001
    eFileAdded                    =0          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eFileAlreadyAdded             =5          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eFileNotAdded                 =2          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eFileNotAddedBadArg           =4          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eFileNotAddedToPreventCycle   =3          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eRelationshipAdded            =1          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0002
    eAutoCAD14                    =3          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0003
    eAutoCAD2000                  =2          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0003
    eAutoCADR18                   =1          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0003
    eAutoCADR21                   =4          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0003
    eNoConversion                 =0          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0003
    eOverwriteCancel              =3          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0004
    eOverwriteNo                  =0          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0004
    eOverwriteYes                 =1          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0004
    eOverwriteYesToAll            =2          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0004
    eOverwriteYesToAllReadOnly    =4          # from enum __MIDL___MIDL_itf_ax_bricscadapp_0000_0000_0004


from win32com.client import DispatchBaseClass
class IAcad3DFace(DispatchBaseClass):
    'TeighaX Interface of a 3D triangle or quadrilateral plane section'
    CLSID = IID('{7FBB52D0-2190-4A17-9A16-CB37821293B5}')
    coclass_clsid = IID('{3B3E11A0-2824-4ADA-9EFE-41578212028F}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        CenterPoint = VTR8ArrayOrVal(CenterPoint)
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(8, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetInvisibleEdge(self, Index=defaultNamedNotOptArg):
        'Returns the visibility status of a 3DFace edge.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies the coordinate of a single vertex in an object.'
        arg1 = VTR8ArrayOrVal(arg1)
        return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetInvisibleEdge(self, Index=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
        'Specifies the visibility status of a 3DFace edge.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
            , State)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VisibilityEdge1": (2, 2, (11, 0), (), "VisibilityEdge1", None),
        "VisibilityEdge2": (3, 2, (11, 0), (), "VisibilityEdge2", None),
        "VisibilityEdge3": (4, 2, (11, 0), (), "VisibilityEdge3", None),
        "VisibilityEdge4": (5, 2, (11, 0), (), "VisibilityEdge4", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VisibilityEdge1": ((2, LCID, 4, 0),()),
        "VisibilityEdge2": ((3, LCID, 4, 0),()),
        "VisibilityEdge3": ((4, LCID, 4, 0),()),
        "VisibilityEdge4": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcad3DPolyline(DispatchBaseClass):
    'TeighaX Interface of a 3D polyline of straight line segments entity'
    CLSID = IID('{E82F96B5-BA0E-4569-BD8A-596495947C12}')
    coclass_clsid = IID('{90D9E3BD-E641-45B1-9C71-10F66E673E6E}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a vertex to a 3D polyline.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes a 3D polyline.'
        return self._ApplyTypes_(3, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        arg1 = VTR8ArrayOrVal(arg1)
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Closed": (6, 2, (11, 0), (), "Closed", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (7, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Type": (5, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((6, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
 
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcad3DSolid(DispatchBaseClass):
    'TeighaX Interface of a solid object with free-form surface support'
    CLSID = IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
    coclass_clsid = IID('{365AF1BE-48C3-4099-951D-C1791294DE19}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Boolean(self, Operation=defaultNamedNotOptArg, SolidObject=defaultNamedNotOptArg):
        'Not implemented. Performs a boolean operation on an object and another 3D solid or region.'
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
            , SolidObject)

    # Result is of type IAcad3DSolid
    def CheckInterference(self, Object=defaultNamedNotOptArg, CreateInterferenceSolid=defaultNamedNotOptArg):
        'Not implemented. Checks the interference between two 3D solids.'
        ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((9, 1), (11, 1)),Object
            , CreateInterferenceSolid)
        if ret is not None:
            ret = Dispatch(ret, 'CheckInterference', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes a solid and returns the sub-entities as an array of object.'
        return self._ApplyTypes_(16, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # Result is of type IAcadRegion
    def SectionSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Creates a section of a 3D solid; the resulting section is a region.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'SectionSolid', '{D9F13162-0CFA-4506-AAAD-D46724407877}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    # Result is of type IAcad3DSolid
    def SliceSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg, Negative=defaultNamedNotOptArg):
        'Not implemented. Creates a slice of a 3D solid; the resulting slice is an array of the 3D solid.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (11, 1)),Point1
            , Point2, Point3, Negative)
        if ret is not None:
            ret = Dispatch(ret, 'SliceSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Centroid": (1, 2, (12, 0), (), "Centroid", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "History": (14, 2, (11, 0), (), "History", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MomentOfInertia": (2, 2, (12, 0), (), "MomentOfInertia", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (13, 2, (12, 0), (), "Position", None),
        "PrincipalDirections": (3, 2, (12, 0), (), "PrincipalDirections", None),
        "PrincipalMoments": (4, 2, (12, 0), (), "PrincipalMoments", None),
        "ProductOfInertia": (5, 2, (12, 0), (), "ProductOfInertia", None),
        "RadiiOfGyration": (6, 2, (12, 0), (), "RadiiOfGyration", None),
        "ShowHistory": (15, 2, (11, 0), (), "ShowHistory", None),
        "SolidType": (12, 2, (8, 0), (), "SolidType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Volume": (7, 2, (5, 0), (), "Volume", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "History": ((14, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((13, LCID, 4, 0),()),
        "ShowHistory": ((15, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAcCmColor(DispatchBaseClass):
    'An interface for a TeighaX true color object'
    CLSID = IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')
    coclass_clsid = IID('{2A3294B7-AB1F-40C1-98E9-EA193E2847DB}')

    def Delete(self):
        'Deletes a true color.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

    def SetColorBookColor(self, BookName=defaultNamedNotOptArg, ColorName=defaultNamedNotOptArg):
        'Sets the color to a color from a color book.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (8, 1)),BookName
            , ColorName)

    def SetNames(self, ColorName=defaultNamedNotOptArg, BookName=defaultNamedNotOptArg):
        'Specifies the color name and book name of a color.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1), (8, 1)),ColorName
            , BookName)

    def SetRGB(self, Red=defaultNamedNotOptArg, Green=defaultNamedNotOptArg, Blue=defaultNamedNotOptArg):
        'Specifies the RGB values of a true color.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),Red
            , Green, Blue)

    _prop_map_get_ = {
        "Blue": (7, 2, (3, 0), (), "Blue", None),
        "BookName": (3, 2, (8, 0), (), "BookName", None),
        "ColorIndex": (17, 2, (3, 0), (), "ColorIndex", None),
        "ColorMethod": (16, 2, (3, 0), (), "ColorMethod", None),
        "ColorName": (2, 2, (8, 0), (), "ColorName", None),
        "EntityColor": (1, 2, (3, 0), (), "EntityColor", None),
        "Green": (8, 2, (3, 0), (), "Green", None),
        "Red": (6, 2, (3, 0), (), "Red", None),
    }
    _prop_map_put_ = {
        "ColorIndex": ((17, LCID, 4, 0),()),
        "ColorMethod": ((16, LCID, 4, 0),()),
        "EntityColor": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadArc(DispatchBaseClass):
    'TeighaX Interface of a circular arc entity'
    CLSID = IID('{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')
    coclass_clsid = IID('{96810171-584F-4A58-95DF-F90746B866A0}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new arc at a specified distance from an original arc.'
        return self._ApplyTypes_(10, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadArc override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
    
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcLength": (8, 2, (5, 0), (), "ArcLength", None),
        "Area": (11, 2, (5, 0), (), "Area", None),
        "Center": (2, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndAngle": (6, 2, (5, 0), (), "EndAngle", None),
        "EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (12, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (4, 2, (5, 0), (), "Radius", None),
        "StartAngle": (5, 2, (5, 0), (), "StartAngle", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        "Thickness": (9, 2, (5, 0), (), "Thickness", None),
        "TotalAngle": (7, 2, (5, 0), (), "TotalAngle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Center": ((2, LCID, 4, 0),()),
        "EndAngle": ((6, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((12, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((4, LCID, 4, 0),()),
        "StartAngle": ((5, LCID, 4, 0),()),
        "Thickness": ((9, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAttribute(DispatchBaseClass):
    'TeighaX Interface of an object appearing as a text string that describes the characteristics of an attribute reference'
    CLSID = IID('{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')
    coclass_clsid = IID('{A6D6469F-6F70-4864-A8DC-5DB7397C658E}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    def UpdateMTextAttribute(self):
        'Updates multiline MText'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), (),)

    #IAcadAttribute override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'LockPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Alignment": (6, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (20, 2, (11, 0), (), "Backward", None),
        "Constant": (22, 2, (11, 0), (), "Constant", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldLength": (1, 2, (3, 0), (), "FieldLength", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (9, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (7, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (14, 2, (12, 0), (), "InsertionPoint", None),
        "Invisible": (21, 2, (11, 0), (), "Invisible", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
        "MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
        "MTextAttributeContent": (27, 2, (8, 0), (), "MTextAttributeContent", None),
        "MTextBoundaryWidth": (29, 2, (5, 0), (), "MTextBoundaryWidth", None),
        "MTextDrawingDirection": (30, 2, (3, 0), (), "MTextDrawingDirection", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Mode": (18, 2, (3, 0), (), "Mode", None),
        "Normal": (15, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (12, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Preset": (24, 2, (11, 0), (), "Preset", None),
        "PromptString": (3, 2, (8, 0), (), "PromptString", None),
        "Rotation": (10, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (11, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (5, 2, (8, 0), (), "StyleName", None),
        "TagString": (2, 2, (8, 0), (), "TagString", None),
        "TextAlignmentPoint": (13, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (16, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (4, 2, (8, 0), (), "TextString", None),
        "Thickness": (17, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UpsideDown": (19, 2, (11, 0), (), "UpsideDown", None),
        "Verify": (23, 2, (11, 0), (), "Verify", None),
        "VerticalAlignment": (8, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((6, LCID, 4, 0),()),
        "Backward": ((20, LCID, 4, 0),()),
        "Constant": ((22, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldLength": ((1, LCID, 4, 0),()),
        "Height": ((9, LCID, 4, 0),()),
        "HorizontalAlignment": ((7, LCID, 4, 0),()),
        "InsertionPoint": ((14, LCID, 4, 0),()),
        "Invisible": ((21, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LockPosition": ((25, LCID, 4, 0),()),
        "MTextAttribute": ((26, LCID, 4, 0),()),
        "MTextAttributeContent": ((27, LCID, 4, 0),()),
        "MTextBoundaryWidth": ((29, LCID, 4, 0),()),
        "MTextDrawingDirection": ((30, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Mode": ((18, LCID, 4, 0),()),
        "Normal": ((15, LCID, 4, 0),()),
        "ObliqueAngle": ((12, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Preset": ((24, LCID, 4, 0),()),
        "PromptString": ((3, LCID, 4, 0),()),
        "Rotation": ((10, LCID, 4, 0),()),
        "ScaleFactor": ((11, LCID, 4, 0),()),
        "StyleName": ((5, LCID, 4, 0),()),
        "TagString": ((2, LCID, 4, 0),()),
        "TextAlignmentPoint": ((13, LCID, 4, 0),()),
        "TextGenerationFlag": ((16, LCID, 4, 0),()),
        "TextString": ((4, LCID, 4, 0),()),
        "Thickness": ((17, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((19, LCID, 4, 0),()),
        "Verify": ((23, LCID, 4, 0),()),
        "VerticalAlignment": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadAttributeReference(DispatchBaseClass):
    'TeighaX Interface of an object containing text that links to a block'
    CLSID = IID('{090EF3DE-E74D-44C0-8B8B-89D0A79FBE52}')
    coclass_clsid = IID('{50463551-644F-48E0-ADF0-70BDE39C2379}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    def UpdateMTextAttribute(self):
        'Updates attribute reference from the multiline mtext and vice versa'
        return self._oleobj_.InvokeTypes(29, LCID, 1, (24, 0), (),)

    #IAcadAttributeReference override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'LockPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Alignment": (16, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (18, 2, (11, 0), (), "Backward", None),
        "Constant": (20, 2, (11, 0), (), "Constant", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldLength": (15, 2, (3, 0), (), "FieldLength", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (1, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (2, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (3, 2, (12, 0), (), "InsertionPoint", None),
        "Invisible": (19, 2, (11, 0), (), "Invisible", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockPosition": (25, 2, (11, 0), (), "LockPosition", None),
        "MTextAttribute": (26, 2, (11, 0), (), "MTextAttribute", None),
        "MTextAttributeContent": (27, 2, (8, 0), (), "MTextAttributeContent", None),
        "MTextBoundaryWidth": (30, 2, (5, 0), (), "MTextBoundaryWidth", None),
        "MTextDrawingDirection": (31, 2, (3, 0), (), "MTextDrawingDirection", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (4, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (5, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (6, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (7, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (8, 2, (8, 0), (), "StyleName", None),
        "TagString": (9, 2, (8, 0), (), "TagString", None),
        "TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (11, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (12, 2, (8, 0), (), "TextString", None),
        "Thickness": (13, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UpsideDown": (17, 2, (11, 0), (), "UpsideDown", None),
        "VerticalAlignment": (14, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((16, LCID, 4, 0),()),
        "Backward": ((18, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldLength": ((15, LCID, 4, 0),()),
        "Height": ((1, LCID, 4, 0),()),
        "HorizontalAlignment": ((2, LCID, 4, 0),()),
        "InsertionPoint": ((3, LCID, 4, 0),()),
        "Invisible": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MTextAttribute": ((26, LCID, 4, 0),()),
        "MTextAttributeContent": ((27, LCID, 4, 0),()),
        "MTextBoundaryWidth": ((30, LCID, 4, 0),()),
        "MTextDrawingDirection": ((31, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((4, LCID, 4, 0),()),
        "ObliqueAngle": ((5, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((6, LCID, 4, 0),()),
        "ScaleFactor": ((7, LCID, 4, 0),()),
        "StyleName": ((8, LCID, 4, 0),()),
        "TagString": ((9, LCID, 4, 0),()),
        "TextAlignmentPoint": ((10, LCID, 4, 0),()),
        "TextGenerationFlag": ((11, LCID, 4, 0),()),
        "TextString": ((12, LCID, 4, 0),()),
        "Thickness": ((13, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((17, LCID, 4, 0),()),
        "VerticalAlignment": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadBlock(DispatchBaseClass):
    'TeighaX Interface of a block definition containing a name and a set of objects'
    CLSID = IID('{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
    coclass_clsid = IID('{5BE85927-9C3C-4E1F-BAE0-CCDA866949C5}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{7FBB52D0-2190-4A17-9A16-CB37821293B5}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a PolyfaceMesh object and adds it to modelspace, paperspace, or a block.'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3DPolyline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{E82F96B5-BA0E-4569-BD8A-596495947C12}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an Arc object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an Attribute object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box and adds it to modelspace, paperspace, or a block.'
        Origin = VTR8ArrayOrVal(Origin)  
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Circle object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{E23D2B17-487F-4016-A5D4-6C27643F308F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a custom object.'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates a 3-point angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{B0E595FE-21A5-4C67-A916-4689ABA37E62}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{559F6310-4DB2-4B61-8B4C-96D89006711B}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension object and adds it to modelspace, paperspace, or a block.'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension object and adds it to modelspace, paperspace, or a block.'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{0FB4DC41-B309-41C8-B5E7-23B284C98450}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension object and adds it to modelspace, paperspace, or a block.'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{0F29A519-B989-4E81-B41F-3346F3BE65CE}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{F2B4D571-C206-4E19-B1C0-55C95BED669C}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an Ellipse object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{5B4B058E-B8AA-4C76-B652-76AF101C380F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadOle
    def AddEmbeddedRaster(self, ImagePath=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Embed raster as an OLE item.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1792, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),ImagePath
            , InsertionPoint, Height, Width)
        if ret is not None:
            ret = Dispatch(ret, 'AddEmbeddedRaster', '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid object along a path and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{173ED161-3D64-4EF5-85F4-6AACA83CD382}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a Leader object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{A7072E19-38E6-4320-9045-B67E53179643}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Lightweight Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{037572DF-0207-4B27-BCDA-C163054A21DF}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a Line object and adds it to modelspace, paperspace, or a block.'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Adds an array of blocks to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{A6653F5A-001E-4125-8BB0-597E96CDE498}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{A2F0013E-ACE4-41C5-9015-37587663DD30}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a Multiline object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{C35F5577-83CE-43C7-B10E-AFEF9E345739}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an Multiline Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object and adds it to modelspace, paperspace, or a block.'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a Polyface Mesh object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Adds a raster image as a Raster object to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a Ray object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{C888FAF5-E377-4624-A8E2-898031AB58BB}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a Region object and adds it to modelspace, paperspace, or a block.'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid object and adds it to modelspace, paperspace, or a block.'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a Section object and adds it to modelspace, paperspace, or a block.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        planeVector = VTR8ArrayOrVal(planeVector)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Sphere object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a Spline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{B05C2404-6A45-4A57-8075-F98464C350BE}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a Table object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{9CD7E38D-0003-410D-B6DF-DE36FD190850}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a Tolerance object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a Torus object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Wedge object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadXline
    def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates an XLine object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddXline', '{703DF76F-5C64-414A-B271-4520E1244353}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference to a drawing.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing or named block to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{A40DEA37-8356-415A-B3AC-E087819C6301}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def Reload(self):
        'Reloads an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)
    
    #IAcadBlock override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{236374B2-E248-484D-91D4-C13FA726645D}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadBlockReference(DispatchBaseClass):
    'TeighaX Interface of an instance of a block definition inserted into a drawing'
    CLSID = IID('{A40DEA37-8356-415A-B3AC-E087819C6301}')
    coclass_clsid = IID('{BEC51FF5-8BEE-4E41-9208-C23E7245B237}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block reference to a regular block reference with no name.'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block reference to a regular block reference with a name.'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block or external reference and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Returns the attributes of a block or external reference.'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Returns the constant attributes of a block or external reference.'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Returns the properties of a dynamic block reference.'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Changes a dynamic block reference to its original state.'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadBlocks(DispatchBaseClass):
    'TeighaX Interface of the collection of all blocks in the drawing'
    CLSID = IID('{98F7CE82-8E41-4D58-A784-30B3F33F7853}')
    coclass_clsid = IID('{59A0D5D3-CD4B-404E-888E-B280E8C7FE8A}')

    # Result is of type IAcadBlock
    def Add(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection, block, dictionary, group, or selection set.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (8, 1)),InsertionPoint
            , Name)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlock
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection, block, group, or selection set.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection, block, group, or selection set.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadCircle(DispatchBaseClass):
    'TeighaX Interface of a full circle entity'
    CLSID = IID('{E23D2B17-487F-4016-A5D4-6C27643F308F}')
    coclass_clsid = IID('{B495AD49-5306-4B28-89F5-A69ED8798A4F}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new circle at a specified distance from an original circle.'
        return self._ApplyTypes_(8, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    # override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (5, 2, (5, 0), (), "Area", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        "Circumference": (4, 2, (5, 0), (), "Circumference", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Diameter": (3, 2, (5, 0), (), "Diameter", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (6, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Radius": (2, 2, (5, 0), (), "Radius", None),
        "Thickness": (7, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Area": ((5, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Circumference": ((4, LCID, 4, 0),()),
        "Diameter": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Radius": ((2, LCID, 4, 0),()),
        "Thickness": ((7, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDatabase(DispatchBaseClass):
    'Provides an interface to the database resident objects in an TeighaX document'
    CLSID = IID('{236374B2-E248-484D-91D4-C13FA726645D}')
    coclass_clsid = IID('{5EF88703-1D0E-410B-93B1-45956D27AD4E}')

    def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
        'Duplicates multiple objects.'
        return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
            , Owner, IdPairs)

    def HandleToObject(self, Handle=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified handle.'
        ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
            )
        if ret is not None:
            ret = Dispatch(ret, 'HandleToObject', None)
        return ret

    def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified object ID.'
        ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((20, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject', None)
        return ret

    def ObjectIdToObject32(self, ObjectID=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified object ID.'
        ret = self._oleobj_.InvokeTypes(74, LCID, 1, (9, 0), ((3, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject32', None)
        return ret

    _prop_map_get_ = {
        # Method 'Blocks' returns object of type 'IAcadBlocks'
        "Blocks": (3, 2, (9, 0), (), "Blocks", '{98F7CE82-8E41-4D58-A784-30B3F33F7853}'),
        # Method 'Dictionaries' returns object of type 'IAcadDictionaries'
        "Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{B6D57083-036D-48AB-8BF4-0902B5C88BFF}'),
        # Method 'DimStyles' returns object of type 'IAcadDimStyles'
        "DimStyles": (6, 2, (9, 0), (), "DimStyles", '{DAB1760C-8402-4520-AD32-9396AEF1C677}'),
        "ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
        "ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
        # Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
        "FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}'),
        # Method 'Groups' returns object of type 'IAcadGroups'
        "Groups": (5, 2, (9, 0), (), "Groups", '{973585F9-D300-4BA7-9D0F-6EE59533A0DC}'),
        # Method 'Layers' returns object of type 'IAcadLayers'
        "Layers": (7, 2, (9, 0), (), "Layers", '{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}'),
        # Method 'Layouts' returns object of type 'IAcadLayouts'
        "Layouts": (20, 2, (9, 0), (), "Layouts", '{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}'),
        "Limits": (17, 2, (12, 0), (), "Limits", None),
        # Method 'Linetypes' returns object of type 'IAcadLineTypes'
        "Linetypes": (8, 2, (9, 0), (), "Linetypes", '{669E518F-46F5-4E21-8447-7F8D1435AE94}'),
        # Method 'Materials' returns object of type 'IAcadMaterials'
        "Materials": (73, 2, (9, 0), (), "Materials", '{6B7DDA98-B483-40F8-905C-2DF10E936021}'),
        # Method 'ModelSpace' returns object of type 'IAcadModelSpace'
        "ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{ECE694AB-7306-4687-AD03-C7017AE8DED1}'),
        # Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
        "PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{39377F68-1F53-4433-90AE-05526FEA4FE5}'),
        # Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
        "PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{38436519-BF47-4848-B6B2-CB6944F167D3}'),
        # Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
        "Preferences": (22, 2, (9, 0), (), "Preferences", '{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}'),
        # Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
        "RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}'),
        # Method 'SectionManager' returns object of type 'IAcadSectionManager'
        "SectionManager": (72, 2, (9, 0), (), "SectionManager", '{47495992-2633-4FA4-8B0F-213F0C2D20A5}'),
        # Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
        "SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{95D1CD9E-63E7-4860-9BE2-8F684047E102}'),
        # Method 'TextStyles' returns object of type 'IAcadTextStyles'
        "TextStyles": (11, 2, (9, 0), (), "TextStyles", '{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}'),
        # Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
        "UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}'),
        # Method 'Viewports' returns object of type 'IAcadViewports'
        "Viewports": (14, 2, (9, 0), (), "Viewports", '{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}'),
        # Method 'Views' returns object of type 'IAcadViews'
        "Views": (13, 2, (9, 0), (), "Views", '{E1673534-4417-4D0A-95FB-6E02246096D6}'),
    }
    _prop_map_put_ = {
        "ElevationModelSpace": ((15, LCID, 4, 0),()),
        "ElevationPaperSpace": ((16, LCID, 4, 0),()),
        "Limits": ((17, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDatabasePreferences(DispatchBaseClass):
    'TeighaX Interface of an object that specifies the settings for the current TeighaX drawing'
    CLSID = IID('{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}')
    coclass_clsid = IID('{CA59FF45-6C1E-4223-9530-35C60DE7480D}')

    _prop_map_get_ = {
        "AllowLongSymbolNames": (9, 2, (11, 0), (), "AllowLongSymbolNames", None),
        "Application": (1, 2, (9, 0), (), "Application", None),
        "ContourLinesPerSurface": (19, 2, (3, 0), (), "ContourLinesPerSurface", None),
        "DisplaySilhouette": (21, 2, (11, 0), (), "DisplaySilhouette", None),
        "LineWeightDisplay": (27, 2, (11, 0), (), "LineWeightDisplay", None),
        "Lineweight": (26, 2, (3, 0), (), "Lineweight", None),
        "MaxActiveViewports": (22, 2, (3, 0), (), "MaxActiveViewports", None),
        "OLELaunch": (8, 2, (11, 0), (), "OLELaunch", None),
        "ObjectSortByPSOutput": (16, 2, (11, 0), (), "ObjectSortByPSOutput", None),
        "ObjectSortByPlotting": (14, 2, (11, 0), (), "ObjectSortByPlotting", None),
        "ObjectSortByRedraws": (12, 2, (11, 0), (), "ObjectSortByRedraws", None),
        "ObjectSortByRegens": (13, 2, (11, 0), (), "ObjectSortByRegens", None),
        "ObjectSortBySelection": (10, 2, (11, 0), (), "ObjectSortBySelection", None),
        "ObjectSortBySnap": (11, 2, (11, 0), (), "ObjectSortBySnap", None),
        "RenderSmoothness": (23, 2, (5, 0), (), "RenderSmoothness", None),
        "SegmentPerPolyline": (24, 2, (3, 0), (), "SegmentPerPolyline", None),
        "SolidFill": (2, 2, (11, 0), (), "SolidFill", None),
        "TextFrameDisplay": (25, 2, (11, 0), (), "TextFrameDisplay", None),
        "XRefEdit": (4, 2, (11, 0), (), "XRefEdit", None),
        "XRefLayerVisibility": (5, 2, (11, 0), (), "XRefLayerVisibility", None),
    }
    _prop_map_put_ = {
        "AllowLongSymbolNames": ((9, LCID, 4, 0),()),
        "ContourLinesPerSurface": ((19, LCID, 4, 0),()),
        "DisplaySilhouette": ((21, LCID, 4, 0),()),
        "LineWeightDisplay": ((27, LCID, 4, 0),()),
        "Lineweight": ((26, LCID, 4, 0),()),
        "MaxActiveViewports": ((22, LCID, 4, 0),()),
        "OLELaunch": ((8, LCID, 4, 0),()),
        "ObjectSortByPSOutput": ((16, LCID, 4, 0),()),
        "ObjectSortByPlotting": ((14, LCID, 4, 0),()),
        "ObjectSortByRedraws": ((12, LCID, 4, 0),()),
        "ObjectSortByRegens": ((13, LCID, 4, 0),()),
        "ObjectSortBySelection": ((10, LCID, 4, 0),()),
        "ObjectSortBySnap": ((11, LCID, 4, 0),()),
        "RenderSmoothness": ((23, LCID, 4, 0),()),
        "SegmentPerPolyline": ((24, LCID, 4, 0),()),
        "SolidFill": ((2, LCID, 4, 0),()),
        "TextFrameDisplay": ((25, LCID, 4, 0),()),
        "XRefEdit": ((4, LCID, 4, 0),()),
        "XRefLayerVisibility": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDictionaries(DispatchBaseClass):
    'TeighaX Interface of the collection of all dictionaries in the drawing'
    CLSID = IID('{B6D57083-036D-48AB-8BF4-0902B5C88BFF}')
    coclass_clsid = IID('{887A471D-8E5B-46DD-B1FC-9248511A45B1}')

    # Result is of type IAcadDictionary
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the appropriate collection, block, dictionary, group, or selection set.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadObject
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object in a dictionary using the index associated with the object.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object in a dictionary using the index associated with the object.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDictionary(DispatchBaseClass):
    'TeighaX Interface of a container object for storing and retrieving objects'
    CLSID = IID('{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
    coclass_clsid = IID('{BF982612-77C8-45E1-8F25-F10392D86C71}')

    # Result is of type IAcadObject
    def AddObject(self, Keyword=defaultNamedNotOptArg, ObjectName=defaultNamedNotOptArg):
        'Adds an object to a dictionary.'
        ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (8, 1)),Keyword
            , ObjectName)
        if ret is not None:
            ret = Dispatch(ret, 'AddObject', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    # Result is of type IAcadXRecord
    def AddXRecord(self, Keyword=defaultNamedNotOptArg):
        'Adds an XRecord object to a dictionary.'
        ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((8, 1),),Keyword
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddXRecord', '{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetName(self, Object=defaultNamedNotOptArg):
        'Returns the keyword string of an object in a dictionary.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(4, LCID, 1, (8, 0), ((9, 1),),Object
            )

    # Result is of type IAcadObject
    def GetObject(self, Name=defaultNamedNotOptArg):
        'Returns an object in a dictionary using the keyword string associated with the object.'
        ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetObject', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadObject
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object in a dictionary using the index associated with the object.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    # Result is of type IAcadObject
    def Remove(self, Name=defaultNamedNotOptArg):
        'Deletes an object from a dictionary.'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Remove', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    def Rename(self, OldName=defaultNamedNotOptArg, NewName=defaultNamedNotOptArg):
        'Renames an object in a dictionary.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (8, 1)),OldName
            , NewName)

    def Replace(self, OldName=defaultNamedNotOptArg, pObj=defaultNamedNotOptArg):
        'Replaces an object in a dictionary with another object.'
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (9, 1)),OldName
            , pObj)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Name": ((2, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object in a dictionary using the index associated with the object.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDim3PointAngular(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the angular distance between three points'
    CLSID = IID('{B0E595FE-21A5-4C67-A916-4689ABA37E62}')
    coclass_clsid = IID('{2CD4FC7D-3E9F-42E6-9D76-F42B55AAEEC5}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)
    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
        "AngleVertex": (45, 2, (12, 0), (), "AngleVertex", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AngleFormat": ((41, LCID, 4, 0),()),
        "AngleVertex": ((45, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1EndPoint": ((38, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2EndPoint": ((40, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrecision": ((36, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimAligned(DispatchBaseClass):
    'TeighaX Interface of a linear dimension, measuring the distance between two points, that is displayed parallel to the points being measured'
    CLSID = IID('{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')
    coclass_clsid = IID('{1158BDED-3762-405F-A58F-8789BCD31AE4}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
        #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Point": (1, 2, (12, 0), (), "ExtLine1Point", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Point": (2, 2, (12, 0), (), "ExtLine2Point", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Point": ((1, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Point": ((2, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimAngular(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the angular distance between two lines or between the angle of a circular arc'
    CLSID = IID('{559F6310-4DB2-4B61-8B4C-96D89006711B}')
    coclass_clsid = IID('{9681B428-389B-4E38-9718-26FBBC646BEE}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AngleFormat": (41, 2, (3, 0), (), "AngleFormat", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1EndPoint": (38, 2, (12, 0), (), "ExtLine1EndPoint", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1StartPoint": (37, 2, (12, 0), (), "ExtLine1StartPoint", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2EndPoint": (40, 2, (12, 0), (), "ExtLine2EndPoint", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2StartPoint": (39, 2, (12, 0), (), "ExtLine2StartPoint", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrecision": (36, 2, (3, 0), (), "TextPrecision", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AngleFormat": ((41, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1EndPoint": ((38, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1StartPoint": ((37, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2EndPoint": ((40, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2StartPoint": ((39, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrecision": ((36, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimArcLength(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the length of an arc'
    CLSID = IID('{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')
    coclass_clsid = IID('{8A36FC37-0C0B-44FB-BA25-B6ED2090394B}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'ArcPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'CenterPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SymbolPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ExtLine2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Leader1Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Leader2Point':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcEndParam": (76, 2, (5, 0), (), "ArcEndParam", None),
        "ArcPoint": (68, 2, (12, 0), (), "ArcPoint", None),
        "ArcStartParam": (75, 2, (5, 0), (), "ArcStartParam", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "CenterPoint": (71, 2, (12, 0), (), "CenterPoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Point": (69, 2, (12, 0), (), "ExtLine1Point", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Point": (70, 2, (12, 0), (), "ExtLine2Point", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasLeader": (77, 2, (11, 0), (), "HasLeader", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "IsPartial": (74, 2, (11, 0), (), "IsPartial", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Leader1Point": (72, 2, (12, 0), (), "Leader1Point", None),
        "Leader2Point": (73, 2, (12, 0), (), "Leader2Point", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "SymbolPosition": (67, 2, (3, 0), (), "SymbolPosition", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArcEndParam": ((76, LCID, 4, 0),()),
        "ArcPoint": ((68, LCID, 4, 0),()),
        "ArcStartParam": ((75, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "CenterPoint": ((71, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Point": ((69, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Point": ((70, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HasLeader": ((77, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "IsPartial": ((74, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Leader1Point": ((72, LCID, 4, 0),()),
        "Leader2Point": ((73, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "SymbolPosition": ((67, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimDiametric(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the diameter of a circle or arc'
    CLSID = IID('{0FB4DC41-B309-41C8-B5E7-23B284C98450}')
    coclass_clsid = IID('{34A10E3E-AB48-4CBB-88CF-815F87738E90}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLength": ((42, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimOrdinate(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the absolute X or Y position of a point from the origin'
    CLSID = IID('{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')
    coclass_clsid = IID('{685766B4-4712-4A68-9F6C-67765BF17C2B}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRadial(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring the radius of a circle or arc'
    CLSID = IID('{0F29A519-B989-4E81-B41F-3346F3BE65CE}')
    coclass_clsid = IID('{83F62228-2B26-4C18-8579-A9FC76D6422B}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadBlock": ((66, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "ArrowheadType": ((63, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLineSuppress": ((26, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLength": ((42, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRadialLarge(DispatchBaseClass):
    'TeighaX Interface of a dimension measuring a large radius, also known as a jogged radius dimension'
    CLSID = IID('{F2B4D571-C206-4E19-B1C0-55C95BED669C}')
    coclass_clsid = IID('{BBAE1F47-D006-4796-A760-90F869EBA3F4}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'ChordPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (66, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (63, 2, (3, 0), (), "ArrowheadType", None),
        "Center": (71, 2, (12, 0), (), "Center", None),
        "CenterMarkSize": (44, 2, (5, 0), (), "CenterMarkSize", None),
        "CenterType": (43, 2, (3, 0), (), "CenterType", None),
        "ChordPoint": (72, 2, (12, 0), (), "ChordPoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimLineSuppress": (26, 2, (11, 0), (), "DimLineSuppress", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "JogAngle": (70, 2, (5, 0), (), "JogAngle", None),
        "JogLocation": (69, 2, (12, 0), (), "JogLocation", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OverrideCenter": (68, 2, (12, 0), (), "OverrideCenter", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "ArrowheadBlock": ((66, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "ArrowheadType": ((63, LCID, 4, 0),()),
        "Center": ((71, LCID, 4, 0),()),
        "CenterMarkSize": ((44, LCID, 4, 0),()),
        "CenterType": ((43, LCID, 4, 0),()),
        "ChordPoint": ((72, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimLineSuppress": ((26, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "JogAngle": ((70, LCID, 4, 0),()),
        "JogLocation": ((69, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "OverrideCenter": ((68, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimRotated(DispatchBaseClass):
    'TeighaX Interface of a dimension that measures the distance between two points and is displayed at a given rotation'
    CLSID = IID('{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')
    coclass_clsid = IID('{1DB6148A-7A75-431A-9F6E-5EE1DF74AD0F}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'HorizontalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AltRoundDistance": (6, 2, (5, 0), (), "AltRoundDistance", None),
        "AltSubUnitsFactor": (1577, 2, (5, 0), (), "AltSubUnitsFactor", None),
        "AltSubUnitsSuffix": (1576, 2, (8, 0), (), "AltSubUnitsSuffix", None),
        "AltSuppressLeadingZeros": (48, 2, (11, 0), (), "AltSuppressLeadingZeros", None),
        "AltSuppressTrailingZeros": (49, 2, (11, 0), (), "AltSuppressTrailingZeros", None),
        "AltSuppressZeroFeet": (50, 2, (11, 0), (), "AltSuppressZeroFeet", None),
        "AltSuppressZeroInches": (51, 2, (11, 0), (), "AltSuppressZeroInches", None),
        "AltTextPrefix": (11, 2, (8, 0), (), "AltTextPrefix", None),
        "AltTextSuffix": (12, 2, (8, 0), (), "AltTextSuffix", None),
        "AltTolerancePrecision": (7, 2, (3, 0), (), "AltTolerancePrecision", None),
        "AltToleranceSuppressLeadingZeros": (52, 2, (11, 0), (), "AltToleranceSuppressLeadingZeros", None),
        "AltToleranceSuppressTrailingZeros": (53, 2, (11, 0), (), "AltToleranceSuppressTrailingZeros", None),
        "AltToleranceSuppressZeroFeet": (54, 2, (11, 0), (), "AltToleranceSuppressZeroFeet", None),
        "AltToleranceSuppressZeroInches": (55, 2, (11, 0), (), "AltToleranceSuppressZeroInches", None),
        "AltUnits": (3, 2, (11, 0), (), "AltUnits", None),
        "AltUnitsFormat": (9, 2, (3, 0), (), "AltUnitsFormat", None),
        "AltUnitsPrecision": (4, 2, (3, 0), (), "AltUnitsPrecision", None),
        "AltUnitsScale": (5, 2, (5, 0), (), "AltUnitsScale", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Arrowhead1Block": (65, 2, (8, 0), (), "Arrowhead1Block", None),
        "Arrowhead1Type": (62, 2, (3, 0), (), "Arrowhead1Type", None),
        "Arrowhead2Block": (66, 2, (8, 0), (), "Arrowhead2Block", None),
        "Arrowhead2Type": (63, 2, (3, 0), (), "Arrowhead2Type", None),
        "ArrowheadSize": (61, 2, (5, 0), (), "ArrowheadSize", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "DimConstrDesc": (90, 2, (8, 0), (), "DimConstrDesc", None),
        "DimConstrExpression": (88, 2, (8, 0), (), "DimConstrExpression", None),
        "DimConstrForm": (85, 2, (11, 0), (), "DimConstrForm", None),
        "DimConstrName": (87, 2, (8, 0), (), "DimConstrName", None),
        "DimConstrReference": (86, 2, (11, 0), (), "DimConstrReference", None),
        "DimConstrValue": (89, 2, (8, 0), (), "DimConstrValue", None),
        "DimLine1Suppress": (25, 2, (11, 0), (), "DimLine1Suppress", None),
        "DimLine2Suppress": (26, 2, (11, 0), (), "DimLine2Suppress", None),
        "DimLineInside": (29, 2, (11, 0), (), "DimLineInside", None),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineExtend": (16, 2, (5, 0), (), "DimensionLineExtend", None),
        "DimensionLineWeight": (60, 2, (3, 0), (), "DimensionLineWeight", None),
        "DimensionLinetype": (80, 2, (8, 0), (), "DimensionLinetype", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "ExtLine1Linetype": (81, 2, (8, 0), (), "ExtLine1Linetype", None),
        "ExtLine1Suppress": (27, 2, (11, 0), (), "ExtLine1Suppress", None),
        "ExtLine2Linetype": (82, 2, (8, 0), (), "ExtLine2Linetype", None),
        "ExtLine2Suppress": (28, 2, (11, 0), (), "ExtLine2Suppress", None),
        "ExtLineFixedLen": (84, 2, (5, 0), (), "ExtLineFixedLen", None),
        "ExtLineFixedLenSuppress": (83, 2, (11, 0), (), "ExtLineFixedLenSuppress", None),
        "ExtensionLineColor": (14, 2, (3, 0), (), "ExtensionLineColor", None),
        "ExtensionLineExtend": (17, 2, (5, 0), (), "ExtensionLineExtend", None),
        "ExtensionLineOffset": (35, 2, (5, 0), (), "ExtensionLineOffset", None),
        "ExtensionLineWeight": (23, 2, (3, 0), (), "ExtensionLineWeight", None),
        "Fit": (18, 2, (3, 0), (), "Fit", None),
        "ForceLineInside": (32, 2, (11, 0), (), "ForceLineInside", None),
        "FractionFormat": (19, 2, (3, 0), (), "FractionFormat", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HorizontalTextPosition": (20, 2, (3, 0), (), "HorizontalTextPosition", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LinearScaleFactor": (21, 2, (5, 0), (), "LinearScaleFactor", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Measurement": (64, 2, (5, 0), (), "Measurement", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrimaryUnitsPrecision": (15, 2, (3, 0), (), "PrimaryUnitsPrecision", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "RoundDistance": (24, 2, (5, 0), (), "RoundDistance", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SubUnitsFactor": (1575, 2, (5, 0), (), "SubUnitsFactor", None),
        "SubUnitsSuffix": (1574, 2, (8, 0), (), "SubUnitsSuffix", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "SuppressZeroFeet": (56, 2, (11, 0), (), "SuppressZeroFeet", None),
        "SuppressZeroInches": (57, 2, (11, 0), (), "SuppressZeroInches", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextInside": (31, 2, (11, 0), (), "TextInside", None),
        "TextInsideAlign": (30, 2, (11, 0), (), "TextInsideAlign", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOutsideAlign": (33, 2, (11, 0), (), "TextOutsideAlign", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceSuppressZeroFeet": (58, 2, (11, 0), (), "ToleranceSuppressZeroFeet", None),
        "ToleranceSuppressZeroInches": (59, 2, (11, 0), (), "ToleranceSuppressZeroInches", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnitsFormat": (22, 2, (3, 0), (), "UnitsFormat", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AltRoundDistance": ((6, LCID, 4, 0),()),
        "AltSubUnitsFactor": ((1577, LCID, 4, 0),()),
        "AltSubUnitsSuffix": ((1576, LCID, 4, 0),()),
        "AltSuppressLeadingZeros": ((48, LCID, 4, 0),()),
        "AltSuppressTrailingZeros": ((49, LCID, 4, 0),()),
        "AltSuppressZeroFeet": ((50, LCID, 4, 0),()),
        "AltSuppressZeroInches": ((51, LCID, 4, 0),()),
        "AltTextPrefix": ((11, LCID, 4, 0),()),
        "AltTextSuffix": ((12, LCID, 4, 0),()),
        "AltTolerancePrecision": ((7, LCID, 4, 0),()),
        "AltToleranceSuppressLeadingZeros": ((52, LCID, 4, 0),()),
        "AltToleranceSuppressTrailingZeros": ((53, LCID, 4, 0),()),
        "AltToleranceSuppressZeroFeet": ((54, LCID, 4, 0),()),
        "AltToleranceSuppressZeroInches": ((55, LCID, 4, 0),()),
        "AltUnits": ((3, LCID, 4, 0),()),
        "AltUnitsFormat": ((9, LCID, 4, 0),()),
        "AltUnitsPrecision": ((4, LCID, 4, 0),()),
        "AltUnitsScale": ((5, LCID, 4, 0),()),
        "Arrowhead1Block": ((65, LCID, 4, 0),()),
        "Arrowhead1Type": ((62, LCID, 4, 0),()),
        "Arrowhead2Block": ((66, LCID, 4, 0),()),
        "Arrowhead2Type": ((63, LCID, 4, 0),()),
        "ArrowheadSize": ((61, LCID, 4, 0),()),
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "DimConstrDesc": ((90, LCID, 4, 0),()),
        "DimConstrExpression": ((88, LCID, 4, 0),()),
        "DimConstrForm": ((85, LCID, 4, 0),()),
        "DimConstrName": ((87, LCID, 4, 0),()),
        "DimConstrReference": ((86, LCID, 4, 0),()),
        "DimConstrValue": ((89, LCID, 4, 0),()),
        "DimLine1Suppress": ((25, LCID, 4, 0),()),
        "DimLine2Suppress": ((26, LCID, 4, 0),()),
        "DimLineInside": ((29, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineExtend": ((16, LCID, 4, 0),()),
        "DimensionLineWeight": ((60, LCID, 4, 0),()),
        "DimensionLinetype": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "ExtLine1Linetype": ((81, LCID, 4, 0),()),
        "ExtLine1Suppress": ((27, LCID, 4, 0),()),
        "ExtLine2Linetype": ((82, LCID, 4, 0),()),
        "ExtLine2Suppress": ((28, LCID, 4, 0),()),
        "ExtLineFixedLen": ((84, LCID, 4, 0),()),
        "ExtLineFixedLenSuppress": ((83, LCID, 4, 0),()),
        "ExtensionLineColor": ((14, LCID, 4, 0),()),
        "ExtensionLineExtend": ((17, LCID, 4, 0),()),
        "ExtensionLineOffset": ((35, LCID, 4, 0),()),
        "ExtensionLineWeight": ((23, LCID, 4, 0),()),
        "Fit": ((18, LCID, 4, 0),()),
        "ForceLineInside": ((32, LCID, 4, 0),()),
        "FractionFormat": ((19, LCID, 4, 0),()),
        "HorizontalTextPosition": ((20, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LinearScaleFactor": ((21, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "PrimaryUnitsPrecision": ((15, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "RoundDistance": ((24, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SubUnitsFactor": ((1575, LCID, 4, 0),()),
        "SubUnitsSuffix": ((1574, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "SuppressZeroFeet": ((56, LCID, 4, 0),()),
        "SuppressZeroInches": ((57, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextInside": ((31, LCID, 4, 0),()),
        "TextInsideAlign": ((30, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOutsideAlign": ((33, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceSuppressZeroFeet": ((58, LCID, 4, 0),()),
        "ToleranceSuppressZeroInches": ((59, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnitsFormat": ((22, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimStyle(DispatchBaseClass):
    'TeighaX Interface of a group of dimension settings that determines the appearance of a dimension'
    CLSID = IID('{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')
    coclass_clsid = IID('{FCF82E37-DD4C-4992-AF92-5FB8923AAC11}')

    def CopyFrom(self, StyleSource=defaultNamedNotOptArg):
        'Copies dimension style data to an existing dimension style.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((9, 1),),StyleSource
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDimStyles(DispatchBaseClass):
    'TeighaX Interface of the collection of all dimension styles in the drawing'
    CLSID = IID('{DAB1760C-8402-4520-AD32-9396AEF1C677}')
    coclass_clsid = IID('{9AB84FD1-1BEF-4A4B-BC47-C34ADA79F397}')

    # Result is of type IAcadDimStyle
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the dimension style collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadDimStyle
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the dimension style collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the dimension style collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadDimension(DispatchBaseClass):
    'The common interface for TeighaX dimensions'
    CLSID = IID('{91BBC3D7-F48C-4703-8867-0F025F95DD56}')
    coclass_clsid = IID('{5FB8DBE0-D358-433C-ACAC-BC068C7037BA}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override
    def __setattr__(self, __name, __value):
        match __name:
            case 'TextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DecimalSeparator": (1548, 2, (8, 0), (), "DecimalSeparator", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (1538, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "SuppressLeadingZeros": (1565, 2, (11, 0), (), "SuppressLeadingZeros", None),
        "SuppressTrailingZeros": (1566, 2, (11, 0), (), "SuppressTrailingZeros", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextFill": (1571, 2, (11, 0), (), "TextFill", None),
        "TextFillColor": (1572, 2, (3, 0), (), "TextFillColor", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextMovement": (1558, 2, (3, 0), (), "TextMovement", None),
        "TextOverride": (1541, 2, (8, 0), (), "TextOverride", None),
        "TextPosition": (1539, 2, (12, 0), (), "TextPosition", None),
        "TextPrefix": (1551, 2, (8, 0), (), "TextPrefix", None),
        "TextRotation": (1540, 2, (5, 0), (), "TextRotation", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        "TextSuffix": (1552, 2, (8, 0), (), "TextSuffix", None),
        "ToleranceDisplay": (1559, 2, (3, 0), (), "ToleranceDisplay", None),
        "ToleranceHeightScale": (1556, 2, (5, 0), (), "ToleranceHeightScale", None),
        "ToleranceJustification": (1560, 2, (3, 0), (), "ToleranceJustification", None),
        "ToleranceLowerLimit": (1557, 2, (5, 0), (), "ToleranceLowerLimit", None),
        "TolerancePrecision": (1555, 2, (3, 0), (), "TolerancePrecision", None),
        "ToleranceSuppressLeadingZeros": (1569, 2, (11, 0), (), "ToleranceSuppressLeadingZeros", None),
        "ToleranceSuppressTrailingZeros": (1570, 2, (11, 0), (), "ToleranceSuppressTrailingZeros", None),
        "ToleranceUpperLimit": (1561, 2, (5, 0), (), "ToleranceUpperLimit", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "DecimalSeparator": ((1548, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1537, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((1538, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "SuppressLeadingZeros": ((1565, LCID, 4, 0),()),
        "SuppressTrailingZeros": ((1566, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextFill": ((1571, LCID, 4, 0),()),
        "TextFillColor": ((1572, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextMovement": ((1558, LCID, 4, 0),()),
        "TextOverride": ((1541, LCID, 4, 0),()),
        "TextPosition": ((1539, LCID, 4, 0),()),
        "TextPrefix": ((1551, LCID, 4, 0),()),
        "TextRotation": ((1540, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TextSuffix": ((1552, LCID, 4, 0),()),
        "ToleranceDisplay": ((1559, LCID, 4, 0),()),
        "ToleranceHeightScale": ((1556, LCID, 4, 0),()),
        "ToleranceJustification": ((1560, LCID, 4, 0),()),
        "ToleranceLowerLimit": ((1557, LCID, 4, 0),()),
        "TolerancePrecision": ((1555, LCID, 4, 0),()),
        "ToleranceSuppressLeadingZeros": ((1569, LCID, 4, 0),()),
        "ToleranceSuppressTrailingZeros": ((1570, LCID, 4, 0),()),
        "ToleranceUpperLimit": ((1561, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDwfUnderlay(DispatchBaseClass):
    CLSID = IID('{A095BF5E-B1A5-413F-A6EA-6E057C63CA59}')
    coclass_clsid = IID('{71B03226-0D81-4E25-869B-5DA9E3F6B7CE}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Specifies an area for displaying and printing the underlay.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (1, 2, (3, 0), (), "Contrast", None),
        "DWFFormat": (18, 2, (8, 0), (), "DWFFormat", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (2, 2, (3, 0), (), "Fade", None),
        "File": (13, 2, (8, 0), (), "File", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ItemName": (8, 2, (8, 0), (), "ItemName", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (3, 2, (12, 0), (), "Position", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnderlayLayerOverrideApplied": (17, 2, (3, 0), (), "UnderlayLayerOverrideApplied", None),
        "UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
        "UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AdjustForBackground": ((15, LCID, 4, 0),()),
        "ClippingEnabled": ((16, LCID, 4, 0),()),
        "Contrast": ((1, LCID, 4, 0),()),
        "DWFFormat": ((18, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((2, LCID, 4, 0),()),
        "File": ((13, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "ItemName": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Monochrome": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((3, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((12, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnderlayLayerOverrideApplied": ((17, LCID, 4, 0),()),
        "UnderlayName": ((7, LCID, 4, 0),()),
        "UnderlayVisibility": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDynamicBlockReferenceProperty(DispatchBaseClass):
    'TeighaX Interface of an object containing the properties of a dynamic block'
    CLSID = IID('{671D7077-2C99-4D21-A5D3-A5001F1B8F12}')
    coclass_clsid = IID('{0E35FAA5-88E5-4697-948A-D262A2680445}')

    _prop_map_get_ = {
        "AllowedValues": (5, 2, (12, 0), (), "AllowedValues", None),
        "Description": (4, 2, (8, 0), (), "Description", None),
        "PropertyName": (1, 2, (8, 0), (), "PropertyName", None),
        "ReadOnly": (2, 2, (11, 0), (), "ReadOnly", None),
        "Show": (3, 2, (11, 0), (), "Show", None),
        "UnitsType": (7, 2, (3, 0), (), "UnitsType", None),
        "Value": (6, 2, (12, 0), (), "Value", None),
    }
    _prop_map_put_ = {
        "Value": ((6, LCID, 4, 0),()),
    }
    # Default property for this class is 'Value'
    def __call__(self):
        return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadEllipse(DispatchBaseClass):
    'TeighaX Interface of an elliptical arc or complete ellipse entity'
    CLSID = IID('{5B4B058E-B8AA-4C76-B652-76AF101C380F}')
    coclass_clsid = IID('{3E7B0C05-2062-420C-8EB3-EA62DC886DB1}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new ellipse at a specified distance from an original ellipse.'
        return self._ApplyTypes_(15, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'MajorAxis':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (14, 2, (5, 0), (), "Area", None),
        "Center": (2, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndAngle": (8, 2, (5, 0), (), "EndAngle", None),
        "EndParameter": (10, 2, (5, 0), (), "EndParameter", None),
        "EndPoint": (3, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MajorAxis": (11, 2, (12, 0), (), "MajorAxis", None),
        "MajorRadius": (4, 2, (5, 0), (), "MajorRadius", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MinorAxis": (12, 2, (12, 0), (), "MinorAxis", None),
        "MinorRadius": (5, 2, (5, 0), (), "MinorRadius", None),
        "Normal": (13, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RadiusRatio": (6, 2, (5, 0), (), "RadiusRatio", None),
        "StartAngle": (7, 2, (5, 0), (), "StartAngle", None),
        "StartParameter": (9, 2, (5, 0), (), "StartParameter", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Center": ((2, LCID, 4, 0),()),
        "EndAngle": ((8, LCID, 4, 0),()),
        "EndParameter": ((10, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MajorAxis": ((11, LCID, 4, 0),()),
        "MajorRadius": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "MinorRadius": ((5, LCID, 4, 0),()),
        "Normal": ((13, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RadiusRatio": ((6, LCID, 4, 0),()),
        "StartAngle": ((7, LCID, 4, 0),()),
        "StartParameter": ((9, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadEntity(DispatchBaseClass):
    'The standard interface for a basic TeighaX entity'
    CLSID = IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    coclass_clsid = IID('{7B91A7F3-234E-4BD1-8914-76856A2AF7D9}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadExternalReference(DispatchBaseClass):
    'TeighaX Interface of an instance of an external reference inserted into a drawing'
    CLSID = IID('{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')
    coclass_clsid = IID('{97A26D82-C2A9-4D4E-8036-8A841A26D262}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block reference to a regular block reference with no name.'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block reference to a regular block reference with a name.'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block or external reference and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Returns the attributes of a block or external reference.'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Returns the constant attributes of a block or external reference.'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Returns the properties of a dynamic block reference.'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Changes a dynamic block reference to its original state.'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Path": (256, 2, (8, 0), (), "Path", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "Path": ((256, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadExtrudedSurface(DispatchBaseClass):
    'TeighaX Interface of a surface created by extruding an object or a planar face a specified distance and direction'
    CLSID = IID('{91D470C0-CAB6-49F8-B13B-83D53527933A}')
    coclass_clsid = IID('{7D3E8B0E-13E1-4DED-AD26-D39649A19DA6}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Direction": (4, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        "TaperAngle": (3, 2, (5, 0), (), "TaperAngle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TaperAngle": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadFileDependencies(DispatchBaseClass):
    'TeighaX Interface for creating, updating, retrieving and removing items in the File Dependency List'
    CLSID = IID('{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}')
    coclass_clsid = IID('{2155F8AB-E527-45F7-8A97-FD850E710340}')

    def CreateEntry(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg, AffectsGraphics=defaultNamedNotOptArg, noIncrement=defaultNamedNotOptArg):
        'Creates an entry in the File Dependencis list.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (8, 1), (11, 1), (11, 1)),Feature
            , FullFileName, AffectsGraphics, noIncrement)

    def IndexOf(self, Feature=defaultNamedNotOptArg, FullFileName=defaultNamedNotOptArg):
        'Returns the index in the collection of a specified entry.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((8, 1), (8, 1)),Feature
            , FullFileName)

    # Result is of type IAcadFileDependency
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}')
        return ret

    def RemoveEntry(self, Index=defaultNamedNotOptArg, forceRemove=defaultNamedNotOptArg):
        'Removes an entry from the File Dependencies list.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (11, 1)),Index
            , forceRemove)

    def UpdateEntry(self, Index=defaultNamedNotOptArg):
        'Updates an entry in the File Dependencies list.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1),),Index
            )

    _prop_map_get_ = {
        "Application": (1, 2, (9, 0), (), "Application", None),
        "Count": (2, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadFileDependency(DispatchBaseClass):
    'TeighaX Interface to provide information about entries in the File Dependency List of a drawing file'
    CLSID = IID('{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}')
    coclass_clsid = IID('{6F500011-5D1F-40A1-A1FD-109084F95E07}')

    _prop_map_get_ = {
        "AffectsGraphics": (8, 2, (11, 0), (), "AffectsGraphics", None),
        "Feature": (6, 2, (8, 0), (), "Feature", None),
        "FileName": (2, 2, (8, 0), (), "FileName", None),
        "FileSize": (17, 2, (3, 0), (), "FileSize", None),
        "FingerprintGuid": (4, 2, (8, 0), (), "FingerprintGuid", None),
        "FoundPath": (3, 2, (8, 0), (), "FoundPath", None),
        "FullFileName": (1, 2, (8, 0), (), "FullFileName", None),
        "Index": (9, 2, (3, 0), (), "Index", None),
        "IsModified": (7, 2, (11, 0), (), "IsModified", None),
        "ReferenceCount": (18, 2, (3, 0), (), "ReferenceCount", None),
        "TimeStamp": (16, 2, (3, 0), (), "TimeStamp", None),
        "VersionGuid": (5, 2, (8, 0), (), "VersionGuid", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadGroup(DispatchBaseClass):
    'TeighaX Interface of a named SelectionSet object'
    CLSID = IID('{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')
    coclass_clsid = IID('{3C200789-8338-447D-8373-AFEF38713BAA}')

    def AppendItems(self, Objects=defaultNamedNotOptArg):
        'Adds one or more objects to the group.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Sets the highlight status of all entites in the group.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the group.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def RemoveItems(self, Objects=defaultNamedNotOptArg):
        'Removes objects from the group.'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Update(self):
        'Updates the group on the screen.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (10, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Layer": ((3, LCID, 4, 0),()),
        "Linetype": ((4, LCID, 4, 0),()),
        "LinetypeScale": ((5, LCID, 4, 0),()),
        "Lineweight": ((9, LCID, 4, 0),()),
        "Material": ((16, LCID, 4, 0),()),
        "Name": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((8, LCID, 4, 0),()),
        "TrueColor": ((15, LCID, 4, 0),()),
        "Visible": ((6, LCID, 4, 0),()),
        "color": ((2, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the group.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadGroups(DispatchBaseClass):
    'TeighaX Interface of the collection of all groups in the drawing'
    CLSID = IID('{973585F9-D300-4BA7-9D0F-6EE59533A0DC}')
    coclass_clsid = IID('{2D7FB26E-9052-4F9F-BD2D-D18C50713ED6}')

    # Result is of type IAcadGroup
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadGroup
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadHatch(DispatchBaseClass):
    'TeighaX Interface of an area fill consisting of a pattern of lines'
    CLSID = IID('{173ED161-3D64-4EF5-85F4-6AACA83CD382}')
    coclass_clsid = IID('{4B2665FC-67ED-44AF-8C4D-6A04816631F3}')

    def AppendInnerLoop(self, ObjectArray=defaultNamedNotOptArg):
        'Adds an inner loop to a hatch.'
        ObjectArray = VTDISPArrayOrVal(ObjectArray)
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((12, 1),),ObjectArray
            )

    def AppendOuterLoop(self, ObjectArray=defaultNamedNotOptArg):
        'Adds the outer loop to a hatch.'
        ObjectArray = VTDISPArrayOrVal(ObjectArray)
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((12, 1),),ObjectArray
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Evaluate(self):
        'Calculates and fills the pattern of a hatch.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetLoopAt(self, Index=defaultNamedNotOptArg, ObjectArray=pythoncom.Missing):
        'Returns a loop at a specified index of a hatch.'
        return self._ApplyTypes_(17, 1, (24, 0), ((3, 1), (16396, 2)), 'GetLoopAt', None,Index
            , ObjectArray)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def InsertLoopAt(self, Index=defaultNamedNotOptArg, LoopType=defaultNamedNotOptArg, ObjectArray=defaultNamedNotOptArg):
        'Adds a loop at a specified index of a hatch.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1)),Index
            , LoopType, ObjectArray)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetPattern(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg):
        'Specifies the pattern of a hatch.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (8, 1)),PatternType
            , PatternName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (25, 2, (5, 0), (), "Area", None),
        "AssociativeHatch": (11, 2, (11, 0), (), "AssociativeHatch", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (10, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "GradientAngle": (21, 2, (5, 0), (), "GradientAngle", None),
        "GradientCentered": (22, 2, (11, 0), (), "GradientCentered", None),
        # Method 'GradientColor1' returns object of type 'IAcadAcCmColor'
        "GradientColor1": (19, 2, (9, 0), (), "GradientColor1", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        # Method 'GradientColor2' returns object of type 'IAcadAcCmColor'
        "GradientColor2": (20, 2, (9, 0), (), "GradientColor2", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "GradientName": (23, 2, (8, 0), (), "GradientName", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HatchObjectType": (24, 2, (3, 0), (), "HatchObjectType", None),
        "HatchStyle": (12, 2, (3, 0), (), "HatchStyle", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ISOPenWidth": (8, 2, (3, 0), (), "ISOPenWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1, 2, (12, 0), (), "Normal", None),
        "NumberOfLoops": (2, 2, (3, 0), (), "NumberOfLoops", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (26, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PatternAngle": (5, 2, (5, 0), (), "PatternAngle", None),
        "PatternDouble": (9, 2, (11, 0), (), "PatternDouble", None),
        "PatternName": (4, 2, (8, 0), (), "PatternName", None),
        "PatternScale": (6, 2, (5, 0), (), "PatternScale", None),
        "PatternSpace": (7, 2, (5, 0), (), "PatternSpace", None),
        "PatternType": (3, 2, (3, 0), (), "PatternType", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AssociativeHatch": ((11, LCID, 4, 0),()),
        "Elevation": ((10, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "GradientAngle": ((21, LCID, 4, 0),()),
        "GradientCentered": ((22, LCID, 4, 0),()),
        "GradientColor1": ((19, LCID, 4, 0),()),
        "GradientColor2": ((20, LCID, 4, 0),()),
        "GradientName": ((23, LCID, 4, 0),()),
        "HatchObjectType": ((24, LCID, 4, 0),()),
        "HatchStyle": ((12, LCID, 4, 0),()),
        "ISOPenWidth": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1, LCID, 4, 0),()),
        "Origin": ((26, LCID, 4, 0),()),
        "PatternAngle": ((5, LCID, 4, 0),()),
        "PatternDouble": ((9, LCID, 4, 0),()),
        "PatternScale": ((6, LCID, 4, 0),()),
        "PatternSpace": ((7, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHatch2(DispatchBaseClass):
    'TeighaX Interface of an area fill consisting of a pattern of lines'
    CLSID = IID('{8CF4A451-A8A4-40C1-9ECC-26EF097042D6}')
    coclass_clsid = IID('{4B2665FC-67ED-44AF-8C4D-6A04816631F3}')

    def AppendInnerLoop(self, ObjectArray=defaultNamedNotOptArg, bCheckLoop=defaultNamedNotOptArg):
        'Adds an inner loop to a hatch.'
        return self._oleobj_.InvokeTypes(29, LCID, 1, (24, 0), ((12, 1), (11, 1)),ObjectArray
            , bCheckLoop)

    def AppendOuterLoop(self, ObjectArray=defaultNamedNotOptArg, bCheckLoop=defaultNamedNotOptArg):
        'Adds the outer loop to a hatch.'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((12, 1), (11, 1)),ObjectArray
            , bCheckLoop)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Evaluate(self):
        'Calculates and fills the pattern of a hatch.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetLoopAt(self, Index=defaultNamedNotOptArg, ObjectArray=pythoncom.Missing):
        'Returns a loop at a specified index of a hatch.'
        return self._ApplyTypes_(17, 1, (24, 0), ((3, 1), (16396, 2)), 'GetLoopAt', None,Index
            , ObjectArray)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def InsertLoopAt(self, Index=defaultNamedNotOptArg, LoopType=defaultNamedNotOptArg, ObjectArray=defaultNamedNotOptArg, bCheckLoop=defaultNamedNotOptArg):
        'Adds a loop at a specified index of a hatch.'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1), (11, 1)),Index
            , LoopType, ObjectArray, bCheckLoop)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetPattern(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg):
        'Specifies the pattern of a hatch.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (8, 1)),PatternType
            , PatternName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (25, 2, (5, 0), (), "Area", None),
        "AssociativeHatch": (11, 2, (11, 0), (), "AssociativeHatch", None),
        # Method 'BackgroundColor' returns object of type 'IAcadAcCmColor'
        "BackgroundColor": (27, 2, (9, 0), (), "BackgroundColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (10, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "GradientAngle": (21, 2, (5, 0), (), "GradientAngle", None),
        "GradientCentered": (22, 2, (11, 0), (), "GradientCentered", None),
        # Method 'GradientColor1' returns object of type 'IAcadAcCmColor'
        "GradientColor1": (19, 2, (9, 0), (), "GradientColor1", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        # Method 'GradientColor2' returns object of type 'IAcadAcCmColor'
        "GradientColor2": (20, 2, (9, 0), (), "GradientColor2", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "GradientName": (23, 2, (8, 0), (), "GradientName", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HatchObjectType": (24, 2, (3, 0), (), "HatchObjectType", None),
        "HatchStyle": (12, 2, (3, 0), (), "HatchStyle", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ISOPenWidth": (8, 2, (3, 0), (), "ISOPenWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1, 2, (12, 0), (), "Normal", None),
        "NumberOfLoops": (2, 2, (3, 0), (), "NumberOfLoops", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (26, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PatternAngle": (5, 2, (5, 0), (), "PatternAngle", None),
        "PatternDouble": (9, 2, (11, 0), (), "PatternDouble", None),
        "PatternName": (4, 2, (8, 0), (), "PatternName", None),
        "PatternScale": (6, 2, (5, 0), (), "PatternScale", None),
        "PatternSpace": (7, 2, (5, 0), (), "PatternSpace", None),
        "PatternType": (3, 2, (3, 0), (), "PatternType", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AssociativeHatch": ((11, LCID, 4, 0),()),
        "BackgroundColor": ((27, LCID, 4, 0),()),
        "Elevation": ((10, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "GradientAngle": ((21, LCID, 4, 0),()),
        "GradientCentered": ((22, LCID, 4, 0),()),
        "GradientColor1": ((19, LCID, 4, 0),()),
        "GradientColor2": ((20, LCID, 4, 0),()),
        "GradientName": ((23, LCID, 4, 0),()),
        "HatchObjectType": ((24, LCID, 4, 0),()),
        "HatchStyle": ((12, LCID, 4, 0),()),
        "ISOPenWidth": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((1, LCID, 4, 0),()),
        "Origin": ((26, LCID, 4, 0),()),
        "PatternAngle": ((5, LCID, 4, 0),()),
        "PatternDouble": ((9, LCID, 4, 0),()),
        "PatternScale": ((6, LCID, 4, 0),()),
        "PatternSpace": ((7, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHelix(DispatchBaseClass):
    'TeighaX Interface of Helix entity'
    CLSID = IID('{7480DD11-B890-41B3-BD1A-562D5190DDC2}')
    coclass_clsid = IID('{AA0DEA33-0EB3-432B-B91B-88384639BBA3}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BaseRadius": (6, 2, (5, 0), (), "BaseRadius", None),
        "Constrain": (2, 2, (3, 0), (), "Constrain", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (1, 2, (12, 0), (), "Position", None),
        "TopRadius": (7, 2, (5, 0), (), "TopRadius", None),
        "TotalLength": (10, 2, (5, 0), (), "TotalLength", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "TurnHeight": (5, 2, (5, 0), (), "TurnHeight", None),
        "TurnSlope": (9, 2, (5, 0), (), "TurnSlope", None),
        "Turns": (4, 2, (5, 0), (), "Turns", None),
        "Twist": (8, 2, (3, 0), (), "Twist", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BaseRadius": ((6, LCID, 4, 0),()),
        "Constrain": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((1, LCID, 4, 0),()),
        "TopRadius": ((7, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "TurnHeight": ((5, LCID, 4, 0),()),
        "Turns": ((4, LCID, 4, 0),()),
        "Twist": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHyperlink(DispatchBaseClass):
    'TeighaX Interface of a URL and URL description'
    CLSID = IID('{CFC06944-7FD0-432E-A430-B77F2967EB4C}')
    coclass_clsid = IID('{2591C8C9-336E-4DA2-875F-5BD437A4E6A5}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (3, 2, (9, 0), (), "Application", None),
        "URL": (1, 2, (8, 0), (), "URL", None),
        "URLDescription": (2, 2, (8, 0), (), "URLDescription", None),
        "URLNamedLocation": (5, 2, (8, 0), (), "URLNamedLocation", None),
    }
    _prop_map_put_ = {
        "URL": ((1, LCID, 4, 0),()),
        "URLDescription": ((2, LCID, 4, 0),()),
        "URLNamedLocation": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadHyperlinks(DispatchBaseClass):
    'TeighaX Interface for the collection of all hyperlinks for a given entity'
    CLSID = IID('{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}')
    coclass_clsid = IID('{277E3E52-6C69-4AC1-9312-DD3A02519F33}')

    # Result is of type IAcadHyperlink
    def Add(self, Name=defaultNamedNotOptArg, Description=defaultNamedOptArg, NamedLocation=defaultNamedOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
            , Description, NamedLocation)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{CFC06944-7FD0-432E-A430-B77F2967EB4C}')
        return ret

    # Result is of type IAcadHyperlink
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{CFC06944-7FD0-432E-A430-B77F2967EB4C}')
        return ret

    _prop_map_get_ = {
        "Application": (2, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{CFC06944-7FD0-432E-A430-B77F2967EB4C}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{CFC06944-7FD0-432E-A430-B77F2967EB4C}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadIdPair(DispatchBaseClass):
    'TeighaX Interface of a special object for use with the CopyObjects method that contains the object IDs of both the source and destination objects'
    CLSID = IID('{1033C7F9-2D77-449D-8EA2-BD61DA1C9BCB}')
    coclass_clsid = None

    _prop_map_get_ = {
        "Application": (6, 2, (9, 0), (), "Application", None),
        "IsCloned": (1, 2, (11, 0), (), "IsCloned", None),
        "IsOwnerXlated": (2, 2, (11, 0), (), "IsOwnerXlated", None),
        "IsPrimary": (3, 2, (11, 0), (), "IsPrimary", None),
        "Key32": (7, 2, (3, 0), (), "Key32", None),
        "Value": (5, 2, (20, 0), (), "Value", None),
        "Value32": (8, 2, (3, 0), (), "Value32", None),
        "key": (4, 2, (20, 0), (), "key", None),
    }
    _prop_map_put_ = {
    }
    # Default property for this class is 'Value'
    def __call__(self):
        return self._ApplyTypes_(*(5, 2, (20, 0), (), "Value", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLWPolyline(DispatchBaseClass):
    'TeighaX Interface of 2D line with adjustable width composed of line and arc segments entity'
    CLSID = IID('{037572DF-0207-4B27-BCDA-C163054A21DF}')
    coclass_clsid = IID('{87897864-72C3-4D87-81DD-00614EC82213}')

    def AddVertex(self, Index=defaultNamedNotOptArg, vertex=defaultNamedNotOptArg):
        'Creates and adds a new vertex to a lightweight polyline.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , vertex)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the lightweight polyline and returns the individual entities as an array of lines and arcs.'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetBulge(self, Index=defaultNamedNotOptArg):
        'Returns the bulge value for a vertex of a lightweight polyline.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=pythoncom.Missing):
        'Returns the width for a segment of a lightweight polyline.'
        return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetWidth', None,Index
            , StartWidth, EndWidth)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new lightweight polyline at a specified distance from an original lightweight polyline.'
        return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
        'Specifies the bulge value for a vertex of a lightweight polyline.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , bulge)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
        'Specifies the width for a segment of a lightweight polyline.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1)),Index
            , StartWidth, EndWidth)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (13, 2, (5, 0), (), "Area", None),
        "Closed": (15, 2, (11, 0), (), "Closed", None),
        "ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (12, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (17, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeGeneration": (16, 2, (11, 0), (), "LinetypeGeneration", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((15, LCID, 4, 0),()),
        "ConstantWidth": ((10, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "Elevation": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeGeneration": ((16, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayer(DispatchBaseClass):
    'TeighaX Interface of a logical grouping of data, similar to overlays.'
    CLSID = IID('{A5484251-D4DF-4F32-A23F-445882F48F1B}')
    coclass_clsid = IID('{4EDD52C1-33F1-4B70-A800-2654F60D1D2B}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (12, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Freeze": (2, 2, (11, 0), (), "Freeze", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "LayerOn": (3, 2, (11, 0), (), "LayerOn", None),
        "Linetype": (4, 2, (8, 0), (), "Linetype", None),
        "Lineweight": (10, 2, (3, 0), (), "Lineweight", None),
        "Lock": (5, 2, (11, 0), (), "Lock", None),
        "Material": (14, 2, (8, 0), (), "Material", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (9, 2, (8, 0), (), "PlotStyleName", None),
        "Plottable": (7, 2, (11, 0), (), "Plottable", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (11, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Used": (13, 2, (11, 0), (), "Used", None),
        "ViewportDefault": (8, 2, (11, 0), (), "ViewportDefault", None),
        "color": (1, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Description": ((12, LCID, 4, 0),()),
        "Freeze": ((2, LCID, 4, 0),()),
        "LayerOn": ((3, LCID, 4, 0),()),
        "Linetype": ((4, LCID, 4, 0),()),
        "Lineweight": ((10, LCID, 4, 0),()),
        "Lock": ((5, LCID, 4, 0),()),
        "Material": ((14, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((9, LCID, 4, 0),()),
        "Plottable": ((7, LCID, 4, 0),()),
        "TrueColor": ((11, LCID, 4, 0),()),
        "ViewportDefault": ((8, LCID, 4, 0),()),
        "color": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayers(DispatchBaseClass):
    'TeighaX Interface of the collection of all layers in the drawing'
    CLSID = IID('{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}')
    coclass_clsid = IID('{B9FEA495-416E-44BC-AB51-7150524E5AE0}')

    # Result is of type IAcadLayer
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{A5484251-D4DF-4F32-A23F-445882F48F1B}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GenerateUsageData(self):
        'Generates data about whether a layer is in use.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLayer
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{A5484251-D4DF-4F32-A23F-445882F48F1B}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{A5484251-D4DF-4F32-A23F-445882F48F1B}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{A5484251-D4DF-4F32-A23F-445882F48F1B}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLayout(DispatchBaseClass):
    'TeighaX Interface of the plot settings and visual properties of a model space or paper space block'
    CLSID = IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')
    coclass_clsid = IID('{D3D20BA9-3EDD-4108-9E10-4EE99F917847}')

    def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
        'Copies settings from a plot configuration file.'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetCanonicalMediaNames(self):
        'Returns names of the media available for a print device.'
        return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

    def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
        'Returns the custom scale value.'
        return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
            , Denominator)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
        'Returns the localized version of a media name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
            )

    def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Returns the margins used for printing.'
        return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
            , UpperRight)

    def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
        'Returns the width and height of the specified media.'
        return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
            , Height)

    def GetPlotDeviceNames(self):
        'Returns print device names.'
        return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

    def GetPlotStyleTableNames(self):
        'Returns plot style table names.'
        return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

    def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Returns the coordinates that define the area to print.'
        return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
            , UpperRight)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def RefreshPlotDeviceInfo(self):
        'Updates print device information with the current settings.'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

    def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
        'Sets the custom scale value.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
            , Denominator)

    def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Sets the coordinates that define the area to print.'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)
        
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'CenterPlot':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'PlotOrigin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Block' returns object of type 'IAcadBlock'
        "Block": (48, 2, (9, 0), (), "Block", '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}'),
        "CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
        "CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
        "ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ModelType": (34, 2, (11, 0), (), "ModelType", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
        "PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
        "PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
        "PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
        "PlotType": (13, 2, (3, 0), (), "PlotType", None),
        "PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
        "PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
        "PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
        "PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
        "ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
        "ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
        "StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
        "StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
        "TabOrder": (49, 2, (3, 0), (), "TabOrder", None),
        "UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
        "ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
    }
    _prop_map_put_ = {
        "CanonicalMediaName": ((6, LCID, 4, 0),()),
        "CenterPlot": ((11, LCID, 4, 0),()),
        "ConfigName": ((3, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PaperUnits": ((7, LCID, 4, 0),()),
        "PlotHidden": ((12, LCID, 4, 0),()),
        "PlotOrigin": ((30, LCID, 4, 0),()),
        "PlotRotation": ((10, LCID, 4, 0),()),
        "PlotType": ((13, LCID, 4, 0),()),
        "PlotViewportBorders": ((8, LCID, 4, 0),()),
        "PlotViewportsFirst": ((24, LCID, 4, 0),()),
        "PlotWithLineweights": ((21, LCID, 4, 0),()),
        "PlotWithPlotStyles": ((33, LCID, 4, 0),()),
        "ScaleLineweights": ((20, LCID, 4, 0),()),
        "ShowPlotStyles": ((9, LCID, 4, 0),()),
        "StandardScale": ((16, LCID, 4, 0),()),
        "StyleSheet": ((25, LCID, 4, 0),()),
        "TabOrder": ((49, LCID, 4, 0),()),
        "UseStandardScale": ((15, LCID, 4, 0),()),
        "ViewToPlot": ((14, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLayouts(DispatchBaseClass):
    'TeighaX Interface of the collection of all layouts in the drawing'
    CLSID = IID('{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}')
    coclass_clsid = IID('{E386A799-DE90-42E8-9FC1-89DDB6CEFC41}')

    # Result is of type IAcadLayout
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLayout
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLeader(DispatchBaseClass):
    'TeighaX Interface of an object composed of an arrowhead attached to splines or straight line segments'
    CLSID = IID('{A7072E19-38E6-4320-9045-B67E53179643}')
    coclass_clsid = IID('{B02B4037-B189-4C98-BBF6-6DA42B1D673D}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(67, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Evaluate(self):
        'Evaluates and updates a leader and its associated entity and annotation.'
        return self._oleobj_.InvokeTypes(66, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._oleobj_.InvokeTypes(67, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'VerticalTextPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        # Method 'Annotation' returns object of type 'IAcadEntity'
        "Annotation": (68, 2, (9, 0), (), "Annotation", '{FFE64704-CEBD-4C88-A867-E7C821AFE488}'),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (70, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (1543, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (69, 2, (3, 0), (), "ArrowheadType", None),
        "Coordinates": (64, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DimensionLineWeight": (1550, 2, (3, 0), (), "DimensionLineWeight", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (1537, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "TextGap": (1549, 2, (5, 0), (), "TextGap", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Type": (65, 2, (3, 0), (), "Type", None),
        "VerticalTextPosition": (1554, 2, (3, 0), (), "VerticalTextPosition", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Annotation": ((68, LCID, 4, 0),()),
        "ArrowheadBlock": ((70, LCID, 4, 0),()),
        "ArrowheadSize": ((1543, LCID, 4, 0),()),
        "ArrowheadType": ((69, LCID, 4, 0),()),
        "Coordinates": ((64, LCID, 4, 0),()),
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DimensionLineWeight": ((1550, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "TextGap": ((1549, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((65, LCID, 4, 0),()),
        "VerticalTextPosition": ((1554, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLine(DispatchBaseClass):
    'TeighaX Interface of a single line segment'
    CLSID = IID('{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')
    coclass_clsid = IID('{E0ED259B-1BDB-4411-95BF-495BA25926A9}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Copies an existing line and places the copy at a specified distance from the existing line.'
        return self._ApplyTypes_(5, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadLine override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'EndPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'StartPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Angle": (8, 2, (5, 0), (), "Angle", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Delta": (6, 2, (12, 0), (), "Delta", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndPoint": (2, 2, (12, 0), (), "EndPoint", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (7, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartPoint": (1, 2, (12, 0), (), "StartPoint", None),
        "Thickness": (4, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EndPoint": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartPoint": ((1, LCID, 4, 0),()),
        "Thickness": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLineType(DispatchBaseClass):
    'TeighaX Interface of the line characteristics consisting of combinations of dashes, dots, and spaces'
    CLSID = IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
    coclass_clsid = IID('{0781CAE4-6055-4D40-B954-42D5EC725018}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (1, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Description": ((1, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadLineTypes(DispatchBaseClass):
    'TeighaX Interface of the collection of all linetypes in the drawing'
    CLSID = IID('{669E518F-46F5-4E21-8447-7F8D1435AE94}')
    coclass_clsid = IID('{D49DF09F-070E-429D-976D-39F53AE3EF0B}')

    # Result is of type IAcadLineType
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLineType
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
        return ret

    def Load(self, Name=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
        'Loads and makes available a linetype from an LIN file.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1), (8, 1)),Name
            , FileName)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLoftedSurface(DispatchBaseClass):
    'TeighaX Interface of a surface created by lofting through a set of two or more curves'
    CLSID = IID('{9A580AC7-FD1D-4D94-A668-B00745FDB153}')
    coclass_clsid = IID('{50347C02-0E1F-407E-9962-A96E32FA97D7}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Closed": (9, 2, (11, 0), (), "Closed", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndDraftAngle": (7, 2, (5, 0), (), "EndDraftAngle", None),
        "EndDraftMagnitude": (8, 2, (5, 0), (), "EndDraftMagnitude", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumCrossSections": (2, 2, (3, 0), (), "NumCrossSections", None),
        "NumGuidePaths": (3, 2, (3, 0), (), "NumGuidePaths", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartDraftAngle": (5, 2, (5, 0), (), "StartDraftAngle", None),
        "StartDraftMagnitude": (6, 2, (5, 0), (), "StartDraftMagnitude", None),
        "SurfaceNormals": (4, 2, (3, 0), (), "SurfaceNormals", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((9, LCID, 4, 0),()),
        "EndDraftAngle": ((7, LCID, 4, 0),()),
        "EndDraftMagnitude": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartDraftAngle": ((5, LCID, 4, 0),()),
        "StartDraftMagnitude": ((6, LCID, 4, 0),()),
        "SurfaceNormals": ((4, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMInsertBlock(DispatchBaseClass):
    'TeighaX Interface of a rectangular array of block references'
    CLSID = IID('{A6653F5A-001E-4125-8BB0-597E96CDE498}')
    coclass_clsid = IID('{A3E63831-0E7F-492F-9621-21B2627DF0D1}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ConvertToAnonymousBlock(self):
        'Converts a dynamic block reference to a regular block reference with no name.'
        return self._oleobj_.InvokeTypes(516, LCID, 1, (24, 0), (),)

    def ConvertToStaticBlock(self, newBlockName=defaultNamedNotOptArg):
        'Converts a dynamic block reference to a regular block reference with a name.'
        return self._oleobj_.InvokeTypes(517, LCID, 1, (24, 0), ((8, 1),),newBlockName
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the block or external reference and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(8, 1, (12, 0), (), 'Explode', None,)

    def GetAttributes(self):
        'Returns the attributes of a block or external reference.'
        return self._ApplyTypes_(9, 1, (12, 0), (), 'GetAttributes', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetConstantAttributes(self):
        'Returns the constant attributes of a block or external reference.'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'GetConstantAttributes', None,)

    def GetDynamicBlockProperties(self):
        'Returns the properties of a dynamic block reference.'
        return self._ApplyTypes_(514, 1, (12, 0), (), 'GetDynamicBlockProperties', None,)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def ResetBlock(self):
        'Changes a dynamic block reference to its original state.'
        return self._oleobj_.InvokeTypes(515, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ColumnSpacing": (257, 2, (5, 0), (), "ColumnSpacing", None),
        "Columns": (256, 2, (3, 0), (), "Columns", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EffectiveName": (512, 2, (8, 0), (), "EffectiveName", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasAttributes": (11, 2, (11, 0), (), "HasAttributes", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsUnits": (521, 2, (8, 0), (), "InsUnits", None),
        "InsUnitsFactor": (528, 2, (5, 0), (), "InsUnitsFactor", None),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "IsDynamicBlock": (513, 2, (11, 0), (), "IsDynamicBlock", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (3, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "RowSpacing": (259, 2, (5, 0), (), "RowSpacing", None),
        "Rows": (258, 2, (3, 0), (), "Rows", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "XEffectiveScaleFactor": (518, 2, (5, 0), (), "XEffectiveScaleFactor", None),
        "XScaleFactor": (5, 2, (5, 0), (), "XScaleFactor", None),
        "YEffectiveScaleFactor": (519, 2, (5, 0), (), "YEffectiveScaleFactor", None),
        "YScaleFactor": (6, 2, (5, 0), (), "YScaleFactor", None),
        "ZEffectiveScaleFactor": (520, 2, (5, 0), (), "ZEffectiveScaleFactor", None),
        "ZScaleFactor": (7, 2, (5, 0), (), "ZScaleFactor", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ColumnSpacing": ((257, LCID, 4, 0),()),
        "Columns": ((256, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((3, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "RowSpacing": ((259, LCID, 4, 0),()),
        "Rows": ((258, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "XEffectiveScaleFactor": ((518, LCID, 4, 0),()),
        "XScaleFactor": ((5, LCID, 4, 0),()),
        "YEffectiveScaleFactor": ((519, LCID, 4, 0),()),
        "YScaleFactor": ((6, LCID, 4, 0),()),
        "ZEffectiveScaleFactor": ((520, LCID, 4, 0),()),
        "ZScaleFactor": ((7, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLeader(DispatchBaseClass):
    'TeighaX Multi-Leader Interface'
    CLSID = IID('{A2F0013E-ACE4-41C5-9015-37587663DD30}')
    coclass_clsid = IID('{CF0F8CEA-42D4-49E7-BDFA-764CFC2F412C}')

    def AddLeader(self):
        'Adds a new cluster of leader lines to a multileader.'
        return self._oleobj_.InvokeTypes(27, LCID, 1, (3, 0), (),)

    def AddLeaderLine(self, leaderIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
        'Adds a leader line to the leader cluster of a multileader.'
        return self._oleobj_.InvokeTypes(29, LCID, 1, (3, 0), ((3, 1), (12, 1)),leaderIndex
            , pointArray)

    def AddLeaderLineEx(self, pointArray=defaultNamedNotOptArg):
        'Adds a new leader line to a multileader using a start vertex for the leader line.'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (3, 0), ((12, 1),),pointArray
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg):
        'Returns the attribute value of a block.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(44, LCID, 1, (8, 0), ((20, 1),),attdefId
            )

    def GetBlockAttributeValue32(self, attdefId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(46, LCID, 1, (8, 0), ((3, 1),),attdefId
            )

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg):
        'Returns the dog leg direction of a multileader.'
        return self._ApplyTypes_(41, 1, (12, 0), ((3, 1),), 'GetDoglegDirection', None,leaderIndex
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetLeaderIndex(self, leaderLineIndex=defaultNamedNotOptArg):
        'Returns the index of the leader cluster to which a specified leader line belongs.'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
            )

    def GetLeaderLineIndexes(self, leaderIndex=defaultNamedNotOptArg):
        'Returns the index of a leader line.'
        return self._ApplyTypes_(36, 1, (12, 0), ((3, 1),), 'GetLeaderLineIndexes', None,leaderIndex
            )

    def GetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg):
        'Specifies the vertices for a leader line.'
        return self._ApplyTypes_(33, 1, (12, 0), ((3, 1),), 'GetLeaderLineVertices', None,leaderLineIndex
            )

    def GetVertexCount(self, leaderLineIndex=defaultNamedNotOptArg):
        'Returns the number of vertices in a leader line of a multileader.'
        return self._oleobj_.InvokeTypes(37, LCID, 1, (3, 0), ((3, 1),),leaderLineIndex
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RemoveLeader(self, leaderIndex=defaultNamedNotOptArg):
        'Deletes a cluster of leader lines from a multileader.'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1),),leaderIndex
            )

    def RemoveLeaderLine(self, leaderLineIndex=defaultNamedNotOptArg):
        'Deletes a leader line from a multileader.'
        return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((3, 1),),leaderLineIndex
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBlockAttributeValue(self, attdefId=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Specifies the attribute value of a block.'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((20, 1), (8, 1)),attdefId
            , Value)

    def SetBlockAttributeValue32(self, attdefId=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), ((3, 1), (8, 1)),attdefId
            , Value)

    def SetDoglegDirection(self, leaderIndex=defaultNamedNotOptArg, dirVec=defaultNamedNotOptArg):
        'Specifies the dog leg direction of a multileader.'
        return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderIndex
            , dirVec)

    def SetLeaderLineVertices(self, leaderLineIndex=defaultNamedNotOptArg, pointArray=defaultNamedNotOptArg):
        'Specifies the vertices for a leader line.'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((3, 1), (12, 1)),leaderLineIndex
            , pointArray)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowheadBlock": (24, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (6, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (5, 2, (3, 0), (), "ArrowheadType", None),
        "BlockConnectionType": (10, 2, (3, 0), (), "BlockConnectionType", None),
        "BlockScale": (51, 2, (5, 0), (), "BlockScale", None),
        "ContentBlockName": (9, 2, (8, 0), (), "ContentBlockName", None),
        "ContentBlockType": (25, 2, (3, 0), (), "ContentBlockType", None),
        "ContentType": (34, 2, (3, 0), (), "ContentType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DogLegged": (7, 2, (11, 0), (), "DogLegged", None),
        "DoglegLength": (8, 2, (5, 0), (), "DoglegLength", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "LandingGap": (23, 2, (5, 0), (), "LandingGap", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LeaderCount": (26, 2, (3, 0), (), "LeaderCount", None),
        # Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
        "LeaderLineColor": (2, 2, (9, 0), (), "LeaderLineColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "LeaderLineType": (3, 2, (8, 0), (), "LeaderLineType", None),
        "LeaderLineWeight": (4, 2, (3, 0), (), "LeaderLineWeight", None),
        "LeaderType": (1, 2, (3, 0), (), "LeaderType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (38, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (40, 2, (8, 0), (), "StyleName", None),
        "TextAttachmentDirection": (48, 2, (3, 0), (), "TextAttachmentDirection", None),
        "TextBackgroundFill": (21, 2, (11, 0), (), "TextBackgroundFill", None),
        "TextBottomAttachmentType": (50, 2, (3, 0), (), "TextBottomAttachmentType", None),
        "TextDirection": (14, 2, (3, 0), (), "TextDirection", None),
        "TextFrameDisplay": (39, 2, (11, 0), (), "TextFrameDisplay", None),
        "TextHeight": (16, 2, (5, 0), (), "TextHeight", None),
        "TextJustify": (13, 2, (3, 0), (), "TextJustify", None),
        "TextLeftAttachmentType": (22, 2, (3, 0), (), "TextLeftAttachmentType", None),
        "TextLineSpacingDistance": (19, 2, (5, 0), (), "TextLineSpacingDistance", None),
        "TextLineSpacingFactor": (18, 2, (5, 0), (), "TextLineSpacingFactor", None),
        "TextLineSpacingStyle": (20, 2, (3, 0), (), "TextLineSpacingStyle", None),
        "TextRightAttachmentType": (43, 2, (3, 0), (), "TextRightAttachmentType", None),
        "TextRotation": (17, 2, (5, 0), (), "TextRotation", None),
        "TextString": (11, 2, (8, 0), (), "TextString", None),
        "TextStyleName": (12, 2, (8, 0), (), "TextStyleName", None),
        "TextTopAttachmentType": (49, 2, (3, 0), (), "TextTopAttachmentType", None),
        "TextWidth": (15, 2, (5, 0), (), "TextWidth", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ArrowheadBlock": ((24, LCID, 4, 0),()),
        "ArrowheadSize": ((6, LCID, 4, 0),()),
        "ArrowheadType": ((5, LCID, 4, 0),()),
        "BlockConnectionType": ((10, LCID, 4, 0),()),
        "BlockScale": ((51, LCID, 4, 0),()),
        "ContentBlockName": ((9, LCID, 4, 0),()),
        "ContentBlockType": ((25, LCID, 4, 0),()),
        "ContentType": ((34, LCID, 4, 0),()),
        "DogLegged": ((7, LCID, 4, 0),()),
        "DoglegLength": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "LandingGap": ((23, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LeaderLineColor": ((2, LCID, 4, 0),()),
        "LeaderLineType": ((3, LCID, 4, 0),()),
        "LeaderLineWeight": ((4, LCID, 4, 0),()),
        "LeaderType": ((1, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((38, LCID, 4, 0),()),
        "StyleName": ((40, LCID, 4, 0),()),
        "TextAttachmentDirection": ((48, LCID, 4, 0),()),
        "TextBackgroundFill": ((21, LCID, 4, 0),()),
        "TextBottomAttachmentType": ((50, LCID, 4, 0),()),
        "TextDirection": ((14, LCID, 4, 0),()),
        "TextFrameDisplay": ((39, LCID, 4, 0),()),
        "TextHeight": ((16, LCID, 4, 0),()),
        "TextJustify": ((13, LCID, 4, 0),()),
        "TextLeftAttachmentType": ((22, LCID, 4, 0),()),
        "TextLineSpacingDistance": ((19, LCID, 4, 0),()),
        "TextLineSpacingFactor": ((18, LCID, 4, 0),()),
        "TextLineSpacingStyle": ((20, LCID, 4, 0),()),
        "TextRightAttachmentType": ((43, LCID, 4, 0),()),
        "TextRotation": ((17, LCID, 4, 0),()),
        "TextString": ((11, LCID, 4, 0),()),
        "TextStyleName": ((12, LCID, 4, 0),()),
        "TextTopAttachmentType": ((49, LCID, 4, 0),()),
        "TextWidth": ((15, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLeaderLeader(DispatchBaseClass):
    "AutoCAD Interface for Multi-Leader's Leader Line"
    CLSID = IID('{D0AC8EBF-1F76-43EF-9748-D7EE52AABE25}')
    coclass_clsid = IID('{EEA688F8-1BA2-46DE-80F8-39C0EB3F592B}')

    def OnModified(self):
        return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "ArrowheadBlock": (7, 2, (8, 0), (), "ArrowheadBlock", None),
        "ArrowheadSize": (6, 2, (5, 0), (), "ArrowheadSize", None),
        "ArrowheadType": (5, 2, (3, 0), (), "ArrowheadType", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        # Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
        "LeaderLineColor": (2, 2, (9, 0), (), "LeaderLineColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "LeaderLineType": (3, 2, (8, 0), (), "LeaderLineType", None),
        "LeaderLineWeight": (4, 2, (3, 0), (), "LeaderLineWeight", None),
        "LeaderType": (1, 2, (3, 0), (), "LeaderType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'color' returns object of type 'IAcadAcCmColor'
        "color": (1302, 2, (9, 0), (), "color", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
    }
    _prop_map_put_ = {
        "ArrowheadBlock": ((7, LCID, 4, 0),()),
        "ArrowheadSize": ((6, LCID, 4, 0),()),
        "ArrowheadType": ((5, LCID, 4, 0),()),
        "LeaderLineColor": ((2, LCID, 4, 0),()),
        "LeaderLineType": ((3, LCID, 4, 0),()),
        "LeaderLineWeight": ((4, LCID, 4, 0),()),
        "LeaderType": ((1, LCID, 4, 0),()),
        "color": ((1302, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLeaderStyle(DispatchBaseClass):
    'MLeaderStyle Interface'
    CLSID = IID('{9E7B3D0B-36F8-444E-89A7-324B3E877BDC}')
    coclass_clsid = IID('{A708E24B-99D0-4D39-82C5-BD5BAAE97DFF}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "AlignSpace": (25, 2, (5, 0), (), "AlignSpace", None),
        "Annotative": (35, 2, (11, 0), (), "Annotative", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArrowSize": (19, 2, (5, 0), (), "ArrowSize", None),
        "ArrowSymbol": (18, 2, (8, 0), (), "ArrowSymbol", None),
        "BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
        "Block": (26, 2, (8, 0), (), "Block", None),
        # Method 'BlockColor' returns object of type 'IAcadAcCmColor'
        "BlockColor": (27, 2, (9, 0), (), "BlockColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "BlockConnectionType": (32, 2, (3, 0), (), "BlockConnectionType", None),
        "BlockRotation": (31, 2, (5, 0), (), "BlockRotation", None),
        "BlockScale": (29, 2, (5, 0), (), "BlockScale", None),
        "BreakSize": (36, 2, (5, 0), (), "BreakSize", None),
        "ContentType": (4, 2, (3, 0), (), "ContentType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (2, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DoglegLength": (17, 2, (5, 0), (), "DoglegLength", None),
        "DrawLeaderOrderType": (6, 2, (3, 0), (), "DrawLeaderOrderType", None),
        "DrawMLeaderOrderType": (5, 2, (3, 0), (), "DrawMLeaderOrderType", None),
        "EnableBlockRotation": (30, 2, (11, 0), (), "EnableBlockRotation", None),
        "EnableBlockScale": (28, 2, (11, 0), (), "EnableBlockScale", None),
        "EnableDogleg": (16, 2, (11, 0), (), "EnableDogleg", None),
        "EnableFrameText": (24, 2, (11, 0), (), "EnableFrameText", None),
        "EnableLanding": (14, 2, (11, 0), (), "EnableLanding", None),
        "FirstSegmentAngleConstraint": (8, 2, (3, 0), (), "FirstSegmentAngleConstraint", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "LandingGap": (15, 2, (5, 0), (), "LandingGap", None),
        # Method 'LeaderLineColor' returns object of type 'IAcadAcCmColor'
        "LeaderLineColor": (11, 2, (9, 0), (), "LeaderLineColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "LeaderLineType": (10, 2, (3, 0), (), "LeaderLineType", None),
        "LeaderLineTypeId": (12, 2, (8, 0), (), "LeaderLineTypeId", None),
        "LeaderLineWeight": (13, 2, (3, 0), (), "LeaderLineWeight", None),
        "MaxLeaderSegmentsPoints": (7, 2, (3, 0), (), "MaxLeaderSegmentsPoints", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OverwritePropChanged": (34, 2, (11, 0), (), "OverwritePropChanged", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "ScaleFactor": (33, 2, (5, 0), (), "ScaleFactor", None),
        "SecondSegmentAngleConstraint": (9, 2, (3, 0), (), "SecondSegmentAngleConstraint", None),
        "TextAlignmentType": (39, 2, (3, 0), (), "TextAlignmentType", None),
        "TextAngleType": (38, 2, (3, 0), (), "TextAngleType", None),
        # Method 'TextColor' returns object of type 'IAcadAcCmColor'
        "TextColor": (22, 2, (9, 0), (), "TextColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "TextHeight": (23, 2, (5, 0), (), "TextHeight", None),
        "TextLeftAttachmentType": (21, 2, (3, 0), (), "TextLeftAttachmentType", None),
        "TextRightAttachmentType": (40, 2, (3, 0), (), "TextRightAttachmentType", None),
        "TextString": (37, 2, (8, 0), (), "TextString", None),
        "TextStyle": (20, 2, (8, 0), (), "TextStyle", None),
    }
    _prop_map_put_ = {
        "AlignSpace": ((25, LCID, 4, 0),()),
        "Annotative": ((35, LCID, 4, 0),()),
        "ArrowSize": ((19, LCID, 4, 0),()),
        "ArrowSymbol": ((18, LCID, 4, 0),()),
        "BitFlags": ((3, LCID, 4, 0),()),
        "Block": ((26, LCID, 4, 0),()),
        "BlockColor": ((27, LCID, 4, 0),()),
        "BlockConnectionType": ((32, LCID, 4, 0),()),
        "BlockRotation": ((31, LCID, 4, 0),()),
        "BlockScale": ((29, LCID, 4, 0),()),
        "BreakSize": ((36, LCID, 4, 0),()),
        "ContentType": ((4, LCID, 4, 0),()),
        "Description": ((2, LCID, 4, 0),()),
        "DoglegLength": ((17, LCID, 4, 0),()),
        "DrawLeaderOrderType": ((6, LCID, 4, 0),()),
        "DrawMLeaderOrderType": ((5, LCID, 4, 0),()),
        "EnableBlockRotation": ((30, LCID, 4, 0),()),
        "EnableBlockScale": ((28, LCID, 4, 0),()),
        "EnableDogleg": ((16, LCID, 4, 0),()),
        "EnableFrameText": ((24, LCID, 4, 0),()),
        "EnableLanding": ((14, LCID, 4, 0),()),
        "FirstSegmentAngleConstraint": ((8, LCID, 4, 0),()),
        "LandingGap": ((15, LCID, 4, 0),()),
        "LeaderLineColor": ((11, LCID, 4, 0),()),
        "LeaderLineType": ((10, LCID, 4, 0),()),
        "LeaderLineTypeId": ((12, LCID, 4, 0),()),
        "LeaderLineWeight": ((13, LCID, 4, 0),()),
        "MaxLeaderSegmentsPoints": ((7, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "ScaleFactor": ((33, LCID, 4, 0),()),
        "SecondSegmentAngleConstraint": ((9, LCID, 4, 0),()),
        "TextAlignmentType": ((39, LCID, 4, 0),()),
        "TextAngleType": ((38, LCID, 4, 0),()),
        "TextColor": ((22, LCID, 4, 0),()),
        "TextHeight": ((23, LCID, 4, 0),()),
        "TextLeftAttachmentType": ((21, LCID, 4, 0),()),
        "TextRightAttachmentType": ((40, LCID, 4, 0),()),
        "TextString": ((37, LCID, 4, 0),()),
        "TextStyle": ((20, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMLine(DispatchBaseClass):
    'TeighaX Interface of multiple parallel lines'
    CLSID = IID('{C35F5577-83CE-43C7-B10E-AFEF9E345739}')
    coclass_clsid = IID('{F4F5165B-D882-4A22-9821-8F8A5092D87A}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (2, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Justification": (3, 2, (3, 0), (), "Justification", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MLineScale": (4, 2, (5, 0), (), "MLineScale", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StyleName": (1, 2, (8, 0), (), "StyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Justification": ((3, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MLineScale": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMText(DispatchBaseClass):
    'TeighaX Interface of a paragraph of alphanumeric characters that fits within a nonprinting text boundary'
    CLSID = IID('{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')
    coclass_clsid = IID('{78D1C5E6-5650-4BFB-B601-93358EC97545}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FieldCode(self):
        'Returns the characters and field codes of multiline text.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(14, LCID, 1, (8, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttachmentPoint": (3, 2, (3, 0), (), "AttachmentPoint", None),
        "BackgroundFill": (13, 2, (11, 0), (), "BackgroundFill", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "DrawingDirection": (4, 2, (3, 0), (), "DrawingDirection", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (8, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LineSpacingDistance": (12, 2, (5, 0), (), "LineSpacingDistance", None),
        "LineSpacingFactor": (10, 2, (5, 0), (), "LineSpacingFactor", None),
        "LineSpacingStyle": (11, 2, (3, 0), (), "LineSpacingStyle", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (9, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (7, 2, (5, 0), (), "Rotation", None),
        "StyleName": (2, 2, (8, 0), (), "StyleName", None),
        "TextString": (1, 2, (8, 0), (), "TextString", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttachmentPoint": ((3, LCID, 4, 0),()),
        "BackgroundFill": ((13, LCID, 4, 0),()),
        "DrawingDirection": ((4, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "InsertionPoint": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LineSpacingDistance": ((12, LCID, 4, 0),()),
        "LineSpacingFactor": ((10, LCID, 4, 0),()),
        "LineSpacingStyle": ((11, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((9, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((7, LCID, 4, 0),()),
        "StyleName": ((2, LCID, 4, 0),()),
        "TextString": ((1, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMaterial(DispatchBaseClass):
    'TeighaX Interface of the render material characteristics'
    CLSID = IID('{4D24EA66-A2B3-4129-8367-81D93B44BE07}')
    coclass_clsid = IID('{D75D937B-6DD9-407E-AF88-6D29801CB204}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (1, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Description": ((1, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMaterials(DispatchBaseClass):
    'TeighaX Interface for the collection of all materials in the drawing'
    CLSID = IID('{6B7DDA98-B483-40F8-905C-2DF10E936021}')
    coclass_clsid = IID('{16F19695-0DD8-494B-9FF3-756EF0AB29B1}')

    # Result is of type IAcadMaterial
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{4D24EA66-A2B3-4129-8367-81D93B44BE07}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadMaterial
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{4D24EA66-A2B3-4129-8367-81D93B44BE07}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{4D24EA66-A2B3-4129-8367-81D93B44BE07}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{4D24EA66-A2B3-4129-8367-81D93B44BE07}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadModelSpace(DispatchBaseClass):
    'TeighaX Interface of a special Block object containing all model space entities'
    CLSID = IID('{ECE694AB-7306-4687-AD03-C7017AE8DED1}')
    coclass_clsid = IID('{D28289A3-5CCD-42DB-83BA-79C472D1BC7E}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{7FBB52D0-2190-4A17-9A16-CB37821293B5}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a PolyfaceMesh object and adds it to modelspace, paperspace, or a block.'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3DPolyline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{E82F96B5-BA0E-4569-BD8A-596495947C12}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an Arc object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an Attribute object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box and adds it to modelspace, paperspace, or a block.'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Circle object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{E23D2B17-487F-4016-A5D4-6C27643F308F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a custom object.'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates a 3-point angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{B0E595FE-21A5-4C67-A916-4689ABA37E62}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{559F6310-4DB2-4B61-8B4C-96D89006711B}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension object and adds it to modelspace, paperspace, or a block.'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension object and adds it to modelspace, paperspace, or a block.'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{0FB4DC41-B309-41C8-B5E7-23B284C98450}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension object and adds it to modelspace, paperspace, or a block.'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{0F29A519-B989-4E81-B41F-3346F3BE65CE}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{F2B4D571-C206-4E19-B1C0-55C95BED669C}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an Ellipse object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{5B4B058E-B8AA-4C76-B652-76AF101C380F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadOle
    def AddEmbeddedRaster(self, ImagePath=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Embed raster as an OLE item.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1792, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),ImagePath
            , InsertionPoint, Height, Width)
        if ret is not None:
            ret = Dispatch(ret, 'AddEmbeddedRaster', '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid object along a path and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{173ED161-3D64-4EF5-85F4-6AACA83CD382}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a Leader object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{A7072E19-38E6-4320-9045-B67E53179643}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Lightweight Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{037572DF-0207-4B27-BCDA-C163054A21DF}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a Line object and adds it to modelspace, paperspace, or a block.'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Adds an array of blocks to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{A6653F5A-001E-4125-8BB0-597E96CDE498}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{A2F0013E-ACE4-41C5-9015-37587663DD30}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a Multiline object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{C35F5577-83CE-43C7-B10E-AFEF9E345739}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an Multiline Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object and adds it to modelspace, paperspace, or a block.'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a Polyface Mesh object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Adds a raster image as a Raster object to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a Ray object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{C888FAF5-E377-4624-A8E2-898031AB58BB}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a Region object and adds it to modelspace, paperspace, or a block.'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid object and adds it to modelspace, paperspace, or a block.'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a Section object and adds it to modelspace, paperspace, or a block.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        planeVector = VTR8ArrayOrVal(planeVector)        
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Sphere object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a Spline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{B05C2404-6A45-4A57-8075-F98464C350BE}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a Table object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{9CD7E38D-0003-410D-B6DF-DE36FD190850}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a Tolerance object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        Direction = VTR8ArrayOrVal(Direction)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a Torus object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Wedge object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadXline
    def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates an XLine object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddXline', '{703DF76F-5C64-414A-B271-4520E1244353}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference to a drawing.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing or named block to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{A40DEA37-8356-415A-B3AC-E087819C6301}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def Reload(self):
        'Reloads an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)
    
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{236374B2-E248-484D-91D4-C13FA726645D}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadObject(DispatchBaseClass):
    'The standard interface for a basic TeighaX object'
    CLSID = IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')
    coclass_clsid = IID('{1ECF9DF9-7F91-48F5-963E-2740C5972B68}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadOle(DispatchBaseClass):
    'TeighaX Interface of Ole object'
    CLSID = IID('{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')
    coclass_clsid = None

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (4, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LockAspectRatio": (7, 2, (11, 0), (), "LockAspectRatio", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OleItemType": (8, 2, (3, 0), (), "OleItemType", None),
        "OlePlotQuality": (9, 2, (3, 0), (), "OlePlotQuality", None),
        "OleSourceApp": (10, 2, (8, 0), (), "OleSourceApp", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (2, 2, (5, 0), (), "Rotation", None),
        "ScaleHeight": (6, 2, (5, 0), (), "ScaleHeight", None),
        "ScaleWidth": (5, 2, (5, 0), (), "ScaleWidth", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LockAspectRatio": ((7, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "OleItemType": ((8, LCID, 4, 0),()),
        "OlePlotQuality": ((9, LCID, 4, 0),()),
        "OleSourceApp": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((2, LCID, 4, 0),()),
        "ScaleHeight": ((6, LCID, 4, 0),()),
        "ScaleWidth": ((5, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPViewport(DispatchBaseClass):
    'TeighaX Interface of rectangular object created in paper space that display view'
    CLSID = IID('{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}')
    coclass_clsid = IID('{4AC35C83-26ED-4BCC-A25F-78D31643490A}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Display(self, bStatus=defaultNamedNotOptArg):
        'Turns the display of a paperspace viewport on or off.'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((11, 1),),bStatus
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Specifies or returns the grid spacing for a paperspace viewport.'
        return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
            , YSpacing)

    def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Specifies or returns the snap spacing for a paperspace viewport.'
        return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
            , YSpacing)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Specifies or returns the grid spacing for a paperspace viewport.'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Specifies or returns the snap spacing for a paperspace viewport.'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SyncModelView(self):
        'Not implemented. Updates the paperspace viewport parameters with the parameters in the associated model view.'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SnapBasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcSmoothness": (27, 2, (3, 0), (), "ArcSmoothness", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        "Clipped": (7, 2, (11, 0), (), "Clipped", None),
        "CustomScale": (10, 2, (5, 0), (), "CustomScale", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Direction": (2, 2, (12, 0), (), "Direction", None),
        "DisplayLocked": (8, 2, (11, 0), (), "DisplayLocked", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "GridOn": (3, 2, (11, 0), (), "GridOn", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasSheetView": (35, 2, (11, 0), (), "HasSheetView", None),
        "Height": (4, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "LabelBlockId": (34, 2, (20, 0), (), "LabelBlockId", None),
        "LabelBlockId32": (38, 2, (3, 0), (), "LabelBlockId32", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LayerPropertyOverrides": (37, 2, (11, 0), (), "LayerPropertyOverrides", None),
        "LensLength": (24, 2, (5, 0), (), "LensLength", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        # Method 'ModelView' returns object of type 'IAcadView'
        "ModelView": (32, 2, (9, 0), (), "ModelView", '{13AC5968-504B-4C8D-BED6-208B3A562D90}'),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RemoveHiddenLines": (25, 2, (11, 0), (), "RemoveHiddenLines", None),
        "ShadePlot": (29, 2, (3, 0), (), "ShadePlot", None),
        # Method 'SheetView' returns object of type 'IAcadView'
        "SheetView": (33, 2, (9, 0), (), "SheetView", '{13AC5968-504B-4C8D-BED6-208B3A562D90}'),
        "SnapBasePoint": (13, 2, (12, 0), (), "SnapBasePoint", None),
        "SnapOn": (14, 2, (11, 0), (), "SnapOn", None),
        "SnapRotationAngle": (15, 2, (5, 0), (), "SnapRotationAngle", None),
        "StandardScale": (9, 2, (3, 0), (), "StandardScale", None),
        "StandardScale2": (39, 2, (3, 0), (), "StandardScale2", None),
        "StyleSheet": (11, 2, (8, 0), (), "StyleSheet", None),
        "Target": (26, 2, (12, 0), (), "Target", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "TwistAngle": (23, 2, (5, 0), (), "TwistAngle", None),
        "UCSIconAtOrigin": (17, 2, (11, 0), (), "UCSIconAtOrigin", None),
        "UCSIconOn": (16, 2, (11, 0), (), "UCSIconOn", None),
        "UCSPerViewport": (12, 2, (11, 0), (), "UCSPerViewport", None),
        "ViewportOn": (6, 2, (11, 0), (), "ViewportOn", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "VisualStyle": (28, 2, (3, 0), (), "VisualStyle", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ArcSmoothness": ((27, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "CustomScale": ((10, LCID, 4, 0),()),
        "Direction": ((2, LCID, 4, 0),()),
        "DisplayLocked": ((8, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "GridOn": ((3, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "LabelBlockId": ((34, LCID, 4, 0),()),
        "LabelBlockId32": ((38, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LensLength": ((24, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "ModelView": ((32, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RemoveHiddenLines": ((25, LCID, 4, 0),()),
        "ShadePlot": ((29, LCID, 4, 0),()),
        "SheetView": ((33, LCID, 4, 0),()),
        "SnapBasePoint": ((13, LCID, 4, 0),()),
        "SnapOn": ((14, LCID, 4, 0),()),
        "SnapRotationAngle": ((15, LCID, 4, 0),()),
        "StandardScale": ((9, LCID, 4, 0),()),
        "StandardScale2": ((39, LCID, 4, 0),()),
        "StyleSheet": ((11, LCID, 4, 0),()),
        "Target": ((26, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "TwistAngle": ((23, LCID, 4, 0),()),
        "UCSIconAtOrigin": ((17, LCID, 4, 0),()),
        "UCSIconOn": ((16, LCID, 4, 0),()),
        "UCSPerViewport": ((12, LCID, 4, 0),()),
        "ViewportOn": ((6, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "VisualStyle": ((28, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPaperSpace(DispatchBaseClass):
    'TeighaX Interface of a special Block object containing all the entities in the active paper space layout'
    CLSID = IID('{39377F68-1F53-4433-90AE-05526FEA4FE5}')
    coclass_clsid = IID('{A6413E76-C1F2-4883-A9DF-4F328C9375EC}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{7FBB52D0-2190-4A17-9A16-CB37821293B5}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a PolyfaceMesh object and adds it to modelspace, paperspace, or a block.'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3DPolyline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{E82F96B5-BA0E-4569-BD8A-596495947C12}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an Arc object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        'Creates an Attribute object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box and adds it to modelspace, paperspace, or a block.'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Circle object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{E23D2B17-487F-4016-A5D4-6C27643F308F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a custom object.'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates a 3-point angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{B0E595FE-21A5-4C67-A916-4689ABA37E62}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{559F6310-4DB2-4B61-8B4C-96D89006711B}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension object and adds it to modelspace, paperspace, or a block.'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension object and adds it to modelspace, paperspace, or a block.'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{0FB4DC41-B309-41C8-B5E7-23B284C98450}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension object and adds it to modelspace, paperspace, or a block.'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{0F29A519-B989-4E81-B41F-3346F3BE65CE}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{F2B4D571-C206-4E19-B1C0-55C95BED669C}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an Ellipse object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{5B4B058E-B8AA-4C76-B652-76AF101C380F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadOle
    def AddEmbeddedRaster(self, ImagePath=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Embed raster as an OLE item.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1792, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),ImagePath
            , InsertionPoint, Height, Width)
        if ret is not None:
            ret = Dispatch(ret, 'AddEmbeddedRaster', '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid object along a path and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{173ED161-3D64-4EF5-85F4-6AACA83CD382}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a Leader object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{A7072E19-38E6-4320-9045-B67E53179643}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Lightweight Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{037572DF-0207-4B27-BCDA-C163054A21DF}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a Line object and adds it to modelspace, paperspace, or a block.'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Adds an array of blocks to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{A6653F5A-001E-4125-8BB0-597E96CDE498}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{A2F0013E-ACE4-41C5-9015-37587663DD30}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a Multiline object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{C35F5577-83CE-43C7-B10E-AFEF9E345739}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an Multiline Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')
        return ret

    # Result is of type IAcadPViewport
    def AddPViewport(self, Center=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Adds a paperspace viewport to paperspace.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddPViewport', '{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object and adds it to modelspace, paperspace, or a block.'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a Polyface Mesh object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Adds a raster image as a Raster object to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a Ray object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{C888FAF5-E377-4624-A8E2-898031AB58BB}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a Region object and adds it to modelspace, paperspace, or a block.'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid object and adds it to modelspace, paperspace, or a block.'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a Section object and adds it to modelspace, paperspace, or a block.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        planeVector = VTR8ArrayOrVal(planeVector)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Sphere object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a Spline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{B05C2404-6A45-4A57-8075-F98464C350BE}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a Table object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{9CD7E38D-0003-410D-B6DF-DE36FD190850}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a Tolerance object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a Torus object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Wedge object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadXline
    def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates an XLine object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddXline', '{703DF76F-5C64-414A-B271-4520E1244353}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference to a drawing.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing or named block to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{A40DEA37-8356-415A-B3AC-E087819C6301}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def Reload(self):
        'Reloads an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{236374B2-E248-484D-91D4-C13FA726645D}'),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPlaneSurface(DispatchBaseClass):
    'TeighaX Interface of a planar surface entity'
    CLSID = IID('{FFCCA3F9-8BB7-4693-B7F7-07EFDF4DE8A9}')
    coclass_clsid = IID('{02C58A19-A75E-4E03-BFDA-05F83B0EE9EE}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfiguration(DispatchBaseClass):
    'TeighaX Interface of a named collection of plot settings'
    CLSID = IID('{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')
    coclass_clsid = IID('{34F35DB3-EA8B-4EF7-8AEE-009362201B18}')

    def CopyFrom(self, pPlotConfig=defaultNamedNotOptArg):
        'Copies settings from a plot configuration file.'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((9, 1),),pPlotConfig
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetCanonicalMediaNames(self):
        'Returns names of the media available for a print device.'
        return self._ApplyTypes_(36, 1, (12, 0), (), 'GetCanonicalMediaNames', None,)

    def GetCustomScale(self, Numerator=pythoncom.Missing, Denominator=pythoncom.Missing):
        'Returns the custom scale value.'
        return self._ApplyTypes_(17, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetCustomScale', None,Numerator
            , Denominator)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetLocaleMediaName(self, Name=defaultNamedNotOptArg):
        'Returns the localized version of a media name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(40, LCID, 1, (8, 0), ((8, 1),),Name
            )

    def GetPaperMargins(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Returns the margins used for printing.'
        return self._ApplyTypes_(26, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetPaperMargins', None,LowerLeft
            , UpperRight)

    def GetPaperSize(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
        'Returns the width and height of the specified media.'
        return self._ApplyTypes_(28, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetPaperSize', None,Width
            , Height)

    def GetPlotDeviceNames(self):
        'Returns print device names.'
        return self._ApplyTypes_(37, 1, (12, 0), (), 'GetPlotDeviceNames', None,)

    def GetPlotStyleTableNames(self):
        'Returns plot style table names.'
        return self._ApplyTypes_(38, 1, (12, 0), (), 'GetPlotStyleTableNames', None,)

    def GetWindowToPlot(self, LowerLeft=pythoncom.Missing, UpperRight=pythoncom.Missing):
        'Returns the coordinates that define the area to print.'
        return self._ApplyTypes_(31, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetWindowToPlot', None,LowerLeft
            , UpperRight)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def RefreshPlotDeviceInfo(self):
        'Updates print device information with the current settings.'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), (),)

    def SetCustomScale(self, Numerator=defaultNamedNotOptArg, Denominator=defaultNamedNotOptArg):
        'Sets the custom scale value.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((5, 1), (5, 1)),Numerator
            , Denominator)

    def SetWindowToPlot(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Sets the coordinates that define the area to print.'
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CanonicalMediaName": (6, 2, (8, 0), (), "CanonicalMediaName", None),
        "CenterPlot": (11, 2, (11, 0), (), "CenterPlot", None),
        "ConfigName": (3, 2, (8, 0), (), "ConfigName", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ModelType": (34, 2, (11, 0), (), "ModelType", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PaperUnits": (7, 2, (3, 0), (), "PaperUnits", None),
        "PlotHidden": (12, 2, (11, 0), (), "PlotHidden", None),
        "PlotOrigin": (30, 2, (12, 0), (), "PlotOrigin", None),
        "PlotRotation": (10, 2, (3, 0), (), "PlotRotation", None),
        "PlotType": (13, 2, (3, 0), (), "PlotType", None),
        "PlotViewportBorders": (8, 2, (11, 0), (), "PlotViewportBorders", None),
        "PlotViewportsFirst": (24, 2, (11, 0), (), "PlotViewportsFirst", None),
        "PlotWithLineweights": (21, 2, (11, 0), (), "PlotWithLineweights", None),
        "PlotWithPlotStyles": (33, 2, (11, 0), (), "PlotWithPlotStyles", None),
        "ScaleLineweights": (20, 2, (11, 0), (), "ScaleLineweights", None),
        "ShowPlotStyles": (9, 2, (11, 0), (), "ShowPlotStyles", None),
        "StandardScale": (16, 2, (3, 0), (), "StandardScale", None),
        "StyleSheet": (25, 2, (8, 0), (), "StyleSheet", None),
        "UseStandardScale": (15, 2, (11, 0), (), "UseStandardScale", None),
        "ViewToPlot": (14, 2, (8, 0), (), "ViewToPlot", None),
    }
    _prop_map_put_ = {
        "CanonicalMediaName": ((6, LCID, 4, 0),()),
        "CenterPlot": ((11, LCID, 4, 0),()),
        "ConfigName": ((3, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PaperUnits": ((7, LCID, 4, 0),()),
        "PlotHidden": ((12, LCID, 4, 0),()),
        "PlotOrigin": ((30, LCID, 4, 0),()),
        "PlotRotation": ((10, LCID, 4, 0),()),
        "PlotType": ((13, LCID, 4, 0),()),
        "PlotViewportBorders": ((8, LCID, 4, 0),()),
        "PlotViewportsFirst": ((24, LCID, 4, 0),()),
        "PlotWithLineweights": ((21, LCID, 4, 0),()),
        "PlotWithPlotStyles": ((33, LCID, 4, 0),()),
        "ScaleLineweights": ((20, LCID, 4, 0),()),
        "ShowPlotStyles": ((9, LCID, 4, 0),()),
        "StandardScale": ((16, LCID, 4, 0),()),
        "StyleSheet": ((25, LCID, 4, 0),()),
        "UseStandardScale": ((15, LCID, 4, 0),()),
        "ViewToPlot": ((14, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPlotConfigurations(DispatchBaseClass):
    'TeighaX Interface of a collection of named plot settings'
    CLSID = IID('{38436519-BF47-4848-B6B2-CB6944F167D3}')
    coclass_clsid = IID('{A0E0F939-5A48-40A3-99D3-C57C25BE9E60}')

    # Result is of type IAcadPlotConfiguration
    def Add(self, Name=defaultNamedNotOptArg, ModelType=defaultNamedOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
            , ModelType)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadPlotConfiguration
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPoint(DispatchBaseClass):
    'TeighaX Interface of a point marker appearing as a dot, square, circle, X, tick, or plus sign (+); or as a combination of these'
    CLSID = IID('{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')
    coclass_clsid = IID('{D3EF1961-790F-4F88-98C6-49B664435505}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IAcadPoint override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolyfaceMesh(DispatchBaseClass):
    'TeighaX Interface of a three-dimensional polyface mesh'
    CLSID = IID('{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')
    coclass_clsid = IID('{52215AF1-CE88-43F7-BC8A-65E9AC73AB69}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in a polyface mesh.'
        return self._ApplyTypes_(2, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in a polyface mesh.'
        return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfFaces": (4, 2, (3, 0), (), "NumberOfFaces", None),
        "NumberOfVertices": (3, 2, (3, 0), (), "NumberOfVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Faces": ((80, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolygonMesh(DispatchBaseClass):
    'TeighaX Interface of a free-form 3D mesh entity'
    CLSID = IID('{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')
    coclass_clsid = IID('{84CA9670-95BB-48D2-886A-64FECD7DF55B}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a new vertex to a polygon mesh.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in a polygon mesh.'
        return self._ApplyTypes_(11, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the polygon mesh and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(10, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in a polygon mesh.'
        return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MClose": (2, 2, (11, 0), (), "MClose", None),
        "MDensity": (4, 2, (3, 0), (), "MDensity", None),
        "MVertexCount": (6, 2, (3, 0), (), "MVertexCount", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NClose": (3, 2, (11, 0), (), "NClose", None),
        "NDensity": (5, 2, (3, 0), (), "NDensity", None),
        "NVertexCount": (7, 2, (3, 0), (), "NVertexCount", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Type": (8, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MClose": ((2, LCID, 4, 0),()),
        "MDensity": ((4, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "NClose": ((3, LCID, 4, 0),()),
        "NDensity": ((5, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((8, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPolyline(DispatchBaseClass):
    'TeighaX Interface of a 2D line of adjustable width or a 3D line or mesh of nonadjustable width composed of line and arc segments'
    CLSID = IID('{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')
    coclass_clsid = IID('{F1B5F011-5265-4E87-9CE9-225743FB78D4}')

    def AppendVertex(self, vertex=defaultNamedNotOptArg):
        'Appends a new vertex to a polyline.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1),),vertex
            )

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(17, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the polyline and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetBulge(self, Index=defaultNamedNotOptArg):
        'Returns the bulge value for a vertex of a polyline.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (5, 0), ((3, 1),),Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetWidth(self, Index=defaultNamedNotOptArg, StartWidth=pythoncom.Missing, EndWidth=defaultNamedNotOptArg):
        'Returns the width for a segment of a polyline.'
        return self._ApplyTypes_(8, 1, (24, 0), ((3, 1), (16389, 2), (16389, 0)), 'GetWidth', None,Index
            , StartWidth, EndWidth)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new polyline at a specified distance from an original lightweight polyline.'
        return self._ApplyTypes_(11, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetBulge(self, Index=defaultNamedNotOptArg, bulge=defaultNamedNotOptArg):
        'Specifies the bulge value for a vertex of a polyline.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , bulge)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetWidth(self, Index=defaultNamedNotOptArg, StartWidth=defaultNamedNotOptArg, EndWidth=defaultNamedNotOptArg):
        'Specifies the width for a segment of a polyline.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 0)),Index
            , StartWidth, EndWidth)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (16, 2, (5, 0), (), "Area", None),
        "Closed": (14, 2, (11, 0), (), "Closed", None),
        "ConstantWidth": (10, 2, (5, 0), (), "ConstantWidth", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (12, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (18, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeGeneration": (15, 2, (11, 0), (), "LinetypeGeneration", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Type": (13, 2, (3, 0), (), "Type", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Closed": ((14, LCID, 4, 0),()),
        "ConstantWidth": ((10, LCID, 4, 0),()),
        "Coordinates": ((1, LCID, 4, 0),()),
        "Elevation": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeGeneration": ((15, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Type": ((13, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRasterImage(DispatchBaseClass):
    'TeighaX Interface of a raster image consisting of a rectangular grid (or raster) of small squares or dots known as pixels'
    CLSID = IID('{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')
    coclass_clsid = IID('{5DAC02AE-C024-4E70-ACD2-CBDBB3AC3686}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Set clipping boundary'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Brightness": (1, 2, (3, 0), (), "Brightness", None),
        "ClippingEnabled": (11, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (2, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (3, 2, (3, 0), (), "Fade", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (14, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ImageFile": (9, 2, (8, 0), (), "ImageFile", None),
        "ImageHeight": (7, 2, (5, 0), (), "ImageHeight", None),
        "ImageVisibility": (10, 2, (11, 0), (), "ImageVisibility", None),
        "ImageWidth": (6, 2, (5, 0), (), "ImageWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (8, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (4, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (5, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (17, 2, (5, 0), (), "ScaleFactor", None),
        "ShowRotation": (16, 2, (11, 0), (), "ShowRotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (15, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "transparency": (12, 2, (11, 0), (), "transparency", None),
    }
    _prop_map_put_ = {
        "Brightness": ((1, LCID, 4, 0),()),
        "ClippingEnabled": ((11, LCID, 4, 0),()),
        "Contrast": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((3, LCID, 4, 0),()),
        "ImageFile": ((9, LCID, 4, 0),()),
        "ImageHeight": ((7, LCID, 4, 0),()),
        "ImageVisibility": ((10, LCID, 4, 0),()),
        "ImageWidth": ((6, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((8, LCID, 4, 0),()),
        "Origin": ((4, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((5, LCID, 4, 0),()),
        "ScaleFactor": ((17, LCID, 4, 0),()),
        "ShowRotation": ((16, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "transparency": ((12, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRay(DispatchBaseClass):
    'TeighaX Interface of a semi-infinite line entity'
    CLSID = IID('{C888FAF5-E377-4624-A8E2-898031AB58BB}')
    coclass_clsid = IID('{B71AD3CB-A8BC-4EB7-9946-579E44B8393E}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SecondPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BasePoint": ((1, LCID, 4, 0),()),
        "DirectionVector": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "SecondPoint": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegion(DispatchBaseClass):
    'TeighaX Interface of a bounded planar face consisting of lines, circles, arcs, elliptical arcs, and spline curves'
    CLSID = IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')
    coclass_clsid = IID('{37FDD4DC-7074-46A2-8140-7B8CB49D4C5A}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Boolean(self, Operation=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
        'Not implemented. Performs a Boolean operation with another region.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (9, 1)),Operation
            , Object)

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def Explode(self):
        'Explodes the region and returns the individual entities as an array of the object.'
        return self._ApplyTypes_(11, 1, (12, 0), (), 'Explode', None,)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (1, 2, (5, 0), (), "Area", None),
        "Centroid": (2, 2, (12, 0), (), "Centroid", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MomentOfInertia": (3, 2, (12, 0), (), "MomentOfInertia", None),
        "Normal": (4, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Perimeter": (5, 2, (5, 0), (), "Perimeter", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "PrincipalDirections": (6, 2, (12, 0), (), "PrincipalDirections", None),
        "PrincipalMoments": (7, 2, (12, 0), (), "PrincipalMoments", None),
        "ProductOfInertia": (8, 2, (5, 0), (), "ProductOfInertia", None),
        "RadiiOfGyration": (9, 2, (12, 0), (), "RadiiOfGyration", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplication(DispatchBaseClass):
    'TeighaX Interface of an external application that has been added to the drawing'
    CLSID = IID('{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')
    coclass_clsid = IID('{804668AC-29D1-4325-9C2F-9082076A8D32}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadRegisteredApplications(DispatchBaseClass):
    'TeighaX Interface of the collection of all registered applications in the drawing'
    CLSID = IID('{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}')
    coclass_clsid = IID('{505EC430-224F-4DF3-B7B8-0615AA6C2F36}')

    # Result is of type IAcadRegisteredApplication
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates an object and adds it to the collection.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadRegisteredApplication
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadRevolvedSurface(DispatchBaseClass):
    'TeighaX Interface of a surface created by revolving one or more 2D objects about an axis'
    CLSID = IID('{2AA6DCC2-C242-49CB-A576-545E4F500722}')
    coclass_clsid = IID('{ADF8BDAF-0231-422E-ACB9-6B769A5C8F96}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'AxisPosition':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AxisDirection": (4, 2, (12, 0), (), "AxisDirection", None),
        "AxisPosition": (3, 2, (12, 0), (), "AxisPosition", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RevolutionAngle": (2, 2, (5, 0), (), "RevolutionAngle", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AxisPosition": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RevolutionAngle": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSection(DispatchBaseClass):
    'TeighaX Interface of a section plane entity created at the intersection of a plane and a solid'
    CLSID = IID('{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
    coclass_clsid = IID('{4ED7B981-124E-465A-89E3-919A01A16824}')

    def AddVertex(self, nIndex=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Adds a new vertex to a section line.'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1), (12, 1)),nIndex
            , val)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinates of a single vertex in a section.'
        return self._ApplyTypes_(14, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def CreateJog(self, varPt=defaultNamedNotOptArg):
        'Creates a jog in a section.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((12, 1),),varPt
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GenerateSectionGeometry(self, pEntity=defaultNamedNotOptArg, pIntersectionBoundaryObjs=pythoncom.Missing, pIntersectionFillObjs=pythoncom.Missing, pBackgroudnObjs=pythoncom.Missing
            , pForegroudObjs=pythoncom.Missing, pCurveTangencyObjs=pythoncom.Missing):
        'Not implemented. Generates two- or three-dimensional geometry for a section.'
        return self._ApplyTypes_(20, 1, (24, 0), ((9, 1), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GenerateSectionGeometry', None,pEntity
            , pIntersectionBoundaryObjs, pIntersectionFillObjs, pBackgroudnObjs, pForegroudObjs, pCurveTangencyObjs
            )

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def HitTest(self, varPtHit=defaultNamedNotOptArg, pHit=pythoncom.Missing, pSegmentIndex=pythoncom.Missing, pPtOnSegment=pythoncom.Missing
            , pSubItem=pythoncom.Missing):
        'Not implemented. Determines whether a vertex is on a section.'
        return self._ApplyTypes_(17, 1, (24, 0), ((12, 1), (16395, 2), (16387, 2), (16396, 2), (16387, 2)), 'HitTest', None,varPtHit
            , pHit, pSegmentIndex, pPtOnSegment, pSubItem)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def RemoveVertex(self, nIndex=defaultNamedNotOptArg):
        'Removes a vertex from a section line.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1),),nIndex
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinates of a single vertex in a section.'
        return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BottomHeight": (11, 2, (5, 0), (), "BottomHeight", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Elevation": (9, 2, (5, 0), (), "Elevation", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        # Method 'IndicatorFillColor' returns object of type 'IAcadAcCmColor'
        "IndicatorFillColor": (8, 2, (9, 0), (), "IndicatorFillColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "IndicatorTransparency": (7, 2, (3, 0), (), "IndicatorTransparency", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LiveSectionEnabled": (6, 2, (11, 0), (), "LiveSectionEnabled", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "Normal": (5, 2, (12, 0), (), "Normal", None),
        "NumVertices": (12, 2, (3, 0), (), "NumVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'Settings' returns object of type 'IAcadSectionSettings'
        "Settings": (19, 2, (9, 0), (), "Settings", '{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}'),
        "State": (2, 2, (3, 0), (), "State", None),
        "TopHeight": (10, 2, (5, 0), (), "TopHeight", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VerticalDirection": (4, 2, (12, 0), (), "VerticalDirection", None),
        "Vertices": (13, 2, (12, 0), (), "Vertices", None),
        "ViewingDirection": (3, 2, (12, 0), (), "ViewingDirection", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BottomHeight": ((11, LCID, 4, 0),()),
        "Elevation": ((9, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "IndicatorFillColor": ((8, LCID, 4, 0),()),
        "IndicatorTransparency": ((7, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LiveSectionEnabled": ((6, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "State": ((2, LCID, 4, 0),()),
        "TopHeight": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VerticalDirection": ((4, LCID, 4, 0),()),
        "Vertices": ((13, LCID, 4, 0),()),
        "ViewingDirection": ((3, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSectionManager(DispatchBaseClass):
    'TeighaX Interface for controls which property is constrained when editing other property values'
    CLSID = IID('{47495992-2633-4FA4-8B0F-213F0C2D20A5}')
    coclass_clsid = IID('{6C36E808-470A-42DC-A317-95D4529339F9}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    # Result is of type IAcadSection
    def GetLiveSection(self):
        'Returns the current live section.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetLiveSection', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    def GetUniqueSectionName(self, pBaseName=defaultNamedNotOptArg):
        'Returns a unique section name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(3, LCID, 1, (8, 0), ((8, 1),),pBaseName
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadSection
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection of sections.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in the collection of sections.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadSectionSettings(DispatchBaseClass):
    'TeighaX Interface of a container for section geometry settings'
    CLSID = IID('{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}')
    coclass_clsid = IID('{FDCF150A-D241-4F4A-A3AC-2B6C7BEE6814}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    # Result is of type IAcadSectionTypeSettings
    def GetSectionTypeSettings(self, secType=defaultNamedNotOptArg):
        'Returns the type for a Section Settings object.'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),secType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetSectionTypeSettings', '{2F52131D-45D6-4302-993D-ADA413443FD7}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CurrentSectionType": (1, 2, (3, 0), (), "CurrentSectionType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
        "CurrentSectionType": ((1, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSectionTypeSettings(DispatchBaseClass):
    'TeighaX Interface of the settings that apply to the various types of sections'
    CLSID = IID('{2F52131D-45D6-4302-993D-ADA413443FD7}')
    coclass_clsid = IID('{D8A7A1C3-D35B-49B1-84FE-408F5DD74504}')

    _prop_map_get_ = {
        # Method 'BackgroundLinesColor' returns object of type 'IAcadAcCmColor'
        "BackgroundLinesColor": (93, 2, (9, 0), (), "BackgroundLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "BackgroundLinesHiddenLine": (92, 2, (11, 0), (), "BackgroundLinesHiddenLine", None),
        "BackgroundLinesLayer": (94, 2, (8, 0), (), "BackgroundLinesLayer", None),
        "BackgroundLinesLinetype": (95, 2, (8, 0), (), "BackgroundLinesLinetype", None),
        "BackgroundLinesLinetypeScale": (96, 2, (5, 0), (), "BackgroundLinesLinetypeScale", None),
        "BackgroundLinesLineweight": (98, 2, (3, 0), (), "BackgroundLinesLineweight", None),
        "BackgroundLinesPlotStyleName": (97, 2, (8, 0), (), "BackgroundLinesPlotStyleName", None),
        "BackgroundLinesVisible": (91, 2, (11, 0), (), "BackgroundLinesVisible", None),
        # Method 'CurveTangencyLinesColor' returns object of type 'IAcadAcCmColor'
        "CurveTangencyLinesColor": (132, 2, (9, 0), (), "CurveTangencyLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "CurveTangencyLinesLayer": (133, 2, (8, 0), (), "CurveTangencyLinesLayer", None),
        "CurveTangencyLinesLinetype": (134, 2, (8, 0), (), "CurveTangencyLinesLinetype", None),
        "CurveTangencyLinesLinetypeScale": (135, 2, (5, 0), (), "CurveTangencyLinesLinetypeScale", None),
        "CurveTangencyLinesLineweight": (137, 2, (3, 0), (), "CurveTangencyLinesLineweight", None),
        "CurveTangencyLinesPlotStyleName": (136, 2, (8, 0), (), "CurveTangencyLinesPlotStyleName", None),
        "CurveTangencyLinesVisible": (131, 2, (11, 0), (), "CurveTangencyLinesVisible", None),
        "DestinationBlock": (3, 2, (12, 0), (), "DestinationBlock", None),
        "DestinationFile": (4, 2, (8, 0), (), "DestinationFile", None),
        # Method 'ForegroundLinesColor' returns object of type 'IAcadAcCmColor'
        "ForegroundLinesColor": (113, 2, (9, 0), (), "ForegroundLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "ForegroundLinesEdgeTransparency": (120, 2, (3, 0), (), "ForegroundLinesEdgeTransparency", None),
        "ForegroundLinesFaceTransparency": (119, 2, (3, 0), (), "ForegroundLinesFaceTransparency", None),
        "ForegroundLinesHiddenLine": (112, 2, (11, 0), (), "ForegroundLinesHiddenLine", None),
        "ForegroundLinesLayer": (114, 2, (8, 0), (), "ForegroundLinesLayer", None),
        "ForegroundLinesLinetype": (115, 2, (8, 0), (), "ForegroundLinesLinetype", None),
        "ForegroundLinesLinetypeScale": (116, 2, (5, 0), (), "ForegroundLinesLinetypeScale", None),
        "ForegroundLinesLineweight": (118, 2, (3, 0), (), "ForegroundLinesLineweight", None),
        "ForegroundLinesPlotStyleName": (117, 2, (8, 0), (), "ForegroundLinesPlotStyleName", None),
        "ForegroundLinesVisible": (111, 2, (11, 0), (), "ForegroundLinesVisible", None),
        "GenerationOptions": (1, 2, (3, 0), (), "GenerationOptions", None),
        # Method 'IntersectionBoundaryColor' returns object of type 'IAcadAcCmColor'
        "IntersectionBoundaryColor": (51, 2, (9, 0), (), "IntersectionBoundaryColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "IntersectionBoundaryDivisionLines": (57, 2, (11, 0), (), "IntersectionBoundaryDivisionLines", None),
        "IntersectionBoundaryLayer": (52, 2, (8, 0), (), "IntersectionBoundaryLayer", None),
        "IntersectionBoundaryLinetype": (53, 2, (8, 0), (), "IntersectionBoundaryLinetype", None),
        "IntersectionBoundaryLinetypeScale": (54, 2, (5, 0), (), "IntersectionBoundaryLinetypeScale", None),
        "IntersectionBoundaryLineweight": (56, 2, (3, 0), (), "IntersectionBoundaryLineweight", None),
        "IntersectionBoundaryPlotStyleName": (55, 2, (8, 0), (), "IntersectionBoundaryPlotStyleName", None),
        # Method 'IntersectionFillColor' returns object of type 'IAcadAcCmColor'
        "IntersectionFillColor": (77, 2, (9, 0), (), "IntersectionFillColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "IntersectionFillFaceTransparency": (83, 2, (3, 0), (), "IntersectionFillFaceTransparency", None),
        "IntersectionFillHatchAngle": (74, 2, (5, 0), (), "IntersectionFillHatchAngle", None),
        "IntersectionFillHatchPatternName": (73, 2, (8, 0), (), "IntersectionFillHatchPatternName", None),
        "IntersectionFillHatchPatternType": (72, 2, (3, 0), (), "IntersectionFillHatchPatternType", None),
        "IntersectionFillHatchScale": (75, 2, (5, 0), (), "IntersectionFillHatchScale", None),
        "IntersectionFillHatchSpacing": (76, 2, (5, 0), (), "IntersectionFillHatchSpacing", None),
        "IntersectionFillLayer": (78, 2, (8, 0), (), "IntersectionFillLayer", None),
        "IntersectionFillLinetype": (79, 2, (8, 0), (), "IntersectionFillLinetype", None),
        "IntersectionFillLinetypeScale": (80, 2, (5, 0), (), "IntersectionFillLinetypeScale", None),
        "IntersectionFillLineweight": (82, 2, (3, 0), (), "IntersectionFillLineweight", None),
        "IntersectionFillPlotStyleName": (81, 2, (8, 0), (), "IntersectionFillPlotStyleName", None),
        "IntersectionFillVisible": (71, 2, (11, 0), (), "IntersectionFillVisible", None),
        "SourceObjects": (2, 2, (12, 0), (), "SourceObjects", None),
    }
    _prop_map_put_ = {
        "BackgroundLinesColor": ((93, LCID, 4, 0),()),
        "BackgroundLinesHiddenLine": ((92, LCID, 4, 0),()),
        "BackgroundLinesLayer": ((94, LCID, 4, 0),()),
        "BackgroundLinesLinetype": ((95, LCID, 4, 0),()),
        "BackgroundLinesLinetypeScale": ((96, LCID, 4, 0),()),
        "BackgroundLinesLineweight": ((98, LCID, 4, 0),()),
        "BackgroundLinesPlotStyleName": ((97, LCID, 4, 0),()),
        "BackgroundLinesVisible": ((91, LCID, 4, 0),()),
        "CurveTangencyLinesColor": ((132, LCID, 4, 0),()),
        "CurveTangencyLinesLayer": ((133, LCID, 4, 0),()),
        "CurveTangencyLinesLinetype": ((134, LCID, 4, 0),()),
        "CurveTangencyLinesLinetypeScale": ((135, LCID, 4, 0),()),
        "CurveTangencyLinesLineweight": ((137, LCID, 4, 0),()),
        "CurveTangencyLinesPlotStyleName": ((136, LCID, 4, 0),()),
        "CurveTangencyLinesVisible": ((131, LCID, 4, 0),()),
        "DestinationBlock": ((3, LCID, 4, 0),()),
        "DestinationFile": ((4, LCID, 4, 0),()),
        "ForegroundLinesColor": ((113, LCID, 4, 0),()),
        "ForegroundLinesEdgeTransparency": ((120, LCID, 4, 0),()),
        "ForegroundLinesFaceTransparency": ((119, LCID, 4, 0),()),
        "ForegroundLinesHiddenLine": ((112, LCID, 4, 0),()),
        "ForegroundLinesLayer": ((114, LCID, 4, 0),()),
        "ForegroundLinesLinetype": ((115, LCID, 4, 0),()),
        "ForegroundLinesLinetypeScale": ((116, LCID, 4, 0),()),
        "ForegroundLinesLineweight": ((118, LCID, 4, 0),()),
        "ForegroundLinesPlotStyleName": ((117, LCID, 4, 0),()),
        "ForegroundLinesVisible": ((111, LCID, 4, 0),()),
        "GenerationOptions": ((1, LCID, 4, 0),()),
        "IntersectionBoundaryColor": ((51, LCID, 4, 0),()),
        "IntersectionBoundaryDivisionLines": ((57, LCID, 4, 0),()),
        "IntersectionBoundaryLayer": ((52, LCID, 4, 0),()),
        "IntersectionBoundaryLinetype": ((53, LCID, 4, 0),()),
        "IntersectionBoundaryLinetypeScale": ((54, LCID, 4, 0),()),
        "IntersectionBoundaryLineweight": ((56, LCID, 4, 0),()),
        "IntersectionBoundaryPlotStyleName": ((55, LCID, 4, 0),()),
        "IntersectionFillColor": ((77, LCID, 4, 0),()),
        "IntersectionFillFaceTransparency": ((83, LCID, 4, 0),()),
        "IntersectionFillHatchAngle": ((74, LCID, 4, 0),()),
        "IntersectionFillHatchPatternName": ((73, LCID, 4, 0),()),
        "IntersectionFillHatchPatternType": ((72, LCID, 4, 0),()),
        "IntersectionFillHatchScale": ((75, LCID, 4, 0),()),
        "IntersectionFillHatchSpacing": ((76, LCID, 4, 0),()),
        "IntersectionFillLayer": ((78, LCID, 4, 0),()),
        "IntersectionFillLinetype": ((79, LCID, 4, 0),()),
        "IntersectionFillLinetypeScale": ((80, LCID, 4, 0),()),
        "IntersectionFillLineweight": ((82, LCID, 4, 0),()),
        "IntersectionFillPlotStyleName": ((81, LCID, 4, 0),()),
        "IntersectionFillVisible": ((71, LCID, 4, 0),()),
        "SourceObjects": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSectionTypeSettings2(DispatchBaseClass):
    'IAcadSectionTypeSettings2 Interface'
    CLSID = IID('{5EB52F66-908B-48C5-87D9-0180E81BF64F}')
    coclass_clsid = IID('{D8A7A1C3-D35B-49B1-84FE-408F5DD74504}')

    _prop_map_get_ = {
        # Method 'BackgroundLinesColor' returns object of type 'IAcadAcCmColor'
        "BackgroundLinesColor": (93, 2, (9, 0), (), "BackgroundLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "BackgroundLinesHiddenLine": (92, 2, (11, 0), (), "BackgroundLinesHiddenLine", None),
        "BackgroundLinesLayer": (94, 2, (8, 0), (), "BackgroundLinesLayer", None),
        "BackgroundLinesLinetype": (95, 2, (8, 0), (), "BackgroundLinesLinetype", None),
        "BackgroundLinesLinetypeScale": (96, 2, (5, 0), (), "BackgroundLinesLinetypeScale", None),
        "BackgroundLinesLineweight": (98, 2, (3, 0), (), "BackgroundLinesLineweight", None),
        "BackgroundLinesPlotStyleName": (97, 2, (8, 0), (), "BackgroundLinesPlotStyleName", None),
        "BackgroundLinesVisible": (91, 2, (11, 0), (), "BackgroundLinesVisible", None),
        # Method 'CurveTangencyLinesColor' returns object of type 'IAcadAcCmColor'
        "CurveTangencyLinesColor": (132, 2, (9, 0), (), "CurveTangencyLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "CurveTangencyLinesLayer": (133, 2, (8, 0), (), "CurveTangencyLinesLayer", None),
        "CurveTangencyLinesLinetype": (134, 2, (8, 0), (), "CurveTangencyLinesLinetype", None),
        "CurveTangencyLinesLinetypeScale": (135, 2, (5, 0), (), "CurveTangencyLinesLinetypeScale", None),
        "CurveTangencyLinesLineweight": (137, 2, (3, 0), (), "CurveTangencyLinesLineweight", None),
        "CurveTangencyLinesPlotStyleName": (136, 2, (8, 0), (), "CurveTangencyLinesPlotStyleName", None),
        "CurveTangencyLinesVisible": (131, 2, (11, 0), (), "CurveTangencyLinesVisible", None),
        "DestinationBlock": (3, 2, (12, 0), (), "DestinationBlock", None),
        "DestinationFile": (4, 2, (8, 0), (), "DestinationFile", None),
        # Method 'ForegroundLinesColor' returns object of type 'IAcadAcCmColor'
        "ForegroundLinesColor": (113, 2, (9, 0), (), "ForegroundLinesColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "ForegroundLinesEdgeTransparency": (120, 2, (3, 0), (), "ForegroundLinesEdgeTransparency", None),
        "ForegroundLinesFaceTransparency": (119, 2, (3, 0), (), "ForegroundLinesFaceTransparency", None),
        "ForegroundLinesHiddenLine": (112, 2, (11, 0), (), "ForegroundLinesHiddenLine", None),
        "ForegroundLinesLayer": (114, 2, (8, 0), (), "ForegroundLinesLayer", None),
        "ForegroundLinesLinetype": (115, 2, (8, 0), (), "ForegroundLinesLinetype", None),
        "ForegroundLinesLinetypeScale": (116, 2, (5, 0), (), "ForegroundLinesLinetypeScale", None),
        "ForegroundLinesLineweight": (118, 2, (3, 0), (), "ForegroundLinesLineweight", None),
        "ForegroundLinesPlotStyleName": (117, 2, (8, 0), (), "ForegroundLinesPlotStyleName", None),
        "ForegroundLinesVisible": (111, 2, (11, 0), (), "ForegroundLinesVisible", None),
        "GenerationOptions": (1, 2, (3, 0), (), "GenerationOptions", None),
        # Method 'IntersectionBoundaryColor' returns object of type 'IAcadAcCmColor'
        "IntersectionBoundaryColor": (51, 2, (9, 0), (), "IntersectionBoundaryColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "IntersectionBoundaryDivisionLines": (57, 2, (11, 0), (), "IntersectionBoundaryDivisionLines", None),
        "IntersectionBoundaryLayer": (52, 2, (8, 0), (), "IntersectionBoundaryLayer", None),
        "IntersectionBoundaryLinetype": (53, 2, (8, 0), (), "IntersectionBoundaryLinetype", None),
        "IntersectionBoundaryLinetypeScale": (54, 2, (5, 0), (), "IntersectionBoundaryLinetypeScale", None),
        "IntersectionBoundaryLineweight": (56, 2, (3, 0), (), "IntersectionBoundaryLineweight", None),
        "IntersectionBoundaryPlotStyleName": (55, 2, (8, 0), (), "IntersectionBoundaryPlotStyleName", None),
        "IntersectionBoundaryVisible": (50, 2, (11, 0), (), "IntersectionBoundaryVisible", None),
        # Method 'IntersectionFillColor' returns object of type 'IAcadAcCmColor'
        "IntersectionFillColor": (77, 2, (9, 0), (), "IntersectionFillColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "IntersectionFillFaceTransparency": (83, 2, (3, 0), (), "IntersectionFillFaceTransparency", None),
        "IntersectionFillHatchAngle": (74, 2, (5, 0), (), "IntersectionFillHatchAngle", None),
        "IntersectionFillHatchPatternName": (73, 2, (8, 0), (), "IntersectionFillHatchPatternName", None),
        "IntersectionFillHatchPatternType": (72, 2, (3, 0), (), "IntersectionFillHatchPatternType", None),
        "IntersectionFillHatchScale": (75, 2, (5, 0), (), "IntersectionFillHatchScale", None),
        "IntersectionFillHatchSpacing": (76, 2, (5, 0), (), "IntersectionFillHatchSpacing", None),
        "IntersectionFillLayer": (78, 2, (8, 0), (), "IntersectionFillLayer", None),
        "IntersectionFillLinetype": (79, 2, (8, 0), (), "IntersectionFillLinetype", None),
        "IntersectionFillLinetypeScale": (80, 2, (5, 0), (), "IntersectionFillLinetypeScale", None),
        "IntersectionFillLineweight": (82, 2, (3, 0), (), "IntersectionFillLineweight", None),
        "IntersectionFillPlotStyleName": (81, 2, (8, 0), (), "IntersectionFillPlotStyleName", None),
        "IntersectionFillVisible": (71, 2, (11, 0), (), "IntersectionFillVisible", None),
        "SourceObjects": (2, 2, (12, 0), (), "SourceObjects", None),
    }
    _prop_map_put_ = {
        "BackgroundLinesColor": ((93, LCID, 4, 0),()),
        "BackgroundLinesHiddenLine": ((92, LCID, 4, 0),()),
        "BackgroundLinesLayer": ((94, LCID, 4, 0),()),
        "BackgroundLinesLinetype": ((95, LCID, 4, 0),()),
        "BackgroundLinesLinetypeScale": ((96, LCID, 4, 0),()),
        "BackgroundLinesLineweight": ((98, LCID, 4, 0),()),
        "BackgroundLinesPlotStyleName": ((97, LCID, 4, 0),()),
        "BackgroundLinesVisible": ((91, LCID, 4, 0),()),
        "CurveTangencyLinesColor": ((132, LCID, 4, 0),()),
        "CurveTangencyLinesLayer": ((133, LCID, 4, 0),()),
        "CurveTangencyLinesLinetype": ((134, LCID, 4, 0),()),
        "CurveTangencyLinesLinetypeScale": ((135, LCID, 4, 0),()),
        "CurveTangencyLinesLineweight": ((137, LCID, 4, 0),()),
        "CurveTangencyLinesPlotStyleName": ((136, LCID, 4, 0),()),
        "CurveTangencyLinesVisible": ((131, LCID, 4, 0),()),
        "DestinationBlock": ((3, LCID, 4, 0),()),
        "DestinationFile": ((4, LCID, 4, 0),()),
        "ForegroundLinesColor": ((113, LCID, 4, 0),()),
        "ForegroundLinesEdgeTransparency": ((120, LCID, 4, 0),()),
        "ForegroundLinesFaceTransparency": ((119, LCID, 4, 0),()),
        "ForegroundLinesHiddenLine": ((112, LCID, 4, 0),()),
        "ForegroundLinesLayer": ((114, LCID, 4, 0),()),
        "ForegroundLinesLinetype": ((115, LCID, 4, 0),()),
        "ForegroundLinesLinetypeScale": ((116, LCID, 4, 0),()),
        "ForegroundLinesLineweight": ((118, LCID, 4, 0),()),
        "ForegroundLinesPlotStyleName": ((117, LCID, 4, 0),()),
        "ForegroundLinesVisible": ((111, LCID, 4, 0),()),
        "GenerationOptions": ((1, LCID, 4, 0),()),
        "IntersectionBoundaryColor": ((51, LCID, 4, 0),()),
        "IntersectionBoundaryDivisionLines": ((57, LCID, 4, 0),()),
        "IntersectionBoundaryLayer": ((52, LCID, 4, 0),()),
        "IntersectionBoundaryLinetype": ((53, LCID, 4, 0),()),
        "IntersectionBoundaryLinetypeScale": ((54, LCID, 4, 0),()),
        "IntersectionBoundaryLineweight": ((56, LCID, 4, 0),()),
        "IntersectionBoundaryPlotStyleName": ((55, LCID, 4, 0),()),
        "IntersectionBoundaryVisible": ((50, LCID, 4, 0),()),
        "IntersectionFillColor": ((77, LCID, 4, 0),()),
        "IntersectionFillFaceTransparency": ((83, LCID, 4, 0),()),
        "IntersectionFillHatchAngle": ((74, LCID, 4, 0),()),
        "IntersectionFillHatchPatternName": ((73, LCID, 4, 0),()),
        "IntersectionFillHatchPatternType": ((72, LCID, 4, 0),()),
        "IntersectionFillHatchScale": ((75, LCID, 4, 0),()),
        "IntersectionFillHatchSpacing": ((76, LCID, 4, 0),()),
        "IntersectionFillLayer": ((78, LCID, 4, 0),()),
        "IntersectionFillLinetype": ((79, LCID, 4, 0),()),
        "IntersectionFillLinetypeScale": ((80, LCID, 4, 0),()),
        "IntersectionFillLineweight": ((82, LCID, 4, 0),()),
        "IntersectionFillPlotStyleName": ((81, LCID, 4, 0),()),
        "IntersectionFillVisible": ((71, LCID, 4, 0),()),
        "SourceObjects": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadShape(DispatchBaseClass):
    'TeighaX Interface of an object comprising lines, arcs, and circles defined in an SHX file'
    CLSID = IID('{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')
    coclass_clsid = IID('{FD968BB1-F1E1-4250-9903-56DF5171CF3D}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Normal": (7, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (5, 2, (5, 0), (), "ScaleFactor", None),
        "Thickness": (8, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "Normal": ((7, LCID, 4, 0),()),
        "ObliqueAngle": ((6, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((5, LCID, 4, 0),()),
        "Thickness": ((8, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSolid(DispatchBaseClass):
    'TeighaX Interface of a solid-filled polygon entity'
    CLSID = IID('{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')
    coclass_clsid = IID('{61375357-7DDF-41E8-A003-5D44D0ED4617}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinates of a single vertex in a solid.'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinates of a single vertex in a solid.'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSortentsTable(DispatchBaseClass):
    'TeighaX Interface to contain and manipulate draw order information'
    CLSID = IID('{04C4F44E-99B7-490B-8823-F68ED45A487B}')
    coclass_clsid = IID('{3710CC1D-B641-43B7-AA95-DD105F2E3304}')

    # Result is of type IAcadBlock
    def Block(self):
        'Returns the block referenced by a sortents table.'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Block', '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFullDrawOrder(self, Objects=pythoncom.Missing, honorSortentsSysvar=defaultNamedNotOptArg):
        'Returns all objects in the referenced block, sorted by draw order with the bottom-most object first.'
        return self._ApplyTypes_(7, 1, (24, 0), ((16396, 2), (11, 1)), 'GetFullDrawOrder', None,Objects
            , honorSortentsSysvar)

    def GetRelativeDrawOrder(self, Objects=defaultNamedNotOptArg, honorSortentsSysvar=defaultNamedNotOptArg):
        'Returns the specified objects, sorted by draw order with the bottom-most object first.'
        return self._ApplyTypes_(8, 1, (24, 0), ((16396, 3), (11, 1)), 'GetRelativeDrawOrder', None,Objects
            , honorSortentsSysvar)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def MoveAbove(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
        'Moves objects above a specified object in the draw order.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
            , Target)

    def MoveBelow(self, Objects=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
        'Moves objects below a specified object in the draw order.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (9, 1)),Objects
            , Target)

    def MoveToBottom(self, Objects=defaultNamedNotOptArg):
        'Moves objects to the bottom of the draw order.'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def MoveToTop(self, Objects=defaultNamedNotOptArg):
        'Moves objects to the top of the draw order.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetRelativeDrawOrder(self, Objects=defaultNamedNotOptArg):
        'Specifies the relative draw order for the specified objects.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SwapOrder(self, Object1=defaultNamedNotOptArg, Object2=defaultNamedNotOptArg):
        'Exchanges draw order position for two specified objects.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 1), (9, 1)),Object1
            , Object2)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSpline(DispatchBaseClass):
    'TeighaX Interface of a quadratic or cubic NURBS (nonuniform rational B-spline) curve entity'
    CLSID = IID('{B05C2404-6A45-4A57-8075-F98464C350BE}')
    coclass_clsid = IID('{5F8B0FFC-7274-4725-980A-5007C132C268}')

    def AddFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Adds a fit point to a spline.'
        fitPoint = VTR8ArrayOrVal(fitPoint)
        return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteFitPoint(self, Index=defaultNamedNotOptArg):
        'Deletes a fit point from a spline.'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1),),Index
            )

    def ElevateOrder(self, Order=defaultNamedNotOptArg):
        'Not implemented. Increases the order of a spline.'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1),),Order
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetControlPoint(self, Index=defaultNamedNotOptArg):
        'Returns the coordinates for a control point of a spline.'
        return self._ApplyTypes_(15, 1, (12, 0), ((3, 1),), 'GetControlPoint', None,Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFitPoint(self, Index=defaultNamedNotOptArg):
        'Returns the fit point of a spline.'
        return self._ApplyTypes_(17, 1, (12, 0), ((3, 1),), 'GetFitPoint', None,Index
            )

    def GetWeight(self, Index=defaultNamedNotOptArg):
        'Returns the weight of a spline.'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (5, 0), ((3, 1),),Index
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new spline at a specified distance from an original spline.'
        return self._ApplyTypes_(23, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def PurgeFitData(self):
        'Removes the fit data of a spline.'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

    def Reverse(self):
        'Reverses the direction of a spline.'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetControlPoint(self, Index=defaultNamedNotOptArg, controlPoint=defaultNamedNotOptArg):
        'Specifies the coordinates for a control point of a spline.'
        controlPoint = VTR8ArrayOrVal(controlPoint)
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , controlPoint)

    def SetFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Specifies the fit point of a spline.'
        fitPoint = VTR8ArrayOrVal(fitPoint)
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def SetWeight(self, Index=defaultNamedNotOptArg, weight=defaultNamedNotOptArg):
        'Specifies the weight of a spline.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , weight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'ControlPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'FitPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (13, 2, (5, 0), (), "Area", None),
        "Closed": (6, 2, (11, 0), (), "Closed", None),
        "ControlPoints": (2, 2, (12, 0), (), "ControlPoints", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Degree": (5, 2, (3, 0), (), "Degree", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndTangent": (11, 2, (12, 0), (), "EndTangent", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FitPoints": (4, 2, (12, 0), (), "FitPoints", None),
        "FitTolerance": (12, 2, (5, 0), (), "FitTolerance", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "IsPeriodic": (9, 2, (11, 0), (), "IsPeriodic", None),
        "IsPlanar": (7, 2, (11, 0), (), "IsPlanar", None),
        "IsRational": (8, 2, (11, 0), (), "IsRational", None),
        "Knots": (26, 2, (12, 0), (), "Knots", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfControlPoints": (1, 2, (3, 0), (), "NumberOfControlPoints", None),
        "NumberOfFitPoints": (3, 2, (3, 0), (), "NumberOfFitPoints", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartTangent": (10, 2, (12, 0), (), "StartTangent", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Weights": (27, 2, (12, 0), (), "Weights", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ControlPoints": ((2, LCID, 4, 0),()),
        "EndTangent": ((11, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FitPoints": ((4, LCID, 4, 0),()),
        "FitTolerance": ((12, LCID, 4, 0),()),
        "Knots": ((26, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartTangent": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Weights": ((27, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidEdge(DispatchBaseClass):
    'Interface for a edge on an AcDb3dSolid'
    CLSID = IID('{EA82FD79-6DE0-445E-ABFB-541E52C91BB5}')
    coclass_clsid = IID('{278C11AB-1CFD-4323-B9CC-8B7CA06D38C4}')

    def OnModified(self):
        return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'color' returns object of type 'IAcadAcCmColor'
        "color": (1302, 2, (9, 0), (), "color", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
    }
    _prop_map_put_ = {
        "color": ((1302, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidFace(DispatchBaseClass):
    'Interface for a face on an AcDb3dSolid'
    CLSID = IID('{9D76FD22-F78B-40B5-94A3-B8C0AB17A1E2}')
    coclass_clsid = IID('{48488B9F-D0D3-4835-8250-920A8C1FB3C9}')

    def OnModified(self):
        return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'color' returns object of type 'IAcadAcCmColor'
        "color": (1302, 2, (9, 0), (), "color", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
    }
    _prop_map_put_ = {
        "Material": ((1399, LCID, 4, 0),()),
        "color": ((1302, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSubEntSolidVertex(DispatchBaseClass):
    'Interface for a vertex on an AcDb3dSolid'
    CLSID = IID('{45CF6C7D-7191-420A-9881-09042DD618ED}')
    coclass_clsid = IID('{B82EA70D-951C-4A43-AFE8-A8DDD4E710F4}')

    def OnModified(self):
        return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'color' returns object of type 'IAcadAcCmColor'
        "color": (1302, 2, (9, 0), (), "color", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
    }
    _prop_map_put_ = {
        "color": ((1302, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSubEntity(DispatchBaseClass):
    'SubEntity Interface'
    CLSID = IID('{70991FC5-F814-45A8-BB15-BC703AB5BF63}')
    coclass_clsid = IID('{E0A0C0B2-5007-454B-AB84-EE81C5E38A90}')

    def OnModified(self):
        return self._oleobj_.InvokeTypes(1024, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'color' returns object of type 'IAcadAcCmColor'
        "color": (1302, 2, (9, 0), (), "color", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
    }
    _prop_map_put_ = {
        "color": ((1302, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSummaryInfo(DispatchBaseClass):
    'TeighaX Interface to provide an access to drawing properties such as the Title, Subject, Author, and Keywords properties'
    CLSID = IID('{95D1CD9E-63E7-4860-9BE2-8F684047E102}')
    coclass_clsid = IID('{40BB6348-8E1C-415D-A9D2-90C573CDB364}')

    def AddCustomInfo(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Adds new custom information with a key (name) and value to the summary information.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
            , Value)

    def GetCustomByIndex(self, Index=defaultNamedNotOptArg, pKey=pythoncom.Missing, pValue=pythoncom.Missing):
        'Using an index, returns the key and value of custom information that is defined for the summary information.'
        return self._ApplyTypes_(10, 1, (24, 0), ((3, 1), (16392, 2), (16392, 2)), 'GetCustomByIndex', None,Index
            , pKey, pValue)

    def GetCustomByKey(self, key=defaultNamedNotOptArg, pValue=pythoncom.Missing):
        'Using a key, returns the key and value of custom information that is defined for the summary information.'
        return self._ApplyTypes_(11, 1, (24, 0), ((8, 1), (16392, 2)), 'GetCustomByKey', None,key
            , pValue)

    def NumCustomInfo(self):
        'Returns the number of custom information items that have been defined for the summary information.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), (),)

    def RemoveCustomByIndex(self, Index=defaultNamedNotOptArg):
        'Removes custom information using its index.'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1),),Index
            )

    def RemoveCustomByKey(self, key=defaultNamedNotOptArg):
        'Removes custom information using its key.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1),),key
            )

    def SetCustomByIndex(self, Index=defaultNamedNotOptArg, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Using an index, specifies the key and value of custom information defined for the summary information.'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (8, 1), (8, 1)),Index
            , key, Value)

    def SetCustomByKey(self, key=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Using a key, specifies the key and value of custom information defined for the summary information.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (8, 1)),key
            , Value)

    _prop_map_get_ = {
        "Author": (1, 2, (8, 0), (), "Author", None),
        "Comments": (2, 2, (8, 0), (), "Comments", None),
        "HyperlinkBase": (3, 2, (8, 0), (), "HyperlinkBase", None),
        "Keywords": (4, 2, (8, 0), (), "Keywords", None),
        "LastSavedBy": (5, 2, (8, 0), (), "LastSavedBy", None),
        "RevisionNumber": (6, 2, (8, 0), (), "RevisionNumber", None),
        "Subject": (7, 2, (8, 0), (), "Subject", None),
        "Title": (8, 2, (8, 0), (), "Title", None),
    }
    _prop_map_put_ = {
        "Author": ((1, LCID, 4, 0),()),
        "Comments": ((2, LCID, 4, 0),()),
        "HyperlinkBase": ((3, LCID, 4, 0),()),
        "Keywords": ((4, LCID, 4, 0),()),
        "LastSavedBy": ((5, LCID, 4, 0),()),
        "RevisionNumber": ((6, LCID, 4, 0),()),
        "Subject": ((7, LCID, 4, 0),()),
        "Title": ((8, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSurface(DispatchBaseClass):
    'TeighaX Interface of Surface entity'
    CLSID = IID('{DB31BDE0-6DD6-4FDF-A289-214EEA6C0072}')
    coclass_clsid = IID('{79CA2C51-081A-466B-B451-D39485782330}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSweptSurface(DispatchBaseClass):
    'TeighaX Interface of a surface created by sweeping a 2D curve along a path'
    CLSID = IID('{A1E46554-B62E-4CEB-A9B8-8C9BC7E8252D}')
    coclass_clsid = IID('{531C8060-0A55-478B-A517-F7B3369306E9}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Bank": (3, 2, (11, 0), (), "Bank", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Length": (6, 2, (5, 0), (), "Length", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ProfileRotation": (2, 2, (5, 0), (), "ProfileRotation", None),
        "SurfaceType": (1, 2, (8, 0), (), "SurfaceType", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Twist": (4, 2, (5, 0), (), "Twist", None),
        "UIsolineDensity": (10, 2, (3, 0), (), "UIsolineDensity", None),
        "VIsolineDensity": (11, 2, (3, 0), (), "VIsolineDensity", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "scale": (5, 2, (5, 0), (), "scale", None),
    }
    _prop_map_put_ = {
        "Bank": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ProfileRotation": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Twist": ((4, LCID, 4, 0),()),
        "UIsolineDensity": ((10, LCID, 4, 0),()),
        "VIsolineDensity": ((11, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "scale": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTable(DispatchBaseClass):
    'TeighaX Interface of table object'
    CLSID = IID('{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')
    coclass_clsid = IID('{35BEAEB0-3061-4089-9E36-5FF6C8B9B34A}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClearSubSelection(self):
        'Not implemented. Clears a subregion in a table.'
        return self._oleobj_.InvokeTypes(110, LCID, 1, (24, 0), (),)

    def ClearTableStyleOverrides(self, flag=defaultNamedNotOptArg):
        'Removes the overrides of a table style.'
        return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((3, 1),),flag
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def CreateContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nIndex=defaultNamedNotOptArg):
        'Creates new content in a cell'
        return self._oleobj_.InvokeTypes(2213, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nIndex)

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteCellContent(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Deletes all cell content for a row and coluumn.'
        return self._oleobj_.InvokeTypes(67, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , col)

    def DeleteColumns(self, col=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
        'Deletes columns from a table.'
        return self._oleobj_.InvokeTypes(96, LCID, 1, (24, 0), ((3, 1), (3, 1)),col
            , cols)

    def DeleteContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Deletes a content from a cell'
        return self._oleobj_.InvokeTypes(2215, LCID, 1, (24, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def DeleteRows(self, row=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
        'Deletes rows from a table.'
        return self._oleobj_.InvokeTypes(98, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , Rows)

    def EnableMergeAll(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, bEnable=defaultNamedNotOptArg):
        'Enables or disables the merge all flag in row or column.'
        return self._oleobj_.InvokeTypes(2368, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),nRow
            , nCol, bEnable)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FormatValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg, pVal=defaultNamedNotOptArg):
        'Not implemented. Returns the formatted text string of a row and column.'
        return self._oleobj_.InvokeTypes(121, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (16392, 0)),row
            , col, nOption, pVal)

    def GenerateLayout(self):
        'Generates the layout and content of a table.'
        return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), (),)

    def GetAlignment(self, rowType=defaultNamedNotOptArg):
        'Returns how the cells of a row type are aligned.'
        return self._oleobj_.InvokeTypes(33, LCID, 1, (3, 0), ((3, 1),),rowType
            )

    def GetAttachmentPoint(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the attachment point of a row and column.'
        return self._ApplyTypes_(56, 1, (12, 0), ((3, 1), (3, 1)), 'GetAttachmentPoint', None,row
            , col)

    def GetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns whether auto scaling is turned on for a row and column.'
        return self._oleobj_.InvokeTypes(77, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
            , col)

    def GetAutoScale2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Returns the auto scale flag value for the specified row and column  and nContent.'
        return self._oleobj_.InvokeTypes(2276, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    # Result is of type IAcadAcCmColor
    def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
        "Returns the background color value of a table's row type."
        ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetBackgroundColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
        'Specifies or returns whether the row type of a table has a background color.'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), ((3, 1),),rowType
            )

    def GetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
        'Returns the attribute value of a block cell.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(112, LCID, 1, (8, 0), ((3, 1), (3, 1), (20, 1)),row
            , col, attdefId)

    def GetBlockAttributeValue2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg):
        'Returns the attribute value from the Specified block cell for the attribute definition object contained in the block  and nContent.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2243, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1), (20, 1)),nRow
            , nCol, nContent, blkId)

    def GetBlockAttributeValue232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2374, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, blkId)

    def GetBlockAttributeValue32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(124, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, attdefId)

    def GetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block rotation of a row and column.'
        return self._oleobj_.InvokeTypes(83, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block scale value for a row and column.'
        return self._oleobj_.InvokeTypes(81, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the block table record ID associated with the block-type cell.'
        return self._oleobj_.InvokeTypes(79, LCID, 1, (20, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBlockTableRecordId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the block table record id associated to the block-type cell  and nContent.'
        return self._oleobj_.InvokeTypes(2241, LCID, 1, (20, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetBlockTableRecordId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2372, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetBlockTableRecordId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(122, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetBreakHeight(self, nIndex=defaultNamedNotOptArg):
        'Returns the break height of the specified table when table breaking is enabled.'
        return self._oleobj_.InvokeTypes(2309, LCID, 1, (5, 0), ((3, 1),),nIndex
            )

    def GetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the alignment of a row and column.'
        return self._oleobj_.InvokeTypes(58, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the background color for a row and column.'
        ret = self._oleobj_.InvokeTypes(62, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
            , col)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellBackgroundColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns whether the background color is set to None for a row and column.'
        return self._oleobj_.InvokeTypes(60, LCID, 1, (11, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the cell content color for a row and column.'
        ret = self._oleobj_.InvokeTypes(64, LCID, 1, (9, 0), ((3, 1), (3, 1)),row
            , col)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellContentColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Not implemented. Returns the cell data type and unit type of a row and column.'
        return self._ApplyTypes_(1946, 1, (24, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetCellDataType', None,row
            , col, pDataType, pUnitType)

    def GetCellExtents(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bOuterCell=defaultNamedNotOptArg):
        'Returns whether a table cell is in the inner part of a table or on the outer edge.'
        return self._ApplyTypes_(55, 1, (12, 0), ((3, 1), (3, 1), (11, 1)), 'GetCellExtents', None,row
            , col, bOuterCell)

    def GetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Not implemented. Returns the cell format for the specified row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1948, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    # Result is of type IAcadAcCmColor
    def GetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns the grid color value for the edge of a row and column.'
        ret = self._oleobj_.InvokeTypes(87, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)
        if ret is not None:
            ret = Dispatch(ret, 'GetCellGridColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns the grid lineweight value for the edge of a row and column.'
        return self._oleobj_.InvokeTypes(85, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)

    def GetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edge=defaultNamedNotOptArg):
        'Returns whether the grid is visible for the edge of a row and column.'
        return self._oleobj_.InvokeTypes(89, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, edge)

    def GetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Gets the cell state.'
        return self._oleobj_.InvokeTypes(2360, LCID, 1, (3, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def GetCellStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Gets the cell style of cell, row, or column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2249, LCID, 1, (8, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def GetCellStyleOverrides(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the overrides of a cell style.'
        return self._ApplyTypes_(66, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellStyleOverrides', None,row
            , col)

    def GetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text height of a row and column.'
        return self._oleobj_.InvokeTypes(73, LCID, 1, (5, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text style name of a row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(71, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the cell type of a row and column.'
        return self._oleobj_.InvokeTypes(53, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Not implemented. Returns the cell value of a row and column.'
        return self._ApplyTypes_(1950, 1, (12, 0), ((3, 1), (3, 1)), 'GetCellValue', None,row
            , col)

    def GetColumnName(self, nIndex=defaultNamedNotOptArg):
        'Gets the columns name.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(65528, LCID, 1, (8, 0), ((3, 1),),nIndex
            )

    def GetColumnWidth(self, col=defaultNamedNotOptArg):
        'Returns the width of a column in a table.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (5, 0), ((3, 1),),col
            )

    # Result is of type IAcadAcCmColor
    def GetContentColor(self, rowType=defaultNamedNotOptArg):
        "Returns the color value of a table's row type."
        ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetContentColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    # Result is of type IAcadAcCmColor
    def GetContentColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Returns the true color value for the specified row type  and nContent.'
        ret = self._oleobj_.InvokeTypes(2260, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)
        if ret is not None:
            ret = Dispatch(ret, 'GetContentColor2', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetContentLayout(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Gets the content layout of the cell.'
        return self._oleobj_.InvokeTypes(2327, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetContentType(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Gets the content type of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(2311, LCID, 1, (3, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def GetCustomData(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szKey=defaultNamedNotOptArg, pData=pythoncom.Missing):
        'Gets the custom data value set in cell, row, or column.'
        return self._ApplyTypes_(2247, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (16396, 2)), 'GetCustomData', None,nRow
            , nCol, szKey, pData)

    def GetDataFormat(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the cell format for the specified row and column and nContent.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2227, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Not implemented. Returns the row data type and unit type for the specified row type.'
        return self._ApplyTypes_(117, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
            , pDataType, pUnitType)

    def GetDataType2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pDataType=pythoncom.Missing
            , pUnitType=pythoncom.Missing):
        'Gets the row data type and unit type for the specified row type  and nContent.'
        return self._ApplyTypes_(2262, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (16387, 2), (16387, 2)), 'GetDataType2', None,nRow
            , nCol, nContent, pDataType, pUnitType)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the field object ID that corresponds to a cell.'
        return self._oleobj_.InvokeTypes(114, LCID, 1, (20, 0), ((3, 1), (3, 1)),row
            , col)

    def GetFieldId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Returns the field object id associated to the specifed cell  and nContent.'
        return self._oleobj_.InvokeTypes(2232, LCID, 1, (20, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetFieldId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610875101, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetFieldId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(126, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetFormat(self, rowType=defaultNamedNotOptArg):
        'Not implemented. Returns the format of a row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(119, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the formula if the content at the specified content index has a formula.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2355, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    # Result is of type IAcadAcCmColor
    def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the grid color value for a grid linetype and row type.'
        ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    # Result is of type IAcadAcCmColor
    def GetGridColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Returns the gridColor value for the specified gridLineType and row type  and nContent.'
        ret = self._oleobj_.InvokeTypes(2291, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor2', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetGridDoubleLineSpacing(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Gets the grid double line spacing from cell, row, or column'
        return self._oleobj_.InvokeTypes(2295, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridLineStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Gets the grid line style of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2340, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the grid lineweight value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridLineWeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Gets the gridLineWeight value for the specified gridLineType(s) and row type(s)   and nContent.'
        return self._oleobj_.InvokeTypes(2281, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridLinetype(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Gets the grid line type of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2289, LCID, 1, (20, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridLinetype32(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2376, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the grid visibility value for a Returns the grid color value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridVisibility2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg):
        'Returns the gridVisibility value for the specified gridLineType and row type.'
        return self._oleobj_.InvokeTypes(2293, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType)

    def GetHasFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Returns true if the content at the specified index is a formula.'
        return self._oleobj_.InvokeTypes(2354, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetMargin(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nMargin=defaultNamedNotOptArg):
        'Gets the margin of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2324, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nMargin)

    def GetMinimumColumnWidth(self, col=defaultNamedNotOptArg):
        'Returns the minimum width of a column in a table.'
        return self._oleobj_.InvokeTypes(26, LCID, 1, (5, 0), ((3, 1),),col
            )

    def GetMinimumRowHeight(self, row=defaultNamedNotOptArg):
        'Returns the minimum height of a row in a table.'
        return self._oleobj_.InvokeTypes(27, LCID, 1, (5, 0), ((3, 1),),row
            )

    def GetOverride(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the override in cell, row, column, or content.'
        return self._oleobj_.InvokeTypes(2338, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetRotation(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the rotation angle of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(36322, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetRowHeight(self, row=defaultNamedNotOptArg):
        'Returns the height of a row in a table.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((3, 1),),row
            )

    def GetRowType(self, row=defaultNamedNotOptArg):
        'Returns the row type of a row.'
        return self._oleobj_.InvokeTypes(68, LCID, 1, (3, 0), ((3, 1),),row
            )

    def GetScale(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the scale of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(2278, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetSubSelection(self, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing, colMax=pythoncom.Missing):
        'Not implemented. Returns a subregion in a table.'
        return self._ApplyTypes_(108, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetSubSelection', None,rowMin
            , rowMax, colMin, colMax)

    def GetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text of a row and column.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(69, LCID, 1, (8, 0), ((3, 1), (3, 1)),row
            , col)

    def GetTextHeight(self, rowType=defaultNamedNotOptArg):
        "Returns the text height of a table's row type."
        return self._oleobj_.InvokeTypes(43, LCID, 1, (5, 0), ((3, 1),),rowType
            )

    def GetTextHeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Returns the text height for the specified row and column  and nContent.'
        return self._oleobj_.InvokeTypes(2272, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Returns the text rotation of a row and column.'
        return self._oleobj_.InvokeTypes(75, LCID, 1, (3, 0), ((3, 1), (3, 1)),row
            , col)

    def GetTextString(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the text value value for the specified row and column  and nContent.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2229, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetTextStyle(self, rowType=defaultNamedNotOptArg):
        'Returns the name of the text style assigned to the row type of a table.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(41, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetTextStyle2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the text style name for the specified row and column  and nContent.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2264, LCID, 1, (8, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent)

    def GetValue(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg):
        'Gets the cell value for the specified row and column and nContent.'
        return self._ApplyTypes_(2217, 1, (12, 0), ((3, 1), (3, 1), (3, 1)), 'GetValue', None,nRow
            , nCol, nContent)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def HitTest(self, wpt=defaultNamedNotOptArg, wviewVec=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
        'Not implemented. Determines whether a vertex is on a table.'
        wpt = VTR8ArrayOrVal(wpt)
        wviewVec = VTR8ArrayOrVal(wviewVec)
        return self._ApplyTypes_(104, 1, (11, 0), ((12, 1), (12, 1), (16387, 2), (16387, 2)), 'HitTest', None,wpt
            , wviewVec, resultRowIndex, resultColumnIndex)

    def InsertColumns(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, cols=defaultNamedNotOptArg):
        'Adds columns to a table.'
        return self._oleobj_.InvokeTypes(95, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),col
            , Width, cols)

    def InsertColumnsAndInherit(self, col=defaultNamedNotOptArg, nInheritFrom=defaultNamedNotOptArg, nNumCols=defaultNamedNotOptArg):
        'Inserts one or more columns at the specified index and inherits the column properties from specified column.'
        return self._oleobj_.InvokeTypes(2353, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),col
            , nInheritFrom, nNumCols)

    def InsertRows(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Rows=defaultNamedNotOptArg):
        'Adds rows to a table.'
        return self._oleobj_.InvokeTypes(97, LCID, 1, (24, 0), ((3, 1), (5, 1), (3, 1)),row
            , Height, Rows)

    def InsertRowsAndInherit(self, nIndex=defaultNamedNotOptArg, nInheritFrom=defaultNamedNotOptArg, nNumRows=defaultNamedNotOptArg):
        'Inserts one or more rows at the specified index and inherits the row properties from specified row.'
        return self._oleobj_.InvokeTypes(2345, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),nIndex
            , nInheritFrom, nNumRows)

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def IsContentEditable(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Checks if the content of the specified cell can be modified.'
        return self._oleobj_.InvokeTypes(2358, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def IsEmpty(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Checks if the content of the specified cell is empty.'
        return self._oleobj_.InvokeTypes(2210, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def IsFormatEditable(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Checks if the format of the specified cell can be modified.'
        return self._oleobj_.InvokeTypes(2359, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def IsMergeAllEnabled(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Returns whether merge all flag is enabled or not in row or column.'
        return self._oleobj_.InvokeTypes(2369, LCID, 1, (11, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def IsMergedCell(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, minRow=pythoncom.Missing, maxRow=pythoncom.Missing
            , minCol=pythoncom.Missing, maxCol=pythoncom.Missing):
        'Returns whether the specified cells are merged.'
        return self._ApplyTypes_(101, 1, (11, 0), ((3, 1), (3, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'IsMergedCell', None,row
            , col, minRow, maxRow, minCol, maxCol
            )

    def MergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
        'Merges cells together into a single cell.'
        return self._oleobj_.InvokeTypes(99, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
            , maxRow, minCol, maxCol)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def MoveContent(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nFromIndex=defaultNamedNotOptArg, nToIndex=defaultNamedNotOptArg):
        'Moves a content in a cell from one position to another position within the cell'
        return self._oleobj_.InvokeTypes(2214, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nFromIndex, nToIndex)

    def RecomputeTableBlock(self, bForceUpdate=defaultNamedNotOptArg):
        'Recomputes the referenced table block with changes made to the table.'
        return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((11, 1),),bForceUpdate
            )

    def RemoveAllOverrides(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg):
        'Removes all the overrides in cell, row, or column.'
        return self._oleobj_.InvokeTypes(2280, LCID, 1, (24, 0), ((3, 1), (3, 1)),nRow
            , nCol)

    def ReselectSubRegion(self):
        'Not implemented. Reselects a subregion in a table.'
        return self._ApplyTypes_(107, 1, (12, 0), (), 'ReselectSubRegion', None,)

    def ResetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg):
        'Not implemented. Resets the cell value of a row and column.'
        return self._oleobj_.InvokeTypes(2209, LCID, 1, (24, 0), ((3, 1), (3, 1)),row
            , col)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def Select(self, wpt=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg, wxaper=defaultNamedNotOptArg
            , wyaper=defaultNamedNotOptArg, allowOutside=defaultNamedNotOptArg, resultRowIndex=pythoncom.Missing, resultColumnIndex=pythoncom.Missing):
        'Not implemented. Selects a cell in a table.'
        wpt = VTR8ArrayOrVal(wpt)
        wvwVec = VTR8ArrayOrVal(wvwVec)
        wvwxVec = VTR8ArrayOrVal(wvwxVec)
        return self._ApplyTypes_(105, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1), (16387, 2), (16387, 2)), 'Select', None,wpt
            , wvwVec, wvwxVec, wxaper, wyaper, allowOutside
            , resultRowIndex, resultColumnIndex)

    def SelectSubRegion(self, wpt1=defaultNamedNotOptArg, wpt2=defaultNamedNotOptArg, wvwVec=defaultNamedNotOptArg, wvwxVec=defaultNamedNotOptArg
            , seltype=defaultNamedNotOptArg, bIncludeCurrentSelection=defaultNamedNotOptArg, rowMin=pythoncom.Missing, rowMax=pythoncom.Missing, colMin=pythoncom.Missing
            , colMax=pythoncom.Missing):
        'Not implemented. Selects a subregion in a table.'
        wpt1 = VTR8ArrayOrVal(wpt1)
        wpt2 = VTR8ArrayOrVal(wpt2)
        wvwVec = VTR8ArrayOrVal(wvwVec)
        wvwxVec = VTR8ArrayOrVal(wvwxVec)
        return self._ApplyTypes_(106, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (3, 1), (11, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'SelectSubRegion', None,wpt1
            , wpt2, wvwVec, wvwxVec, seltype, bIncludeCurrentSelection
            , rowMin, rowMax, colMin, colMax)

    def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Specifies how the cells of a row type are aligned.'
        return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
            , cellAlignment)

    def SetAutoScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies whether auto scaling is turned on for a row nad column.'
        return self._oleobj_.InvokeTypes(78, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),row
            , col, bValue)

    def SetAutoScale2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
        'Sets the auto scale flag value for the specified row and column  and nContent.'
        return self._oleobj_.InvokeTypes(36325, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nRow
            , nCol, nContent, bAutoFit)

    def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        "Specifies the background color value of a table's row type."
        return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies or returns whether the row type of a table has a background color.'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((3, 1), (11, 1)),rowTypes
            , bValue)

    def SetBlockAttributeValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
        'Specifies the attribute value of a block cell.'
        return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1), (8, 1)),row
            , col, attdefId, bstrValue)

    def SetBlockAttributeValue2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , Value=defaultNamedNotOptArg):
        'Sets the attribute value from the Specified block cell for the attribute definition object contained in the block  and nContent.'
        return self._oleobj_.InvokeTypes(2244, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (20, 1), (8, 1)),nRow
            , nCol, nContent, blkId, Value)

    def SetBlockAttributeValue232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , Value=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2375, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, blkId, Value)

    def SetBlockAttributeValue32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, attdefId=defaultNamedNotOptArg, bstrValue=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(125, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),row
            , col, attdefId, bstrValue)

    def SetBlockRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkRotation=defaultNamedNotOptArg):
        'Specifies the block rotation of a row and column.'
        return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, blkRotation)

    def SetBlockScale(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkScale=defaultNamedNotOptArg):
        'Specifies the block scale value for a row and column.'
        return self._oleobj_.InvokeTypes(82, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, blkScale)

    def SetBlockTableRecordId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
        'Specifies the block table record ID associated with the block-type cell.'
        return self._oleobj_.InvokeTypes(80, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1), (11, 1)),row
            , col, blkId, bAutoFit)

    def SetBlockTableRecordId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , autoFit=defaultNamedNotOptArg):
        'Sets the block table record id associated to the block-type cell  and nContent.'
        return self._oleobj_.InvokeTypes(2242, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (20, 1), (11, 1)),nRow
            , nCol, nContent, blkId, autoFit)

    def SetBlockTableRecordId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg
            , autoFit=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2373, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),nRow
            , nCol, nContent, blkId, autoFit)

    def SetBlockTableRecordId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, blkId=defaultNamedNotOptArg, bAutoFit=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(123, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
            , col, blkId, bAutoFit)

    def SetBreakHeight(self, nIndex=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Sets the break height of the specified table when table breaking is enabled.'
        return self._oleobj_.InvokeTypes(2310, LCID, 1, (24, 0), ((3, 1), (5, 1)),nIndex
            , Height)

    def SetCellAlignment(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Specifies the cell alignment of a row and column.'
        return self._oleobj_.InvokeTypes(59, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, cellAlignment)

    def SetCellBackgroundColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the background color for a row and column.'
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
            , col, pColor)

    def SetCellBackgroundColorNone(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies whether the background color is set to None for a row and column.'
        return self._oleobj_.InvokeTypes(61, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),row
            , col, bValue)

    def SetCellContentColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the cell content color for a row and column.'
        return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),row
            , col, pColor)

    def SetCellDataType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
        'Not implemented. Specifies the cell data type and unit type of a row and column.'
        return self._oleobj_.InvokeTypes(1947, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 0), (3, 0)),row
            , col, dataType, unitType)

    def SetCellFormat(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
        'Not implemented. Specifies the cell format of a row and column.'
        return self._oleobj_.InvokeTypes(1949, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 0)),row
            , col, pFormat)

    def SetCellGridColor(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the grid color value for the edges of a row and column.'
        return self._oleobj_.InvokeTypes(88, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),row
            , col, edges, pColor)

    def SetCellGridLineWeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Specifies the grid lineweight value for the edges of a row and column.'
        return self._oleobj_.InvokeTypes(86, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),row
            , col, edges, Lineweight)

    def SetCellGridVisibility(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, edges=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies whether the grid is visible for the edges of a row and column.'
        return self._oleobj_.InvokeTypes(90, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),row
            , col, edges, bValue)

    def SetCellState(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nLock=defaultNamedNotOptArg):
        'Sets the cell state.'
        return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),nRow
            , nCol, nLock)

    def SetCellStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szCellStyle=defaultNamedNotOptArg):
        'Sets the the cell style of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2256, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),nRow
            , nCol, szCellStyle)

    def SetCellTextHeight(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        'Specifies the text height of a row and column.'
        return self._oleobj_.InvokeTypes(74, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1)),row
            , col, TextHeight)

    def SetCellTextStyle(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Specifies the text style name of a row and column.'
        return self._oleobj_.InvokeTypes(72, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
            , col, bstrName)

    def SetCellType(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, CellType=defaultNamedNotOptArg):
        'Specifies the cell type of a row and column.'
        return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, CellType)

    def SetCellValue(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Not implemented. Specifies the cell value of a row and column.'
        return self._oleobj_.InvokeTypes(1951, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 0)),row
            , col, val)

    def SetCellValueFromText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, val=defaultNamedNotOptArg, nOption=defaultNamedNotOptArg):
        'Not implemented. Specifies the cell value from existing text in a row and column.'
        return self._oleobj_.InvokeTypes(2208, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (3, 1)),row
            , col, val, nOption)

    def SetColumnName(self, nIndex=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
        'Sets the columns name.'
        return self._oleobj_.InvokeTypes(65529, LCID, 1, (24, 0), ((3, 1), (8, 1)),nIndex
            , Name)

    def SetColumnWidth(self, col=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Sets the width of a column in a table.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1), (5, 1)),col
            , Width)

    def SetContentColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        "Specifies the color value of a table's row type."
        return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetContentColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the true color value for the specified row type  and nContent.'
        return self._oleobj_.InvokeTypes(2261, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),nRow
            , nCol, nContent, pColor)

    def SetContentLayout(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, nLayout=defaultNamedNotOptArg):
        'Sets the content layout of the cell.'
        return self._oleobj_.InvokeTypes(2328, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, nLayout)

    def SetCustomData(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, szKey=defaultNamedNotOptArg, data=defaultNamedNotOptArg):
        'Sets the custom data value set in cell, row, or column.'
        return self._oleobj_.InvokeTypes(2248, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (12, 1)),nRow
            , nCol, szKey, data)

    def SetDataFormat(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, szFormat=defaultNamedNotOptArg):
        'Sets the cell format for the specified row and column and nContent.'
        return self._oleobj_.InvokeTypes(2228, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, szFormat)

    def SetDataType(self, rowTypes=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg, unitType=defaultNamedNotOptArg):
        'Not implemented. Specifies the row data type and unit type for a row type.'
        return self._oleobj_.InvokeTypes(118, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
            , dataType, unitType)

    def SetDataType2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, dataType=defaultNamedNotOptArg
            , unitType=defaultNamedNotOptArg):
        'Sets the row data type and unit type for the specified row type  and nContent.'
        return self._oleobj_.InvokeTypes(2263, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, dataType, unitType)

    def SetFieldId(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
        'Specifies the field object ID for a cell.'
        return self._oleobj_.InvokeTypes(115, LCID, 1, (24, 0), ((3, 1), (3, 1), (20, 1)),row
            , col, fieldId)

    def SetFieldId2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acDbObjectId=defaultNamedNotOptArg
            , nflag=defaultNamedNotOptArg):
        'Sets  the field object id associated to the specifed cell  and nContent.'
        return self._oleobj_.InvokeTypes(2233, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (20, 1), (3, 1)),nRow
            , nCol, nContent, acDbObjectId, nflag)

    def SetFieldId232(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acDbObjectId=defaultNamedNotOptArg
            , nflag=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2371, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, acDbObjectId, nflag)

    def SetFieldId32(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, fieldId=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(127, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, fieldId)

    def SetFormat(self, rowTypes=defaultNamedNotOptArg, pFormat=defaultNamedNotOptArg):
        'Not implemented. Specifies the format of a row type.'
        return self._oleobj_.InvokeTypes(120, LCID, 1, (24, 0), ((3, 1), (8, 0)),rowTypes
            , pFormat)

    def SetFormula(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, pszFormula=defaultNamedNotOptArg):
        'Sets the formula at the specified content index.'
        return self._oleobj_.InvokeTypes(2356, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, pszFormula)

    def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the grid color value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
            , rowTypes, pColor)

    def SetGridColor2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the gridColor value for the specified gridLineType and row type  and nContent.'
        return self._oleobj_.InvokeTypes(2292, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (9, 1)),nRow
            , nCol, nGridLineType, pColor)

    def SetGridDoubleLineSpacing(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, fSpacing=defaultNamedNotOptArg):
        'Sets the grid double line spacing in cell, row, or column.'
        return self._oleobj_.InvokeTypes(2296, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
            , nCol, nGridLineType, fSpacing)

    def SetGridLineStyle(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineTypes=defaultNamedNotOptArg, nLineStyle=defaultNamedNotOptArg):
        'Sets the grid line style of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2341, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineTypes, nLineStyle)

    def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Specifies the grid lineweight value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
            , rowTypes, Lineweight)

    def SetGridLineWeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Sets the gridLineWeight value for the specified gridLineType(s) and row type(s)   and nContent.'
        return self._oleobj_.InvokeTypes(2288, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType, Lineweight)

    def SetGridLinetype(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, idLinetype=defaultNamedNotOptArg):
        'Sets the grid line type of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2290, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (20, 1)),nRow
            , nCol, nGridLineType, idLinetype)

    def SetGridLinetype32(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, idLinetype=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(2377, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nGridLineType, idLinetype)

    def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies the grid visibility value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
            , rowTypes, bValue)

    def SetGridVisibility2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nGridLineType=defaultNamedNotOptArg, bVisible=defaultNamedNotOptArg):
        'Sets the gridVisibility value for the specified gridLineType and row type.'
        return self._oleobj_.InvokeTypes(2294, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),nRow
            , nCol, nGridLineType, bVisible)

    def SetMargin(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nMargins=defaultNamedNotOptArg, fMargin=defaultNamedNotOptArg):
        'Sets the margin of cell, row, or column.'
        return self._oleobj_.InvokeTypes(2326, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
            , nCol, nMargins, fMargin)

    def SetOverride(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, nProp=defaultNamedNotOptArg):
        'Sets the override in cell, row, column, or content.'
        return self._oleobj_.InvokeTypes(2339, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),nRow
            , nCol, nContent, nProp)

    def SetRotation(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets the rotation angle of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(2275, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
            , nCol, nContent, Value)

    def SetRowHeight(self, row=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Sets the height of a row in a table.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (5, 1)),row
            , Height)

    def SetScale(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, scale=defaultNamedNotOptArg):
        'Sets the scale of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(2279, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
            , nCol, nContent, scale)

    def SetSubSelection(self, rowMin=defaultNamedNotOptArg, rowMax=defaultNamedNotOptArg, colMin=defaultNamedNotOptArg, colMax=defaultNamedNotOptArg):
        'Not implemented. Specifies a subregion in a table.'
        return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),rowMin
            , rowMax, colMin, colMax)

    def SetText(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, pStr=defaultNamedNotOptArg):
        'Specifies the text of a row and column.'
        return self._oleobj_.InvokeTypes(70, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),row
            , col, pStr)

    def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        "Specifies the text height of a table's row type."
        return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
            , TextHeight)

    def SetTextHeight2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Gets the text height for the specified row and column  and nContent.'
        return self._oleobj_.InvokeTypes(2273, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (5, 1)),nRow
            , nCol, nContent, Height)

    def SetTextRotation(self, row=defaultNamedNotOptArg, col=defaultNamedNotOptArg, TextRotation=defaultNamedNotOptArg):
        'Specifies the text rotation of a row and column.'
        return self._oleobj_.InvokeTypes(76, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),row
            , col, TextRotation)

    def SetTextString(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Sets the text value value for the specified row and column.'
        return self._oleobj_.InvokeTypes(2231, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, Text)

    def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Specifies the text style assigned to the row type of a table.'
        return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , bstrName)

    def SetTextStyle2(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, bstrStyleName=defaultNamedNotOptArg):
        'Sets the text style name for the specified row and column  and nContent.'
        return self._oleobj_.InvokeTypes(2265, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),nRow
            , nCol, nContent, bstrStyleName)

    def SetToolTip(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, tip=defaultNamedNotOptArg):
        'Sets the tooltip string for cell, row, or column.'
        return self._oleobj_.InvokeTypes(65530, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),nRow
            , nCol, tip)

    def SetValue(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, acValue=defaultNamedNotOptArg):
        'Sets the cell value by parsing the text for the specified row and column and nContent.'
        return self._oleobj_.InvokeTypes(2224, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),nRow
            , nCol, nContent, acValue)

    def SetValueFromText(self, nRow=defaultNamedNotOptArg, nCol=defaultNamedNotOptArg, nContent=defaultNamedNotOptArg, szText=defaultNamedNotOptArg
            , nOption=defaultNamedNotOptArg):
        'Sets the value of the content at the specified content index.'
        return self._oleobj_.InvokeTypes(2225, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1), (3, 1)),nRow
            , nCol, nContent, szText, nOption)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def UnmergeCells(self, minRow=defaultNamedNotOptArg, maxRow=defaultNamedNotOptArg, minCol=defaultNamedNotOptArg, maxCol=defaultNamedNotOptArg):
        'Unmerges cells.'
        return self._oleobj_.InvokeTypes(100, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),minRow
            , maxRow, minCol, maxCol)

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AllowManualHeights": (65525, 2, (11, 0), (), "AllowManualHeights", None),
        "AllowManualPositions": (65524, 2, (11, 0), (), "AllowManualPositions", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BreakSpacing": (65527, 2, (5, 0), (), "BreakSpacing", None),
        "BreaksEnabled": (65520, 2, (11, 0), (), "BreaksEnabled", None),
        "Columns": (3, 2, (3, 0), (), "Columns", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Direction": (30, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasSubSelection": (111, 2, (11, 0), (), "HasSubSelection", None),
        "HeaderSuppressed": (32, 2, (11, 0), (), "HeaderSuppressed", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        "HorzCellMargin": (8, 2, (5, 0), (), "HorzCellMargin", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (9, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "MinimumTableHeight": (29, 2, (5, 0), (), "MinimumTableHeight", None),
        "MinimumTableWidth": (28, 2, (5, 0), (), "MinimumTableWidth", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RegenerateTableSuppressed": (116, 2, (11, 0), (), "RegenerateTableSuppressed", None),
        "RepeatBottomLabels": (65522, 2, (11, 0), (), "RepeatBottomLabels", None),
        "RepeatTopLabels": (65521, 2, (11, 0), (), "RepeatTopLabels", None),
        "Rows": (2, 2, (3, 0), (), "Rows", None),
        "StyleName": (1, 2, (8, 0), (), "StyleName", None),
        "TableBreakFlowDirection": (65523, 2, (3, 0), (), "TableBreakFlowDirection", None),
        "TableBreakHeight": (65526, 2, (5, 0), (), "TableBreakHeight", None),
        "TableStyleOverrides": (51, 2, (12, 0), (), "TableStyleOverrides", None),
        "TitleSuppressed": (31, 2, (11, 0), (), "TitleSuppressed", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "VertCellMargin": (7, 2, (5, 0), (), "VertCellMargin", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AllowManualHeights": ((65525, LCID, 4, 0),()),
        "AllowManualPositions": ((65524, LCID, 4, 0),()),
        "BreakSpacing": ((65527, LCID, 4, 0),()),
        "BreaksEnabled": ((65520, LCID, 4, 0),()),
        "ColumnWidth": ((12, LCID, 4, 0),()),
        "Columns": ((3, LCID, 4, 0),()),
        "Direction": ((30, LCID, 4, 0),()),
        "EnableBreak": ((2308, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FlowDirection": ((4, LCID, 4, 0),()),
        "HeaderSuppressed": ((32, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "HorzCellMargin": ((8, LCID, 4, 0),()),
        "InsertionPoint": ((9, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RegenerateTableSuppressed": ((116, LCID, 4, 0),()),
        "RepeatBottomLabels": ((65522, LCID, 4, 0),()),
        "RepeatTopLabels": ((65521, LCID, 4, 0),()),
        "RowHeight": ((15, LCID, 4, 0),()),
        "Rows": ((2, LCID, 4, 0),()),
        "StyleName": ((1, LCID, 4, 0),()),
        "TableBreakFlowDirection": ((65523, LCID, 4, 0),()),
        "TableBreakHeight": ((65526, LCID, 4, 0),()),
        "TitleSuppressed": ((31, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "VertCellMargin": ((7, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTableStyle(DispatchBaseClass):
    'TeighaX Interface for adding, modifing and deleting table styles'
    CLSID = IID('{65AFF703-323D-4562-B235-CC43966A7922}')
    coclass_clsid = IID('{50F5CD60-FD9D-4FEE-A36E-CE9C411213EE}')

    def CreateCellStyle(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),bstrCellStyle
            )

    def CreateCellStyleFromStyle(self, bstrCellStyle=defaultNamedNotOptArg, bstrSourceCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrCellStyle
            , bstrSourceCellStyle)

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteCellStyle(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((8, 1),),bstrCellStyle
            )

    def EnableMergeAll(self, bstrCellStyle=defaultNamedNotOptArg, bEnable=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809409, LCID, 1, (24, 0), ((8, 1), (11, 1)),bstrCellStyle
            , bEnable)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetAlignment(self, rowType=defaultNamedNotOptArg):
        'Returns the cell alignment of a row type.'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (3, 0), ((3, 1),),rowType
            )

    def GetAlignment2(self, bstrCellStyle=defaultNamedNotOptArg):
        'Returns the cell alignment for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
            )

    # Result is of type IAcadAcCmColor
    def GetBackgroundColor(self, rowType=defaultNamedNotOptArg):
        'Returns the background color value of a row type.'
        ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetBackgroundColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    # Result is of type IAcadAcCmColor
    def GetBackgroundColor2(self, bstrCellStyle=defaultNamedNotOptArg):
        'Returns the background true color value for the specified cellStyle.'
        ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), ((8, 1),),bstrCellStyle
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetBackgroundColor2', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetBackgroundColorNone(self, rowType=defaultNamedNotOptArg):
        'Returns whether the background color is set to None for a row type.'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),rowType
            )

    def GetCellClass(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809404, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
            )

    def GetCellStyles(self, cellStylesArray=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((16396, 1),),cellStylesArray
            )

    # Result is of type IAcadAcCmColor
    def GetColor(self, rowType=defaultNamedNotOptArg):
        'Returns the color value of a row type.'
        ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((3, 1),),rowType
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    # Result is of type IAcadAcCmColor
    def GetColor2(self, bstrCellStyle=defaultNamedNotOptArg):
        'Returns the true color value for the specified cellStyle.'
        ret = self._oleobj_.InvokeTypes(45, LCID, 1, (9, 0), ((8, 1),),bstrCellStyle
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetColor2', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetDataType(self, rowType=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Not implemented. Returns the data type and unit type of a row type.'
        return self._ApplyTypes_(27, 1, (24, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetDataType', None,rowType
            , pDataType, pUnitType)

    def GetDataType2(self, bstrCellStyle=defaultNamedNotOptArg, pDataType=pythoncom.Missing, pUnitType=pythoncom.Missing):
        'Returns the data type and unit type for the specifed cellStyle.'
        return self._ApplyTypes_(51, 1, (24, 0), ((8, 1), (16387, 2), (16387, 2)), 'GetDataType2', None,bstrCellStyle
            , pDataType, pUnitType)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFormat(self, rowType=defaultNamedNotOptArg):
        'Not implemented. Returns the format of a row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(29, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetFormat2(self, bstrCellStyle=defaultNamedNotOptArg, pbstrFormat=pythoncom.Missing):
        'Returns the format for the specifed cellStyle.'
        return self._ApplyTypes_(53, 1, (24, 0), ((8, 1), (16392, 2)), 'GetFormat2', None,bstrCellStyle
            , pbstrFormat)

    # Result is of type IAcadAcCmColor
    def GetGridColor(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the grid color value for a grid linetype and row type.'
        ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    # Result is of type IAcadAcCmColor
    def GetGridColor2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
        'Returns the gridColor value for the specified gridLineType and cellStyle.'
        ret = self._oleobj_.InvokeTypes(57, LCID, 1, (9, 0), ((8, 1), (3, 1)),bstrCellStyle
            , gridLineType)
        if ret is not None:
            ret = Dispatch(ret, 'GetGridColor2', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def GetGridLineWeight(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns the grid lineweight value for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridLineWeight2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
        'Gets the gridLineWeight value for the specified gridLineType(s) and cellStyle.'
        return self._oleobj_.InvokeTypes(55, LCID, 1, (3, 0), ((8, 1), (3, 1)),bstrCellStyle
            , gridLineType)

    def GetGridVisibility(self, gridLineType=defaultNamedNotOptArg, rowType=defaultNamedNotOptArg):
        'Returns whether the grid is visible for a grid linetype and row type.'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1)),gridLineType
            , rowType)

    def GetGridVisibility2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineType=defaultNamedNotOptArg):
        'Returns the gridVisibility value for the specified gridLineType and cellStyle.'
        return self._oleobj_.InvokeTypes(59, LCID, 1, (11, 0), ((8, 1), (3, 1)),bstrCellStyle
            , gridLineType)

    def GetIsCellStyleInUse(self, pszCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(36, LCID, 1, (11, 0), ((8, 1),),pszCellStyle
            )

    def GetIsMergeAllEnabled(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809408, LCID, 1, (11, 0), ((8, 1),),bstrCellStyle
            )

    def GetRotation(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809406, LCID, 1, (5, 0), ((8, 1),),bstrCellStyle
            )

    def GetTextHeight(self, rowType=defaultNamedNotOptArg):
        'Returns the text height of a row type.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),rowType
            )

    def GetTextHeight2(self, bstrCellStyle=defaultNamedNotOptArg):
        'Returns the text height for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(41, LCID, 1, (5, 0), ((8, 1),),bstrCellStyle
            )

    def GetTextStyle(self, rowType=defaultNamedNotOptArg):
        'Returns the text style name of a row type.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(9, LCID, 1, (8, 0), ((3, 1),),rowType
            )

    def GetTextStyleId(self, bstrCellStyle=defaultNamedNotOptArg):
        'Returns the text style name for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (20, 0), ((8, 1),),bstrCellStyle
            )

    def GetTextStyleId32(self, bstrCellStyle=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(62, LCID, 1, (3, 0), ((8, 1),),bstrCellStyle
            )

    def GetUniqueCellStyleName(self, pszBaseName=defaultNamedNotOptArg):
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(35, LCID, 1, (8, 0), ((8, 1),),pszBaseName
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def RenameCellStyle(self, bstrOldName=defaultNamedNotOptArg, bstrNewName=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrOldName
            , bstrNewName)

    def SetAlignment(self, rowTypes=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Specifies the cell alignment of row types.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (3, 1)),rowTypes
            , cellAlignment)

    def SetAlignment2(self, bstrCellStyle=defaultNamedNotOptArg, cellAlignment=defaultNamedNotOptArg):
        'Sets the cell alignment for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
            , cellAlignment)

    def SetBackgroundColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the background color value of row types.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetBackgroundColor2(self, bstrCellStyle=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
        'Sets the background true color value for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1), (9, 1)),bstrCellStyle
            , color)

    def SetBackgroundColorNone(self, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies whether the background color is set to None for row types.'
        return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (11, 1)),rowTypes
            , bValue)

    def SetCellClass(self, bstrCellStyle=defaultNamedNotOptArg, cellClass=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809405, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
            , cellClass)

    def SetColor(self, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the color value of row types.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (9, 1)),rowTypes
            , pColor)

    def SetColor2(self, bstrCellStyle=defaultNamedNotOptArg, color=defaultNamedNotOptArg):
        'Sets the true color value for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((8, 1), (9, 1)),bstrCellStyle
            , color)

    def SetDataType(self, rowTypes=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
        'Not implemented. Specifies the data type and unit type of a row type.'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),rowTypes
            , nDataType, nUnitType)

    def SetDataType2(self, bstrCellStyle=defaultNamedNotOptArg, nDataType=defaultNamedNotOptArg, nUnitType=defaultNamedNotOptArg):
        'Sets the data type and unit type for the specifed cellStyle.'
        return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1)),bstrCellStyle
            , nDataType, nUnitType)

    def SetFormat(self, rowTypes=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Not implemented. Specifies the format of a row type.'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , val)

    def SetFormat2(self, bstrCellStyle=defaultNamedNotOptArg, bstrFormat=defaultNamedNotOptArg):
        'Sets the format for the specifed cellStyle.'
        return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((8, 1), (8, 1)),bstrCellStyle
            , bstrFormat)

    def SetGridColor(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Specifies the grid color value for grid linetypes and row types.'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((3, 1), (3, 1), (9, 1)),gridLineTypes
            , rowTypes, pColor)

    def SetGridColor2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, pColor=defaultNamedNotOptArg):
        'Sets the gridColor value for the specified gridLineType and cellStyle.'
        return self._oleobj_.InvokeTypes(58, LCID, 1, (24, 0), ((8, 1), (3, 1), (9, 1)),bstrCellStyle
            , gridLineTypes, pColor)

    def SetGridLineWeight(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Specifies the grid lineweight value for grid linetypes and row types.'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),gridLineTypes
            , rowTypes, Lineweight)

    def SetGridLineWeight2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, Lineweight=defaultNamedNotOptArg):
        'Sets the gridLineWeight value for the specified gridLineType(s) and cellStyle.'
        return self._oleobj_.InvokeTypes(56, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1)),bstrCellStyle
            , gridLineTypes, Lineweight)

    def SetGridVisibility(self, gridLineTypes=defaultNamedNotOptArg, rowTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Specifies whether the grid is visible for grid linetypes and row types.'
        return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (3, 1), (11, 1)),gridLineTypes
            , rowTypes, bValue)

    def SetGridVisibility2(self, bstrCellStyle=defaultNamedNotOptArg, gridLineTypes=defaultNamedNotOptArg, bValue=defaultNamedNotOptArg):
        'Sets the gridVisibility value for the specified gridLineType and cellStyle.'
        return self._oleobj_.InvokeTypes(60, LCID, 1, (24, 0), ((8, 1), (3, 1), (11, 1)),bstrCellStyle
            , gridLineTypes, bValue)

    def SetRotation(self, bstrCellStyle=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(1610809407, LCID, 1, (24, 0), ((8, 1), (5, 1)),bstrCellStyle
            , Rotation)

    def SetTemplateId(self, val=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((20, 1), (3, 0)),val
            , option)

    def SetTemplateId32(self, val=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(66, LCID, 1, (24, 0), ((3, 1), (3, 0)),val
            , option)

    def SetTextHeight(self, rowTypes=defaultNamedNotOptArg, TextHeight=defaultNamedNotOptArg):
        'Specifies the text height of row types.'
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (5, 1)),rowTypes
            , TextHeight)

    def SetTextHeight2(self, bstrCellStyle=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Sets the text height for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((8, 1), (5, 1)),bstrCellStyle
            , Height)

    def SetTextStyle(self, rowTypes=defaultNamedNotOptArg, bstrName=defaultNamedNotOptArg):
        'Specifies the text style name of row types.'
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (8, 1)),rowTypes
            , bstrName)

    def SetTextStyleId(self, bstrCellStyle=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        'Sets the text style name for the specified cellStyle.'
        return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((8, 1), (20, 1)),bstrCellStyle
            , val)

    def SetTextStyleId32(self, bstrCellStyle=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((8, 1), (3, 1)),bstrCellStyle
            , val)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BitFlags": (3, 2, (3, 0), (), "BitFlags", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (2, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "FlowDirection": (4, 2, (3, 0), (), "FlowDirection", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HeaderSuppressed": (8, 2, (11, 0), (), "HeaderSuppressed", None),
        "HorzCellMargin": (5, 2, (5, 0), (), "HorzCellMargin", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "NumCellStyles": (37, 2, (3, 0), (), "NumCellStyles", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "TemplateId": (61, 2, (20, 0), (), "TemplateId", None),
        "TemplateId32": (64, 2, (3, 0), (), "TemplateId32", None),
        "TitleSuppressed": (7, 2, (11, 0), (), "TitleSuppressed", None),
        "VertCellMargin": (6, 2, (5, 0), (), "VertCellMargin", None),
    }
    _prop_map_put_ = {
        "BitFlags": ((3, LCID, 4, 0),()),
        "Description": ((2, LCID, 4, 0),()),
        "FlowDirection": ((4, LCID, 4, 0),()),
        "HeaderSuppressed": ((8, LCID, 4, 0),()),
        "HorzCellMargin": ((5, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "TemplateId": ((61, LCID, 4, 0),()),
        "TemplateId32": ((64, LCID, 4, 0),()),
        "TitleSuppressed": ((7, LCID, 4, 0),()),
        "VertCellMargin": ((6, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadText(DispatchBaseClass):
    'TeighaX Interface of a single line of alphanumeric characters'
    CLSID = IID('{9CD7E38D-0003-410D-B6DF-DE36FD190850}')
    coclass_clsid = IID('{82833E4D-7362-465C-B00B-70F453668575}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def FieldCode(self):
        'Returns the text string with field codes of the text'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(17, LCID, 1, (8, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'TextAlignmentPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Alignment": (3, 2, (3, 0), (), "Alignment", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Backward": (16, 2, (11, 0), (), "Backward", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        "HorizontalAlignment": (4, 2, (3, 0), (), "HorizontalAlignment", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (11, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (12, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (9, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (7, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (8, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (2, 2, (8, 0), (), "StyleName", None),
        "TextAlignmentPoint": (10, 2, (12, 0), (), "TextAlignmentPoint", None),
        "TextGenerationFlag": (13, 2, (3, 0), (), "TextGenerationFlag", None),
        "TextString": (1, 2, (8, 0), (), "TextString", None),
        "Thickness": (14, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UpsideDown": (15, 2, (11, 0), (), "UpsideDown", None),
        "VerticalAlignment": (5, 2, (3, 0), (), "VerticalAlignment", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Alignment": ((3, LCID, 4, 0),()),
        "Backward": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "HorizontalAlignment": ((4, LCID, 4, 0),()),
        "InsertionPoint": ((11, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((12, LCID, 4, 0),()),
        "ObliqueAngle": ((9, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((7, LCID, 4, 0),()),
        "ScaleFactor": ((8, LCID, 4, 0),()),
        "StyleName": ((2, LCID, 4, 0),()),
        "TextAlignmentPoint": ((10, LCID, 4, 0),()),
        "TextGenerationFlag": ((13, LCID, 4, 0),()),
        "TextString": ((1, LCID, 4, 0),()),
        "Thickness": ((14, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UpsideDown": ((15, LCID, 4, 0),()),
        "VerticalAlignment": ((5, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTextStyle(DispatchBaseClass):
    'TeighaX Interface of a named, saved collection of settings that determines the appearance of text characters'
    CLSID = IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
    coclass_clsid = IID('{6201AE6E-3520-424A-903D-6F9F882C846E}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFont(self, TypeFace=pythoncom.Missing, Bold=pythoncom.Missing, Italic=pythoncom.Missing, Charset=pythoncom.Missing
            , PitchAndFamily=pythoncom.Missing):
        'Gets the definition data of the font for the TextStyle'
        return self._ApplyTypes_(9, 1, (24, 0), ((16392, 2), (16395, 2), (16395, 2), (16387, 2), (16387, 2)), 'GetFont', None,TypeFace
            , Bold, Italic, Charset, PitchAndFamily)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetFont(self, TypeFace=defaultNamedNotOptArg, Bold=defaultNamedNotOptArg, Italic=defaultNamedNotOptArg, Charset=defaultNamedNotOptArg
            , PitchAndFamily=defaultNamedNotOptArg):
        'Sets the definition data of the font for the TextStyle'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (11, 1), (11, 1), (3, 1), (3, 1)),TypeFace
            , Bold, Italic, Charset, PitchAndFamily)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BigFontFile": (1, 2, (8, 0), (), "BigFontFile", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (3, 2, (5, 0), (), "Height", None),
        "LastHeight": (4, 2, (5, 0), (), "LastHeight", None),
        "Name": (5, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "ObliqueAngle": (6, 2, (5, 0), (), "ObliqueAngle", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "TextGenerationFlag": (7, 2, (3, 0), (), "TextGenerationFlag", None),
        "Width": (8, 2, (5, 0), (), "Width", None),
        "fontFile": (2, 2, (8, 0), (), "fontFile", None),
    }
    _prop_map_put_ = {
        "BigFontFile": ((1, LCID, 4, 0),()),
        "Height": ((3, LCID, 4, 0),()),
        "LastHeight": ((4, LCID, 4, 0),()),
        "ObliqueAngle": ((6, LCID, 4, 0),()),
        "TextGenerationFlag": ((7, LCID, 4, 0),()),
        "Width": ((8, LCID, 4, 0),()),
        "fontFile": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTextStyles(DispatchBaseClass):
    'TeighaX Interface of the collection of all text styles in the drawing'
    CLSID = IID('{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}')
    coclass_clsid = IID('{F9FF244F-67A9-4A6F-94FF-F839614E1470}')

    # Result is of type IAcadTextStyle
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadTextStyle
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadTolerance(DispatchBaseClass):
    'TeighaX Interface of a geometric tolerance contained in a feature control frame'
    CLSID = IID('{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')
    coclass_clsid = IID('{57FF5291-176F-4957-9FA6-5C2324976AA8}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DimensionLineColor": (13, 2, (3, 0), (), "DimensionLineColor", None),
        "DirectionVector": (80, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (81, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (82, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "ScaleFactor": (1553, 2, (5, 0), (), "ScaleFactor", None),
        "StyleName": (1542, 2, (8, 0), (), "StyleName", None),
        "TextColor": (1546, 2, (3, 0), (), "TextColor", None),
        "TextHeight": (1563, 2, (5, 0), (), "TextHeight", None),
        "TextString": (1541, 2, (8, 0), (), "TextString", None),
        "TextStyle": (1562, 2, (8, 0), (), "TextStyle", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "DimensionLineColor": ((13, LCID, 4, 0),()),
        "DirectionVector": ((80, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "InsertionPoint": ((81, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((82, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "ScaleFactor": ((1553, LCID, 4, 0),()),
        "StyleName": ((1542, LCID, 4, 0),()),
        "TextColor": ((1546, LCID, 4, 0),()),
        "TextHeight": ((1563, LCID, 4, 0),()),
        "TextString": ((1541, LCID, 4, 0),()),
        "TextStyle": ((1562, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadTrace(DispatchBaseClass):
    'TeighaX Interface of a 2D solid line of specified width'
    CLSID = IID('{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')
    coclass_clsid = IID('{5F7B73C4-ED41-4B98-98C6-EBA460B2F8F7}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in an object.'
        return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Normal':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Normal": (2, 2, (12, 0), (), "Normal", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Thickness": (3, 2, (5, 0), (), "Thickness", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Normal": ((2, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Thickness": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadUCS(DispatchBaseClass):
    'TeighaX Interface of a user-defined coordinate system that determines the orientation of the X, Y, and Z axes in 3D space'
    CLSID = IID('{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')
    coclass_clsid = IID('{647A8606-56EB-41CB-B6AE-6353DE9212F6}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetUCSMatrix(self):
        'Gets the transformation matrix consisting of UCS coordinate system data'
        return self._ApplyTypes_(5, 1, (12, 0), (), 'GetUCSMatrix', None,)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'XVector':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'YVector':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (2, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "XVector": (3, 2, (12, 0), (), "XVector", None),
        "YVector": (4, 2, (12, 0), (), "YVector", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
        "Origin": ((2, LCID, 4, 0),()),
        "XVector": ((3, LCID, 4, 0),()),
        "YVector": ((4, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadUCSs(DispatchBaseClass):
    'TeighaX Interface of the collection of all user coordinate systems (UCSs) in the drawing'
    CLSID = IID('{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}')
    coclass_clsid = IID('{35730B52-1E06-4055-B96F-472E4BA49750}')

    # Result is of type IAcadUCS
    def Add(self, Origin=defaultNamedNotOptArg, XAxisPoint=defaultNamedNotOptArg, YAxisPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (8, 1)),Origin
            , XAxisPoint, YAxisPoint, Name)
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadUCS
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadUnderlay(DispatchBaseClass):
    CLSID = IID('{D076BB70-1090-4438-9922-3FD91BA4BB4A}')
    coclass_clsid = IID('{31348C0E-FAD9-455F-B469-77CAA3C15DA2}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Specifies an area for displaying and printing the underlay.'
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "AdjustForBackground": (15, 2, (11, 0), (), "AdjustForBackground", None),
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ClippingEnabled": (16, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (1, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (2, 2, (3, 0), (), "Fade", None),
        "File": (13, 2, (8, 0), (), "File", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (6, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ItemName": (8, 2, (8, 0), (), "ItemName", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Monochrome": (10, 2, (11, 0), (), "Monochrome", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (3, 2, (12, 0), (), "Position", None),
        "Rotation": (4, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (12, 2, (5, 0), (), "ScaleFactor", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UnderlayLayerOverrideApplied": (17, 2, (3, 0), (), "UnderlayLayerOverrideApplied", None),
        "UnderlayName": (7, 2, (8, 0), (), "UnderlayName", None),
        "UnderlayVisibility": (14, 2, (11, 0), (), "UnderlayVisibility", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (5, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AdjustForBackground": ((15, LCID, 4, 0),()),
        "ClippingEnabled": ((16, LCID, 4, 0),()),
        "Contrast": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((2, LCID, 4, 0),()),
        "File": ((13, LCID, 4, 0),()),
        "Height": ((6, LCID, 4, 0),()),
        "ItemName": ((8, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Monochrome": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((3, LCID, 4, 0),()),
        "Rotation": ((4, LCID, 4, 0),()),
        "ScaleFactor": ((12, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UnderlayLayerOverrideApplied": ((17, LCID, 4, 0),()),
        "UnderlayName": ((7, LCID, 4, 0),()),
        "UnderlayVisibility": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadView(DispatchBaseClass):
    'TeighaX Interface of a graphical representation of a 2D drawing or 3D model from a specific location (viewpoint) in space'
    CLSID = IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')
    coclass_clsid = IID('{05C08097-1095-42F2-83B1-789661B77D37}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "CategoryName": (7, 2, (8, 0), (), "CategoryName", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Direction": (5, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasVpAssociation": (10, 2, (11, 0), (), "HasVpAssociation", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        "LayerState": (9, 2, (8, 0), (), "LayerState", None),
        "LayoutId": (8, 2, (20, 0), (), "LayoutId", None),
        "LayoutId32": (11, 2, (3, 0), (), "LayoutId32", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Target": (4, 2, (12, 0), (), "Target", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
    }
    _prop_map_put_ = {
        "CategoryName": ((7, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Direction": ((5, LCID, 4, 0),()),
        "HasVpAssociation": ((10, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "LayerState": ((9, LCID, 4, 0),()),
        "LayoutId": ((8, LCID, 4, 0),()),
        "LayoutId32": ((11, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "Target": ((4, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadViewport(DispatchBaseClass):
    "TeighaX Interface of a bounded area that displays some portion of a drawing's model space"
    CLSID = IID('{A9B1F951-1AA7-4C23-8D57-AA199803D381}')
    coclass_clsid = IID('{4C1BF9A1-35AA-491B-8B22-2B2195D8229F}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetGridSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Gets the grid spacing for the viewport'
        return self._ApplyTypes_(18, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetGridSpacing', None,XSpacing
            , YSpacing)

    def GetSnapSpacing(self, XSpacing=pythoncom.Missing, YSpacing=pythoncom.Missing):
        'Gets the snap spacing for the viewport'
        return self._ApplyTypes_(20, 1, (24, 0), ((16389, 2), (16389, 2)), 'GetSnapSpacing', None,XSpacing
            , YSpacing)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def SetGridSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the grid spacing for the viewport'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetSnapSpacing(self, XSpacing=defaultNamedNotOptArg, YSpacing=defaultNamedNotOptArg):
        'Sets the snap spacing for the viewport'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((5, 1), (5, 1)),XSpacing
            , YSpacing)

    def SetView(self, View=defaultNamedNotOptArg):
        'Sets the view in a viewport to a saved view in the Views Collection object'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((9, 1),),View
            )

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Split(self, NumWins=defaultNamedNotOptArg):
        'Splits a viewport into the given number of views'
        return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((3, 1),),NumWins
            )

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Center':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Direction':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SnapBasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "ArcSmoothness": (23, 2, (3, 0), (), "ArcSmoothness", None),
        "Center": (1, 2, (12, 0), (), "Center", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Direction": (5, 2, (12, 0), (), "Direction", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "GridOn": (7, 2, (11, 0), (), "GridOn", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (2, 2, (5, 0), (), "Height", None),
        "LowerLeftCorner": (15, 2, (12, 0), (), "LowerLeftCorner", None),
        "Name": (6, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OrthoOn": (8, 2, (11, 0), (), "OrthoOn", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "SnapBasePoint": (9, 2, (12, 0), (), "SnapBasePoint", None),
        "SnapOn": (10, 2, (11, 0), (), "SnapOn", None),
        "SnapRotationAngle": (11, 2, (5, 0), (), "SnapRotationAngle", None),
        "Target": (4, 2, (12, 0), (), "Target", None),
        "UCSIconAtOrigin": (14, 2, (11, 0), (), "UCSIconAtOrigin", None),
        "UCSIconOn": (13, 2, (11, 0), (), "UCSIconOn", None),
        "UpperRightCorner": (16, 2, (12, 0), (), "UpperRightCorner", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
    }
    _prop_map_put_ = {
        "ArcSmoothness": ((23, LCID, 4, 0),()),
        "Center": ((1, LCID, 4, 0),()),
        "Direction": ((5, LCID, 4, 0),()),
        "GridOn": ((7, LCID, 4, 0),()),
        "Height": ((2, LCID, 4, 0),()),
        "Name": ((6, LCID, 4, 0),()),
        "OrthoOn": ((8, LCID, 4, 0),()),
        "SnapBasePoint": ((9, LCID, 4, 0),()),
        "SnapOn": ((10, LCID, 4, 0),()),
        "SnapRotationAngle": ((11, LCID, 4, 0),()),
        "Target": ((4, LCID, 4, 0),()),
        "UCSIconAtOrigin": ((14, LCID, 4, 0),()),
        "UCSIconOn": ((13, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadViewports(DispatchBaseClass):
    'TeighaX Interface of the collection of all viewports in the drawing'
    CLSID = IID('{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}')
    coclass_clsid = IID('{9C67AAB4-9FF9-4CE0-9B87-8EF15358F7B3}')

    # Result is of type IAcadViewport
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{A9B1F951-1AA7-4C23-8D57-AA199803D381}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteConfiguration(self, Name=defaultNamedNotOptArg):
        'Deletes a viewport configuration'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadViewport
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{A9B1F951-1AA7-4C23-8D57-AA199803D381}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{A9B1F951-1AA7-4C23-8D57-AA199803D381}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{A9B1F951-1AA7-4C23-8D57-AA199803D381}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadViews(DispatchBaseClass):
    'TeighaX Interface of the collection of all views in the drawing'
    CLSID = IID('{E1673534-4417-4D0A-95FB-6E02246096D6}')
    coclass_clsid = IID('{AB479309-A94E-45F8-B968-09766E364886}')

    # Result is of type IAcadView
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{13AC5968-504B-4C8D-BED6-208B3A562D90}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadView
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{13AC5968-504B-4C8D-BED6-208B3A562D90}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{13AC5968-504B-4C8D-BED6-208B3A562D90}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{13AC5968-504B-4C8D-BED6-208B3A562D90}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadWipeout(DispatchBaseClass):
    'Interface for an Wipeout Raster Image'
    CLSID = IID('{977345B6-A313-4F2E-A4EE-1C2BB3C2FE0E}')
    coclass_clsid = IID('{AB17FEA5-1C04-4E2B-BF37-7FADA3403BEB}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Set clipping boundary'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Brightness": (1, 2, (3, 0), (), "Brightness", None),
        "ClippingEnabled": (11, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (2, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (3, 2, (3, 0), (), "Fade", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (14, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ImageFile": (9, 2, (8, 0), (), "ImageFile", None),
        "ImageHeight": (7, 2, (5, 0), (), "ImageHeight", None),
        "ImageVisibility": (10, 2, (11, 0), (), "ImageVisibility", None),
        "ImageWidth": (6, 2, (5, 0), (), "ImageWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (8, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (4, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (5, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (17, 2, (5, 0), (), "ScaleFactor", None),
        "ShowRotation": (16, 2, (11, 0), (), "ShowRotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (15, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "transparency": (12, 2, (11, 0), (), "transparency", None),
    }
    _prop_map_put_ = {
        "Brightness": ((1, LCID, 4, 0),()),
        "ClippingEnabled": ((11, LCID, 4, 0),()),
        "Contrast": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((3, LCID, 4, 0),()),
        "ImageFile": ((9, LCID, 4, 0),()),
        "ImageHeight": ((7, LCID, 4, 0),()),
        "ImageVisibility": ((10, LCID, 4, 0),()),
        "ImageWidth": ((6, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((8, LCID, 4, 0),()),
        "Origin": ((4, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((5, LCID, 4, 0),()),
        "ScaleFactor": ((17, LCID, 4, 0),()),
        "ShowRotation": ((16, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "transparency": ((12, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadXRecord(DispatchBaseClass):
    'TeighaX Interface of XRecord objects are used to store and manage arbitrary data'
    CLSID = IID('{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}')
    coclass_clsid = IID('{2F5F8554-25D4-4D47-ABE3-4F92E81D4DFF}')

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def GetXRecordData(self, XRecordDataType=pythoncom.Missing, XRecordDataValue=pythoncom.Missing):
        'Gets the extended record data (XRecordData) associated with a dictionary'
        return self._ApplyTypes_(2, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetXRecordData', None,XRecordDataType
            , XRecordDataValue)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def SetXRecordData(self, XRecordDataType=defaultNamedNotOptArg, XRecordDataValue=defaultNamedNotOptArg):
        'Specifies the extended record data (XRecordData) associated with a dictionary'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1), (12, 1)),XRecordDataType
            , XRecordDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "TranslateIDs": (4, 2, (11, 0), (), "TranslateIDs", None),
    }
    _prop_map_put_ = {
        "Name": ((1, LCID, 4, 0),()),
        "TranslateIDs": ((4, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadXline(DispatchBaseClass):
    'TeighaX Interface of a construction line that is infinite in both directions'
    CLSID = IID('{703DF76F-5C64-414A-B271-4520E1244353}')
    coclass_clsid = IID('{D0720E0B-260B-4E8E-B02E-BB1C6882AB2F}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Creates a new entity object by offsetting the Xline by a specified distance'
        return self._ApplyTypes_(4, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'BasePoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'SecondPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BasePoint": (1, 2, (12, 0), (), "BasePoint", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "DirectionVector": (3, 2, (12, 0), (), "DirectionVector", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "SecondPoint": (2, 2, (12, 0), (), "SecondPoint", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BasePoint": ((1, LCID, 4, 0),()),
        "DirectionVector": ((3, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "SecondPoint": ((2, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaBlock(DispatchBaseClass):
    'TeighaX Interface for an additional block functionality'
    CLSID = IID('{D288082B-EC5B-4B26-A983-3AAD6F980D6C}')
    coclass_clsid = IID('{5BE85927-9C3C-4E1F-BAE0-CCDA866949C5}')

    # Result is of type IAcad3DFace
    def Add3DFace(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 3DFace object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1540, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DFace', '{7FBB52D0-2190-4A17-9A16-CB37821293B5}')
        return ret

    # Result is of type IAcadPolygonMesh
    def Add3DMesh(self, M=defaultNamedNotOptArg, N=defaultNamedNotOptArg, PointsMatrix=defaultNamedNotOptArg):
        'Creates a PolyfaceMesh object and adds it to modelspace, paperspace, or a block.'
        PointsMatrix = VTR8ArrayOrVal(PointsMatrix)
        ret = self._oleobj_.InvokeTypes(1541, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1)),M
            , N, PointsMatrix)
        if ret is not None:
            ret = Dispatch(ret, 'Add3DMesh', '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')
        return ret

    # Result is of type IAcad3DPolyline
    def Add3DPoly(self, PointsArray=defaultNamedNotOptArg):
        'Creates a 3DPolyline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1542, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add3DPoly', '{E82F96B5-BA0E-4569-BD8A-596495947C12}')
        return ret

    # Result is of type IAcadArc
    def AddArc(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, StartAngle=defaultNamedNotOptArg, EndAngle=defaultNamedNotOptArg):
        'Creates an Arc object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1543, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Radius, StartAngle, EndAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddArc', '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')
        return ret

    # Result is of type IAcadAttribute
    def AddAttribute(self, Height=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg, Prompt=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg
            , Tag=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Creates an Attribute object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1544, LCID, 1, (9, 0), ((5, 1), (3, 1), (8, 1), (12, 1), (8, 1), (8, 1)),Height
            , Mode, Prompt, InsertionPoint, Tag, Value
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddAttribute', '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddBox(self, Origin=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid box and adds it to modelspace, paperspace, or a block.'
        Origin = VTR8ArrayOrVal(Origin)
        ret = self._oleobj_.InvokeTypes(1545, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Origin
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddBox', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadCircle
    def AddCircle(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Circle object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1546, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddCircle', '{E23D2B17-487F-4016-A5D4-6C27643F308F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddCone(self, Center=defaultNamedNotOptArg, BaseRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cone and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1547, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , BaseRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    def AddCustomObject(self, ClassName=defaultNamedNotOptArg):
        'Creates a custom object.'
        ret = self._oleobj_.InvokeTypes(1539, LCID, 1, (9, 0), ((8, 1),),ClassName
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddCustomObject', None)
        return ret

    # Result is of type IAcad3DSolid
    def AddCylinder(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid cylinder and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1548, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , Radius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadDim3PointAngular
    def AddDim3PointAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates a 3-point angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1588, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDim3PointAngular', '{B0E595FE-21A5-4C67-A916-4689ABA37E62}')
        return ret

    # Result is of type IAcadDimAligned
    def AddDimAligned(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, TextPosition=defaultNamedNotOptArg):
        'Creates an aligned dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        TextPosition = VTR8ArrayOrVal(TextPosition)
        ret = self._oleobj_.InvokeTypes(1549, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),ExtLine1Point
            , ExtLine2Point, TextPosition)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAligned', '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')
        return ret

    # Result is of type IAcadDimAngular
    def AddDimAngular(self, AngleVertex=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, TextPoint=defaultNamedNotOptArg):
        'Creates an angular dimension object and adds it to modelspace, paperspace, or a block.'
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        TextPoint = VTR8ArrayOrVal(TextPoint)
        ret = self._oleobj_.InvokeTypes(1550, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),AngleVertex
            , FirstEndPoint, SecondEndPoint, TextPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimAngular', '{559F6310-4DB2-4B61-8B4C-96D89006711B}')
        return ret

    # Result is of type IAcadDimArcLength
    def AddDimArc(self, ArcCenter=defaultNamedNotOptArg, FirstEndPoint=defaultNamedNotOptArg, SecondEndPoint=defaultNamedNotOptArg, ArcPoint=defaultNamedNotOptArg):
        'Creates an arc length dimension object and adds it to modelspace, paperspace, or a block.'
        ArcCenter = VTR8ArrayOrVal(ArcCenter)
        FirstEndPoint = VTR8ArrayOrVal(FirstEndPoint)
        SecondEndPoint = VTR8ArrayOrVal(SecondEndPoint)
        ArcPoint = VTR8ArrayOrVal(ArcPoint)
        ret = self._oleobj_.InvokeTypes(1602, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),ArcCenter
            , FirstEndPoint, SecondEndPoint, ArcPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimArc', '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')
        return ret

    # Result is of type IAcadDimDiametric
    def AddDimDiametric(self, ChordPoint=defaultNamedNotOptArg, FarChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a diametric dimension object and adds it to modelspace, paperspace, or a block.'
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        FarChordPoint = VTR8ArrayOrVal(FarChordPoint)
        ret = self._oleobj_.InvokeTypes(1551, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),ChordPoint
            , FarChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimDiametric', '{0FB4DC41-B309-41C8-B5E7-23B284C98450}')
        return ret

    # Result is of type IAcadDimOrdinate
    def AddDimOrdinate(self, DefinitionPoint=defaultNamedNotOptArg, LeaderEndPoint=defaultNamedNotOptArg, UseXAxis=defaultNamedNotOptArg):
        'Creates an ordinate dimension object and adds it to modelspace, paperspace, or a block.'
        DefinitionPoint = VTR8ArrayOrVal(DefinitionPoint)
        LeaderEndPoint = VTR8ArrayOrVal(LeaderEndPoint)
        ret = self._oleobj_.InvokeTypes(1553, LCID, 1, (9, 0), ((12, 1), (12, 1), (3, 1)),DefinitionPoint
            , LeaderEndPoint, UseXAxis)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimOrdinate', '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')
        return ret

    # Result is of type IAcadDimRadial
    def AddDimRadial(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, LeaderLength=defaultNamedNotOptArg):
        'Creates a radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        ret = self._oleobj_.InvokeTypes(1554, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, LeaderLength)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadial', '{0F29A519-B989-4E81-B41F-3346F3BE65CE}')
        return ret

    # Result is of type IAcadDimRadialLarge
    def AddDimRadialLarge(self, Center=defaultNamedNotOptArg, ChordPoint=defaultNamedNotOptArg, OverrideCenter=defaultNamedNotOptArg, JogPoint=defaultNamedNotOptArg
            , JogAngle=defaultNamedNotOptArg):
        'Creates a jogged radial dimension object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ChordPoint = VTR8ArrayOrVal(ChordPoint)
        OverrideCenter = VTR8ArrayOrVal(OverrideCenter)
        JogPoint = VTR8ArrayOrVal(JogPoint)
        ret = self._oleobj_.InvokeTypes(1603, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (5, 1)),Center
            , ChordPoint, OverrideCenter, JogPoint, JogAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRadialLarge', '{F2B4D571-C206-4E19-B1C0-55C95BED669C}')
        return ret

    # Result is of type IAcadDimRotated
    def AddDimRotated(self, ExtLine1Point=defaultNamedNotOptArg, ExtLine2Point=defaultNamedNotOptArg, DimLineLocation=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a rotated linear dimension object and adds it to modelspace, paperspace, or a block.'
        ExtLine1Point = VTR8ArrayOrVal(ExtLine1Point)
        ExtLine2Point = VTR8ArrayOrVal(ExtLine2Point)
        DimLineLocation = VTR8ArrayOrVal(DimLineLocation)
        ret = self._oleobj_.InvokeTypes(1552, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (5, 1)),ExtLine1Point
            , ExtLine2Point, DimLineLocation, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddDimRotated', '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')
        return ret

    # Result is of type IAcadEllipse
    def AddEllipse(self, Center=defaultNamedNotOptArg, MajorAxis=defaultNamedNotOptArg, RadiusRatio=defaultNamedNotOptArg):
        'Creates an Ellipse object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        MajorAxis = VTR8ArrayOrVal(MajorAxis)
        ret = self._oleobj_.InvokeTypes(1555, LCID, 1, (9, 0), ((12, 1), (12, 1), (5, 1)),Center
            , MajorAxis, RadiusRatio)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipse', '{5B4B058E-B8AA-4C76-B652-76AF101C380F}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCone(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cone object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1556, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCone', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddEllipticalCylinder(self, Center=defaultNamedNotOptArg, MajorRadius=defaultNamedNotOptArg, MinorRadius=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a 3D solid elliptical cylinder object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1557, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , MajorRadius, MinorRadius, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddEllipticalCylinder', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadOle
    def AddEmbeddedRaster(self, ImagePath=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Width=defaultNamedNotOptArg):
        'Embed raster as an OLE item.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1792, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),ImagePath
            , InsertionPoint, Height, Width)
        if ret is not None:
            ret = Dispatch(ret, 'AddEmbeddedRaster', '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolid(self, Profile=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, TaperAngle=defaultNamedNotOptArg):
        'Creates an extruded solid object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1558, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1)),Profile
            , Height, TaperAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcad3DSolid
    def AddExtrudedSolidAlongPath(self, Profile=defaultNamedNotOptArg, Path=defaultNamedNotOptArg):
        'Creates an extruded solid object along a path and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1559, LCID, 1, (9, 0), ((9, 1), (9, 1)),Profile
            , Path)
        if ret is not None:
            ret = Dispatch(ret, 'AddExtrudedSolidAlongPath', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadHatch
    def AddHatch(self, PatternType=defaultNamedNotOptArg, PatternName=defaultNamedNotOptArg, Associativity=defaultNamedNotOptArg, HatchObjectType=defaultNamedOptArg):
        'Creates a Hatch object and adds it to modelspace, paperspace, or a block.'
        ret = self._oleobj_.InvokeTypes(1579, LCID, 1, (9, 0), ((3, 1), (8, 1), (11, 1), (12, 17)),PatternType
            , PatternName, Associativity, HatchObjectType)
        if ret is not None:
            ret = Dispatch(ret, 'AddHatch', '{173ED161-3D64-4EF5-85F4-6AACA83CD382}')
        return ret

    # Result is of type IAcadLeader
    def AddLeader(self, PointsArray=defaultNamedNotOptArg, Annotation=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
        'Creates a Leader object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1560, LCID, 1, (9, 0), ((12, 1), (9, 1), (3, 1)),PointsArray
            , Annotation, Type)
        if ret is not None:
            ret = Dispatch(ret, 'AddLeader', '{A7072E19-38E6-4320-9045-B67E53179643}')
        return ret

    # Result is of type IAcadLWPolyline
    def AddLightWeightPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Lightweight Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1563, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddLightWeightPolyline', '{037572DF-0207-4B27-BCDA-C163054A21DF}')
        return ret

    # Result is of type IAcadLine
    def AddLine(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Creates a Line object and adds it to modelspace, paperspace, or a block.'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        ret = self._oleobj_.InvokeTypes(1581, LCID, 1, (9, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)
        if ret is not None:
            ret = Dispatch(ret, 'AddLine', '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')
        return ret

    # Result is of type IAcadMInsertBlock
    def AddMInsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowSpacing=defaultNamedNotOptArg
            , ColumnSpacing=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Adds an array of blocks to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1585, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , NumRows, NumColumns, RowSpacing, ColumnSpacing, Password
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMInsertBlock', '{A6653F5A-001E-4125-8BB0-597E96CDE498}')
        return ret

    # Result is of type IAcadMLeader
    def AddMLeader(self, PointsArray=defaultNamedNotOptArg, leaderLineIndex=pythoncom.Missing):
        'Creates a multileader'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        return self._ApplyTypes_(1605, 1, (9, 0), ((12, 1), (16387, 2)), 'AddMLeader', '{A2F0013E-ACE4-41C5-9015-37587663DD30}',PointsArray
            , leaderLineIndex)

    # Result is of type IAcadMLine
    def AddMLine(self, VertexList=defaultNamedNotOptArg):
        'Creates a Multiline object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1587, LCID, 1, (9, 0), ((12, 1),),VertexList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddMLine', '{C35F5577-83CE-43C7-B10E-AFEF9E345739}')
        return ret

    # Result is of type IAcadMText
    def AddMText(self, InsertionPoint=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
        'Creates an Multiline Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1561, LCID, 1, (9, 0), ((12, 1), (5, 1), (8, 1)),InsertionPoint
            , Width, Text)
        if ret is not None:
            ret = Dispatch(ret, 'AddMText', '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')
        return ret

    # Result is of type IAcadPoint
    def AddPoint(self, Point=defaultNamedNotOptArg):
        'Creates a Point object and adds it to modelspace, paperspace, or a block.'
        Point = VTR8ArrayOrVal(Point)
        ret = self._oleobj_.InvokeTypes(1562, LCID, 1, (9, 0), ((12, 1),),Point
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPoint', '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')
        return ret

    # Result is of type IAcadPolyfaceMesh
    def AddPolyfaceMesh(self, VertexList=defaultNamedNotOptArg, FaceList=defaultNamedNotOptArg):
        'Creates a Polyface Mesh object and adds it to modelspace, paperspace, or a block.'
        VertexList = VTR8ArrayOrVal(VertexList)
        ret = self._oleobj_.InvokeTypes(1586, LCID, 1, (9, 0), ((12, 1), (12, 1)),VertexList
            , FaceList)
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyfaceMesh', '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')
        return ret

    # Result is of type IAcadPolyline
    def AddPolyline(self, VerticesList=defaultNamedNotOptArg):
        'Creates a Polyline object and adds it to modelspace, paperspace, or a block.'
        VerticesList = VTR8ArrayOrVal(VerticesList)
        ret = self._oleobj_.InvokeTypes(1564, LCID, 1, (9, 0), ((12, 1),),VerticesList
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddPolyline', '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')
        return ret

    # Result is of type IAcadRasterImage
    def AddRaster(self, imageFileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Adds a raster image as a Raster object to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1580, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),imageFileName
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRaster', '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')
        return ret

    # Result is of type IAcadRay
    def AddRay(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates a Ray object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1565, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddRay', '{C888FAF5-E377-4624-A8E2-898031AB58BB}')
        return ret

    def AddRegion(self, ObjectList=defaultNamedNotOptArg):
        'Creates a Region object and adds it to modelspace, paperspace, or a block.'
        ObjectList = VTDISPArrayOrVal(ObjectList)
        return self._ApplyTypes_(1566, 1, (12, 0), ((12, 1),), 'AddRegion', None,ObjectList
            )

    # Result is of type IAcad3DSolid
    def AddRevolvedSolid(self, Profile=defaultNamedNotOptArg, AxisPoint=defaultNamedNotOptArg, AxisDir=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
        'Creates a revolved solid object and adds it to modelspace, paperspace, or a block.'
        AxisPoint = VTR8ArrayOrVal(AxisPoint)
        AxisDir = VTR8ArrayOrVal(AxisDir)
        ret = self._oleobj_.InvokeTypes(1567, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 1), (5, 1)),Profile
            , AxisPoint, AxisDir, Angle)
        if ret is not None:
            ret = Dispatch(ret, 'AddRevolvedSolid', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSection
    def AddSection(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg, planeVector=defaultNamedNotOptArg):
        'Creates a Section object and adds it to modelspace, paperspace, or a block.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        planeVector = VTR8ArrayOrVal(planeVector)
        ret = self._oleobj_.InvokeTypes(1604, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),FromPoint
            , ToPoint, planeVector)
        if ret is not None:
            ret = Dispatch(ret, 'AddSection', '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')
        return ret

    # Result is of type IAcadShape
    def AddShape(self, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Creates a Shape object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1568, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1), (5, 1)),Name
            , InsertionPoint, ScaleFactor, RotationAngle)
        if ret is not None:
            ret = Dispatch(ret, 'AddShape', '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')
        return ret

    # Result is of type IAcadSolid
    def AddSolid(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, point3=defaultNamedNotOptArg, Point4=defaultNamedNotOptArg):
        'Creates a 2D solid polygon object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        point3 = VTR8ArrayOrVal(point3)
        Point4 = VTR8ArrayOrVal(Point4)
        ret = self._oleobj_.InvokeTypes(1569, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Point1
            , Point2, point3, Point4)
        if ret is not None:
            ret = Dispatch(ret, 'AddSolid', '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')
        return ret

    # Result is of type IAcad3DSolid
    def AddSphere(self, Center=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
        'Creates a Sphere object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1570, LCID, 1, (9, 0), ((12, 1), (5, 1)),Center
            , Radius)
        if ret is not None:
            ret = Dispatch(ret, 'AddSphere', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadSpline
    def AddSpline(self, PointsArray=defaultNamedNotOptArg, StartTangent=defaultNamedNotOptArg, EndTangent=defaultNamedNotOptArg):
        'Creates a Spline object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1571, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),PointsArray
            , StartTangent, EndTangent)
        if ret is not None:
            ret = Dispatch(ret, 'AddSpline', '{B05C2404-6A45-4A57-8075-F98464C350BE}')
        return ret

    # Result is of type IAcadTable
    def AddTable(self, InsertionPoint=defaultNamedNotOptArg, NumRows=defaultNamedNotOptArg, NumColumns=defaultNamedNotOptArg, RowHeight=defaultNamedNotOptArg
            , ColWidth=defaultNamedNotOptArg):
        'Creates a Table object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1595, LCID, 1, (9, 0), ((12, 1), (3, 1), (3, 1), (5, 1), (5, 1)),InsertionPoint
            , NumRows, NumColumns, RowHeight, ColWidth)
        if ret is not None:
            ret = Dispatch(ret, 'AddTable', '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')
        return ret

    # Result is of type IAcadText
    def AddText(self, TextString=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Text object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1572, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),TextString
            , InsertionPoint, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddText', '{9CD7E38D-0003-410D-B6DF-DE36FD190850}')
        return ret

    # Result is of type IAcadTolerance
    def AddTolerance(self, Text=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
        'Creates a Tolerance object and adds it to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        Direction = VTR8ArrayOrVal(Direction)
        ret = self._oleobj_.InvokeTypes(1573, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 1)),Text
            , InsertionPoint, Direction)
        if ret is not None:
            ret = Dispatch(ret, 'AddTolerance', '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')
        return ret

    # Result is of type IAcad3DSolid
    def AddTorus(self, Center=defaultNamedNotOptArg, TorusRadius=defaultNamedNotOptArg, TubeRadius=defaultNamedNotOptArg):
        'Creates a Torus object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1574, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1)),Center
            , TorusRadius, TubeRadius)
        if ret is not None:
            ret = Dispatch(ret, 'AddTorus', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadTrace
    def AddTrace(self, PointsArray=defaultNamedNotOptArg):
        'Creates a Trace object and adds it to modelspace, paperspace, or a block.'
        PointsArray = VTR8ArrayOrVal(PointsArray)
        ret = self._oleobj_.InvokeTypes(1575, LCID, 1, (9, 0), ((12, 1),),PointsArray
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddTrace', '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')
        return ret

    # Result is of type IAcad3DSolid
    def AddWedge(self, Center=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
        'Creates a Wedge object and adds it to modelspace, paperspace, or a block.'
        Center = VTR8ArrayOrVal(Center)
        ret = self._oleobj_.InvokeTypes(1576, LCID, 1, (9, 0), ((12, 1), (5, 1), (5, 1), (5, 1)),Center
            , Length, Width, Height)
        if ret is not None:
            ret = Dispatch(ret, 'AddWedge', '{34C7D347-D220-40C8-A81F-4B76ED6E5751}')
        return ret

    # Result is of type IAcadXline
    def AddXline(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Creates an XLine object and adds it to modelspace, paperspace, or a block.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1577, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'AddXline', '{703DF76F-5C64-414A-B271-4520E1244353}')
        return ret

    # Result is of type IAcadExternalReference
    def AttachExternalReference(self, PathName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg
            , Yscale=defaultNamedNotOptArg, Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, bOverlay=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Attaches an external reference to a drawing.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1590, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1), (12, 17)),PathName
            , Name, InsertionPoint, Xscale, Yscale, Zscale
            , Rotation, bOverlay, Password)
        if ret is not None:
            ret = Dispatch(ret, 'AttachExternalReference', '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')
        return ret

    def Bind(self, bPrefixName=defaultNamedNotOptArg):
        'Binds an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1593, LCID, 1, (24, 0), ((11, 1),),bPrefixName
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Detach(self):
        'Detachs an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1594, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetReferences(self):
        'Returns all references for a block.'
        return self._ApplyTypes_(1793, 1, (12, 0), (), 'GetReferences', None,)

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadBlockReference
    def InsertBlock(self, InsertionPoint=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Xscale=defaultNamedNotOptArg, Yscale=defaultNamedNotOptArg
            , Zscale=defaultNamedNotOptArg, Rotation=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Inserts a drawing or named block to modelspace, paperspace, or a block.'
        InsertionPoint = VTR8ArrayOrVal(InsertionPoint)
        ret = self._oleobj_.InvokeTypes(1578, LCID, 1, (9, 0), ((12, 1), (8, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),InsertionPoint
            , Name, Xscale, Yscale, Zscale, Rotation
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'InsertBlock', '{A40DEA37-8356-415A-B3AC-E087819C6301}')
        return ret

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def Reload(self):
        'Reloads an external reference to a drawing.'
        return self._oleobj_.InvokeTypes(1592, LCID, 1, (24, 0), (),)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def Unload(self):
        'Unloads an external reference from a drawing.'
        return self._oleobj_.InvokeTypes(1591, LCID, 1, (24, 0), (),)

    def setOverlaid(self, bOverlaid=defaultNamedNotOptArg):
        'Specfies whether a block is an overlay.'
        return self._oleobj_.InvokeTypes(1798, LCID, 1, (24, 0), ((11, 1),),bOverlaid
            )

    #IAcadBlock override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BlockScaling": (1600, 2, (3, 0), (), "BlockScaling", None),
        "Comments": (1597, 2, (8, 0), (), "Comments", None),
        "Count": (1536, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Explodable": (1599, 2, (11, 0), (), "Explodable", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "IsDynamicBlock": (1601, 2, (11, 0), (), "IsDynamicBlock", None),
        "IsLayout": (1582, 2, (11, 0), (), "IsLayout", None),
        "IsXRef": (1584, 2, (11, 0), (), "IsXRef", None),
        # Method 'Layout' returns object of type 'IAcadLayout'
        "Layout": (1583, 2, (9, 0), (), "Layout", '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}'),
        "Name": (1537, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (1538, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "Path": (1596, 2, (8, 0), (), "Path", None),
        "Units": (1598, 2, (3, 0), (), "Units", None),
        # Method 'XRefDatabase' returns object of type 'IAcadDatabase'
        "XRefDatabase": (1589, 2, (9, 0), (), "XRefDatabase", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "isDependent": (1796, 2, (11, 0), (), "isDependent", None),
        "isFromOverlayReference": (1794, 2, (11, 0), (), "isFromOverlayReference", None),
        "isResolved": (1795, 2, (11, 0), (), "isResolved", None),
        "isUnloaded": (1797, 2, (11, 0), (), "isUnloaded", None),
    }
    _prop_map_put_ = {
        "BlockScaling": ((1600, LCID, 4, 0),()),
        "Comments": ((1597, LCID, 4, 0),()),
        "Explodable": ((1599, LCID, 4, 0),()),
        "Name": ((1537, LCID, 4, 0),()),
        "Origin": ((1538, LCID, 4, 0),()),
        "Path": ((1596, LCID, 4, 0),()),
        "Units": ((1598, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Returns an object at a given index in a collection.'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1536, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IOdaCamera(DispatchBaseClass):
    'Interface for a Camera entity'
    CLSID = IID('{416400A5-8C83-49A6-9ED3-EFF0322FCFA9}')
    coclass_clsid = IID('{6CEF829F-33B8-4FF2-B641-8333F877B180}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #IOdaCamera override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Location':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "BackPlane": (11, 2, (5, 0), (), "BackPlane", None),
        "Clipping": (12, 2, (8, 0), (), "Clipping", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FieldOfView": (5, 2, (5, 0), (), "FieldOfView", None),
        "FrameHeight": (6, 2, (5, 0), (), "FrameHeight", None),
        "FrameWidth": (7, 2, (5, 0), (), "FrameWidth", None),
        "FrontPlane": (10, 2, (5, 0), (), "FrontPlane", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "IsPlotable": (9, 2, (11, 0), (), "IsPlotable", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "LensLength": (4, 2, (5, 0), (), "LensLength", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Location": (2, 2, (12, 0), (), "Location", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "RollAngle": (8, 2, (5, 0), (), "RollAngle", None),
        "Target": (3, 2, (12, 0), (), "Target", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "BackPlane": ((11, LCID, 4, 0),()),
        "Clipping": ((12, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FieldOfView": ((5, LCID, 4, 0),()),
        "FrameHeight": ((6, LCID, 4, 0),()),
        "FrameWidth": ((7, LCID, 4, 0),()),
        "FrontPlane": ((10, LCID, 4, 0),()),
        "IsPlotable": ((9, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LensLength": ((4, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Location": ((2, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "RollAngle": ((8, LCID, 4, 0),()),
        "Target": ((3, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaLight(DispatchBaseClass):
    'Interface for a Light entity'
    CLSID = IID('{7BB45F85-7771-4B5C-9D8E-EA0E79228461}')
    coclass_clsid = IID('{2DB71EA6-47C0-457C-9E36-D5FDE0E72C05}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Position':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'Target':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "AttenuationType": (13, 2, (8, 0), (), "AttenuationType", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndLimit": (16, 2, (5, 0), (), "EndLimit", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FallOff": (7, 2, (5, 0), (), "FallOff", None),
        "FromVector": (20, 2, (12, 0), (), "FromVector", None),
        "GlyphDisplay": (42, 2, (8, 0), (), "GlyphDisplay", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "HasTarget": (34, 2, (11, 0), (), "HasTarget", None),
        "HotSpot": (6, 2, (5, 0), (), "HotSpot", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "IlluminanceDistance": (39, 2, (5, 0), (), "IlluminanceDistance", None),
        "Intensity": (8, 2, (5, 0), (), "Intensity", None),
        "LampColor": (27, 2, (12, 0), (), "LampColor", None),
        "LampIntensity": (25, 2, (12, 0), (), "LampIntensity", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        # Method 'LightColor' returns object of type 'IAcadAcCmColor'
        "LightColor": (9, 2, (9, 0), (), "LightColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "LightType": (2, 2, (8, 0), (), "LightType", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "MapSize": (18, 2, (8, 0), (), "MapSize", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotGlyph": (10, 2, (11, 0), (), "PlotGlyph", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Position": (11, 2, (12, 0), (), "Position", None),
        # Method 'ResultColor' returns object of type 'IAcadAcCmColor'
        "ResultColor": (28, 2, (9, 0), (), "ResultColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "ResultIntensity": (26, 2, (8, 0), (), "ResultIntensity", None),
        "ShadowLength": (40, 2, (5, 0), (), "ShadowLength", None),
        "ShadowRadius": (38, 2, (5, 0), (), "ShadowRadius", None),
        "ShadowSamples": (35, 2, (3, 0), (), "ShadowSamples", None),
        "ShadowShape": (37, 2, (8, 0), (), "ShadowShape", None),
        "ShadowType": (17, 2, (8, 0), (), "ShadowType", None),
        "ShadowVisible": (36, 2, (11, 0), (), "ShadowVisible", None),
        "ShadowWidth": (41, 2, (5, 0), (), "ShadowWidth", None),
        "Shadows": (5, 2, (11, 0), (), "Shadows", None),
        "Softness": (19, 2, (3, 0), (), "Softness", None),
        "SourceVectorX": (22, 2, (5, 0), (), "SourceVectorX", None),
        "SourceVectorY": (23, 2, (5, 0), (), "SourceVectorY", None),
        "SourceVectorZ": (24, 2, (5, 0), (), "SourceVectorZ", None),
        "StartLimit": (15, 2, (5, 0), (), "StartLimit", None),
        "Status": (4, 2, (11, 0), (), "Status", None),
        "Target": (12, 2, (12, 0), (), "Target", None),
        "ToVector": (21, 2, (12, 0), (), "ToVector", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "UseLimits": (14, 2, (11, 0), (), "UseLimits", None),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "WebFile": (29, 2, (8, 0), (), "WebFile", None),
        "WebPreview": (30, 2, (12, 0), (), "WebPreview", None),
        "WebRotateX": (31, 2, (5, 0), (), "WebRotateX", None),
        "WebRotateY": (32, 2, (5, 0), (), "WebRotateY", None),
        "WebRotateZ": (33, 2, (5, 0), (), "WebRotateZ", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "AttenuationType": ((13, LCID, 4, 0),()),
        "EndLimit": ((16, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FallOff": ((7, LCID, 4, 0),()),
        "FromVector": ((20, LCID, 4, 0),()),
        "GlyphDisplay": ((42, LCID, 4, 0),()),
        "HasTarget": ((34, LCID, 4, 0),()),
        "HotSpot": ((6, LCID, 4, 0),()),
        "IlluminanceDistance": ((39, LCID, 4, 0),()),
        "Intensity": ((8, LCID, 4, 0),()),
        "LampColor": ((27, LCID, 4, 0),()),
        "LampIntensity": ((25, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "LightColor": ((9, LCID, 4, 0),()),
        "LightType": ((2, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "MapSize": ((18, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "PlotGlyph": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Position": ((11, LCID, 4, 0),()),
        "ResultColor": ((28, LCID, 4, 0),()),
        "ResultIntensity": ((26, LCID, 4, 0),()),
        "ShadowLength": ((40, LCID, 4, 0),()),
        "ShadowRadius": ((38, LCID, 4, 0),()),
        "ShadowSamples": ((35, LCID, 4, 0),()),
        "ShadowShape": ((37, LCID, 4, 0),()),
        "ShadowType": ((17, LCID, 4, 0),()),
        "ShadowVisible": ((36, LCID, 4, 0),()),
        "ShadowWidth": ((41, LCID, 4, 0),()),
        "Shadows": ((5, LCID, 4, 0),()),
        "Softness": ((19, LCID, 4, 0),()),
        "SourceVectorX": ((22, LCID, 4, 0),()),
        "SourceVectorY": ((23, LCID, 4, 0),()),
        "SourceVectorZ": ((24, LCID, 4, 0),()),
        "StartLimit": ((15, LCID, 4, 0),()),
        "Status": ((4, LCID, 4, 0),()),
        "Target": ((12, LCID, 4, 0),()),
        "ToVector": ((21, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "UseLimits": ((14, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "WebFile": ((29, LCID, 4, 0),()),
        "WebPreview": ((30, LCID, 4, 0),()),
        "WebRotateX": ((31, LCID, 4, 0),()),
        "WebRotateY": ((32, LCID, 4, 0),()),
        "WebRotateZ": ((33, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaLineType(DispatchBaseClass):
    'An additional TeighaX Interface to the line characteristics'
    CLSID = IID('{A3D0151B-A26A-4803-BF89-37C525D058EE}')
    coclass_clsid = IID('{0781CAE4-6055-4D40-B954-42D5EC725018}')

    # The method DashLengthAt is actually a property, but must be used as a method to correctly pass the arguments
    def DashLengthAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the dash length of a linetype.'
        return self._oleobj_.InvokeTypes(1796, LCID, 2, (5, 0), ((3, 0),),Index
            )

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # The method SetDashLengthAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetDashLengthAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the dash length of a linetype.'
        return self._oleobj_.InvokeTypes(1796, LCID, 4, (24, 0), ((3, 0), (5, 1)),Index
            , arg1)

    # The method SetShapeNumberAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetShapeNumberAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the shape to be included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1798, LCID, 4, (24, 0), ((3, 0), (2, 1)),Index
            , arg1)

    # The method SetShapeOffsetAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetShapeOffsetAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the offset of a shape that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1800, LCID, 4, (24, 0), ((3, 0), (12, 1)),Index
            , arg1)

    # The method SetShapeRotationAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetShapeRotationAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the rotation angle of a shape or text that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1799, LCID, 4, (24, 0), ((3, 0), (5, 1)),Index
            , arg1)

    # The method SetShapeScaleAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetShapeScaleAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the scale of a shape that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1797, LCID, 4, (24, 0), ((3, 0), (5, 1)),Index
            , arg1)

    # The method SetShapeStyleAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetShapeStyleAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the style of a shape or text that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1801, LCID, 4, (24, 0), ((3, 0), (9, 1)),Index
            , arg1)

    # The method SetTextAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetTextAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the text to be included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1794, LCID, 4, (24, 0), ((3, 1), (8, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    # The method ShapeNumberAt is actually a property, but must be used as a method to correctly pass the arguments
    def ShapeNumberAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the shape to be included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1798, LCID, 2, (2, 0), ((3, 0),),Index
            )

    # The method ShapeOffsetAt is actually a property, but must be used as a method to correctly pass the arguments
    def ShapeOffsetAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the offset of a shape that is included as part of a linetype.'
        return self._ApplyTypes_(1800, 2, (12, 0), ((3, 0),), 'ShapeOffsetAt', None,Index
            )

    # The method ShapeRotationAt is actually a property, but must be used as a method to correctly pass the arguments
    def ShapeRotationAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the rotation angle of a shape or text that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1799, LCID, 2, (5, 0), ((3, 0),),Index
            )

    # The method ShapeScaleAt is actually a property, but must be used as a method to correctly pass the arguments
    def ShapeScaleAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the scale of a shape that is included as part of a linetype.'
        return self._oleobj_.InvokeTypes(1797, LCID, 2, (5, 0), ((3, 0),),Index
            )

    # Result is of type IAcadTextStyle
    # The method ShapeStyleAt is actually a property, but must be used as a method to correctly pass the arguments
    def ShapeStyleAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the style of a shape or text that is included as part of a linetype.'
        ret = self._oleobj_.InvokeTypes(1801, LCID, 2, (9, 0), ((3, 0),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'ShapeStyleAt', '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')
        return ret

    # The method TextAt is actually a property, but must be used as a method to correctly pass the arguments
    def TextAt(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the text to be included as part of a linetype.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1794, LCID, 2, (8, 0), ((3, 1),),Index
            )

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (1, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "NumDashes": (1793, 2, (3, 0), (), "NumDashes", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PatternLength": (1795, 2, (5, 0), (), "PatternLength", None),
    }
    _prop_map_put_ = {
        "Description": ((1, LCID, 4, 0),()),
        "Name": ((2, LCID, 4, 0),()),
        "NumDashes": ((1793, LCID, 4, 0),()),
        "PatternLength": ((1795, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaMLineStyle(DispatchBaseClass):
    'TeighaX Interface to define a style for multiple parallel lines'
    CLSID = IID('{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')
    coclass_clsid = IID('{9D7870FF-F579-42F2-B5C8-68C1F81520B1}')

    def AddElement(self, Offset=defaultNamedNotOptArg, color=defaultNamedNotOptArg, pLinetype=defaultNamedNotOptArg):
        'Adds an element to this MLine Style'
        return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (9, 1), (9, 1)),Offset
            , color, pLinetype)

    # Result is of type IAcadAcCmColor
    # The method ColorAt is actually a property, but must be used as a method to correctly pass the arguments
    def ColorAt(self, Index=defaultNamedNotOptArg):
        'Returns the Color object for an existing element in this MLine Style'
        ret = self._oleobj_.InvokeTypes(17, LCID, 2, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'ColorAt', '{6F2B458D-6232-4085-AA60-BD5E8A967722}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IAcadLineType
    # The method LineTypeAt is actually a property, but must be used as a method to correctly pass the arguments
    def LineTypeAt(self, Index=defaultNamedNotOptArg):
        'Returns the Line Type object for an existing element in this MLine Style'
        ret = self._oleobj_.InvokeTypes(18, LCID, 2, (9, 0), ((3, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'LineTypeAt', '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')
        return ret

    # The method OffsetAt is actually a property, but must be used as a method to correctly pass the arguments
    def OffsetAt(self, Index=defaultNamedNotOptArg):
        'Returns the offset values for an existing element in this MLine Style'
        return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 1),),Index
            )

    # The method SetColorAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetColorAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Returns the Color object for an existing element in this MLine Style'
        return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
            , arg1)

    # The method SetLineTypeAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetLineTypeAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Returns the Line Type object for an existing element in this MLine Style'
        return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
            , arg1)

    # The method SetOffsetAt is actually a property, but must be used as a method to correctly pass the arguments
    def SetOffsetAt(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Returns the offset values for an existing element in this MLine Style'
        return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Description": (2, 2, (8, 0), (), "Description", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "ElementsCount": (6, 2, (3, 0), (), "ElementsCount", None),
        "EndAngle": (4, 2, (5, 0), (), "EndAngle", None),
        "EndInnerArcs": (14, 2, (11, 0), (), "EndInnerArcs", None),
        "EndRoundCap": (13, 2, (11, 0), (), "EndRoundCap", None),
        "EndSquareCap": (12, 2, (11, 0), (), "EndSquareCap", None),
        # Method 'FillColor' returns object of type 'IAcadAcCmColor'
        "FillColor": (5, 2, (9, 0), (), "FillColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Filled": (7, 2, (11, 0), (), "Filled", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Name": (1, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "ShowMiters": (8, 2, (11, 0), (), "ShowMiters", None),
        "StartAngle": (3, 2, (5, 0), (), "StartAngle", None),
        "StartInnerArcs": (11, 2, (11, 0), (), "StartInnerArcs", None),
        "StartRoundCap": (10, 2, (11, 0), (), "StartRoundCap", None),
        "StartSquareCap": (9, 2, (11, 0), (), "StartSquareCap", None),
    }
    _prop_map_put_ = {
        "Description": ((2, LCID, 4, 0),()),
        "EndAngle": ((4, LCID, 4, 0),()),
        "EndInnerArcs": ((14, LCID, 4, 0),()),
        "EndRoundCap": ((13, LCID, 4, 0),()),
        "EndSquareCap": ((12, LCID, 4, 0),()),
        "FillColor": ((5, LCID, 4, 0),()),
        "Filled": ((7, LCID, 4, 0),()),
        "Name": ((1, LCID, 4, 0),()),
        "ShowMiters": ((8, LCID, 4, 0),()),
        "StartAngle": ((3, LCID, 4, 0),()),
        "StartInnerArcs": ((11, LCID, 4, 0),()),
        "StartRoundCap": ((10, LCID, 4, 0),()),
        "StartSquareCap": ((9, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaMLineStyles(DispatchBaseClass):
    'TeighaX Interface for the collection of all mline styles in the drawing'
    CLSID = IID('{EAB07C99-ABCA-4880-9B1C-4FD13FC3DE3A}')
    coclass_clsid = IID('{E15628CD-21E1-449A-8A74-5673C390599A}')

    # Result is of type IOdaMLineStyle
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    # Result is of type IOdaMLineStyle
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')
        return ret

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Count": (1, 2, (3, 0), (), "Count", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IOdaOle(DispatchBaseClass):
    'TeighaX Interface for an additional Ole functionality'
    CLSID = IID('{39614E96-FFD9-42EA-99F0-FD7DC498D9B6}')
    coclass_clsid = IID('{CC40EAA3-6269-4D03-A2FC-3756679F5179}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'InsertionPoint':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (4, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "InsertionPoint": (1, 2, (12, 0), (), "InsertionPoint", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "LinkName": (11, 2, (8, 0), (), "LinkName", None),
        "LinkPath": (12, 2, (8, 0), (), "LinkPath", None),
        "LockAspectRatio": (7, 2, (11, 0), (), "LockAspectRatio", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OleItemType": (8, 2, (3, 0), (), "OleItemType", None),
        "OlePlotQuality": (9, 2, (3, 0), (), "OlePlotQuality", None),
        "OleSourceApp": (10, 2, (8, 0), (), "OleSourceApp", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (2, 2, (5, 0), (), "Rotation", None),
        "ScaleHeight": (6, 2, (5, 0), (), "ScaleHeight", None),
        "ScaleWidth": (5, 2, (5, 0), (), "ScaleWidth", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (3, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "InsertionPoint": ((1, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "LockAspectRatio": ((7, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "OleItemType": ((8, LCID, 4, 0),()),
        "OlePlotQuality": ((9, LCID, 4, 0),()),
        "OleSourceApp": ((10, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((2, LCID, 4, 0),()),
        "ScaleHeight": ((6, LCID, 4, 0),()),
        "ScaleWidth": ((5, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Width": ((3, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaPolyfaceMesh(DispatchBaseClass):
    'Polyface mesh extended interface'
    CLSID = IID('{88F4A330-80BA-4593-975B-BB2ACDC4E465}')
    coclass_clsid = IID('{52215AF1-CE88-43F7-BC8A-65E9AC73AB69}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    # The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
    def Coordinate(self, Index=defaultNamedNotOptArg):
        'Specifies or returns the coordinate of a single vertex in a polyface mesh.'
        return self._ApplyTypes_(2, 2, (12, 0), ((3, 1),), 'Coordinate', None,Index
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFaces(self, _MIDL__IOdaPolyfaceMesh0000_=pythoncom.Missing):
        return self._ApplyTypes_(1610940416, 1, (24, 0), ((16396, 2),), 'GetFaces', None,_MIDL__IOdaPolyfaceMesh0000_
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    # The method SetCoordinate is actually a property, but must be used as a method to correctly pass the arguments
    def SetCoordinate(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Specifies or returns the coordinate of a single vertex in a polyface mesh.'
        return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
            , arg1)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)

    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Coordinates':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
            
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Coordinates": (1, 2, (12, 0), (), "Coordinates", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfFaces": (4, 2, (3, 0), (), "NumberOfFaces", None),
        "NumberOfVertices": (3, 2, (3, 0), (), "NumberOfVertices", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "Coordinates": ((1, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Faces": ((80, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaRasterImage(DispatchBaseClass):
    'TeighaX Interface for an additional Raster Image funtionality'
    CLSID = IID('{D2F02FB4-2990-4D58-80DC-9B756FC36FD0}')
    coclass_clsid = IID('{3C32ECD7-9763-4A13-BCED-A7E0A7CBB3EC}')

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def ClipBoundary(self, boundry=defaultNamedNotOptArg):
        'Set clipping boundary'
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),boundry
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'Origin':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))

            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)

    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Brightness": (1, 2, (3, 0), (), "Brightness", None),
        "ClippingEnabled": (11, 2, (11, 0), (), "ClippingEnabled", None),
        "Contrast": (2, 2, (3, 0), (), "Contrast", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "Fade": (3, 2, (3, 0), (), "Fade", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        "Height": (14, 2, (5, 0), (), "Height", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "ImageFile": (9, 2, (8, 0), (), "ImageFile", None),
        "ImageHeight": (7, 2, (5, 0), (), "ImageHeight", None),
        "ImageVisibility": (10, 2, (11, 0), (), "ImageVisibility", None),
        "ImageWidth": (6, 2, (5, 0), (), "ImageWidth", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Loaded": (18, 2, (11, 0), (), "Loaded", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "Name": (8, 2, (8, 0), (), "Name", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "Origin": (4, 2, (12, 0), (), "Origin", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "Rotation": (5, 2, (5, 0), (), "Rotation", None),
        "ScaleFactor": (17, 2, (5, 0), (), "ScaleFactor", None),
        "ShowRotation": (16, 2, (11, 0), (), "ShowRotation", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Width": (15, 2, (5, 0), (), "Width", None),
        "color": (1280, 2, (3, 0), (), "color", None),
        "transparency": (12, 2, (11, 0), (), "transparency", None),
    }
    _prop_map_put_ = {
        "Brightness": ((1, LCID, 4, 0),()),
        "ClippingEnabled": ((11, LCID, 4, 0),()),
        "Contrast": ((2, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "Fade": ((3, LCID, 4, 0),()),
        "ImageFile": ((9, LCID, 4, 0),()),
        "ImageHeight": ((7, LCID, 4, 0),()),
        "ImageVisibility": ((10, LCID, 4, 0),()),
        "ImageWidth": ((6, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "Name": ((8, LCID, 4, 0),()),
        "Origin": ((4, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "Rotation": ((5, LCID, 4, 0),()),
        "ScaleFactor": ((17, LCID, 4, 0),()),
        "ShowRotation": ((16, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
        "transparency": ((12, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaSpline(DispatchBaseClass):
    'ODA extended spline interface, for roundtrip purposes'
    CLSID = IID('{4EE8DF6D-534E-4819-87AE-51FA448BCD6A}')
    coclass_clsid = IID('{5F8B0FFC-7274-4725-980A-5007C132C268}')

    def AddFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Adds a fit point to a spline.'
        return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def ArrayPolar(self, NumberOfObjects=defaultNamedNotOptArg, AngleToFill=defaultNamedNotOptArg, CenterPoint=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a polar pattern.'
        return self._ApplyTypes_(1285, 1, (12, 0), ((3, 1), (5, 1), (12, 1)), 'ArrayPolar', None,NumberOfObjects
            , AngleToFill, CenterPoint)

    def ArrayRectangular(self, NumberOfRows=defaultNamedNotOptArg, NumberOfColumns=defaultNamedNotOptArg, NumberOfLevels=defaultNamedNotOptArg, DistBetweenRows=defaultNamedNotOptArg
            , DistBetweenCols=defaultNamedNotOptArg, DistBetweenLevels=defaultNamedNotOptArg):
        'Not implemented. Creates an array of selected objects in a rectangular pattern.'
        return self._ApplyTypes_(1286, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1)), 'ArrayRectangular', None,NumberOfRows
            , NumberOfColumns, NumberOfLevels, DistBetweenRows, DistBetweenCols, DistBetweenLevels
            )

    def Copy(self):
        'Copies a specified entity.'
        ret = self._oleobj_.InvokeTypes(1288, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'Copy', None)
        return ret

    def Delete(self):
        'Deletes a specified object.'
        return self._oleobj_.InvokeTypes(1028, LCID, 1, (24, 0), (),)

    def DeleteFitPoint(self, Index=defaultNamedNotOptArg):
        'Deletes a fit point from a spline.'
        return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1),),Index
            )

    def ElevateOrder(self, Order=defaultNamedNotOptArg):
        'Not implemented. Increases the order of a spline.'
        return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1),),Order
            )

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(1141, LCID, 1, (24, 0), (),)

    def GetBoundingBox(self, MinPoint=pythoncom.Missing, MaxPoint=pythoncom.Missing):
        "Returns the minimum and maximum point of an entity's bounding box."
        return self._ApplyTypes_(1297, 1, (24, 0), ((16396, 2), (16396, 2)), 'GetBoundingBox', None,MinPoint
            , MaxPoint)

    def GetControlPoint(self, Index=defaultNamedNotOptArg):
        'Returns the coordinates for a control point of a spline.'
        return self._ApplyTypes_(15, 1, (12, 0), ((3, 1),), 'GetControlPoint', None,Index
            )

    # Result is of type IAcadDictionary
    def GetExtensionDictionary(self):
        'Returns the extension dictionary associated with an object.'
        ret = self._oleobj_.InvokeTypes(1033, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetExtensionDictionary', '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')
        return ret

    def GetFitPoint(self, Index=defaultNamedNotOptArg):
        'Returns the fit point of a spline.'
        return self._ApplyTypes_(17, 1, (12, 0), ((3, 1),), 'GetFitPoint', None,Index
            )

    def GetWeight(self, Index=defaultNamedNotOptArg):
        'Returns the weight of a spline.'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (5, 0), ((3, 1),),Index
            )

    def GetXData(self, AppName=defaultNamedNotOptArg, XDataType=pythoncom.Missing, XDataValue=pythoncom.Missing):
        'Returns the extended data (XData) associated with an object.'
        return self._ApplyTypes_(1026, 1, (24, 0), ((8, 1), (16396, 2), (16396, 2)), 'GetXData', None,AppName
            , XDataType, XDataValue)

    def Highlight(self, HighlightFlag=defaultNamedNotOptArg):
        'Not implemented. Highlights or removes highlight from an entity.'
        return self._oleobj_.InvokeTypes(1287, LCID, 1, (24, 0), ((11, 1),),HighlightFlag
            )

    def IntersectWith(self, IntersectObject=defaultNamedNotOptArg, option=defaultNamedNotOptArg):
        'Returns coordinates of intersections with the (input) IntersectObject.'
        return self._ApplyTypes_(1298, 1, (12, 0), ((9, 1), (3, 1)), 'IntersectWith', None,IntersectObject
            , option)

    def Mirror(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a line defined by two points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        ret = self._oleobj_.InvokeTypes(1292, LCID, 1, (9, 0), ((12, 1), (12, 1)),Point1
            , Point2)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror', None)
        return ret

    def Mirror3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, Point3=defaultNamedNotOptArg):
        'Not implemented. Mirrors an object around a plane defined by three points.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        Point3 = VTR8ArrayOrVal(Point3)
        ret = self._oleobj_.InvokeTypes(1293, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 1)),Point1
            , Point2, Point3)
        if ret is not None:
            ret = Dispatch(ret, 'Mirror3D', None)
        return ret

    def Move(self, FromPoint=defaultNamedNotOptArg, ToPoint=defaultNamedNotOptArg):
        'Moves an entity from one point to a second point.'
        FromPoint = VTR8ArrayOrVal(FromPoint)
        ToPoint = VTR8ArrayOrVal(ToPoint)
        return self._oleobj_.InvokeTypes(1289, LCID, 1, (24, 0), ((12, 1), (12, 1)),FromPoint
            , ToPoint)

    def Offset(self, Distance=defaultNamedNotOptArg):
        'Not implemented. Creates a new spline at a specified distance from an original spline.'
        return self._ApplyTypes_(23, 1, (12, 0), ((5, 1),), 'Offset', None,Distance
            )

    def PurgeFitData(self):
        'Removes the fit data of a spline.'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

    def Reverse(self):
        'Reverses the direction of a spline.'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

    def Rotate(self, BasePoint=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a point.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1290, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , RotationAngle)

    def Rotate3D(self, Point1=defaultNamedNotOptArg, Point2=defaultNamedNotOptArg, RotationAngle=defaultNamedNotOptArg):
        'Rotates an entity around a line defined by two points, where the direction of the axis if from the first point to the second point.'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        return self._oleobj_.InvokeTypes(1291, LCID, 1, (24, 0), ((12, 1), (12, 1), (5, 1)),Point1
            , Point2, RotationAngle)

    def ScaleEntity(self, BasePoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Scales an object with respect to a base point and scale factor.'
        BasePoint = VTR8ArrayOrVal(BasePoint)
        return self._oleobj_.InvokeTypes(1294, LCID, 1, (24, 0), ((12, 1), (5, 1)),BasePoint
            , ScaleFactor)

    def SetControlPoint(self, Index=defaultNamedNotOptArg, controlPoint=defaultNamedNotOptArg):
        'Specifies the coordinates for a control point of a spline.'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , controlPoint)

    def SetFitPoint(self, Index=defaultNamedNotOptArg, fitPoint=defaultNamedNotOptArg):
        'Specifies the fit point of a spline.'
        return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (12, 1)),Index
            , fitPoint)

    def SetNurbsData(self, Degree=defaultNamedNotOptArg, ControlPoints=defaultNamedNotOptArg, Knots=defaultNamedNotOptArg, Weights=defaultNamedNotOptArg
            , controlPtTolerance=defaultNamedNotOptArg, knotTolerance=defaultNamedNotOptArg, periodic=defaultNamedNotOptArg):
        'Set all nurbs data to the spline'
        return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (5, 1), (11, 1)),Degree
            , ControlPoints, Knots, Weights, controlPtTolerance, knotTolerance
            , periodic)

    def SetWeight(self, Index=defaultNamedNotOptArg, weight=defaultNamedNotOptArg):
        'Specifies the weight of a spline.'
        return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (5, 1)),Index
            , weight)

    def SetXData(self, XDataType=defaultNamedNotOptArg, XDataValue=defaultNamedNotOptArg):
        'Sets the extended data (XData) associated with an object.'
        return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 1), (12, 1)),XDataType
            , XDataValue)

    def TransformBy(self, TransformationMatrix=defaultNamedNotOptArg):
        'Performs the specified transformation on an entity.'
        TransformationMatrix = VTR8ArrayOrVal(TransformationMatrix)
        return self._oleobj_.InvokeTypes(1295, LCID, 1, (24, 0), ((12, 1),),TransformationMatrix
            )

    def Update(self):
        'Not implemented. Updates the display of an entity.'
        return self._oleobj_.InvokeTypes(1296, LCID, 1, (24, 0), (),)
    
    #override properties
    def __setattr__(self, __name, __value):
        match __name:
            case 'ControlPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case 'FitPoints':
                DispatchBaseClass.__setattr__(self, __name,  VTR8ArrayOrVal(__value))
            case _:
                DispatchBaseClass.__setattr__(self, __name, __value)
                
    _prop_map_get_ = {
        "Application": (1030, 2, (9, 0), (), "Application", None),
        "Area": (13, 2, (5, 0), (), "Area", None),
        "Closed": (6, 2, (11, 0), (), "Closed", None),
        "ControlPoints": (2, 2, (12, 0), (), "ControlPoints", None),
        # Method 'Database' returns object of type 'IAcadDatabase'
        "Database": (1031, 2, (9, 0), (), "Database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
        "Degree": (5, 2, (3, 0), (), "Degree", None),
        "Document": (1035, 2, (9, 0), (), "Document", None),
        "EndTangent": (11, 2, (12, 0), (), "EndTangent", None),
        "EntityName": (1397, 2, (8, 0), (), "EntityName", None),
        "EntityTransparency": (1401, 2, (8, 0), (), "EntityTransparency", None),
        "EntityType": (1398, 2, (3, 0), (), "EntityType", None),
        "FitPoints": (4, 2, (12, 0), (), "FitPoints", None),
        "FitTolerance": (12, 2, (5, 0), (), "FitTolerance", None),
        "Handle": (1024, 2, (8, 0), (), "Handle", None),
        "HasExtensionDictionary": (1032, 2, (11, 0), (), "HasExtensionDictionary", None),
        # Method 'Hyperlinks' returns object of type 'IAcadHyperlinks'
        "Hyperlinks": (1301, 2, (9, 0), (), "Hyperlinks", '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}'),
        "IsPeriodic": (9, 2, (11, 0), (), "IsPeriodic", None),
        "IsPlanar": (7, 2, (11, 0), (), "IsPlanar", None),
        "IsRational": (8, 2, (11, 0), (), "IsRational", None),
        "Knots": (26, 2, (12, 0), (), "Knots", None),
        "Layer": (1281, 2, (8, 0), (), "Layer", None),
        "Linetype": (1282, 2, (8, 0), (), "Linetype", None),
        "LinetypeScale": (1283, 2, (5, 0), (), "LinetypeScale", None),
        "Lineweight": (1300, 2, (3, 0), (), "Lineweight", None),
        "Material": (1399, 2, (8, 0), (), "Material", None),
        "NumberOfControlPoints": (1, 2, (3, 0), (), "NumberOfControlPoints", None),
        "NumberOfFitPoints": (3, 2, (3, 0), (), "NumberOfFitPoints", None),
        "ObjectID": (1029, 2, (20, 0), (), "ObjectID", None),
        "ObjectID32": (1142, 2, (3, 0), (), "ObjectID32", None),
        "ObjectName": (1025, 2, (8, 0), (), "ObjectName", None),
        "OwnerID": (1034, 2, (20, 0), (), "OwnerID", None),
        "OwnerID32": (1143, 2, (3, 0), (), "OwnerID32", None),
        "PlotStyleName": (1299, 2, (8, 0), (), "PlotStyleName", None),
        "StartTangent": (10, 2, (12, 0), (), "StartTangent", None),
        # Method 'TrueColor' returns object of type 'IAcadAcCmColor'
        "TrueColor": (1302, 2, (9, 0), (), "TrueColor", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Visible": (1284, 2, (11, 0), (), "Visible", None),
        "Weights": (27, 2, (12, 0), (), "Weights", None),
        "color": (1280, 2, (3, 0), (), "color", None),
    }
    _prop_map_put_ = {
        "ControlPoints": ((2, LCID, 4, 0),()),
        "EndTangent": ((11, LCID, 4, 0),()),
        "EntityTransparency": ((1401, LCID, 4, 0),()),
        "FitPoints": ((4, LCID, 4, 0),()),
        "FitTolerance": ((12, LCID, 4, 0),()),
        "Knots": ((26, LCID, 4, 0),()),
        "Layer": ((1281, LCID, 4, 0),()),
        "Linetype": ((1282, LCID, 4, 0),()),
        "LinetypeScale": ((1283, LCID, 4, 0),()),
        "Lineweight": ((1300, LCID, 4, 0),()),
        "Material": ((1399, LCID, 4, 0),()),
        "PlotStyleName": ((1299, LCID, 4, 0),()),
        "StartTangent": ((10, LCID, 4, 0),()),
        "TrueColor": ((1302, LCID, 4, 0),()),
        "Visible": ((1284, LCID, 4, 0),()),
        "Weights": ((27, LCID, 4, 0),()),
        "color": ((1280, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

from win32com.client import CoClassBaseClass
# This CoClass is known by the name 'BricscadDb.Acad3DFace.24.0'
class Acad3DFace(CoClassBaseClass): # A CoClass
    # A three-dimensional triangle or quadrilateral plane section.
    CLSID = IID('{3B3E11A0-2824-4ADA-9EFE-41578212028F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcad3DFace,
    ]
    default_interface = IAcad3DFace

# This CoClass is known by the name 'BricscadDb.Acad3DPolyline.24.0'
class Acad3DPolyline(CoClassBaseClass): # A CoClass
    # A polyline with three-dimensional characteristics.
    CLSID = IID('{90D9E3BD-E641-45B1-9C71-10F66E673E6E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcad3DPolyline,
    ]
    default_interface = IAcad3DPolyline

# This CoClass is known by the name 'BricscadDb.Acad3DSolid.24.0'
class Acad3DSolid(CoClassBaseClass): # A CoClass
    # Not implemented. A solid object consisting of faces and edges and appearing to have volume.
    CLSID = IID('{365AF1BE-48C3-4099-951D-C1791294DE19}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcad3DSolid,
    ]
    default_interface = IAcad3DSolid

# This CoClass is known by the name 'BricscadDb.AcadAcCmColor.24.0'
class AcadAcCmColor(CoClassBaseClass): # A CoClass
    # True color.
    CLSID = IID('{2A3294B7-AB1F-40C1-98E9-EA193E2847DB}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadAcCmColor,
    ]
    default_interface = IAcadAcCmColor

# This CoClass is known by the name 'BricscadDb.AcadArc.24.0'
class AcadArc(CoClassBaseClass): # A CoClass
    # A segment of a circle or ellipse.
    CLSID = IID('{96810171-584F-4A58-95DF-F90746B866A0}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadArc,
    ]
    default_interface = IAcadArc

# This CoClass is known by the name 'BricscadDb.AcadAttribute.24.0'
class AcadAttribute(CoClassBaseClass): # A CoClass
    # Text that describes an attribute reference.
    CLSID = IID('{A6D6469F-6F70-4864-A8DC-5DB7397C658E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadAttribute,
    ]
    default_interface = IAcadAttribute

# This CoClass is known by the name 'BricscadDb.AcadAttributeReference.24.0'
class AcadAttributeReference(CoClassBaseClass): # A CoClass
    # Text that links to a block.
    CLSID = IID('{50463551-644F-48E0-ADF0-70BDE39C2379}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadAttributeReference,
    ]
    default_interface = IAcadAttributeReference

# This CoClass is known by the name 'BricscadDb.AcadBlock.24.0'
class AcadBlock(CoClassBaseClass): # A CoClass
    # AcadBlock dummy class
    CLSID = IID('{5BE85927-9C3C-4E1F-BAE0-CCDA866949C5}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadBlock,
        IOdaBlock,
    ]
    default_interface = IAcadBlock

# This CoClass is known by the name 'BricscadDb.AcadBlockReference.24.0'
class AcadBlockReference(CoClassBaseClass): # A CoClass
    # A single occurance of an inserted block.
    CLSID = IID('{BEC51FF5-8BEE-4E41-9208-C23E7245B237}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadBlockReference,
    ]
    default_interface = IAcadBlockReference

# This CoClass is known by the name 'BricscadDb.AcadBlocks.24.0'
class AcadBlocks(CoClassBaseClass): # A CoClass
    # Collection of all blocks in a document.
    CLSID = IID('{59A0D5D3-CD4B-404E-888E-B280E8C7FE8A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadBlocks,
    ]
    default_interface = IAcadBlocks

# This CoClass is known by the name 'BricscadDb.AcadCircle.24.0'
class AcadCircle(CoClassBaseClass): # A CoClass
    # A complete circle.
    CLSID = IID('{B495AD49-5306-4B28-89F5-A69ED8798A4F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadCircle,
    ]
    default_interface = IAcadCircle

# This CoClass is known by the name 'BricscadDb.AcadDatabase.24.0'
class AcadDatabase(CoClassBaseClass): # A CoClass
    # Contents of a block inserted as an external reference.
    CLSID = IID('{5EF88703-1D0E-410B-93B1-45956D27AD4E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDatabase,
    ]
    default_interface = IAcadDatabase

# This CoClass is known by the name 'BricscadDb.AcadDatabasePreferences.24.0'
class AcadDatabasePreferences(CoClassBaseClass): # A CoClass
    # The settings of a document that are saved in a drawing (not the registry).
    CLSID = IID('{CA59FF45-6C1E-4223-9530-35C60DE7480D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDatabasePreferences,
    ]
    default_interface = IAcadDatabasePreferences

# This CoClass is known by the name 'BricscadDb.AcadDgnUnderlay.24.0'
class AcadDgnUnderlay(CoClassBaseClass): # A CoClass
    # DGN file represented as an underlay in a drawing.
    CLSID = IID('{BA52E9FE-ED83-40C5-B0B1-5745C9E07B2B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUnderlay,
    ]
    default_interface = IAcadUnderlay

# This CoClass is known by the name 'BricscadDb.AcadDictionaries.24.0'
class AcadDictionaries(CoClassBaseClass): # A CoClass
    # Collection of all dictionaries in a document.
    CLSID = IID('{887A471D-8E5B-46DD-B1FC-9248511A45B1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDictionaries,
    ]
    default_interface = IAcadDictionaries

# This CoClass is known by the name 'BricscadDb.AcadDictionary.24.0'
class AcadDictionary(CoClassBaseClass): # A CoClass
    # A repository for storing and retrieving objects that have associated string keywords.
    CLSID = IID('{BF982612-77C8-45E1-8F25-F10392D86C71}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDictionary,
    ]
    default_interface = IAcadDictionary

# This CoClass is known by the name 'BricscadDb.AcadDim3PointAngular.24.0'
class AcadDim3PointAngular(CoClassBaseClass): # A CoClass
    # An angular dimension measured using three points.
    CLSID = IID('{2CD4FC7D-3E9F-42E6-9D76-F42B55AAEEC5}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDim3PointAngular,
    ]
    default_interface = IAcadDim3PointAngular

# This CoClass is known by the name 'BricscadDb.AcadDimAligned.24.0'
class AcadDimAligned(CoClassBaseClass): # A CoClass
    # A linear dimension measuring the distance between two points.
    CLSID = IID('{1158BDED-3762-405F-A58F-8789BCD31AE4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimAligned,
    ]
    default_interface = IAcadDimAligned

# This CoClass is known by the name 'BricscadDb.AcadDimAngular.24.0'
class AcadDimAngular(CoClassBaseClass): # A CoClass
    # An angular dimension measuring the angle of an arc or the angle between two lines.
    CLSID = IID('{9681B428-389B-4E38-9718-26FBBC646BEE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimAngular,
    ]
    default_interface = IAcadDimAngular

# This CoClass is known by the name 'BricscadDb.AcadDimArcLength.24.0'
class AcadDimArcLength(CoClassBaseClass): # A CoClass
    # A dimension measuring the length of an arc.
    CLSID = IID('{8A36FC37-0C0B-44FB-BA25-B6ED2090394B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimArcLength,
    ]
    default_interface = IAcadDimArcLength

# This CoClass is known by the name 'BricscadDb.AcadDimDiametric.24.0'
class AcadDimDiametric(CoClassBaseClass): # A CoClass
    # A dimension measuring the diameter of a circle or arc.
    CLSID = IID('{34A10E3E-AB48-4CBB-88CF-815F87738E90}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimDiametric,
    ]
    default_interface = IAcadDimDiametric

# This CoClass is known by the name 'BricscadDb.AcadDimOrdinate.24.0'
class AcadDimOrdinate(CoClassBaseClass): # A CoClass
    # An ordinate dimension measuring the distance along the x- or y-axis from an origin to a selected point.
    CLSID = IID('{685766B4-4712-4A68-9F6C-67765BF17C2B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimOrdinate,
    ]
    default_interface = IAcadDimOrdinate

# This CoClass is known by the name 'BricscadDb.AcadDimRadial.24.0'
class AcadDimRadial(CoClassBaseClass): # A CoClass
    # A dimension measuring the radius of a circle or arc.
    CLSID = IID('{83F62228-2B26-4C18-8579-A9FC76D6422B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimRadial,
    ]
    default_interface = IAcadDimRadial

# This CoClass is known by the name 'BricscadDb.AcadDimRadialLarge.24.0'
class AcadDimRadialLarge(CoClassBaseClass): # A CoClass
    # A jogged dimension measuring the radius of a large circle or arc.
    CLSID = IID('{BBAE1F47-D006-4796-A760-90F869EBA3F4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimRadialLarge,
    ]
    default_interface = IAcadDimRadialLarge

# This CoClass is known by the name 'BricscadDb.AcadDimRotated.24.0'
class AcadDimRotated(CoClassBaseClass): # A CoClass
    # A dimension measuring the distance between two points and displaying the results at a specified angle from the points.
    CLSID = IID('{1DB6148A-7A75-431A-9F6E-5EE1DF74AD0F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimRotated,
    ]
    default_interface = IAcadDimRotated

# This CoClass is known by the name 'BricscadDb.AcadDimStyle.24.0'
class AcadDimStyle(CoClassBaseClass): # A CoClass
    # Settings that determine the appearance of a dimension.
    CLSID = IID('{FCF82E37-DD4C-4992-AF92-5FB8923AAC11}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimStyle,
    ]
    default_interface = IAcadDimStyle

# This CoClass is known by the name 'BricscadDb.AcadDimStyles.24.0'
class AcadDimStyles(CoClassBaseClass): # A CoClass
    # Collection of all dimension styles in a document.
    CLSID = IID('{9AB84FD1-1BEF-4A4B-BC47-C34ADA79F397}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimStyles,
    ]
    default_interface = IAcadDimStyles

# This CoClass is known by the name 'BricscadDb.AcadDimension.24.0'
class AcadDimension(CoClassBaseClass): # A CoClass
    # A dimension measuring and displaying the distance between objects.
    CLSID = IID('{5FB8DBE0-D358-433C-ACAC-BC068C7037BA}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDimension,
    ]
    default_interface = IAcadDimension

# This CoClass is known by the name 'BricscadDb.AcadDwfUnderlay.24.0'
class AcadDwfUnderlay(CoClassBaseClass): # A CoClass
    # DWF file represented as an underlay in a drawing.
    CLSID = IID('{71B03226-0D81-4E25-869B-5DA9E3F6B7CE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUnderlay,
        IAcadDwfUnderlay,
    ]
    default_interface = IAcadUnderlay

# This CoClass is known by the name 'BricscadDb.AcadDynamicBlockReferenceProperty.24.0'
class AcadDynamicBlockReferenceProperty(CoClassBaseClass): # A CoClass
    # Container for properties of a block that is a dynamic block.
    CLSID = IID('{0E35FAA5-88E5-4697-948A-D262A2680445}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDynamicBlockReferenceProperty,
    ]
    default_interface = IAcadDynamicBlockReferenceProperty

# This CoClass is known by the name 'BricscadDb.AcadEllipse.24.0'
class AcadEllipse(CoClassBaseClass): # A CoClass
    # An elliptical arc or a complete ellipse.
    CLSID = IID('{3E7B0C05-2062-420C-8EB3-EA62DC886DB1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadEllipse,
    ]
    default_interface = IAcadEllipse

# This CoClass is known by the name 'BricscadDb.AcadEntity.24.0'
class AcadEntity(CoClassBaseClass): # A CoClass
    # Parent object of all objects that can be drawn in a drawing.
    CLSID = IID('{7B91A7F3-234E-4BD1-8914-76856A2AF7D9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadEntity,
    ]
    default_interface = IAcadEntity

# This CoClass is known by the name 'BricscadDb.AcadExternalReference.24.0'
class AcadExternalReference(CoClassBaseClass): # A CoClass
    # Drawing file that is attached to and inserted in the current drawing.
    CLSID = IID('{97A26D82-C2A9-4D4E-8036-8A841A26D262}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadExternalReference,
    ]
    default_interface = IAcadExternalReference

# This CoClass is known by the name 'BricscadDb.AcadExtrudedSurface.24.0'
class AcadExtrudedSurface(CoClassBaseClass): # A CoClass
    # A three-dimensional surface generated by extruding an object or face along a direction vector.
    CLSID = IID('{7D3E8B0E-13E1-4DED-AD26-D39649A19DA6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadExtrudedSurface,
    ]
    default_interface = IAcadExtrudedSurface

# This CoClass is known by the name 'BricscadDb.AcadFileDependencies.24.0'
class AcadFileDependencies(CoClassBaseClass): # A CoClass
    # Collection of references to the files that the current drawing is dependent on.
    CLSID = IID('{2155F8AB-E527-45F7-8A97-FD850E710340}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadFileDependencies,
    ]
    default_interface = IAcadFileDependencies

# This CoClass is known by the name 'BricscadDb.AcadFileDependency.24.0'
class AcadFileDependency(CoClassBaseClass): # A CoClass
    # Details about a file listed in the AcadFileDependencies object.
    CLSID = IID('{6F500011-5D1F-40A1-A1FD-109084F95E07}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadFileDependency,
    ]
    default_interface = IAcadFileDependency

# This CoClass is known by the name 'BricscadDb.AcadGroup.24.0'
class AcadGroup(CoClassBaseClass): # A CoClass
    # A named set of objects that can be operated on as a single unit.
    CLSID = IID('{3C200789-8338-447D-8373-AFEF38713BAA}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadGroup,
    ]
    default_interface = IAcadGroup

# This CoClass is known by the name 'BricscadDb.AcadGroups.24.0'
class AcadGroups(CoClassBaseClass): # A CoClass
    # Collection of all groups in a document.
    CLSID = IID('{2D7FB26E-9052-4F9F-BD2D-D18C50713ED6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadGroups,
    ]
    default_interface = IAcadGroups

# This CoClass is known by the name 'BricscadDb.AcadHatch.24.0'
class AcadHatch(CoClassBaseClass): # A CoClass
    # A fill made up of a pattern of lines.
    CLSID = IID('{4B2665FC-67ED-44AF-8C4D-6A04816631F3}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHatch2,
        IAcadHatch,
    ]
    default_interface = IAcadHatch2

# This CoClass is known by the name 'BricscadDb.AcadHelix.24.0'
class AcadHelix(CoClassBaseClass): # A CoClass
    # A spiral.
    CLSID = IID('{AA0DEA33-0EB3-432B-B91B-88384639BBA3}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHelix,
    ]
    default_interface = IAcadHelix

# This CoClass is known by the name 'BricscadDb.AcadHyperlink.24.0'
class AcadHyperlink(CoClassBaseClass): # A CoClass
    # A link to an external file or location.
    CLSID = IID('{2591C8C9-336E-4DA2-875F-5BD437A4E6A5}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHyperlink,
    ]
    default_interface = IAcadHyperlink

# This CoClass is known by the name 'BricscadDb.AcadHyperlinks.24.0'
class AcadHyperlinks(CoClassBaseClass): # A CoClass
    # Collection of all hyperlinks in a document.
    CLSID = IID('{277E3E52-6C69-4AC1-9312-DD3A02519F33}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadHyperlinks,
    ]
    default_interface = IAcadHyperlinks

# This CoClass is known by the name 'BricscadDb.AcadLWPolyline.24.0'
class AcadLWPolyline(CoClassBaseClass): # A CoClass
    # One or more line or arc segments that form a single object.
    CLSID = IID('{87897864-72C3-4D87-81DD-00614EC82213}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLWPolyline,
    ]
    default_interface = IAcadLWPolyline

# This CoClass is known by the name 'BricscadDb.AcadLayer.24.0'
class AcadLayer(CoClassBaseClass): # A CoClass
    # A sheet designed as an overlay.
    CLSID = IID('{4EDD52C1-33F1-4B70-A800-2654F60D1D2B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayer,
    ]
    default_interface = IAcadLayer

# This CoClass is known by the name 'BricscadDb.AcadLayers.24.0'
class AcadLayers(CoClassBaseClass): # A CoClass
    # Collection of all layers in a document.
    CLSID = IID('{B9FEA495-416E-44BC-AB51-7150524E5AE0}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayers,
    ]
    default_interface = IAcadLayers

# This CoClass is known by the name 'BricscadDb.AcadLayout.24.0'
class AcadLayout(CoClassBaseClass): # A CoClass
    # A set of paper-related settings and print settings.
    CLSID = IID('{D3D20BA9-3EDD-4108-9E10-4EE99F917847}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayout,
    ]
    default_interface = IAcadLayout

# This CoClass is known by the name 'BricscadDb.AcadLayouts.24.0'
class AcadLayouts(CoClassBaseClass): # A CoClass
    # Collection of all layouts in a document.
    CLSID = IID('{E386A799-DE90-42E8-9FC1-89DDB6CEFC41}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayouts,
    ]
    default_interface = IAcadLayouts

# This CoClass is known by the name 'BricscadDb.AcadLeader.24.0'
class AcadLeader(CoClassBaseClass): # A CoClass
    # A line leading from an entity to an annotation.
    CLSID = IID('{B02B4037-B189-4C98-BBF6-6DA42B1D673D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLeader,
    ]
    default_interface = IAcadLeader

# This CoClass is known by the name 'BricscadDb.AcadLine.24.0'
class AcadLine(CoClassBaseClass): # A CoClass
    # A single line segment.
    CLSID = IID('{E0ED259B-1BDB-4411-95BF-495BA25926A9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLine,
    ]
    default_interface = IAcadLine

# This CoClass is known by the name 'BricscadDb.AcadLineType.24.0'
class AcadLineType(CoClassBaseClass): # A CoClass
    # AcadLineType dummy class
    CLSID = IID('{0781CAE4-6055-4D40-B954-42D5EC725018}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLineType,
        IOdaLineType,
    ]
    default_interface = IAcadLineType

# This CoClass is known by the name 'BricscadDb.AcadLineTypes.24.0'
class AcadLineTypes(CoClassBaseClass): # A CoClass
    # Collection of all linetypes in a document.
    CLSID = IID('{D49DF09F-070E-429D-976D-39F53AE3EF0B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLineTypes,
    ]
    default_interface = IAcadLineTypes

# This CoClass is known by the name 'BricscadDb.AcadLoftedSurface.24.0'
class AcadLoftedSurface(CoClassBaseClass): # A CoClass
    # A three-dimensional object created by lofting a two-dimensional object.
    CLSID = IID('{50347C02-0E1F-407E-9962-A96E32FA97D7}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLoftedSurface,
    ]
    default_interface = IAcadLoftedSurface

# This CoClass is known by the name 'BricscadDb.AcadMInsertBlock.24.0'
class AcadMInsertBlock(CoClassBaseClass): # A CoClass
    # Multiple copies of a block reference as a single object.
    CLSID = IID('{A3E63831-0E7F-492F-9621-21B2627DF0D1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMInsertBlock,
    ]
    default_interface = IAcadMInsertBlock

# This CoClass is known by the name 'BricscadDb.AcadMLeader.24.0'
class AcadMLeader(CoClassBaseClass): # A CoClass
    # Multiple lines leading from a single annotation to more than one object.
    CLSID = IID('{CF0F8CEA-42D4-49E7-BDFA-764CFC2F412C}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMLeader,
    ]
    default_interface = IAcadMLeader

# This CoClass is known by the name 'BricscadDb.AcadMLeaderLeader.24.0'
class AcadMLeaderLeader(CoClassBaseClass): # A CoClass
    # Multi-Leader's Leader Line
    CLSID = IID('{EEA688F8-1BA2-46DE-80F8-39C0EB3F592B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMLeaderLeader,
    ]
    default_interface = IAcadMLeaderLeader

# This CoClass is known by the name 'BricscadDb.AcadMLeaderStyle.24.0'
class AcadMLeaderStyle(CoClassBaseClass): # A CoClass
    # Set of characteristics that determine the appearance of a multileader entity.
    CLSID = IID('{A708E24B-99D0-4D39-82C5-BD5BAAE97DFF}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMLeaderStyle,
    ]
    default_interface = IAcadMLeaderStyle

# This CoClass is known by the name 'BricscadDb.AcadMLine.24.0'
class AcadMLine(CoClassBaseClass): # A CoClass
    # Multiple lines drawn parallel together as a single line.
    CLSID = IID('{F4F5165B-D882-4A22-9821-8F8A5092D87A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMLine,
    ]
    default_interface = IAcadMLine

# This CoClass is known by the name 'BricscadDb.AcadMText.24.0'
class AcadMText(CoClassBaseClass): # A CoClass
    # Multiple lines of characters.
    CLSID = IID('{78D1C5E6-5650-4BFB-B601-93358EC97545}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMText,
    ]
    default_interface = IAcadMText

# This CoClass is known by the name 'BricscadDb.AcadMaterial.24.0'
class AcadMaterial(CoClassBaseClass): # A CoClass
    # Set of options that determine how objects reflect and transmit light.
    CLSID = IID('{D75D937B-6DD9-407E-AF88-6D29801CB204}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMaterial,
    ]
    default_interface = IAcadMaterial

# This CoClass is known by the name 'BricscadDb.AcadMaterials.24.0'
class AcadMaterials(CoClassBaseClass): # A CoClass
    # Collection of all materials in a document.
    CLSID = IID('{16F19695-0DD8-494B-9FF3-756EF0AB29B1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMaterials,
    ]
    default_interface = IAcadMaterials

# This CoClass is known by the name 'BricscadDb.AcadModelSpace.24.0'
class AcadModelSpace(CoClassBaseClass): # A CoClass
    # Collection of all model space entities in a document.
    CLSID = IID('{D28289A3-5CCD-42DB-83BA-79C472D1BC7E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadModelSpace,
    ]
    default_interface = IAcadModelSpace

# This CoClass is known by the name 'BricscadDb.AcadObject.24.0'
class AcadObject(CoClassBaseClass): # A CoClass
    # AcadObject Class
    CLSID = IID('{1ECF9DF9-7F91-48F5-963E-2740C5972B68}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadObject,
    ]
    default_interface = IAcadObject

# This CoClass is known by the name 'BricscadDb.AcadPViewport.24.0'
class AcadPViewport(CoClassBaseClass): # A CoClass
    # A window that displays all or a portion of a drawing's paperspace.
    CLSID = IID('{4AC35C83-26ED-4BCC-A25F-78D31643490A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPViewport,
    ]
    default_interface = IAcadPViewport

# This CoClass is known by the name 'BricscadDb.AcadPaperSpace.24.0'
class AcadPaperSpace(CoClassBaseClass): # A CoClass
    # Collection of all paper space entities in a document.
    CLSID = IID('{A6413E76-C1F2-4883-A9DF-4F328C9375EC}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPaperSpace,
    ]
    default_interface = IAcadPaperSpace

# This CoClass is known by the name 'BricscadDb.AcadPdfUnderlay.24.0'
class AcadPdfUnderlay(CoClassBaseClass): # A CoClass
    # PDF file represented as an underlay in a drawing.
    CLSID = IID('{31348C0E-FAD9-455F-B469-77CAA3C15DA2}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUnderlay,
    ]
    default_interface = IAcadUnderlay

# This CoClass is known by the name 'BricscadDb.AcadPlaneSurface.24.0'
class AcadPlaneSurface(CoClassBaseClass): # A CoClass
    # A planar surface.
    CLSID = IID('{02C58A19-A75E-4E03-BFDA-05F83B0EE9EE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlaneSurface,
    ]
    default_interface = IAcadPlaneSurface

# This CoClass is known by the name 'BricscadDb.AcadPlotConfiguration.24.0'
class AcadPlotConfiguration(CoClassBaseClass): # A CoClass
    # Set of print settings defined for a specific print device and media.
    CLSID = IID('{34F35DB3-EA8B-4EF7-8AEE-009362201B18}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlotConfiguration,
    ]
    default_interface = IAcadPlotConfiguration

# This CoClass is known by the name 'BricscadDb.AcadPlotConfigurations.24.0'
class AcadPlotConfigurations(CoClassBaseClass): # A CoClass
    # Collection of all plot configurations in a document.
    CLSID = IID('{A0E0F939-5A48-40A3-99D3-C57C25BE9E60}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlotConfigurations,
    ]
    default_interface = IAcadPlotConfigurations

# This CoClass is known by the name 'BricscadDb.AcadPoint.24.0'
class AcadPoint(CoClassBaseClass): # A CoClass
    # A single x, y, z coordinate location.
    CLSID = IID('{D3EF1961-790F-4F88-98C6-49B664435505}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPoint,
    ]
    default_interface = IAcadPoint

# This CoClass is known by the name 'BricscadDb.AcadPolyfaceMesh.24.0'
class AcadPolyfaceMesh(CoClassBaseClass): # A CoClass
    # A three-dimensional mesh consisting of a set of vertices and faces.
    CLSID = IID('{52215AF1-CE88-43F7-BC8A-65E9AC73AB69}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaPolyfaceMesh,
        IAcadPolyfaceMesh,
    ]
    default_interface = IOdaPolyfaceMesh

# This CoClass is known by the name 'BricscadDb.AcadPolygonMesh.24.0'
class AcadPolygonMesh(CoClassBaseClass): # A CoClass
    # A three-dimensional mesh consisting of vertices that form a 3D matrix of quadrangular figures.
    CLSID = IID('{84CA9670-95BB-48D2-886A-64FECD7DF55B}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPolygonMesh,
    ]
    default_interface = IAcadPolygonMesh

# This CoClass is known by the name 'BricscadDb.AcadPolyline.24.0'
class AcadPolyline(CoClassBaseClass): # A CoClass
    # Older version of lightweight polyline. Use AcadLWPolyline instead.
    CLSID = IID('{F1B5F011-5265-4E87-9CE9-225743FB78D4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPolyline,
    ]
    default_interface = IAcadPolyline

# This CoClass is known by the name 'BricscadDb.AcadRasterImage.24.0'
class AcadRasterImage(CoClassBaseClass): # A CoClass
    # AcadRasterImage Class
    CLSID = IID('{5DAC02AE-C024-4E70-ACD2-CBDBB3AC3686}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRasterImage,
    ]
    default_interface = IAcadRasterImage

# This CoClass is known by the name 'BricscadDb.AcadRay.24.0'
class AcadRay(CoClassBaseClass): # A CoClass
    # A line starting at a base point and contining infinitely.
    CLSID = IID('{B71AD3CB-A8BC-4EB7-9946-579E44B8393E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRay,
    ]
    default_interface = IAcadRay

# This CoClass is known by the name 'BricscadDb.AcadRegion.24.0'
class AcadRegion(CoClassBaseClass): # A CoClass
    # A closed planar boundary of lines, circles, arcs, elliptical arcs, and splines.
    CLSID = IID('{37FDD4DC-7074-46A2-8140-7B8CB49D4C5A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRegion,
    ]
    default_interface = IAcadRegion

# This CoClass is known by the name 'BricscadDb.AcadRegisteredApplication.24.0'
class AcadRegisteredApplication(CoClassBaseClass): # A CoClass
    # Name of an external application that has been added to the document.
    CLSID = IID('{804668AC-29D1-4325-9C2F-9082076A8D32}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRegisteredApplication,
    ]
    default_interface = IAcadRegisteredApplication

# This CoClass is known by the name 'BricscadDb.AcadRegisteredApplications.24.0'
class AcadRegisteredApplications(CoClassBaseClass): # A CoClass
    # Collection of all registered applications.
    CLSID = IID('{505EC430-224F-4DF3-B7B8-0615AA6C2F36}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRegisteredApplications,
    ]
    default_interface = IAcadRegisteredApplications

# This CoClass is known by the name 'BricscadDb.AcadRevolvedSurface.24.0'
class AcadRevolvedSurface(CoClassBaseClass): # A CoClass
    # A three-dimensional surface generated by revolving one or more objects or faces about an axis.
    CLSID = IID('{ADF8BDAF-0231-422E-ACB9-6B769A5C8F96}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadRevolvedSurface,
    ]
    default_interface = IAcadRevolvedSurface

# This CoClass is known by the name 'BricscadDb.AcadSection.24.0'
class AcadSection(CoClassBaseClass): # A CoClass
    # A cross-section of a solid or region.
    CLSID = IID('{4ED7B981-124E-465A-89E3-919A01A16824}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSection,
    ]
    default_interface = IAcadSection

# This CoClass is known by the name 'BricscadDb.AcadSectionManager.24.0'
class AcadSectionManager(CoClassBaseClass): # A CoClass
    # An object used to manage the sections in a drawing.
    CLSID = IID('{6C36E808-470A-42DC-A317-95D4529339F9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSectionManager,
    ]
    default_interface = IAcadSectionManager

# This CoClass is known by the name 'BricscadDb.AcadSectionSettings.24.0'
class AcadSectionSettings(CoClassBaseClass): # A CoClass
    # Set of geometry settings for sections.
    CLSID = IID('{FDCF150A-D241-4F4A-A3AC-2B6C7BEE6814}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSectionSettings,
    ]
    default_interface = IAcadSectionSettings

# This CoClass is known by the name 'BricscadDb.AcadSectionTypeSettings.24.0'
class AcadSectionTypeSettings(CoClassBaseClass): # A CoClass
    # Set of settings used for each type of section.
    CLSID = IID('{D8A7A1C3-D35B-49B1-84FE-408F5DD74504}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSectionTypeSettings2,
        IAcadSectionTypeSettings,
    ]
    default_interface = IAcadSectionTypeSettings2

# This CoClass is known by the name 'BricscadDb.AcadShape.24.0'
class AcadShape(CoClassBaseClass): # A CoClass
    # Lines, arcs, and circles defined in an SHX file.
    CLSID = IID('{FD968BB1-F1E1-4250-9903-56DF5171CF3D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadShape,
    ]
    default_interface = IAcadShape

# This CoClass is known by the name 'BricscadDb.AcadSolid.24.0'
class AcadSolid(CoClassBaseClass): # A CoClass
    # A two-dimensional solid polygon.
    CLSID = IID('{61375357-7DDF-41E8-A003-5D44D0ED4617}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSolid,
    ]
    default_interface = IAcadSolid

# This CoClass is known by the name 'BricscadDb.AcadSortentsTable.24.0'
class AcadSortentsTable(CoClassBaseClass): # A CoClass
    # Container used to manage draw order.
    CLSID = IID('{3710CC1D-B641-43B7-AA95-DD105F2E3304}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSortentsTable,
    ]
    default_interface = IAcadSortentsTable

# This CoClass is known by the name 'BricscadDb.AcadSpline.24.0'
class AcadSpline(CoClassBaseClass): # A CoClass
    # A free-form curve created along at least three points.
    CLSID = IID('{5F8B0FFC-7274-4725-980A-5007C132C268}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaSpline,
        IAcadSpline,
    ]
    default_interface = IOdaSpline

# This CoClass is known by the name 'BricscadDb.AcadSubEntSolidEdge.24.0'
class AcadSubEntSolidEdge(CoClassBaseClass): # A CoClass
    # AcadSubEntSolidEdge Class
    CLSID = IID('{278C11AB-1CFD-4323-B9CC-8B7CA06D38C4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSubEntSolidEdge,
    ]
    default_interface = IAcadSubEntSolidEdge

# This CoClass is known by the name 'BricscadDb.AcadSubEntSolidFace.24.0'
class AcadSubEntSolidFace(CoClassBaseClass): # A CoClass
    # AcadSubEntSolidFace Class
    CLSID = IID('{48488B9F-D0D3-4835-8250-920A8C1FB3C9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSubEntSolidFace,
    ]
    default_interface = IAcadSubEntSolidFace

# This CoClass is known by the name 'BricscadDb.AcadSubEntSolidVertex.24.0'
class AcadSubEntSolidVertex(CoClassBaseClass): # A CoClass
    # AcadSubEntSolidVertex Class
    CLSID = IID('{B82EA70D-951C-4A43-AFE8-A8DDD4E710F4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSubEntSolidVertex,
    ]
    default_interface = IAcadSubEntSolidVertex

# This CoClass is known by the name 'BricscadDb.AcadSubEntity.24.0'
class AcadSubEntity(CoClassBaseClass): # A CoClass
    # AcadSubEntity Class
    CLSID = IID('{E0A0C0B2-5007-454B-AB84-EE81C5E38A90}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSubEntity,
    ]
    default_interface = IAcadSubEntity

# This CoClass is known by the name 'BricscadDb.AcadSummaryInfo.24.0'
class AcadSummaryInfo(CoClassBaseClass): # A CoClass
    # Container used for summary information about a drawing.
    CLSID = IID('{40BB6348-8E1C-415D-A9D2-90C573CDB364}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSummaryInfo,
    ]
    default_interface = IAcadSummaryInfo

# This CoClass is known by the name 'BricscadDb.AcadSurface.24.0'
class AcadSurface(CoClassBaseClass): # A CoClass
    # A three-dimensional surface.
    CLSID = IID('{79CA2C51-081A-466B-B451-D39485782330}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSurface,
    ]
    default_interface = IAcadSurface

# This CoClass is known by the name 'BricscadDb.AcadSweptSurface.24.0'
class AcadSweptSurface(CoClassBaseClass): # A CoClass
    # A three-dimensional object created by sweeping a two-dimensional profile along a path.
    CLSID = IID('{531C8060-0A55-478B-A517-F7B3369306E9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSweptSurface,
    ]
    default_interface = IAcadSweptSurface

# This CoClass is known by the name 'BricscadDb.AcadTable.24.0'
class AcadTable(CoClassBaseClass): # A CoClass
    # A chart with rows and columns.
    CLSID = IID('{35BEAEB0-3061-4089-9E36-5FF6C8B9B34A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTable,
    ]
    default_interface = IAcadTable

# This CoClass is known by the name 'BricscadDb.AcadTableStyle.24.0'
class AcadTableStyle(CoClassBaseClass): # A CoClass
    # Settings that determine the appearance of a table.
    CLSID = IID('{50F5CD60-FD9D-4FEE-A36E-CE9C411213EE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTableStyle,
    ]
    default_interface = IAcadTableStyle

# This CoClass is known by the name 'BricscadDb.AcadText.24.0'
class AcadText(CoClassBaseClass): # A CoClass
    # A single line of characters.
    CLSID = IID('{82833E4D-7362-465C-B00B-70F453668575}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadText,
    ]
    default_interface = IAcadText

# This CoClass is known by the name 'BricscadDb.AcadTextStyle.24.0'
class AcadTextStyle(CoClassBaseClass): # A CoClass
    # AcadTextStyle Class
    CLSID = IID('{6201AE6E-3520-424A-903D-6F9F882C846E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTextStyle,
    ]
    default_interface = IAcadTextStyle

# This CoClass is known by the name 'BricscadDb.AcadTextStyles.24.0'
class AcadTextStyles(CoClassBaseClass): # A CoClass
    # AcadTextStyles Class
    CLSID = IID('{F9FF244F-67A9-4A6F-94FF-F839614E1470}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTextStyles,
    ]
    default_interface = IAcadTextStyles

# This CoClass is known by the name 'BricscadDb.AcadTolerance.24.0'
class AcadTolerance(CoClassBaseClass): # A CoClass
    # AcadTolerance Class
    CLSID = IID('{57FF5291-176F-4957-9FA6-5C2324976AA8}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTolerance,
    ]
    default_interface = IAcadTolerance

# This CoClass is known by the name 'BricscadDb.AcadTrace.24.0'
class AcadTrace(CoClassBaseClass): # A CoClass
    # AcadTrace Class
    CLSID = IID('{5F7B73C4-ED41-4B98-98C6-EBA460B2F8F7}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadTrace,
    ]
    default_interface = IAcadTrace

# This CoClass is known by the name 'BricscadDb.AcadUCS.24.0'
class AcadUCS(CoClassBaseClass): # A CoClass
    # AcadUCS Class
    CLSID = IID('{647A8606-56EB-41CB-B6AE-6353DE9212F6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUCS,
    ]
    default_interface = IAcadUCS

# This CoClass is known by the name 'BricscadDb.AcadUCSs.24.0'
class AcadUCSs(CoClassBaseClass): # A CoClass
    # AcadUCSs Class
    CLSID = IID('{35730B52-1E06-4055-B96F-472E4BA49750}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUCSs,
    ]
    default_interface = IAcadUCSs

# This CoClass is known by the name 'BricscadDb.AcadView.24.0'
class AcadView(CoClassBaseClass): # A CoClass
    # AcadView Class
    CLSID = IID('{05C08097-1095-42F2-83B1-789661B77D37}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadView,
    ]
    default_interface = IAcadView

# This CoClass is known by the name 'BricscadDb.AcadViewport.24.0'
class AcadViewport(CoClassBaseClass): # A CoClass
    # AcadViewport Class
    CLSID = IID('{4C1BF9A1-35AA-491B-8B22-2B2195D8229F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadViewport,
    ]
    default_interface = IAcadViewport

# This CoClass is known by the name 'BricscadDb.AcadViewports.24.0'
class AcadViewports(CoClassBaseClass): # A CoClass
    # AcadViewports Class
    CLSID = IID('{9C67AAB4-9FF9-4CE0-9B87-8EF15358F7B3}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadViewports,
    ]
    default_interface = IAcadViewports

# This CoClass is known by the name 'BricscadDb.AcadViews.24.0'
class AcadViews(CoClassBaseClass): # A CoClass
    # AcadViews Class
    CLSID = IID('{AB479309-A94E-45F8-B968-09766E364886}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadViews,
    ]
    default_interface = IAcadViews

# This CoClass is known by the name 'BricscadDb.AcadWipeout.24.0'
class AcadWipeout(CoClassBaseClass): # A CoClass
    # AcadWipeout Class
    CLSID = IID('{AB17FEA5-1C04-4E2B-BF37-7FADA3403BEB}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadWipeout,
    ]
    default_interface = IAcadWipeout

# This CoClass is known by the name 'BricscadDb.AcadXRecord.24.0'
class AcadXRecord(CoClassBaseClass): # A CoClass
    # AcadXRecord Class
    CLSID = IID('{2F5F8554-25D4-4D47-ABE3-4F92E81D4DFF}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadXRecord,
    ]
    default_interface = IAcadXRecord

# This CoClass is known by the name 'BricscadDb.AcadXline.24.0'
class AcadXline(CoClassBaseClass): # A CoClass
    # AcadXline Class
    CLSID = IID('{D0720E0B-260B-4E8E-B02E-BB1C6882AB2F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadXline,
    ]
    default_interface = IAcadXline

# This CoClass is known by the name 'BricscadDb.OdaBlock.24.0'
class OdaBlock(CoClassBaseClass): # A CoClass
    # OdaBlock Class
    CLSID = IID('{D1D3025A-2179-4913-8262-F39523B04636}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaBlock,
        IAcadBlock,
    ]
    default_interface = IOdaBlock

# This CoClass is known by the name 'BricscadDb.OdaCamera.24.0'
class OdaCamera(CoClassBaseClass): # A CoClass
    # OdDbCamera wrapper
    CLSID = IID('{6CEF829F-33B8-4FF2-B641-8333F877B180}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaCamera,
    ]
    default_interface = IOdaCamera

# This CoClass is known by the name 'BricscadDb.OdaLight.24.0'
class OdaLight(CoClassBaseClass): # A CoClass
    # OdDbLight wrapper
    CLSID = IID('{2DB71EA6-47C0-457C-9E36-D5FDE0E72C05}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaLight,
    ]
    default_interface = IOdaLight

# This CoClass is known by the name 'BricscadDb.OdaLineType.24.0'
class OdaLineType(CoClassBaseClass): # A CoClass
    # Definition of the appearance of a line.
    CLSID = IID('{90507134-664C-4253-AD47-8F3AD62F3B2F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaLineType,
    ]
    default_interface = IOdaLineType

# This CoClass is known by the name 'BricscadDb.OdaMLineStyle.24.0'
class OdaMLineStyle(CoClassBaseClass): # A CoClass
    # OdaMLineStyle Class
    CLSID = IID('{9D7870FF-F579-42F2-B5C8-68C1F81520B1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaMLineStyle,
    ]
    default_interface = IOdaMLineStyle

# This CoClass is known by the name 'BricscadDb.OdaMLineStyles.24.0'
class OdaMLineStyles(CoClassBaseClass): # A CoClass
    # OdaMLineStyles Class
    CLSID = IID('{E15628CD-21E1-449A-8A74-5673C390599A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaMLineStyles,
    ]
    default_interface = IOdaMLineStyles

# This CoClass is known by the name 'BricscadDb.OdaOle.24.0'
class OdaOle(CoClassBaseClass): # A CoClass
    # OdaOle Class
    CLSID = IID('{CC40EAA3-6269-4D03-A2FC-3756679F5179}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaOle,
    ]
    default_interface = IOdaOle

# This CoClass is known by the name 'BricscadDb.OdaRasterImage.24.0'
class OdaRasterImage(CoClassBaseClass): # A CoClass
    # OdaRasterImage Class
    CLSID = IID('{3C32ECD7-9763-4A13-BCED-A7E0A7CBB3EC}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaRasterImage,
    ]
    default_interface = IOdaRasterImage

IAcad3DFace_vtables_dispatch_ = 1
IAcad3DFace_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge1' , 'visibility' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge2' , 'visibility' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge3' , 'visibility' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'VisibilityEdge4' , 'visibility' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'GetInvisibleEdge' , 'Index' , 'bVisible' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'SetInvisibleEdge' , 'Index' , 'State' , ), 7, (7, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcad3DPolyline_vtables_dispatch_ = 1
IAcad3DPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IAcad3DSolid_vtables_dispatch_ = 1
IAcad3DSolid_vtables_ = [
    (( 'Centroid' , 'Centroid' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'MomentOfInertia' , 'momentInertia' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalDirections' , 'prinDir' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalMoments' , 'prinMoments' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'ProductOfInertia' , 'prodInertia' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'RadiiOfGyration' , 'radiiGyration' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Volume' , 'Volume' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Boolean' , 'Operation' , 'SolidObject' , ), 8, (8, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'CheckInterference' , 'Object' , 'CreateInterferenceSolid' , 'pIntSolid' , ), 9, (9, (), [ 
             (9, 1, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , (11, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SectionSolid' , 'Point1' , 'Point2' , 'point3' , 'pRegion' , 
             ), 10, (10, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'SliceSolid' , 'Point1' , 'Point2' , 'point3' , 'Negative' , 
             'pNegSideSolid' , ), 11, (11, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (11, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'SolidType' , 'SolidType' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'Position' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'Position' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'History' , 'bHistory' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'History' , 'bHistory' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ShowHistory' , 'Position' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 16, (16, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
]

IAcadAcCmColor_vtables_dispatch_ = 1
IAcadAcCmColor_vtables_ = [
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'EntityColor' , 'eColor' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'ColorName' , 'Name' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'BookName' , 'Name' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'SetNames' , 'ColorName' , 'BookName' , ), 4, (4, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Red' , 'Red' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Blue' , 'Blue' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Green' , 'Green' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'SetRGB' , 'Red' , 'Green' , 'Blue' , ), 9, (9, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ColorMethod' , 'Flags' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ColorIndex' , 'color' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ColorIndex' , 'color' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SetColorBookColor' , 'BookName' , 'ColorName' , ), 18, (18, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadArc_vtables_dispatch_ = 1
IAcadArc_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'Angle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'Angle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TotalAngle' , 'TotalAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ArcLength' , 'ArcLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 10, (10, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadAttribute_vtables_dispatch_ = 1
IAcadAttribute_vtables_ = [
    (( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'FieldLength' , 'fieldLen' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'Tag' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'Tag' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'PromptString' , 'bstrPrompt' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 64 , )),
    (( 'Height' , 'Height' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Mode' , 'Mode' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Mode' , 'Mode' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'Verify' , 'bVerify' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'Verify' , 'bVerify' , ), 23, (23, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'Preset' , 'bPreset' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'Preset' , 'bPreset' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'UpdateMTextAttribute' , ), 28, (28, (), [ ], 1 , 1 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 29, (29, (), [ (5, 0, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
]

IAcadAttributeReference_vtables_dispatch_ = 1
IAcadAttributeReference_vtables_ = [
    (( 'Height' , 'Height' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 64 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 64 , )),
    (( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'FieldLength' , 'fieldLen' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'bUpsideDown' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'bBackward' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Invisible' , 'bInvisible' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'Constant' , 'bConstant' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'LockPosition' , 'bLockPosition' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttribute' , 'bMTextAttribute' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'MTextAttributeContent' , 'content' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'UpdateMTextAttribute' , ), 29, (29, (), [ ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 30, (30, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'MTextBoundaryWidth' , 'boundaryWidth' , ), 30, (30, (), [ (5, 0, None, None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'MTextDrawingDirection' , 'drawDir' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
]

IAcadBlock_vtables_dispatch_ = 1
IAcadBlock_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1536, (1536, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1537, (1537, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 1538, (1538, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'AddCustomObject' , 'ClassName' , 'pObject' , ), 1539, (1539, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Add3DFace' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
             'pFace3d' , ), 1540, (1540, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{7FBB52D0-2190-4A17-9A16-CB37821293B5}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Add3DMesh' , 'M' , 'N' , 'PointsMatrix' , 'pMesh3d' , 
             ), 1541, (1541, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Add3DPoly' , 'PointsArray' , 'pPoly3d' , ), 1542, (1542, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{E82F96B5-BA0E-4569-BD8A-596495947C12}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'AddArc' , 'Center' , 'Radius' , 'StartAngle' , 'EndAngle' , 
             'pArc' , ), 1543, (1543, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{426D2F0F-4A34-44D9-82D4-37E1A55605D2}')") , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'AddAttribute' , 'Height' , 'Mode' , 'Prompt' , 'InsertionPoint' , 
             'Tag' , 'Value' , 'pAttr' , ), 1544, (1544, (), [ (5, 1, None, None) , 
             (3, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
             (16393, 10, None, "IID('{E6A50EDF-A944-4172-8B2B-737EC047AD0F}')") , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'AddBox' , 'Origin' , 'Length' , 'Width' , 'Height' , 
             'pBox' , ), 1545, (1545, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'AddCircle' , 'Center' , 'Radius' , 'pCircle' , ), 1546, (1546, (), [ 
             (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{E23D2B17-487F-4016-A5D4-6C27643F308F}')") , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'AddCone' , 'Center' , 'BaseRadius' , 'Height' , 'pCone' , 
             ), 1547, (1547, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'AddCylinder' , 'Center' , 'Radius' , 'Height' , 'pCyl' , 
             ), 1548, (1548, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'AddDimAligned' , 'ExtLine1Point' , 'ExtLine2Point' , 'TextPosition' , 'pDim' , 
             ), 1549, (1549, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'AddDimAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
             'pDim' , ), 1550, (1550, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{559F6310-4DB2-4B61-8B4C-96D89006711B}')") , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'AddDimDiametric' , 'ChordPoint' , 'FarChordPoint' , 'LeaderLength' , 'pDim' , 
             ), 1551, (1551, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{0FB4DC41-B309-41C8-B5E7-23B284C98450}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRotated' , 'ExtLine1Point' , 'ExtLine2Point' , 'DimLineLocation' , 'RotationAngle' , 
             'pDim' , ), 1552, (1552, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'AddDimOrdinate' , 'DefinitionPoint' , 'LeaderEndPoint' , 'UseXAxis' , 'pDim' , 
             ), 1553, (1553, (), [ (12, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRadial' , 'Center' , 'ChordPoint' , 'LeaderLength' , 'pDim' , 
             ), 1554, (1554, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{0F29A519-B989-4E81-B41F-3346F3BE65CE}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipse' , 'Center' , 'MajorAxis' , 'RadiusRatio' , 'pEllipse' , 
             ), 1555, (1555, (), [ (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{5B4B058E-B8AA-4C76-B652-76AF101C380F}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipticalCone' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
             'pEllipCone' , ), 1556, (1556, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'AddEllipticalCylinder' , 'Center' , 'MajorRadius' , 'MinorRadius' , 'Height' , 
             'pEllipCyl' , ), 1557, (1557, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'AddExtrudedSolid' , 'Profile' , 'Height' , 'TaperAngle' , 'pExtrSolid' , 
             ), 1558, (1558, (), [ (9, 1, None, "IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')") , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'AddExtrudedSolidAlongPath' , 'Profile' , 'Path' , 'pExtrSolid' , ), 1559, (1559, (), [ 
             (9, 1, None, "IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')") , (9, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'AddLeader' , 'PointsArray' , 'Annotation' , 'Type' , 'pLeader' , 
             ), 1560, (1560, (), [ (12, 1, None, None) , (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , (3, 1, None, None) , (16393, 10, None, "IID('{A7072E19-38E6-4320-9045-B67E53179643}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'AddMText' , 'InsertionPoint' , 'Width' , 'Text' , 'pMtext' , 
             ), 1561, (1561, (), [ (12, 1, None, None) , (5, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{21E0293A-4AAE-4049-87D3-336F8F4D2D45}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'AddPoint' , 'Point' , 'pPoint' , ), 1562, (1562, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}')") , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'AddLightWeightPolyline' , 'VerticesList' , 'pLWPolyline' , ), 1563, (1563, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{037572DF-0207-4B27-BCDA-C163054A21DF}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'AddPolyline' , 'VerticesList' , 'pPolyline' , ), 1564, (1564, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}')") , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'AddRay' , 'Point1' , 'Point2' , 'pRay' , ), 1565, (1565, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{C888FAF5-E377-4624-A8E2-898031AB58BB}')") , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'AddRegion' , 'ObjectList' , 'pRegions' , ), 1566, (1566, (), [ (12, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'AddRevolvedSolid' , 'Profile' , 'AxisPoint' , 'AxisDir' , 'Angle' , 
             'pRevolSolid' , ), 1567, (1567, (), [ (9, 1, None, "IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')") , (12, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'AddShape' , 'Name' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
             'pShape' , ), 1568, (1568, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}')") , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'AddSolid' , 'Point1' , 'Point2' , 'point3' , 'Point4' , 
             'pSolid' , ), 1569, (1569, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}')") , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'AddSphere' , 'Center' , 'Radius' , 'pSphere' , ), 1570, (1570, (), [ 
             (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'AddSpline' , 'PointsArray' , 'StartTangent' , 'EndTangent' , 'pSpline' , 
             ), 1571, (1571, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{B05C2404-6A45-4A57-8075-F98464C350BE}')") , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'AddText' , 'TextString' , 'InsertionPoint' , 'Height' , 'pText' , 
             ), 1572, (1572, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{9CD7E38D-0003-410D-B6DF-DE36FD190850}')") , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'AddTolerance' , 'Text' , 'InsertionPoint' , 'Direction' , 'pTolerance' , 
             ), 1573, (1573, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}')") , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'AddTorus' , 'Center' , 'TorusRadius' , 'TubeRadius' , 'pTorus' , 
             ), 1574, (1574, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'AddTrace' , 'PointsArray' , 'pTrace' , ), 1575, (1575, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{128CC5FA-D347-4DCF-B0EA-574BADC9461A}')") , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'AddWedge' , 'Center' , 'Length' , 'Width' , 'Height' , 
             'pWedge' , ), 1576, (1576, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{34C7D347-D220-40C8-A81F-4B76ED6E5751}')") , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'AddXline' , 'Point1' , 'Point2' , 'pXline' , ), 1577, (1577, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{703DF76F-5C64-414A-B271-4520E1244353}')") , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'InsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
             'Zscale' , 'Rotation' , 'Password' , 'pBlkRef' , ), 1578, (1578, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{A40DEA37-8356-415A-B3AC-E087819C6301}')") , ], 1 , 1 , 4 , 1 , 544 , (3, 0, None, None) , 0 , )),
    (( 'AddHatch' , 'PatternType' , 'PatternName' , 'Associativity' , 'HatchObjectType' , 
             'pHatch' , ), 1579, (1579, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (12, 17, None, None) , (16393, 10, None, "IID('{173ED161-3D64-4EF5-85F4-6AACA83CD382}')") , ], 1 , 1 , 4 , 1 , 552 , (3, 0, None, None) , 0 , )),
    (( 'AddRaster' , 'imageFileName' , 'InsertionPoint' , 'ScaleFactor' , 'RotationAngle' , 
             'pRaster' , ), 1580, (1580, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}')") , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'AddLine' , 'StartPoint' , 'EndPoint' , 'pLine' , ), 1581, (1581, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{34257E2A-6A0C-4DEF-A740-65455AC05B1D}')") , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'IsLayout' , 'bIsLayout' , ), 1582, (1582, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Layout' , 'pLayout' , ), 1583, (1583, (), [ (16393, 10, None, "IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'IsXRef' , 'pIsXRref' , ), 1584, (1584, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'AddMInsertBlock' , 'InsertionPoint' , 'Name' , 'Xscale' , 'Yscale' , 
             'Zscale' , 'Rotation' , 'NumRows' , 'NumColumns' , 'RowSpacing' , 
             'ColumnSpacing' , 'Password' , 'pMInsertBlk' , ), 1585, (1585, (), [ (12, 1, None, None) , 
             (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , 
             (16393, 10, None, "IID('{A6653F5A-001E-4125-8BB0-597E96CDE498}')") , ], 1 , 1 , 4 , 1 , 600 , (3, 0, None, None) , 0 , )),
    (( 'AddPolyfaceMesh' , 'VertexList' , 'FaceList' , 'pPFMesh' , ), 1586, (1586, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}')") , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'AddMLine' , 'VertexList' , 'pMLine' , ), 1587, (1587, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{C35F5577-83CE-43C7-B10E-AFEF9E345739}')") , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'AddDim3PointAngular' , 'AngleVertex' , 'FirstEndPoint' , 'SecondEndPoint' , 'TextPoint' , 
             'pDim' , ), 1588, (1588, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{B0E595FE-21A5-4C67-A916-4689ABA37E62}')") , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'XRefDatabase' , 'pDatabase' , ), 1589, (1589, (), [ (16393, 10, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'AttachExternalReference' , 'PathName' , 'Name' , 'InsertionPoint' , 'Xscale' , 
             'Yscale' , 'Zscale' , 'Rotation' , 'bOverlay' , 'Password' , 
             'pXRef' , ), 1590, (1590, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
             (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
             (12, 17, None, None) , (16393, 10, None, "IID('{CD8AF174-69E8-4044-841A-7CDC34FE43BF}')") , ], 1 , 1 , 4 , 1 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Unload' , ), 1591, (1591, (), [ ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Reload' , ), 1592, (1592, (), [ ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Bind' , 'bPrefixName' , ), 1593, (1593, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Detach' , ), 1594, (1594, (), [ ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'AddTable' , 'InsertionPoint' , 'NumRows' , 'NumColumns' , 'RowHeight' , 
             'ColWidth' , 'pTable' , ), 1595, (1595, (), [ (12, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{62AE6596-74E9-4FC1-9F31-CB9567E550F9}')") , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 1596, (1596, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'bstrName' , ), 1597, (1597, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Units' , 'pIU' , ), 1598, (1598, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Units' , 'pIU' , ), 1598, (1598, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Explodable' , 'bExplodable' , ), 1599, (1599, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'BlockScaling' , 'pBS' , ), 1600, (1600, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'IsDynamicBlock' , 'pDynamicBlock' , ), 1601, (1601, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'AddDimArc' , 'ArcCenter' , 'FirstEndPoint' , 'SecondEndPoint' , 'ArcPoint' , 
             'pDim' , ), 1602, (1602, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (16393, 10, None, "IID('{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'AddDimRadialLarge' , 'Center' , 'ChordPoint' , 'OverrideCenter' , 'JogPoint' , 
             'JogAngle' , 'pDim' , ), 1603, (1603, (), [ (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{F2B4D571-C206-4E19-B1C0-55C95BED669C}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'AddSection' , 'FromPoint' , 'ToPoint' , 'planeVector' , 'ppSecPlane' , 
             ), 1604, (1604, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')") , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'AddMLeader' , 'PointsArray' , 'leaderLineIndex' , 'pMLeader' , ), 1605, (1605, (), [ 
             (12, 1, None, None) , (16387, 2, None, None) , (16393, 10, None, "IID('{A2F0013E-ACE4-41C5-9015-37587663DD30}')") , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'AddEmbeddedRaster' , 'ImagePath' , 'InsertionPoint' , 'Height' , 'Width' , 
             '__MIDL__IAcadBlock0000' , ), 1792, (1792, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (16393, 10, None, "IID('{5A90AA1A-8525-49B7-9F44-62E6A958DE82}')") , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
]

IAcadBlockReference_vtables_dispatch_ = 1
IAcadBlockReference_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'XScaleFactor' , 'ScaleFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'YScaleFactor' , 'ScaleFactor' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ZScaleFactor' , 'ScaleFactor' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'GetAttributes' , 'pAttrObjs' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'GetConstantAttributes' , 'pAttrObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'HasAttributes' , 'bHas' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'EffectiveName' , 'EffectiveName' , ), 512, (512, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'IsDynamicBlock' , 'pDynamicBlock' , ), 513, (513, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'GetDynamicBlockProperties' , 'dynamicPropertyArray' , ), 514, (514, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ResetBlock' , ), 515, (515, (), [ ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ConvertToAnonymousBlock' , ), 516, (516, (), [ ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'ConvertToStaticBlock' , 'newBlockName' , ), 517, (517, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'XEffectiveScaleFactor' , 'ScaleFactor' , ), 518, (518, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'YEffectiveScaleFactor' , 'ScaleFactor' , ), 519, (519, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ZEffectiveScaleFactor' , 'ScaleFactor' , ), 520, (520, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'InsUnits' , 'Units' , ), 521, (521, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'InsUnitsFactor' , 'factor' , ), 528, (528, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
]

IAcadBlocks_vtables_dispatch_ = 1
IAcadBlocks_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'InsertionPoint' , 'Name' , 'pBlock' , ), 2, (2, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadCircle_vtables_dispatch_ = 1
IAcadCircle_vtables_ = [
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Radius' , 'Radius' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Diameter' , 'Diameter' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Circumference' , 'Circumference' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 8, (8, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
]

IAcadDatabase_vtables_dispatch_ = 1
IAcadDatabase_vtables_ = [
    (( 'ModelSpace' , 'pMSpace' , ), 1, (1, (), [ (16393, 10, None, "IID('{ECE694AB-7306-4687-AD03-C7017AE8DED1}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'PaperSpace' , 'pPSpace' , ), 2, (2, (), [ (16393, 10, None, "IID('{39377F68-1F53-4433-90AE-05526FEA4FE5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Blocks' , 'pBlocks' , ), 3, (3, (), [ (16393, 10, None, "IID('{98F7CE82-8E41-4D58-A784-30B3F33F7853}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'CopyObjects' , 'Objects' , 'Owner' , 'IdPairs' , 'pNewObjects' , 
             ), 4, (4, (), [ (12, 1, None, None) , (12, 17, None, None) , (16396, 19, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Groups' , 'pGroups' , ), 5, (5, (), [ (16393, 10, None, "IID('{973585F9-D300-4BA7-9D0F-6EE59533A0DC}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DimStyles' , 'pDimStyles' , ), 6, (6, (), [ (16393, 10, None, "IID('{DAB1760C-8402-4520-AD32-9396AEF1C677}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Layers' , 'pLayers' , ), 7, (7, (), [ (16393, 10, None, "IID('{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Linetypes' , 'pLinetypes' , ), 8, (8, (), [ (16393, 10, None, "IID('{669E518F-46F5-4E21-8447-7F8D1435AE94}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Dictionaries' , 'pDictionaries' , ), 9, (9, (), [ (16393, 10, None, "IID('{B6D57083-036D-48AB-8BF4-0902B5C88BFF}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'RegisteredApplications' , 'pRegApps' , ), 10, (10, (), [ (16393, 10, None, "IID('{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'TextStyles' , 'pTextStyles' , ), 11, (11, (), [ (16393, 10, None, "IID('{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'UserCoordinateSystems' , 'pUCSs' , ), 12, (12, (), [ (16393, 10, None, "IID('{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Views' , 'pViews' , ), 13, (13, (), [ (16393, 10, None, "IID('{E1673534-4417-4D0A-95FB-6E02246096D6}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Viewports' , 'pViewports' , ), 14, (14, (), [ (16393, 10, None, "IID('{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ElevationModelSpace' , 'Elevation' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'ElevationPaperSpace' , 'Elevation' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Limits' , 'Limits' , ), 17, (17, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Limits' , 'Limits' , ), 17, (17, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'HandleToObject' , 'Handle' , 'pObj' , ), 18, (18, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ObjectIdToObject' , 'ObjectID' , 'pObj' , ), 19, (19, (), [ (20, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Layouts' , 'pLayouts' , ), 20, (20, (), [ (16393, 10, None, "IID('{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'PlotConfigurations' , 'pPlotConfigs' , ), 21, (21, (), [ (16393, 10, None, "IID('{38436519-BF47-4848-B6B2-CB6944F167D3}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Preferences' , 'pPref' , ), 22, (22, (), [ (16393, 10, None, "IID('{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'FileDependencies' , 'pFDM' , ), 70, (70, (), [ (16393, 10, None, "IID('{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'SummaryInfo' , 'pSummaryInfo' , ), 71, (71, (), [ (16393, 10, None, "IID('{95D1CD9E-63E7-4860-9BE2-8F684047E102}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'SectionManager' , 'pSecMgr' , ), 72, (72, (), [ (16393, 10, None, "IID('{47495992-2633-4FA4-8B0F-213F0C2D20A5}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Materials' , 'pMaterials' , ), 73, (73, (), [ (16393, 10, None, "IID('{6B7DDA98-B483-40F8-905C-2DF10E936021}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ObjectIdToObject32' , 'ObjectID' , 'pObj' , ), 74, (74, (), [ (3, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IAcadDatabasePreferences_vtables_dispatch_ = 1
IAcadDatabasePreferences_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SolidFill' , 'Fill' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'XRefEdit' , 'Edit' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'XRefLayerVisibility' , 'XRefLayerVis' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'OLELaunch' , 'Launch' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AllowLongSymbolNames' , 'LongNames' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySelection' , 'Sort' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortBySnap' , 'Sort' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRedraws' , 'Sort' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByRegens' , 'Sort' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPlotting' , 'Sort' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSortByPSOutput' , 'Sort' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ContourLinesPerSurface' , 'Path' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'DisplaySilhouette' , 'Path' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'MaxActiveViewports' , 'Path' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'RenderSmoothness' , 'Path' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SegmentPerPolyline' , 'Path' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'Path' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Path' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Path' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'LineWeightDisplay' , 'Path' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IAcadDictionaries_vtables_dispatch_ = 1
IAcadDictionaries_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDictionary' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadDictionary_vtables_dispatch_ = 1
IAcadDictionary_vtables_ = [
    (( 'Name' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'AddObject' , 'Keyword' , 'ObjectName' , 'pNewObj' , ), 3, (3, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GetName' , 'Object' , 'bstrName' , ), 4, (4, (), [ (9, 1, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GetObject' , 'Name' , 'pObj' , ), 5, (5, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Remove' , 'Name' , 'pObj' , ), 6, (6, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Rename' , 'OldName' , 'NewName' , ), 7, (7, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Replace' , 'OldName' , 'pObj' , ), 8, (8, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'AddXRecord' , 'Keyword' , 'pNewXRecord' , ), 9, (9, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}')") , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadDim3PointAngular_vtables_dispatch_ = 1
IAcadDim3PointAngular_vtables_ = [
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AngleVertex' , 'AngleVertex' , ), 45, (45, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'AngleVertex' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
]

IAcadDimAligned_vtables_dispatch_ = 1
IAcadDimAligned_vtables_ = [
    (( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'xLine1Point' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'xLine2Point' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'suffix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'color' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'color' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
]

IAcadDimAngular_vtables_dispatch_ = 1
IAcadDimAngular_vtables_ = [
    (( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1StartPoint' , 'xLine1Point' , ), 37, (37, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1EndPoint' , 'xLine1Point' , ), 38, (38, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2StartPoint' , 'xLine2Point' , ), 39, (39, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2EndPoint' , 'xLine2Point' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AngleFormat' , 'format' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'TextPrecision' , 'precision' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
]

IAcadDimArcLength_vtables_dispatch_ = 1
IAcadDimArcLength_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'ArcPoint' , 'pVal' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Point' , 'pVal' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Point' , 'pVal' , ), 70, (70, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'CenterPoint' , 'pVal' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'Leader1Point' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'Leader2Point' , 'pVal' , ), 73, (73, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'IsPartial' , 'pVal' , ), 74, (74, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'ArcStartParam' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'ArcEndParam' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'HasLeader' , 'pVal' , ), 77, (77, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'SymbolPosition' , 'Position' , ), 67, (67, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
]

IAcadDimDiametric_vtables_dispatch_ = 1
IAcadDimDiametric_vtables_ = [
    (( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
]

IAcadDimOrdinate_vtables_dispatch_ = 1
IAcadDimOrdinate_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadial_vtables_dispatch_ = 1
IAcadDimRadial_vtables_ = [
    (( 'LeaderLength' , ), 42, (42, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
]

IAcadDimRadialLarge_vtables_dispatch_ = 1
IAcadDimRadialLarge_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'CenterType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'CenterMarkSize' , 'Type' , ), 44, (44, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'DimLineSuppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'OverrideCenter' , 'overrideCenterPos' , ), 68, (68, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'JogLocation' , 'jogPos' , ), 69, (69, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'JogAngle' , 'JogAngle' , ), 70, (70, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVar' , ), 71, (71, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'pVar' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ChordPoint' , 'pVal' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
]

IAcadDimRotated_vtables_dispatch_ = 1
IAcadDimRotated_vtables_ = [
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'AltUnits' , 'bAlternate' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsPrecision' , 'precision' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsScale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AltRoundDistance' , 'Distance' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AltTolerancePrecision' , 'Distance' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'AltUnitsFormat' , 'Units' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'AltTextPrefix' , 'prefix' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'AltTextSuffix' , 'prefix' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineColor' , 'Type' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'PrimaryUnitsPrecision' , 'Prec' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineExtend' , 'extend' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineExtend' , 'extend' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'Fit' , 'fittype' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'FractionFormat' , 'Type' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalTextPosition' , 'Type' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'LinearScaleFactor' , 'Type' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'UnitsFormat' , 'format' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineWeight' , 'lweight' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'RoundDistance' , 'Distance' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'DimLine1Suppress' , 'bSuppress' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'DimLine2Suppress' , 'bSuppress' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Suppress' , 'bSuppress' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Suppress' , 'bSuppress' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'DimLineInside' , 'bInside' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'TextInsideAlign' , 'bInside' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'TextInside' , 'bInside' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'ForceLineInside' , 'bInside' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'TextOutsideAlign' , 'bInside' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'ExtensionLineOffset' , 'Offset' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressLeadingZeros' , 'bVal' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressTrailingZeros' , 'bVal' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroFeet' , 'bVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'AltSuppressZeroInches' , 'bVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressLeadingZeros' , 'bVal' , ), 52, (52, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressTrailingZeros' , 'bVal' , ), 53, (53, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroFeet' , 'bVal' , ), 54, (54, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'AltToleranceSuppressZeroInches' , 'bVal' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroFeet' , 'bVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'SuppressZeroInches' , 'bVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroFeet' , 'bVal' , ), 58, (58, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressZeroInches' , 'bVal' , ), 59, (59, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 61, (61, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Type' , 'Type' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Type' , 'Type' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'Measurement' , 'bVal' , ), 64, (64, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead1Block' , 'BlockName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'Arrowhead2Block' , 'BlockName' , ), 66, (66, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLinetype' , 'Linetype' , ), 80, (80, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine1Linetype' , 'Linetype' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'ExtLine2Linetype' , 'Linetype' , ), 82, (82, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLenSuppress' , 'bFixedLen' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'ExtLineFixedLen' , 'FixedLen' , ), 84, (84, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrForm' , 'bIsDynamic' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrReference' , 'bIsReference' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrName' , 'bstrName' , ), 87, (87, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrExpression' , 'bstrExpression' , ), 88, (88, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrValue' , 'Value' , ), 89, (89, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'DimConstrDesc' , 'bstrDescription' , ), 90, (90, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsSuffix' , 'suffix' , ), 1574, (1574, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'SubUnitsFactor' , 'factor' , ), 1575, (1575, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsSuffix' , 'suffix' , ), 1576, (1576, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'AltSubUnitsFactor' , 'factor' , ), 1577, (1577, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyle_vtables_dispatch_ = 1
IAcadDimStyle_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'CopyFrom' , 'StyleSource' , ), 2, (2, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadDimStyles_vtables_dispatch_ = 1
IAcadDimStyles_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pDimStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadDimension_vtables_dispatch_ = 1
IAcadDimension_vtables_ = [
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 1538, (1538, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'TextPosition' , 'textPos' , ), 1539, (1539, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 1540, (1540, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TextOverride' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'DecimalSeparator' , 'character' , ), 1548, (1548, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'TextPrefix' , 'prefix' , ), 1551, (1551, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'TextSuffix' , 'suffix' , ), 1552, (1552, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'TolerancePrecision' , 'precision' , ), 1555, (1555, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceHeightScale' , 'scale' , ), 1556, (1556, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceLowerLimit' , 'lower' , ), 1557, (1557, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'TextMovement' , 'Move' , ), 1558, (1558, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceDisplay' , 'method' , ), 1559, (1559, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceJustification' , 'method' , ), 1560, (1560, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceUpperLimit' , 'upper' , ), 1561, (1561, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'SuppressLeadingZeros' , 'bVal' , ), 1565, (1565, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'SuppressTrailingZeros' , 'bVal' , ), 1566, (1566, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressLeadingZeros' , 'bVal' , ), 1569, (1569, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'ToleranceSuppressTrailingZeros' , 'bVal' , ), 1570, (1570, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'TextFill' , 'bVal' , ), 1571, (1571, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'TextFillColor' , 'color' , ), 1572, (1572, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
]

IAcadDwfUnderlay_vtables_dispatch_ = 1
IAcadDwfUnderlay_vtables_ = [
    (( 'DWFFormat' , 'Name' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'DWFFormat' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
]

IAcadDynamicBlockReferenceProperty_vtables_dispatch_ = 1
IAcadDynamicBlockReferenceProperty_vtables_ = [
    (( 'PropertyName' , 'PropertyName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ReadOnly' , 'ReadOnly' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Show' , 'Show' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'AllowedValues' , 'AllowedValues' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'Value' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'Value' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'UnitsType' , 'Units' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadEllipse_vtables_dispatch_ = 1
IAcadEllipse_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MajorRadius' , 'MajorRadius' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'MinorRadius' , 'MinorRadius' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'RadiusRatio' , 'RadiusRatio' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'StartAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'EndAngle' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'StartParameter' , 'StartParameter' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'EndParameter' , 'EndParameter' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'MajorAxis' , 'MajorAxis' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'MinorAxis' , 'MinorAxis' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 15, (15, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
]

IAcadEntity_vtables_dispatch_ = 1
IAcadEntity_vtables_ = [
    (( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , 'pColor' , ), 1302, (1302, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bVisible' , ), 1284, (1284, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'ArrayPolar' , 'NumberOfObjects' , 'AngleToFill' , 'CenterPoint' , 'pArrayObjs' , 
             ), 1285, (1285, (), [ (3, 1, None, None) , (5, 1, None, None) , (12, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'ArrayRectangular' , 'NumberOfRows' , 'NumberOfColumns' , 'NumberOfLevels' , 'DistBetweenRows' , 
             'DistBetweenCols' , 'DistBetweenLevels' , 'pArrayObjs' , ), 1286, (1286, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'HighlightFlag' , ), 1287, (1287, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Copy' , 'pCopyObj' , ), 1288, (1288, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'Move' , 'FromPoint' , 'ToPoint' , ), 1289, (1289, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'Rotate' , 'BasePoint' , 'RotationAngle' , ), 1290, (1290, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'Rotate3D' , 'Point1' , 'Point2' , 'RotationAngle' , ), 1291, (1291, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'Mirror' , 'Point1' , 'Point2' , 'pMirrorObj' , ), 1292, (1292, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'Mirror3D' , 'Point1' , 'Point2' , 'point3' , 'pMirrorObj' , 
             ), 1293, (1293, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'ScaleEntity' , 'BasePoint' , 'ScaleFactor' , ), 1294, (1294, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'TransformBy' , 'TransformationMatrix' , ), 1295, (1295, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 1296, (1296, (), [ ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'GetBoundingBox' , 'MinPoint' , 'MaxPoint' , ), 1297, (1297, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'IntersectWith' , 'IntersectObject' , 'option' , 'intPoints' , ), 1298, (1298, (), [ 
             (9, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'Hyperlinks' , 'Hyperlinks' , ), 1301, (1301, (), [ (16393, 10, None, "IID('{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'EntityName' , 'EntityName' , ), 1397, (1397, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
    (( 'EntityType' , 'entType' , ), 1398, (1398, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1280, (1280, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1280, (1280, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 64 , )),
    (( 'EntityTransparency' , 'transparency' , ), 1401, (1401, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'EntityTransparency' , 'transparency' , ), 1401, (1401, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
]

IAcadExternalReference_vtables_dispatch_ = 1
IAcadExternalReference_vtables_ = [
    (( 'Path' , 'bstrName' , ), 256, (256, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrName' , ), 256, (256, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
]

IAcadExtrudedSurface_vtables_dispatch_ = 1
IAcadExtrudedSurface_vtables_ = [
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TaperAngle' , 'TaperAngle' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'Direction' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependencies_vtables_dispatch_ = 1
IAcadFileDependencies_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'CreateEntry' , 'Feature' , 'FullFileName' , 'AffectsGraphics' , 'noIncrement' , 
             'Index' , ), 3, (3, (), [ (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'IndexOf' , 'Feature' , 'FullFileName' , 'Index' , ), 4, (4, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'RemoveEntry' , 'Index' , 'forceRemove' , ), 5, (5, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'UpdateEntry' , 'Index' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadFileDependency_vtables_dispatch_ = 1
IAcadFileDependency_vtables_ = [
    (( 'FullFileName' , 'FullFileName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'FileName' , 'FileName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'FoundPath' , 'FoundPath' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'FingerprintGuid' , 'FingerprintGuid' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'VersionGuid' , 'VersionGuid' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Feature' , 'Feature' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'IsModified' , 'IsModified' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'AffectsGraphics' , 'AffectsGraphics' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'TimeStamp' , 'TimeStamp' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'FileSize' , 'FileSize' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ReferenceCount' , 'refCount' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadGroup_vtables_dispatch_ = 1
IAcadGroup_vtables_ = [
    (( 'Item' , 'Index' , 'ppEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , ), 15, (15, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'HighlightFlag' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'AppendItems' , 'Objects' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'RemoveItems' , 'Objects' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'Material' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'color' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
]

IAcadGroups_vtables_dispatch_ = 1
IAcadGroups_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pGroup' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{5AF2F067-C79B-4C61-B0EF-950C44990DAA}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadHatch_vtables_dispatch_ = 1
IAcadHatch_vtables_ = [
    (( 'Normal' , 'Normal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfLoops' , 'numLoops' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'PatternType' , 'PatternType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'PatternName' , 'bstrName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'PatternAngle' , 'PatternAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'PatternScale' , 'PatternScale' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'PatternSpace' , 'PatternSpace' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ISOPenWidth' , 'penWidth' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'PatternDouble' , 'bDouble' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'AssociativeHatch' , 'fAssoc' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'HatchStyle' , 'HatchStyle' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'SetPattern' , 'PatternType' , 'PatternName' , ), 13, (13, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'AppendOuterLoop' , 'ObjectArray' , ), 14, (14, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'AppendInnerLoop' , 'ObjectArray' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'InsertLoopAt' , 'Index' , 'LoopType' , 'ObjectArray' , ), 16, (16, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'GetLoopAt' , 'Index' , 'ObjectArray' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Evaluate' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor1' , 'pColor' , ), 19, (19, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'GradientColor2' , 'pColor' , ), 20, (20, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'GradientAngle' , 'GradientAngle' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'GradientCentered' , 'fCentered' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'GradientName' , 'bstrName' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'HatchObjectType' , 'hatchType' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
]

IAcadHatch2_vtables_dispatch_ = 1
IAcadHatch2_vtables_ = [
    (( 'BackgroundColor' , 'pColor' , ), 27, (27, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundColor' , 'pColor' , ), 27, (27, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'AppendOuterLoop' , 'ObjectArray' , 'bCheckLoop' , ), 28, (28, (), [ (12, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'AppendInnerLoop' , 'ObjectArray' , 'bCheckLoop' , ), 29, (29, (), [ (12, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'InsertLoopAt' , 'Index' , 'LoopType' , 'ObjectArray' , 'bCheckLoop' , 
             ), 30, (30, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
]

IAcadHelix_vtables_dispatch_ = 1
IAcadHelix_vtables_ = [
    (( 'Position' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Constrain' , 'constrainType' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Length' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Length' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Turns' , 'Turns' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Turns' , 'Turns' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TurnHeight' , 'Distance' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'BaseRadius' , 'Radius' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TopRadius' , 'Radius' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'twistType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'twistType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TurnSlope' , 'slopeAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TotalLength' , 'TotalLength' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlink_vtables_dispatch_ = 1
IAcadHyperlink_vtables_ = [
    (( 'URL' , 'URLPath' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'URL' , 'URLPath' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'URLDescription' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'URLDescription' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'URLNamedLocation' , 'Location' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadHyperlinks_vtables_dispatch_ = 1
IAcadHyperlinks_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{CFC06944-7FD0-432E-A430-B77F2967EB4C}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'ApplicationObject' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'Name' , 'Description' , 'NamedLocation' , 'pHyperlink' , 
             ), 3, (3, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{CFC06944-7FD0-432E-A430-B77F2967EB4C}')") , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadIdPair_vtables_dispatch_ = 1
IAcadIdPair_vtables_ = [
    (( 'IsCloned' , 'pVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'IsOwnerXlated' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'IsPrimary' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'key' , 'pVal' , ), 4, (4, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Value' , 'pVal' , ), 5, (5, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Key32' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Value32' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadLWPolyline_vtables_dispatch_ = 1
IAcadLWPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'AddVertex' , 'Index' , 'vertex' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
             (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
]

IAcadLayer_vtables_dispatch_ = 1
IAcadLayer_vtables_ = [
    (( 'color' , 'color' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
    (( 'color' , 'color' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
    (( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'TrueColor' , 'pColor' , ), 11, (11, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Freeze' , 'bFreeze' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'LayerOn' , 'bOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Lock' , 'Block' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Lock' , 'Block' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'Plottable' , 'bPlottable' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'ViewportDefault' , 'bDefault' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'Used' , 'bUsed' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IAcadLayers_vtables_dispatch_ = 1
IAcadLayers_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{A5484251-D4DF-4F32-A23F-445882F48F1B}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLayer' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{A5484251-D4DF-4F32-A23F-445882F48F1B}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GenerateUsageData' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IAcadLayout_vtables_dispatch_ = 1
IAcadLayout_vtables_ = [
    (( 'Block' , 'pBlock' , ), 48, (48, (), [ (16393, 10, None, "IID('{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'TabOrder' , 'pOrder' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
]

IAcadLayouts_vtables_dispatch_ = 1
IAcadLayouts_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLayout' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadLeader_vtables_dispatch_ = 1
IAcadLeader_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 64, (64, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 1537, (1537, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 65, (65, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 65, (65, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Evaluate' , ), 66, (66, (), [ ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 67, (67, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Annotation' , 'pVal' , ), 68, (68, (), [ (16393, 10, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Annotation' , 'pVal' , ), 68, (68, (), [ (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 1543, (1543, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'Type' , ), 69, (69, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineWeight' , 'weight' , ), 1550, (1550, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'VerticalTextPosition' , 'Type' , ), 1554, (1554, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TextGap' , 'Offset' , ), 1549, (1549, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 70, (70, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
]

IAcadLine_vtables_dispatch_ = 1
IAcadLine_vtables_ = [
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'StartPoint' , 'StartPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'EndPoint' , 'EndPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 5, (5, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Delta' , 'Delta' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Angle' , 'Angle' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
]

IAcadLineType_vtables_dispatch_ = 1
IAcadLineType_vtables_ = [
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadLineTypes_vtables_dispatch_ = 1
IAcadLineTypes_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLinetype' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Load' , 'Name' , 'FileName' , ), 3, (3, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IAcadLoftedSurface_vtables_dispatch_ = 1
IAcadLoftedSurface_vtables_ = [
    (( 'NumCrossSections' , 'NumCrossSections' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'NumGuidePaths' , 'NumGuidePaths' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'SurfaceNormals' , 'surfaceNormal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftAngle' , 'StartDraftAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'StartDraftMagnitude' , 'startDraftMag' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftAngle' , 'EndDraftAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'EndDraftMagnitude' , 'endDraftMag' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'bClosed' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'bClosed' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
]

IAcadMInsertBlock_vtables_dispatch_ = 1
IAcadMInsertBlock_vtables_ = [
    (( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'NumColumns' , ), 256, (256, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'ColumnSpacing' , 'Spacing' , ), 257, (257, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'NumRows' , ), 258, (258, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'NumRows' , ), 258, (258, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'RowSpacing' , 'Spacing' , ), 259, (259, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
]

IAcadMLeader_vtables_dispatch_ = 1
IAcadMLeader_vtables_ = [
    (( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'DogLegged' , 'val' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'DogLegged' , 'val' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockName' , 'BlockName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'factor' , ), 51, (51, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'factor' , ), 51, (51, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'TextStyleName' , 'bstrName' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'TextJustify' , 'attPoint' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'TextDirection' , 'drawDir' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'TextWidth' , 'Width' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'TextWidth' , 'Width' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'TextRotation' , 'rotAngle' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingFactor' , 'factor' , ), 18, (18, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingDistance' , 'Value' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'TextLineSpacingStyle' , 'style' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'TextBackgroundFill' , 'bUseBackgroundFill' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'TextAttachmentDirection' , 'dir' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'TextTopAttachmentType' , 'Type' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'TextBottomAttachmentType' , 'Type' , ), 50, (50, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'gap' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'gap' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 24, (24, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'ContentBlockType' , 'Type' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'LeaderCount' , 'number' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'AddLeader' , 'leaderIndex' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'RemoveLeader' , 'leaderIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'AddLeaderLine' , 'leaderIndex' , 'pointArray' , 'leaderLineIndex' , ), 29, (29, (), [ 
             (3, 1, None, None) , (12, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'AddLeaderLineEx' , 'pointArray' , 'leaderLineIndex' , ), 30, (30, (), [ (12, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'RemoveLeaderLine' , 'leaderLineIndex' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'SetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 32, (32, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderLineVertices' , 'leaderLineIndex' , 'pointArray' , ), 33, (33, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderIndex' , 'leaderLineIndex' , 'leaderIndex' , ), 35, (35, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'GetLeaderLineIndexes' , 'leaderIndex' , 'leaderLineIndexes' , ), 36, (36, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'GetVertexCount' , 'leaderLineIndex' , 'number' , ), 37, (37, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'TextFrameDisplay' , 'pVal' , ), 39, (39, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'Name' , ), 40, (40, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'GetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 41, (41, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'SetDoglegDirection' , 'leaderIndex' , 'dirVec' , ), 42, (42, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue' , 'attdefId' , 'Value' , ), 44, (44, (), [ (20, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue' , 'attdefId' , 'Value' , ), 45, (45, (), [ (20, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue32' , 'attdefId' , 'Value' , ), 46, (46, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue32' , 'attdefId' , 'Value' , ), 47, (47, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
]

IAcadMLeaderLeader_vtables_dispatch_ = 1
IAcadMLeaderLeader_vtables_ = [
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'LeaderType' , 'Type' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'Type' , ), 2, (2, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Linetype' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'Lineweight' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadType' , 'BlockName' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadSize' , 'size' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ArrowheadBlock' , 'BlockName' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadMLeaderStyle_vtables_dispatch_ = 1
IAcadMLeaderStyle_vtables_ = [
    (( 'Name' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'Description' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ContentType' , 'Type' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'DrawMLeaderOrderType' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'DrawLeaderOrderType' , 'Type' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'MaxLeaderSegmentsPoints' , 'number' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'FirstSegmentAngleConstraint' , 'constraint' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SecondSegmentAngleConstraint' , 'constraint' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineType' , 'Type' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineColor' , 'color' , ), 11, (11, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineTypeId' , 'Type' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'LeaderLineWeight' , 'weight' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'EnableLanding' , 'enabled' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'LandingGap' , 'LandingGap' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'EnableDogleg' , 'enabled' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'DoglegLength' , 'DoglegLength' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSymbol' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSize' , 'size' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'ArrowSize' , 'size' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'Name' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'Name' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'TextLeftAttachmentType' , 'Type' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'TextRightAttachmentType' , 'Type' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 22, (22, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 22, (22, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'EnableFrameText' , 'enabled' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'AlignSpace' , 'AlignSpace' , ), 25, (25, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'Name' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'Name' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'color' , ), 27, (27, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'BlockColor' , 'color' , ), 27, (27, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockScale' , 'enabled' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'BlockScale' , 'ScaleFactor' , ), 29, (29, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'EnableBlockRotation' , 'enabled' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'BlockRotation' , 'Rotation' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'BlockConnectionType' , 'Type' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scale' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'OverwritePropChanged' , 'changed' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Annotative' , 'Annotative' , ), 35, (35, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'BreakSize' , 'size' , ), 36, (36, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'BreakSize' , 'size' , ), 36, (36, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'Text' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'Text' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'TextAngleType' , 'Type' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentType' , 'Type' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
]

IAcadMLine_vtables_dispatch_ = 1
IAcadMLine_vtables_ = [
    (( 'StyleName' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Justification' , 'Justification' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Justification' , 'Justification' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MLineScale' , 'scale' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'MLineScale' , 'scale' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
]

IAcadMText_vtables_dispatch_ = 1
IAcadMText_vtables_ = [
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'AttachmentPoint' , 'attPoint' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'DrawingDirection' , 'drawDir' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingFactor' , 'factor' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingStyle' , 'style' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'LineSpacingDistance' , 'Value' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundFill' , 'bUseBackgroundFill' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'FieldCode' , 'bstrText' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
]

IAcadMaterial_vtables_dispatch_ = 1
IAcadMaterial_vtables_ = [
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadMaterials_vtables_dispatch_ = 1
IAcadMaterials_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{4D24EA66-A2B3-4129-8367-81D93B44BE07}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pMaterial' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{4D24EA66-A2B3-4129-8367-81D93B44BE07}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadModelSpace_vtables_dispatch_ = 1
IAcadModelSpace_vtables_ = [
]

IAcadObject_vtables_dispatch_ = 1
IAcadObject_vtables_ = [
    (( 'Handle' , 'Handle' , ), 1024, (1024, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ObjectName' , 'ObjectName' , ), 1025, (1025, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'GetXData' , 'AppName' , 'XDataType' , 'XDataValue' , ), 1026, (1026, (), [ 
             (8, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'SetXData' , 'XDataType' , 'XDataValue' , ), 1027, (1027, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1028, (1028, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ObjectID' , 'ObjectID' , ), 1029, (1029, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'ApplicationObject' , ), 1030, (1030, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Database' , 'pDatabase' , ), 1031, (1031, (), [ (16393, 10, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
    (( 'HasExtensionDictionary' , 'bHasDictionary' , ), 1032, (1032, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetExtensionDictionary' , 'pExtDictionary' , ), 1033, (1033, (), [ (16393, 10, None, "IID('{542B5C1D-3280-4154-B3C6-B9D55E9A153B}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'OwnerID' , 'OwnerID' , ), 1034, (1034, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Document' , 'pDocument' , ), 1035, (1035, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Erase' , ), 1141, (1141, (), [ ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
    (( 'ObjectID32' , 'ObjectID' , ), 1142, (1142, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'OwnerID32' , 'OwnerID' , ), 1143, (1143, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IAcadObjectEvents_vtables_dispatch_ = 0
IAcadObjectEvents_vtables_ = [
    (( 'Modified' , 'pObject' , ), 1610678272, (1610678272, (), [ (9, 1, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , ], 1 , 1 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
]

IAcadOle_vtables_dispatch_ = 1
IAcadOle_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rot' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rot' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ScaleWidth' , 'swidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ScaleHeight' , 'sheight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'LockAspectRatio' , 'aspect' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'OleItemType' , 'pType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'OleItemType' , 'pType' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'OlePlotQuality' , 'pPQuality' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'OleSourceApp' , 'srcApp' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
]

IAcadPViewport_vtables_dispatch_ = 1
IAcadPViewport_vtables_ = [
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'CenterPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVector' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVector' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ViewportOn' , 'bOn' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Clipped' , 'bClipped' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLocked' , 'bLocked' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'scale' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'scale' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'CustomScale' , 'scale' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'CustomScale' , 'scale' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 64 , )),
    (( 'StyleSheet' , 'pName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 64 , )),
    (( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'UCSPerViewport' , 'UCSSaved' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'Display' , 'bStatus' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'TwistAngle' , 'Angle' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'Length' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'Length' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 64 , )),
    (( 'RemoveHiddenLines' , 'bRemoval' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 64 , )),
    (( 'Target' , 'targetPoint' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'VisualStyle' , 'pVisualStyleIndex' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'ShadePlot' , 'pShadePlotIndex' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'ModelView' , 'View' , ), 32, (32, (), [ (16393, 10, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'ModelView' , 'View' , ), 32, (32, (), [ (9, 1, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'SheetView' , 'View' , ), 33, (33, (), [ (16393, 10, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'SheetView' , 'View' , ), 33, (33, (), [ (9, 1, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId' , 'ObjectID' , ), 34, (34, (), [ (20, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'HasSheetView' , 'bSheetView' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'SyncModelView' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId32' , 'ObjectID' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'LabelBlockId32' , 'ObjectID' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale2' , 'scale' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale2' , 'scale' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'LayerPropertyOverrides' , 'bOverrides' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
]

IAcadPaperSpace_vtables_dispatch_ = 1
IAcadPaperSpace_vtables_ = [
    (( 'AddPViewport' , 'Center' , 'Width' , 'Height' , 'pPViewport' , 
             ), 1, (1, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}')") , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
]

IAcadPlaneSurface_vtables_dispatch_ = 1
IAcadPlaneSurface_vtables_ = [
]

IAcadPlotConfiguration_vtables_dispatch_ = 1
IAcadPlotConfiguration_vtables_ = [
    (( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'ConfigName' , 'pName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'ConfigName' , 'pName' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'CanonicalMediaName' , 'pName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'PaperUnits' , 'pPaperUnits' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportBorders' , 'pViewportBorders' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'ShowPlotStyles' , 'pStyles' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'PlotRotation' , 'pRotation' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'CenterPlot' , 'pCentered' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'PlotHidden' , 'pHidden' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'PlotType' , 'pType' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'PlotType' , 'pType' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'ViewToPlot' , 'pName' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'UseStandardScale' , 'pUseStdScale' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'StandardScale' , 'pStdScale' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomScale' , 'Numerator' , 'Denominator' , ), 17, (17, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomScale' , 'Numerator' , 'Denominator' , ), 18, (18, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'ScaleLineweights' , 'pScale' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithLineweights' , 'pPlot' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'PlotViewportsFirst' , 'pViewportsFirst' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'StyleSheet' , 'pName' , ), 25, (25, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'GetPaperMargins' , 'LowerLeft' , 'UpperRight' , ), 26, (26, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'GetPaperSize' , 'Width' , 'Height' , ), 28, (28, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'PlotOrigin' , 'pOrigin' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'GetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 31, (31, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'SetWindowToPlot' , 'LowerLeft' , 'UpperRight' , ), 32, (32, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'PlotWithPlotStyles' , 'pStyles' , ), 33, (33, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ModelType' , 'pType' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'CopyFrom' , 'pPlotConfig' , ), 35, (35, (), [ (9, 1, None, "IID('{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')") , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'GetCanonicalMediaNames' , 'pNames' , ), 36, (36, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'GetPlotDeviceNames' , 'pNames' , ), 37, (37, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'GetPlotStyleTableNames' , 'pNames' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'RefreshPlotDeviceInfo' , ), 39, (39, (), [ ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'GetLocaleMediaName' , 'Name' , 'pLocalName' , ), 40, (40, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadPlotConfigurations_vtables_dispatch_ = 1
IAcadPlotConfigurations_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'ModelType' , 'pPlotConfig' , ), 2, (2, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{3648ECB5-D174-4212-8D3F-273DB12C4EAC}')") , ], 1 , 1 , 4 , 1 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadPoint_vtables_dispatch_ = 1
IAcadPoint_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadPolyfaceMesh_vtables_dispatch_ = 1
IAcadPolyfaceMesh_vtables_ = [
    (( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Vertices' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfVertices' , 'NumVertices' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfFaces' , 'NumFaces' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Faces' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 64 , )),
]

IAcadPolygonMesh_vtables_dispatch_ = 1
IAcadPolygonMesh_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'MClose' , 'bClose' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'MClose' , 'bClose' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'NClose' , 'bClose' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'NClose' , 'bClose' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'MDensity' , 'density' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'MDensity' , 'density' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'NDensity' , 'density' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'NDensity' , 'density' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'MVertexCount' , 'Count' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'NVertexCount' , 'Count' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAcadPolyline_vtables_dispatch_ = 1
IAcadPolyline_vtables_ = [
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'Coordinates' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'AppendVertex' , 'vertex' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetBulge' , 'Index' , 'bulge' , ), 6, (6, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'SetBulge' , 'Index' , 'bulge' , ), 7, (7, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'GetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 8, (8, (), [ 
             (3, 1, None, None) , (16389, 2, None, None) , (16389, 0, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'SetWidth' , 'Index' , 'StartWidth' , 'EndWidth' , ), 9, (9, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (5, 0, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ConstantWidth' , 'Width' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 11, (11, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'Elevation' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeGeneration' , 'bLinetypeGen' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 17, (17, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
]

IAcadRasterImage_vtables_dispatch_ = 1
IAcadRasterImage_vtables_ = [
    (( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Brightness' , 'Brightness' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ImageWidth' , 'Width' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ImageHeight' , 'Height' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ImageFile' , 'imageFileName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ImageVisibility' , 'fVisible' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'transparency' , 'bTransp' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'transparency' , 'bTransp' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'ClipBoundary' , 'boundry' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pixelHeight' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pixelWidth' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ShowRotation' , 'bShow' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
]

IAcadRay_vtables_dispatch_ = 1
IAcadRay_vtables_ = [
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IAcadRegion_vtables_dispatch_ = 1
IAcadRegion_vtables_ = [
    (( 'Area' , 'Area' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Centroid' , 'Centroid' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'MomentOfInertia' , 'momentInertia' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Perimeter' , 'Perimeter' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalDirections' , 'prinDir' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'PrincipalMoments' , 'prinMoments' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ProductOfInertia' , 'prodInertia' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'RadiiOfGyration' , 'radiiGyration' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Boolean' , 'Operation' , 'Object' , ), 10, (10, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{D9F13162-0CFA-4506-AAAD-D46724407877}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Explode' , 'pArrayObjs' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplication_vtables_dispatch_ = 1
IAcadRegisteredApplication_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadRegisteredApplications_vtables_dispatch_ = 1
IAcadRegisteredApplications_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadRevolvedSurface_vtables_dispatch_ = 1
IAcadRevolvedSurface_vtables_ = [
    (( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'RevolutionAngle' , 'revAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'AxisPosition' , 'AxisPosition' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'AxisDirection' , 'AxisDirection' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
]

IAcadSection_vtables_dispatch_ = 1
IAcadSection_vtables_ = [
    (( 'Name' , 'pbstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pbstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'State' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'State' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'ViewingDirection' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'VerticalDirection' , 'pVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'pVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'LiveSectionEnabled' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorTransparency' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'IndicatorFillColor' , 'pColor' , ), 8, (8, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'pVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Elevation' , 'pVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TopHeight' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'BottomHeight' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'NumVertices' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Vertices' , 'pVal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Vertices' , 'pVal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'AddVertex' , 'nIndex' , 'val' , ), 15, (15, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'RemoveVertex' , 'nIndex' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'HitTest' , 'varPtHit' , 'pHit' , 'pSegmentIndex' , 'pPtOnSegment' , 
             'pSubItem' , ), 17, (17, (), [ (12, 1, None, None) , (16395, 2, None, None) , (16387, 2, None, None) , 
             (16396, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'CreateJog' , 'varPt' , ), 18, (18, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Settings' , 'pUnk' , ), 19, (19, (), [ (16393, 10, None, "IID('{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}')") , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'GenerateSectionGeometry' , 'pEntity' , 'pIntersectionBoundaryObjs' , 'pIntersectionFillObjs' , 'pBackgroudnObjs' , 
             'pForegroudObjs' , 'pCurveTangencyObjs' , ), 20, (20, (), [ (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , (16396, 2, None, None) , 
             (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
]

IAcadSectionManager_vtables_dispatch_ = 1
IAcadSectionManager_vtables_ = [
    (( 'Item' , 'Index' , 'pSection' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GetLiveSection' , 'pSection' , ), 2, (2, (), [ (16393, 10, None, "IID('{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GetUniqueSectionName' , 'pBaseName' , 'ppUniqueName' , ), 3, (3, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IAcadSectionSettings_vtables_dispatch_ = 1
IAcadSectionSettings_vtables_ = [
    (( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'CurrentSectionType' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetSectionTypeSettings' , 'secType' , 'pUnk' , ), 2, (2, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{2F52131D-45D6-4302-993D-ADA413443FD7}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAcadSectionTypeSettings_vtables_dispatch_ = 1
IAcadSectionTypeSettings_vtables_ = [
    (( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'GenerationOptions' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'SourceObjects' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DestinationBlock' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'DestinationFile' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryColor' , 'pColor' , ), 51, (51, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLayer' , 'Layer' , ), 52, (52, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetype' , 'Linetype' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLinetypeScale' , 'ltScale' , ), 54, (54, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryPlotStyleName' , 'plotStyle' , ), 55, (55, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryLineweight' , 'Lineweight' , ), 56, (56, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryDivisionLines' , 'pVal' , ), 57, (57, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillVisible' , 'pVal' , ), 71, (71, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternType' , 'pVal' , ), 72, (72, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchPatternName' , 'pVal' , ), 73, (73, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchAngle' , 'pVal' , ), 74, (74, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchScale' , 'pVal' , ), 75, (75, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillHatchSpacing' , 'pVal' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillColor' , 'pColor' , ), 77, (77, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLayer' , 'Layer' , ), 78, (78, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetype' , 'Linetype' , ), 79, (79, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLinetypeScale' , 'ltScale' , ), 80, (80, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillPlotStyleName' , 'plotStyle' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillLineweight' , 'Lineweight' , ), 82, (82, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionFillFaceTransparency' , 'pVal' , ), 83, (83, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesVisible' , 'pVal' , ), 91, (91, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesHiddenLine' , 'pVal' , ), 92, (92, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesColor' , 'pColor' , ), 93, (93, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLayer' , 'Layer' , ), 94, (94, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetype' , 'Linetype' , ), 95, (95, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLinetypeScale' , 'ltScale' , ), 96, (96, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesPlotStyleName' , 'plotStyle' , ), 97, (97, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'BackgroundLinesLineweight' , 'Lineweight' , ), 98, (98, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesVisible' , 'pVal' , ), 111, (111, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesHiddenLine' , 'pVal' , ), 112, (112, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesColor' , 'pColor' , ), 113, (113, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLayer' , 'Layer' , ), 114, (114, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetype' , 'Linetype' , ), 115, (115, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLinetypeScale' , 'ltScale' , ), 116, (116, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesPlotStyleName' , 'plotStyle' , ), 117, (117, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesLineweight' , 'Lineweight' , ), 118, (118, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesFaceTransparency' , 'pVal' , ), 119, (119, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ForegroundLinesEdgeTransparency' , 'pVal' , ), 120, (120, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesVisible' , 'pVal' , ), 131, (131, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesColor' , 'pColor' , ), 132, (132, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLayer' , 'Layer' , ), 133, (133, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetype' , 'Linetype' , ), 134, (134, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLinetypeScale' , 'ltScale' , ), 135, (135, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesPlotStyleName' , 'plotStyle' , ), 136, (136, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'CurveTangencyLinesLineweight' , 'Lineweight' , ), 137, (137, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
]

IAcadSectionTypeSettings2_vtables_dispatch_ = 1
IAcadSectionTypeSettings2_vtables_ = [
    (( 'IntersectionBoundaryVisible' , 'pVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'IntersectionBoundaryVisible' , 'pVal' , ), 50, (50, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
]

IAcadShape_vtables_dispatch_ = 1
IAcadShape_vtables_ = [
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IAcadSolid_vtables_dispatch_ = 1
IAcadSolid_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

IAcadSortentsTable_vtables_dispatch_ = 1
IAcadSortentsTable_vtables_ = [
    (( 'MoveToBottom' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'MoveToTop' , 'Objects' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'MoveBelow' , 'Objects' , 'Target' , ), 3, (3, (), [ (12, 1, None, None) , 
             (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'MoveAbove' , 'Objects' , 'Target' , ), 4, (4, (), [ (12, 1, None, None) , 
             (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'SwapOrder' , 'Object1' , 'Object2' , ), 5, (5, (), [ (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , 
             (9, 1, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Block' , 'pBlock' , ), 6, (6, (), [ (16393, 10, None, "IID('{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GetFullDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 7, (7, (), [ (16396, 2, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'GetRelativeDrawOrder' , 'Objects' , 'honorSortentsSysvar' , ), 8, (8, (), [ (16396, 3, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'SetRelativeDrawOrder' , 'Objects' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadSpline_vtables_dispatch_ = 1
IAcadSpline_vtables_ = [
    (( 'NumberOfControlPoints' , 'numCtrlPoints' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ControlPoints' , 'controlPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfFitPoints' , 'numFitPoints' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'FitPoints' , 'fitPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Degree' , 'Degree' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Closed' , 'fClose' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'IsPlanar' , 'fPlanar' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'IsRational' , 'fRational' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'IsPeriodic' , 'fPeriodic' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'StartTangent' , 'StartTangent' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'EndTangent' , 'EndTangent' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'FitTolerance' , 'fitTol' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Area' , 'Area' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'SetControlPoint' , 'Index' , 'controlPoint' , ), 14, (14, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'GetControlPoint' , 'Index' , 'controlPoint' , ), 15, (15, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'SetFitPoint' , 'Index' , 'fitPoint' , ), 16, (16, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'GetFitPoint' , 'Index' , 'fitPoint' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'SetWeight' , 'Index' , 'weight' , ), 18, (18, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'GetWeight' , 'Index' , 'weight' , ), 19, (19, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'AddFitPoint' , 'Index' , 'fitPoint' , ), 20, (20, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'DeleteFitPoint' , 'Index' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'ElevateOrder' , 'Order' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 23, (23, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'PurgeFitData' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Reverse' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Knots' , 'KnotValues' , ), 26, (26, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'Weights' , 'WeightValues' , ), 27, (27, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
]

IAcadSubEntSolidEdge_vtables_dispatch_ = 1
IAcadSubEntSolidEdge_vtables_ = [
]

IAcadSubEntSolidFace_vtables_dispatch_ = 1
IAcadSubEntSolidFace_vtables_ = [
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Material' , 'Material' , ), 1399, (1399, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadSubEntSolidVertex_vtables_dispatch_ = 1
IAcadSubEntSolidVertex_vtables_ = [
]

IAcadSubEntity_vtables_dispatch_ = 1
IAcadSubEntity_vtables_ = [
    (( 'OnModified' , ), 1024, (1024, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ObjectName' , 'ObjectName' , ), 1025, (1025, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'color' , 'pColor' , ), 1302, (1302, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'color' , 'pColor' , ), 1302, (1302, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Layer' , 'Layer' , ), 1281, (1281, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Linetype' , 'Linetype' , ), 1282, (1282, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'LinetypeScale' , 'ltScale' , ), 1283, (1283, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'PlotStyleName' , 'plotStyle' , ), 1299, (1299, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Lineweight' , 'Lineweight' , ), 1300, (1300, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Hyperlinks' , 'Hyperlinks' , ), 1301, (1301, (), [ (16393, 10, None, "IID('{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadSummaryInfo_vtables_dispatch_ = 1
IAcadSummaryInfo_vtables_ = [
    (( 'Author' , 'pAuthor' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Author' , 'pAuthor' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pComments' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pComments' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkBase' , 'pHyperlinkBase' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pKeywords' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'LastSavedBy' , 'pLastSavedBy' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'RevisionNumber' , 'pRevisionNumber' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pTitle' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pTitle' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'NumCustomInfo' , 'Index' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomByIndex' , 'Index' , 'pKey' , 'pValue' , ), 10, (10, (), [ 
             (3, 1, None, None) , (16392, 2, None, None) , (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomByKey' , 'key' , 'pValue' , ), 11, (11, (), [ (8, 1, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomByIndex' , 'Index' , 'key' , 'Value' , ), 12, (12, (), [ 
             (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomByKey' , 'key' , 'Value' , ), 13, (13, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AddCustomInfo' , 'key' , 'Value' , ), 14, (14, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'RemoveCustomByIndex' , 'Index' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'RemoveCustomByKey' , 'key' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadSurface_vtables_dispatch_ = 1
IAcadSurface_vtables_ = [
    (( 'SurfaceType' , 'SurfaceType' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'UIsolineDensity' , 'density' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'VIsolineDensity' , 'density' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

IAcadSweptSurface_vtables_dispatch_ = 1
IAcadSweptSurface_vtables_ = [
    (( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'ProfileRotation' , 'profileRotationAngle' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Bank' , 'bBank' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Bank' , 'bBank' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Twist' , 'TwistAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'scale' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'scale' , 'scale' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Length' , 'Length' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
]

IAcadTable_vtables_dispatch_ = 1
IAcadTable_vtables_ = [
    (( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'pRows' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Rows' , 'pRows' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'pColumns' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Columns' , 'pColumns' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'pGap' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'pGap' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'GetColumnWidth' , 'col' , 'pWidth' , ), 10, (10, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'SetColumnWidth' , 'col' , 'Width' , ), 11, (11, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ColumnWidth' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'GetRowHeight' , 'row' , 'pHeight' , ), 13, (13, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'SetRowHeight' , 'row' , 'Height' , ), 14, (14, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'RowHeight' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'GetMinimumColumnWidth' , 'col' , 'pWidth' , ), 26, (26, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'GetMinimumRowHeight' , 'row' , 'pHeight' , ), 27, (27, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'MinimumTableWidth' , 'pWidth' , ), 28, (28, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'MinimumTableHeight' , 'pHeight' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'DirectionVector' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 33, (33, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 34, (34, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 35, (35, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 36, (36, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 37, (37, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 38, (38, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'GetContentColor' , 'rowType' , 'pColor' , ), 39, (39, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'SetContentColor' , 'rowTypes' , 'pColor' , ), 40, (40, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 41, (41, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 42, (42, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 43, (43, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 44, (44, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 45, (45, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 46, (46, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 47, (47, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 48, (48, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 49, (49, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 50, (50, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'TableStyleOverrides' , 'pIntArray' , ), 51, (51, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'ClearTableStyleOverrides' , 'flag' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'GetCellType' , 'row' , 'col' , 'pCellType' , ), 53, (53, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'SetCellType' , 'row' , 'col' , 'CellType' , ), 54, (54, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'GetCellExtents' , 'row' , 'col' , 'bOuterCell' , 'pPts' , 
             ), 55, (55, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'GetAttachmentPoint' , 'row' , 'col' , 'pAttachmentPoint' , ), 56, (56, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'GetCellAlignment' , 'row' , 'col' , 'pCellAlignment' , ), 58, (58, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'SetCellAlignment' , 'row' , 'col' , 'cellAlignment' , ), 59, (59, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'GetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 60, (60, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'SetCellBackgroundColorNone' , 'row' , 'col' , 'bValue' , ), 61, (61, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'GetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 62, (62, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'SetCellBackgroundColor' , 'row' , 'col' , 'pColor' , ), 63, (63, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'GetCellContentColor' , 'row' , 'col' , 'pColor' , ), 64, (64, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'SetCellContentColor' , 'row' , 'col' , 'pColor' , ), 65, (65, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'GetCellStyleOverrides' , 'row' , 'col' , 'pIntArray' , ), 66, (66, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'DeleteCellContent' , 'row' , 'col' , ), 67, (67, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'GetRowType' , 'row' , 'pRowType' , ), 68, (68, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'GetText' , 'row' , 'col' , 'pStr' , ), 69, (69, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'SetText' , 'row' , 'col' , 'pStr' , ), 70, (70, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'GetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 71, (71, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'SetCellTextStyle' , 'row' , 'col' , 'bstrName' , ), 72, (72, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'GetCellTextHeight' , 'row' , 'col' , 'pTextHeight' , ), 73, (73, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'SetCellTextHeight' , 'row' , 'col' , 'TextHeight' , ), 74, (74, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'GetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 75, (75, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'SetTextRotation' , 'row' , 'col' , 'TextRotation' , ), 76, (76, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'GetAutoScale' , 'row' , 'col' , 'bValue' , ), 77, (77, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'SetAutoScale' , 'row' , 'col' , 'bValue' , ), 78, (78, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId' , 'row' , 'col' , 'blkId' , ), 79, (79, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId' , 'row' , 'col' , 'blkId' , 'bAutoFit' , 
             ), 80, (80, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockScale' , 'row' , 'col' , 'blkScale' , ), 81, (81, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockScale' , 'row' , 'col' , 'blkScale' , ), 82, (82, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 83, (83, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockRotation' , 'row' , 'col' , 'blkRotation' , ), 84, (84, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 112, (112, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 113, (113, (), [ (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridLineWeight' , 'row' , 'col' , 'edge' , 'plineweight' , 
             ), 85, (85, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridLineWeight' , 'row' , 'col' , 'edges' , 'Lineweight' , 
             ), 86, (86, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridColor' , 'row' , 'col' , 'edge' , 'pColor' , 
             ), 87, (87, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridColor' , 'row' , 'col' , 'edges' , 'pColor' , 
             ), 88, (88, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
    (( 'GetCellGridVisibility' , 'row' , 'col' , 'edge' , 'bValue' , 
             ), 89, (89, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
    (( 'SetCellGridVisibility' , 'row' , 'col' , 'edges' , 'bValue' , 
             ), 90, (90, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
    (( 'InsertColumns' , 'col' , 'Width' , 'cols' , ), 95, (95, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
    (( 'DeleteColumns' , 'col' , 'cols' , ), 96, (96, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
    (( 'InsertRows' , 'row' , 'Height' , 'Rows' , ), 97, (97, (), [ 
             (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
    (( 'DeleteRows' , 'row' , 'Rows' , ), 98, (98, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
    (( 'MergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
             ), 99, (99, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
    (( 'UnmergeCells' , 'minRow' , 'maxRow' , 'minCol' , 'maxCol' , 
             ), 100, (100, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
    (( 'IsMergedCell' , 'row' , 'col' , 'minRow' , 'maxRow' , 
             'minCol' , 'maxCol' , 'pbValue' , ), 101, (101, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId' , 'row' , 'col' , 'fieldId' , ), 114, (114, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId' , 'row' , 'col' , 'fieldId' , ), 115, (115, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , ], 1 , 1 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
    (( 'GenerateLayout' , ), 102, (102, (), [ ], 1 , 1 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
    (( 'RecomputeTableBlock' , 'bForceUpdate' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
    (( 'HitTest' , 'wpt' , 'wviewVec' , 'resultRowIndex' , 'resultColumnIndex' , 
             'bReturn' , ), 104, (104, (), [ (12, 1, None, None) , (12, 1, None, None) , (16387, 2, None, None) , 
             (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
    (( 'Select' , 'wpt' , 'wvwVec' , 'wvwxVec' , 'wxaper' , 
             'wyaper' , 'allowOutside' , 'resultRowIndex' , 'resultColumnIndex' , 'pPaths' , 
             ), 105, (105, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
             (5, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
    (( 'SelectSubRegion' , 'wpt1' , 'wpt2' , 'wvwVec' , 'wvwxVec' , 
             'seltype' , 'bIncludeCurrentSelection' , 'rowMin' , 'rowMax' , 'colMin' , 
             'colMax' , 'pPaths' , ), 106, (106, (), [ (12, 1, None, None) , (12, 1, None, None) , 
             (12, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , 
             (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
    (( 'ReselectSubRegion' , 'pPaths' , ), 107, (107, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
    (( 'GetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
             ), 108, (108, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
    (( 'SetSubSelection' , 'rowMin' , 'rowMax' , 'colMin' , 'colMax' , 
             ), 109, (109, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
    (( 'ClearSubSelection' , ), 110, (110, (), [ ], 1 , 1 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
    (( 'HasSubSelection' , 'pbValue' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
    (( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
    (( 'RegenerateTableSuppressed' , 'bValue' , ), 116, (116, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 117, (117, (), [ 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType' , 'rowTypes' , 'dataType' , 'unitType' , ), 118, (118, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
    (( 'GetFormat' , 'rowType' , 'pFormat' , ), 119, (119, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
    (( 'SetFormat' , 'rowTypes' , 'pFormat' , ), 120, (120, (), [ (3, 1, None, None) , 
             (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
    (( 'FormatValue' , 'row' , 'col' , 'nOption' , 'pVal' , 
             ), 121, (121, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (16392, 0, None, None) , ], 1 , 1 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
    (( 'GetCellDataType' , 'row' , 'col' , 'pDataType' , 'pUnitType' , 
             ), 1946, (1946, (), [ (3, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
    (( 'SetCellDataType' , 'row' , 'col' , 'dataType' , 'unitType' , 
             ), 1947, (1947, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 0, None, None) , (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
    (( 'GetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1948, (1948, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
    (( 'SetCellFormat' , 'row' , 'col' , 'pFormat' , ), 1949, (1949, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
    (( 'GetCellValue' , 'row' , 'col' , 'pVal' , ), 1950, (1950, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
    (( 'SetCellValue' , 'row' , 'col' , 'val' , ), 1951, (1951, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (12, 0, None, None) , ], 1 , 1 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
    (( 'SetCellValueFromText' , 'row' , 'col' , 'val' , 'nOption' , 
             ), 2208, (2208, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
    (( 'ResetCellValue' , 'row' , 'col' , ), 2209, (2209, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId32' , 'row' , 'col' , 'blkId' , ), 122, (122, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId32' , 'row' , 'col' , 'blkId' , 'bAutoFit' , 
             ), 123, (123, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue32' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 124, (124, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue32' , 'row' , 'col' , 'attdefId' , 'bstrValue' , 
             ), 125, (125, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId32' , 'row' , 'col' , 'fieldId' , ), 126, (126, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId32' , 'row' , 'col' , 'fieldId' , ), 127, (127, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
    (( 'IsEmpty' , 'nRow' , 'nCol' , 'bValue' , ), 2210, (2210, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
    (( 'CreateContent' , 'nRow' , 'nCol' , 'nIndex' , 'pInt' , 
             ), 2213, (2213, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
    (( 'MoveContent' , 'nRow' , 'nCol' , 'nFromIndex' , 'nToIndex' , 
             ), 2214, (2214, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
    (( 'DeleteContent' , 'nRow' , 'nCol' , ), 2215, (2215, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
    (( 'GetValue' , 'nRow' , 'nCol' , 'nContent' , 'pAcValue' , 
             ), 2217, (2217, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
    (( 'SetValue' , 'nRow' , 'nCol' , 'nContent' , 'acValue' , 
             ), 2224, (2224, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
    (( 'SetValueFromText' , 'nRow' , 'nCol' , 'nContent' , 'szText' , 
             'nOption' , ), 2225, (2225, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (8, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
    (( 'GetDataFormat' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
             ), 2227, (2227, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
    (( 'SetDataFormat' , 'nRow' , 'nCol' , 'nContent' , 'szFormat' , 
             ), 2228, (2228, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
    (( 'GetTextString' , 'nRow' , 'nCol' , 'nContent' , 'pTextString' , 
             ), 2229, (2229, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
    (( 'SetTextString' , 'nRow' , 'nCol' , 'nContent' , 'Text' , 
             ), 2231, (2231, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId2' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 2232, (2232, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId2' , 'nRow' , 'nCol' , 'nContent' , 'acDbObjectId' , 
             'nflag' , ), 2233, (2233, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (20, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId2' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 2241, (2241, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'autoFit' , ), 2242, (2242, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (20, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2243, (2243, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (20, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue2' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2244, (2244, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (20, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
    (( 'GetCustomData' , 'nRow' , 'nCol' , 'szKey' , 'pData' , 
             ), 2247, (2247, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
    (( 'SetCustomData' , 'nRow' , 'nCol' , 'szKey' , 'data' , 
             ), 2248, (2248, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
    (( 'GetCellStyle' , 'nRow' , 'nCol' , 'pCellStyle' , ), 2249, (2249, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
    (( 'SetCellStyle' , 'nRow' , 'nCol' , 'szCellStyle' , ), 2256, (2256, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
    (( 'GetContentColor2' , 'nRow' , 'nCol' , 'nContent' , 'pColor' , 
             ), 2260, (2260, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
    (( 'SetContentColor2' , 'nRow' , 'nCol' , 'nContent' , 'pColor' , 
             ), 2261, (2261, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType2' , 'nRow' , 'nCol' , 'nContent' , 'pDataType' , 
             'pUnitType' , ), 2262, (2262, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType2' , 'nRow' , 'nCol' , 'nContent' , 'dataType' , 
             'unitType' , ), 2263, (2263, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyle2' , 'nRow' , 'nCol' , 'nContent' , 'pbstrStyleName' , 
             ), 2264, (2264, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1736 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyle2' , 'nRow' , 'nCol' , 'nContent' , 'bstrStyleName' , 
             ), 2265, (2265, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight2' , 'nRow' , 'nCol' , 'nContent' , 'pHeight' , 
             ), 2272, (2272, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight2' , 'nRow' , 'nCol' , 'nContent' , 'Height' , 
             ), 2273, (2273, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
    (( 'GetRotation' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
             ), 36322, (36322, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
    (( 'SetRotation' , 'nRow' , 'nCol' , 'nContent' , 'Value' , 
             ), 2275, (2275, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
    (( 'GetAutoScale2' , 'nRow' , 'nCol' , 'nContent' , 'bAutoScale' , 
             ), 2276, (2276, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
    (( 'SetAutoScale2' , 'nRow' , 'nCol' , 'nContent' , 'bAutoFit' , 
             ), 36325, (36325, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
    (( 'GetScale' , 'nRow' , 'nCol' , 'nContent' , 'pScale' , 
             ), 2278, (2278, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
    (( 'SetScale' , 'nRow' , 'nCol' , 'nContent' , 'scale' , 
             ), 2279, (2279, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
    (( 'RemoveAllOverrides' , 'nRow' , 'nCol' , ), 2280, (2280, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight2' , 'nRow' , 'nCol' , 'nGridLineType' , 'plineweight' , 
             ), 2281, (2281, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight2' , 'nRow' , 'nCol' , 'nGridLineType' , 'Lineweight' , 
             ), 2288, (2288, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLinetype' , 'nRow' , 'nCol' , 'nGridLineType' , 'pacDbObjId' , 
             ), 2289, (2289, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLinetype' , 'nRow' , 'nCol' , 'nGridLineType' , 'idLinetype' , 
             ), 2290, (2290, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (20, 1, None, None) , ], 1 , 1 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor2' , 'nRow' , 'nCol' , 'nGridLineType' , 'pColor' , 
             ), 2291, (2291, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor2' , 'nRow' , 'nCol' , 'nGridLineType' , 'pColor' , 
             ), 2292, (2292, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility2' , 'nRow' , 'nCol' , 'nGridLineType' , 'bVisible' , 
             ), 2293, (2293, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility2' , 'nRow' , 'nCol' , 'nGridLineType' , 'bVisible' , 
             ), 2294, (2294, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
    (( 'GetGridDoubleLineSpacing' , 'nRow' , 'nCol' , 'nGridLineType' , 'pValue' , 
             ), 2295, (2295, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
    (( 'SetGridDoubleLineSpacing' , 'nRow' , 'nCol' , 'nGridLineType' , 'fSpacing' , 
             ), 2296, (2296, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
    (( 'EnableBreak' , ), 2308, (2308, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
    (( 'GetBreakHeight' , 'nIndex' , 'pHeight' , ), 2309, (2309, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
    (( 'SetBreakHeight' , 'nIndex' , 'Height' , ), 2310, (2310, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
    (( 'GetContentType' , 'nRow' , 'nCol' , 'pType' , ), 2311, (2311, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
    (( 'GetMargin' , 'nRow' , 'nCol' , 'nMargin' , 'pValue' , 
             ), 2324, (2324, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
    (( 'SetMargin' , 'nRow' , 'nCol' , 'nMargins' , 'fMargin' , 
             ), 2326, (2326, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
    (( 'GetContentLayout' , 'row' , 'col' , 'pLayout' , ), 2327, (2327, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
    (( 'SetContentLayout' , 'row' , 'col' , 'nLayout' , ), 2328, (2328, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
    (( 'GetOverride' , 'nRow' , 'nCol' , 'nContent' , 'pValue' , 
             ), 2338, (2338, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
    (( 'SetOverride' , 'nRow' , 'nCol' , 'nContent' , 'nProp' , 
             ), 2339, (2339, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineStyle' , 'nRow' , 'nCol' , 'nGridLineType' , 'pStyle' , 
             ), 2340, (2340, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineStyle' , 'nRow' , 'nCol' , 'nGridLineTypes' , 'nLineStyle' , 
             ), 2341, (2341, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
    (( 'InsertRowsAndInherit' , 'nIndex' , 'nInheritFrom' , 'nNumRows' , ), 2345, (2345, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
    (( 'InsertColumnsAndInherit' , 'col' , 'nInheritFrom' , 'nNumCols' , ), 2353, (2353, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
    (( 'GetHasFormula' , 'nRow' , 'nCol' , 'nContent' , 'bValue' , 
             ), 2354, (2354, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2016 , (3, 0, None, None) , 0 , )),
    (( 'GetFormula' , 'nRow' , 'nCol' , 'nContent' , 'pszFormula' , 
             ), 2355, (2355, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 2024 , (3, 0, None, None) , 0 , )),
    (( 'SetFormula' , 'nRow' , 'nCol' , 'nContent' , 'pszFormula' , 
             ), 2356, (2356, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2032 , (3, 0, None, None) , 0 , )),
    (( 'IsContentEditable' , 'nRow' , 'nCol' , 'bValue' , ), 2358, (2358, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2040 , (3, 0, None, None) , 0 , )),
    (( 'IsFormatEditable' , 'nRow' , 'nCol' , 'bValue' , ), 2359, (2359, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2048 , (3, 0, None, None) , 0 , )),
    (( 'GetCellState' , 'nRow' , 'nCol' , 'pCellState' , ), 2360, (2360, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2056 , (3, 0, None, None) , 0 , )),
    (( 'SetCellState' , 'nRow' , 'nCol' , 'nLock' , ), 2361, (2361, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2064 , (3, 0, None, None) , 0 , )),
    (( 'EnableMergeAll' , 'nRow' , 'nCol' , 'bEnable' , ), 2368, (2368, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 2072 , (3, 0, None, None) , 0 , )),
    (( 'IsMergeAllEnabled' , 'nRow' , 'nCol' , 'bValue' , ), 2369, (2369, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2080 , (3, 0, None, None) , 0 , )),
    (( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
    (( 'BreaksEnabled' , 'bEnabled' , ), 65520, (65520, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2096 , (3, 0, None, None) , 0 , )),
    (( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2104 , (3, 0, None, None) , 0 , )),
    (( 'RepeatTopLabels' , 'bEnabled' , ), 65521, (65521, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2112 , (3, 0, None, None) , 0 , )),
    (( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2120 , (3, 0, None, None) , 0 , )),
    (( 'RepeatBottomLabels' , 'bEnabled' , ), 65522, (65522, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2128 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2136 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakFlowDirection' , 'pDir' , ), 65523, (65523, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2144 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2152 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualPositions' , 'bEnabled' , ), 65524, (65524, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2160 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2168 , (3, 0, None, None) , 0 , )),
    (( 'AllowManualHeights' , 'bEnabled' , ), 65525, (65525, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2176 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2184 , (3, 0, None, None) , 0 , )),
    (( 'TableBreakHeight' , 'pHeight' , ), 65526, (65526, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2192 , (3, 0, None, None) , 0 , )),
    (( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2200 , (3, 0, None, None) , 0 , )),
    (( 'BreakSpacing' , 'pSpacing' , ), 65527, (65527, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2208 , (3, 0, None, None) , 0 , )),
    (( 'GetColumnName' , 'nIndex' , 'Name' , ), 65528, (65528, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 2216 , (3, 0, None, None) , 0 , )),
    (( 'SetColumnName' , 'nIndex' , 'Name' , ), 65529, (65529, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2224 , (3, 0, None, None) , 0 , )),
    (( 'SetToolTip' , 'nRow' , 'nCol' , 'tip' , ), 65530, (65530, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2232 , (3, 0, None, None) , 0 , )),
    (( 'GetFieldId232' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 1610875101, (1610875101, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2240 , (3, 0, None, None) , 0 , )),
    (( 'SetFieldId232' , 'nRow' , 'nCol' , 'nContent' , 'acDbObjectId' , 
             'nflag' , ), 2371, (2371, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2248 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockTableRecordId232' , 'nRow' , 'nCol' , 'nContent' , 'pAcDbObjectId' , 
             ), 2372, (2372, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2256 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockTableRecordId232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'autoFit' , ), 2373, (2373, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 2264 , (3, 0, None, None) , 0 , )),
    (( 'GetBlockAttributeValue232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2374, (2374, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 2272 , (3, 0, None, None) , 0 , )),
    (( 'SetBlockAttributeValue232' , 'nRow' , 'nCol' , 'nContent' , 'blkId' , 
             'Value' , ), 2375, (2375, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 2280 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLinetype32' , 'nRow' , 'nCol' , 'nGridLineType' , 'pacDbObjId' , 
             ), 2376, (2376, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2288 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLinetype32' , 'nRow' , 'nCol' , 'nGridLineType' , 'idLinetype' , 
             ), 2377, (2377, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2296 , (3, 0, None, None) , 0 , )),
]

IAcadTableStyle_vtables_dispatch_ = 1
IAcadTableStyle_vtables_ = [
    (( 'Name' , 'bstrValue' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrValue' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstr' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstr' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'BitFlags' , 'bitFlag' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'FlowDirection' , 'pFlow' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'HorzCellMargin' , 'dHorzCellMargin' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'VertCellMargin' , 'dVertCellMargin' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'TitleSuppressed' , 'bValue' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'HeaderSuppressed' , 'bValue' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyle' , 'rowType' , 'bstrName' , ), 9, (9, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyle' , 'rowTypes' , 'bstrName' , ), 10, (10, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight' , 'rowType' , 'pTextHeight' , ), 11, (11, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight' , 'rowTypes' , 'TextHeight' , ), 12, (12, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'GetAlignment' , 'rowType' , 'pCellAlignment' , ), 13, (13, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'SetAlignment' , 'rowTypes' , 'cellAlignment' , ), 14, (14, (), [ (3, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'GetColor' , 'rowType' , 'pColor' , ), 15, (15, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'SetColor' , 'rowTypes' , 'pColor' , ), 16, (16, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColor' , 'rowType' , 'pColor' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColor' , 'rowTypes' , 'pColor' , ), 18, (18, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColorNone' , 'rowType' , 'bValue' , ), 19, (19, (), [ (3, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColorNone' , 'rowTypes' , 'bValue' , ), 20, (20, (), [ (3, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight' , 'gridLineType' , 'rowType' , 'Lineweight' , ), 21, (21, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight' , 'gridLineTypes' , 'rowTypes' , 'Lineweight' , ), 22, (22, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor' , 'gridLineType' , 'rowType' , 'pColor' , ), 23, (23, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor' , 'gridLineTypes' , 'rowTypes' , 'pColor' , ), 24, (24, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility' , 'gridLineType' , 'rowType' , 'bValue' , ), 25, (25, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility' , 'gridLineTypes' , 'rowTypes' , 'bValue' , ), 26, (26, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType' , 'rowType' , 'pDataType' , 'pUnitType' , ), 27, (27, (), [ 
             (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType' , 'rowTypes' , 'nDataType' , 'nUnitType' , ), 28, (28, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'GetFormat' , 'rowType' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'SetFormat' , 'rowTypes' , 'val' , ), 30, (30, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'CreateCellStyle' , 'bstrCellStyle' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'CreateCellStyleFromStyle' , 'bstrCellStyle' , 'bstrSourceCellStyle' , ), 32, (32, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'RenameCellStyle' , 'bstrOldName' , 'bstrNewName' , ), 33, (33, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'DeleteCellStyle' , 'bstrCellStyle' , ), 34, (34, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'GetUniqueCellStyleName' , 'pszBaseName' , 'pbstrUniqueName' , ), 35, (35, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'GetIsCellStyleInUse' , 'pszCellStyle' , 'pVal' , ), 36, (36, (), [ (8, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'NumCellStyles' , 'NumCellStyles' , ), 37, (37, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'GetCellStyles' , 'cellStylesArray' , ), 38, (38, (), [ (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyleId' , 'bstrCellStyle' , 'pVal' , ), 39, (39, (), [ (8, 1, None, None) , 
             (16404, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyleId' , 'bstrCellStyle' , 'val' , ), 40, (40, (), [ (8, 1, None, None) , 
             (20, 1, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'GetTextHeight2' , 'bstrCellStyle' , 'pHeight' , ), 41, (41, (), [ (8, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'SetTextHeight2' , 'bstrCellStyle' , 'Height' , ), 42, (42, (), [ (8, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'GetAlignment2' , 'bstrCellStyle' , 'pCellAlignment' , ), 43, (43, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'SetAlignment2' , 'bstrCellStyle' , 'cellAlignment' , ), 44, (44, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'GetColor2' , 'bstrCellStyle' , 'color' , ), 45, (45, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'SetColor2' , 'bstrCellStyle' , 'color' , ), 46, (46, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'GetBackgroundColor2' , 'bstrCellStyle' , 'color' , ), 47, (47, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'SetBackgroundColor2' , 'bstrCellStyle' , 'color' , ), 48, (48, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'GetDataType2' , 'bstrCellStyle' , 'pDataType' , 'pUnitType' , ), 51, (51, (), [ 
             (8, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'SetDataType2' , 'bstrCellStyle' , 'nDataType' , 'nUnitType' , ), 52, (52, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'GetFormat2' , 'bstrCellStyle' , 'pbstrFormat' , ), 53, (53, (), [ (8, 1, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'SetFormat2' , 'bstrCellStyle' , 'bstrFormat' , ), 54, (54, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'GetCellClass' , 'bstrCellStyle' , 'cellClass' , ), 1610809404, (1610809404, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'SetCellClass' , 'bstrCellStyle' , 'cellClass' , ), 1610809405, (1610809405, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'GetRotation' , 'bstrCellStyle' , 'Rotation' , ), 1610809406, (1610809406, (), [ (8, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'SetRotation' , 'bstrCellStyle' , 'Rotation' , ), 1610809407, (1610809407, (), [ (8, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'GetIsMergeAllEnabled' , 'bstrCellStyle' , 'bEnable' , ), 1610809408, (1610809408, (), [ (8, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'EnableMergeAll' , 'bstrCellStyle' , 'bEnable' , ), 1610809409, (1610809409, (), [ (8, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'GetGridLineWeight2' , 'bstrCellStyle' , 'gridLineType' , 'Lineweight' , ), 55, (55, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'SetGridLineWeight2' , 'bstrCellStyle' , 'gridLineTypes' , 'Lineweight' , ), 56, (56, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'GetGridColor2' , 'bstrCellStyle' , 'gridLineType' , 'pColor' , ), 57, (57, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'SetGridColor2' , 'bstrCellStyle' , 'gridLineTypes' , 'pColor' , ), 58, (58, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'GetGridVisibility2' , 'bstrCellStyle' , 'gridLineType' , 'bValue' , ), 59, (59, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'SetGridVisibility2' , 'bstrCellStyle' , 'gridLineTypes' , 'bValue' , ), 60, (60, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId' , 'pVal' , ), 61, (61, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId' , 'pVal' , ), 61, (61, (), [ (20, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'SetTemplateId' , 'val' , 'option' , ), 65, (65, (), [ (20, 1, None, None) , 
             (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'GetTextStyleId32' , 'bstrCellStyle' , 'pVal' , ), 62, (62, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'SetTextStyleId32' , 'bstrCellStyle' , 'val' , ), 63, (63, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId32' , 'pVal' , ), 64, (64, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'TemplateId32' , 'pVal' , ), 64, (64, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'SetTemplateId32' , 'val' , 'option' , ), 66, (66, (), [ (3, 1, None, None) , 
             (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
]

IAcadText_vtables_dispatch_ = 1
IAcadText_vtables_ = [
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Alignment' , 'align' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 64 , )),
    (( 'HorizontalAlignment' , 'horizAlign' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 64 , )),
    (( 'VerticalAlignment' , 'vertiAlign' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 64 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'scalFactor' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'TextAlignmentPoint' , 'alignPoint' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'UpsideDown' , 'UpsideDown' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'Backward' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'Backward' , 'Backward' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'FieldCode' , 'bstrText' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyle_vtables_dispatch_ = 1
IAcadTextStyle_vtables_ = [
    (( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'BigFontFile' , 'fontFile' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'fontFile' , 'fontFile' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'LastHeight' , 'Height' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'LastHeight' , 'Height' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'ObliqueAngle' , 'obliAngle' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'TextGenerationFlag' , 'textGenFlag' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'GetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
             'PitchAndFamily' , ), 9, (9, (), [ (16392, 2, None, None) , (16395, 2, None, None) , (16395, 2, None, None) , 
             (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SetFont' , 'TypeFace' , 'Bold' , 'Italic' , 'Charset' , 
             'PitchAndFamily' , ), 16, (16, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IAcadTextStyles_vtables_dispatch_ = 1
IAcadTextStyles_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pTextStyle' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadTolerance_vtables_dispatch_ = 1
IAcadTolerance_vtables_ = [
    (( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 80, (80, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'InsertionPoint' , 'insPoint' , ), 81, (81, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 82, (82, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 82, (82, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'StyleName' , 'bstrName' , ), 1542, (1542, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'TextColor' , 'color' , ), 1546, (1546, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'TextString' , 'bstrText' , ), 1541, (1541, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'TextStyle' , 'style' , ), 1562, (1562, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'TextHeight' , 'Height' , ), 1563, (1563, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'factor' , ), 1553, (1553, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'DimensionLineColor' , 'Type' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
]

IAcadTrace_vtables_dispatch_ = 1
IAcadTrace_vtables_ = [
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Coordinates' , 'corners' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Normal' , 'Normal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Thickness' , 'Thickness' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Coordinate' , 'Index' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

IAcadUCS_vtables_dispatch_ = 1
IAcadUCS_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Origin' , 'Origin' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'XVector' , 'XVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'XVector' , 'XVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'YVector' , 'YVector' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'YVector' , 'YVector' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'GetUCSMatrix' , 'transMatrix' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAcadUCSs_vtables_dispatch_ = 1
IAcadUCSs_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Origin' , 'XAxisPoint' , 'YAxisPoint' , 'Name' , 
             'pUCS' , ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
             (8, 1, None, None) , (16393, 10, None, "IID('{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadUnderlay_vtables_dispatch_ = 1
IAcadUnderlay_vtables_ = [
    (( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Contrast' , 'Contrast' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Fade' , 'Fade' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pos' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pos' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Rotation' , 'rotAngle' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayName' , 'Name' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'ItemName' , 'sheetName' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'Monochrome' , 'bMono' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'AdjustForBackground' , 'Value' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'ClipBoundary' , 'boundry' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'ScaleFactor' , 'ScaleFactor' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'File' , 'Name' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'File' , 'Name' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayVisibility' , 'fVisible' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'ClippingEnabled' , 'kClip' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'UnderlayLayerOverrideApplied' , 'bOverride' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
]

IAcadView_vtables_dispatch_ = 1
IAcadView_vtables_ = [
    (( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'CategoryName' , 'category' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'CategoryName' , 'category' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId' , 'ObjectID' , ), 8, (8, (), [ (20, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'LayerState' , 'LayerState' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'HasVpAssociation' , 'bVpAssoc' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId32' , 'ObjectID' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'LayoutId32' , 'ObjectID' , ), 11, (11, (), [ (3, 0, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IAcadViewport_vtables_dispatch_ = 1
IAcadViewport_vtables_ = [
    (( 'Center' , 'Center' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Center' , 'Center' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'targetPoint' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Direction' , 'dirVec' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'GridOn' , 'bGridOn' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'OrthoOn' , 'bOrthoOn' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'SnapBasePoint' , 'lowLeft' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'SnapOn' , 'bSnapOn' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'SnapRotationAngle' , 'Angle' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconOn' , 'bIconOn' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'UCSIconAtOrigin' , 'bIconAtOrigin' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'LowerLeftCorner' , 'lowLeft' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'UpperRightCorner' , 'UpperRight' , ), 16, (16, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'Split' , 'NumWins' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'GetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 18, (18, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'SetGridSpacing' , 'XSpacing' , 'YSpacing' , ), 19, (19, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'GetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 20, (20, (), [ (16389, 2, None, None) , 
             (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'SetSnapSpacing' , 'XSpacing' , 'YSpacing' , ), 21, (21, (), [ (5, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'SetView' , 'View' , ), 22, (22, (), [ (9, 1, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'ArcSmoothness' , 'arcSmooth' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

IAcadViewports_vtables_dispatch_ = 1
IAcadViewports_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{A9B1F951-1AA7-4C23-8D57-AA199803D381}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{A9B1F951-1AA7-4C23-8D57-AA199803D381}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'DeleteConfiguration' , 'Name' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IAcadViews_vtables_dispatch_ = 1
IAcadViews_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pRegApp' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{13AC5968-504B-4C8D-BED6-208B3A562D90}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IAcadWipeout_vtables_dispatch_ = 1
IAcadWipeout_vtables_ = [
]

IAcadXRecord_vtables_dispatch_ = 1
IAcadXRecord_vtables_ = [
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 2, (2, (), [ (16396, 2, None, None) , 
             (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'SetXRecordData' , 'XRecordDataType' , 'XRecordDataValue' , ), 3, (3, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'TranslateIDs' , 'xlateIds' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAcadXline_vtables_dispatch_ = 1
IAcadXline_vtables_ = [
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'BasePoint' , 'BasePoint' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'SecondPoint' , 'SecondPoint' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'DirectionVector' , 'dirVector' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Offset' , 'Distance' , 'pOffsetCurves' , ), 4, (4, (), [ (5, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
]

IOPMPropertyExpander_vtables_dispatch_ = 0
IOPMPropertyExpander_vtables_ = [
    (( 'GetElementValue' , 'dispID' , 'dwCookie' , 'pVarOut' , ), 1610678272, (1610678272, (), [ 
             (3, 1, None, None) , (19, 1, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
    (( 'SetElementValue' , 'dispID' , 'dwCookie' , 'VarIn' , ), 1610678273, (1610678273, (), [ 
             (3, 1, None, None) , (19, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
    (( 'GetElementStrings' , 'dispID' , 'pCaStringsOut' , 'pCaCookiesOut' , ), 1610678274, (1610678274, (), [ 
             (3, 1, None, None) , (36, 2, None, None) , (36, 2, None, None) , ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
    (( 'GetElementGrouping' , 'dispID' , 'groupingNumber' , ), 1610678275, (1610678275, (), [ (3, 1, None, None) , 
             (16386, 2, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
    (( 'GetGroupCount' , 'dispID' , 'nGroupCnt' , ), 1610678276, (1610678276, (), [ (3, 1, None, None) , 
             (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

IOPMPropertyExtension_vtables_dispatch_ = 0
IOPMPropertyExtension_vtables_ = [
    (( 'GetDisplayName' , 'dispID' , 'propName' , ), 1610678272, (1610678272, (), [ (3, 1, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
    (( 'Editable' , 'dispID' , 'bEditable' , ), 1610678273, (1610678273, (), [ (3, 1, None, None) , 
             (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
    (( 'ShowProperty' , 'dispID' , 'pShow' , ), 1610678274, (1610678274, (), [ (3, 1, None, None) , 
             (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
]

IOdaBlock_vtables_dispatch_ = 1
IOdaBlock_vtables_ = [
    (( 'GetReferences' , 'pObjs' , ), 1793, (1793, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'isFromOverlayReference' , 'bResult' , ), 1794, (1794, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'isResolved' , 'bResult' , ), 1795, (1795, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'isDependent' , 'bResult' , ), 1796, (1796, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'isUnloaded' , 'bResult' , ), 1797, (1797, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'setOverlaid' , 'bOverlaid' , ), 1798, (1798, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
]

IOdaCamera_vtables_dispatch_ = 1
IOdaCamera_vtables_ = [
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'Location' , 'pVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Location' , 'pVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'pVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'LensLength' , 'pVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'FieldOfView' , 'pVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'FieldOfView' , 'pVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'FrameHeight' , 'pVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'FrameHeight' , 'pVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'FrameWidth' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'FrameWidth' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'RollAngle' , 'pVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'RollAngle' , 'pVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'IsPlotable' , 'pVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'IsPlotable' , 'pVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'FrontPlane' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'FrontPlane' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'BackPlane' , 'pVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'BackPlane' , 'pVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Clipping' , 'pVal' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Clipping' , 'pVal' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
]

IOdaLight_vtables_dispatch_ = 1
IOdaLight_vtables_ = [
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'LightType' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'LightType' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'Status' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'Status' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Shadows' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Shadows' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'HotSpot' , 'pVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'HotSpot' , 'pVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'FallOff' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'FallOff' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Intensity' , 'pVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'Intensity' , 'pVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
    (( 'LightColor' , 'ppColor' , ), 9, (9, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'LightColor' , 'ppColor' , ), 9, (9, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'PlotGlyph' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'PlotGlyph' , 'pVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pVal' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Position' , 'pVal' , ), 11, (11, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Target' , 'pVal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'AttenuationType' , 'pVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'AttenuationType' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
    (( 'UseLimits' , 'pVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'UseLimits' , 'pVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'StartLimit' , 'pVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'StartLimit' , 'pVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'EndLimit' , 'pVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'EndLimit' , 'pVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ShadowType' , 'pVal' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ShadowType' , 'pVal' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'MapSize' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'MapSize' , 'pVal' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'Softness' , 'pVal' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Softness' , 'pVal' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'FromVector' , 'pVal' , ), 20, (20, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'FromVector' , 'pVal' , ), 20, (20, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'ToVector' , 'pVal' , ), 21, (21, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'ToVector' , 'pVal' , ), 21, (21, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorX' , 'pVal' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorX' , 'pVal' , ), 22, (22, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorY' , 'pVal' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorY' , 'pVal' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorZ' , 'pVal' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'SourceVectorZ' , 'pVal' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'LampIntensity' , 'pVal' , ), 25, (25, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
    (( 'LampIntensity' , 'pVal' , ), 25, (25, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
    (( 'ResultIntensity' , 'pVal' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
    (( 'ResultIntensity' , 'pVal' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
    (( 'LampColor' , 'pVal' , ), 27, (27, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
    (( 'LampColor' , 'pVal' , ), 27, (27, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
    (( 'ResultColor' , 'ppColor' , ), 28, (28, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
    (( 'ResultColor' , 'ppColor' , ), 28, (28, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
    (( 'WebFile' , 'pVal' , ), 29, (29, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
    (( 'WebFile' , 'pVal' , ), 29, (29, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
    (( 'WebPreview' , 'pVal' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
    (( 'WebPreview' , 'pVal' , ), 30, (30, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateX' , 'pVal' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateX' , 'pVal' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateY' , 'pVal' , ), 32, (32, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateY' , 'pVal' , ), 32, (32, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateZ' , 'pVal' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
    (( 'WebRotateZ' , 'pVal' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
    (( 'HasTarget' , 'pVal' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
    (( 'HasTarget' , 'pVal' , ), 34, (34, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
    (( 'ShadowSamples' , 'pVal' , ), 35, (35, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
    (( 'ShadowSamples' , 'pVal' , ), 35, (35, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
    (( 'ShadowVisible' , 'pVal' , ), 36, (36, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
    (( 'ShadowVisible' , 'pVal' , ), 36, (36, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
    (( 'ShadowShape' , 'pVal' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
    (( 'ShadowShape' , 'pVal' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
    (( 'ShadowRadius' , 'pVal' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
    (( 'ShadowRadius' , 'pVal' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
    (( 'IlluminanceDistance' , 'pVal' , ), 39, (39, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
    (( 'IlluminanceDistance' , 'pVal' , ), 39, (39, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
    (( 'ShadowLength' , 'pVal' , ), 40, (40, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
    (( 'ShadowLength' , 'pVal' , ), 40, (40, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
    (( 'ShadowWidth' , 'pVal' , ), 41, (41, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
    (( 'ShadowWidth' , 'pVal' , ), 41, (41, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
    (( 'GlyphDisplay' , 'pVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
    (( 'GlyphDisplay' , 'pVal' , ), 42, (42, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
]

IOdaLineType_vtables_dispatch_ = 1
IOdaLineType_vtables_ = [
    (( 'NumDashes' , 'Count' , ), 1793, (1793, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'NumDashes' , 'Count' , ), 1793, (1793, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'TextAt' , 'Index' , 'bstrText' , ), 1794, (1794, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'TextAt' , 'Index' , 'bstrText' , ), 1794, (1794, (), [ (3, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'PatternLength' , 'pVal' , ), 1795, (1795, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PatternLength' , 'pVal' , ), 1795, (1795, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'DashLengthAt' , 'Index' , 'pVal' , ), 1796, (1796, (), [ (3, 0, None, None) , 
             (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'DashLengthAt' , 'Index' , 'pVal' , ), 1796, (1796, (), [ (3, 0, None, None) , 
             (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'ShapeScaleAt' , 'Index' , 'pVal' , ), 1797, (1797, (), [ (3, 0, None, None) , 
             (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'ShapeScaleAt' , 'Index' , 'pVal' , ), 1797, (1797, (), [ (3, 0, None, None) , 
             (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ShapeNumberAt' , 'Index' , 'pVal' , ), 1798, (1798, (), [ (3, 0, None, None) , 
             (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'ShapeNumberAt' , 'Index' , 'pVal' , ), 1798, (1798, (), [ (3, 0, None, None) , 
             (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'ShapeRotationAt' , 'Index' , 'pVal' , ), 1799, (1799, (), [ (3, 0, None, None) , 
             (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'ShapeRotationAt' , 'Index' , 'pVal' , ), 1799, (1799, (), [ (3, 0, None, None) , 
             (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'ShapeOffsetAt' , 'Index' , 'pVal' , ), 1800, (1800, (), [ (3, 0, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'ShapeOffsetAt' , 'Index' , 'pVal' , ), 1800, (1800, (), [ (3, 0, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'ShapeStyleAt' , 'Index' , 'pStyle' , ), 1801, (1801, (), [ (3, 0, None, None) , 
             (16393, 10, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'ShapeStyleAt' , 'Index' , 'pStyle' , ), 1801, (1801, (), [ (3, 0, None, None) , 
             (9, 1, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IOdaMLineStyle_vtables_dispatch_ = 1
IOdaMLineStyle_vtables_ = [
    (( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'bstrDes' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'pVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'StartAngle' , 'pVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'pVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'EndAngle' , 'pVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'FillColor' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'FillColor' , 'pVal' , ), 5, (5, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'ElementsCount' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Filled' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Filled' , 'pVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'ShowMiters' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ShowMiters' , 'pVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'StartSquareCap' , 'pVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'StartSquareCap' , 'pVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'StartRoundCap' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'StartRoundCap' , 'pVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'StartInnerArcs' , 'pVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'StartInnerArcs' , 'pVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'EndSquareCap' , 'pVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'EndSquareCap' , 'pVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'EndRoundCap' , 'pVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'EndRoundCap' , 'pVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'EndInnerArcs' , 'pVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'EndInnerArcs' , 'pVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'AddElement' , 'Offset' , 'color' , 'pLinetype' , ), 15, (15, (), [ 
             (5, 1, None, None) , (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , (9, 1, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'OffsetAt' , 'Index' , 'Value' , ), 16, (16, (), [ (3, 1, None, None) , 
             (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'OffsetAt' , 'Index' , 'Value' , ), 16, (16, (), [ (3, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'ColorAt' , 'Index' , 'color' , ), 17, (17, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'ColorAt' , 'Index' , 'color' , ), 17, (17, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'LineTypeAt' , 'Index' , 'Linetype' , ), 18, (18, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'LineTypeAt' , 'Index' , 'Linetype' , ), 18, (18, (), [ (3, 1, None, None) , 
             (9, 1, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
]

IOdaMLineStyles_vtables_dispatch_ = 1
IOdaMLineStyles_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
    (( 'Add' , 'Name' , 'pLayout' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IOdaOle_vtables_dispatch_ = 1
IOdaOle_vtables_ = [
    (( 'LinkName' , 'srcApp' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'LinkPath' , 'srcApp' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
]

IOdaPolyfaceMesh_vtables_dispatch_ = 1
IOdaPolyfaceMesh_vtables_ = [
    (( 'GetFaces' , '__MIDL__IOdaPolyfaceMesh0000' , ), 1610940416, (1610940416, (), [ (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

IOdaRasterImage_vtables_dispatch_ = 1
IOdaRasterImage_vtables_ = [
    (( 'Loaded' , 'bResult' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
]

IOdaSpline_vtables_dispatch_ = 1
IOdaSpline_vtables_ = [
    (( 'SetNurbsData' , 'Degree' , 'ControlPoints' , 'Knots' , 'Weights' , 
             'controlPtTolerance' , 'knotTolerance' , 'periodic' , ), 28, (28, (), [ (3, 1, None, None) , 
             (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
             (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
    ###'tagCADWORD': '{00000000-0000-0000-0000-000000000000}', # Record disabled because it doesn't have a non-null GUID
}

from win32com.client import DispatchBaseClass
class IAcadApplication(DispatchBaseClass):
    'An instance of the BricsCAD application'
    CLSID = IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')
    coclass_clsid = IID('{0E86524E-1812-426A-9A63-2C2B51B0D0E4}')

    def DefineFunction(self, FunctionName=defaultNamedNotOptArg, FunctionPointer=defaultNamedNotOptArg):
        'Adds a macro to the command list, similar to (defun c:cmd) in lisp.'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((8, 1), (12, 1)),FunctionName
            , FunctionPointer)

    def Eval(self, Expression=defaultNamedNotOptArg):
        'Evaluates an expression in VBA.'
        return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((8, 1),),Expression
            )

    # Result is of type IAcadState
    def GetAcadState(self):
        'Retrieves an AcadState object.'
        ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'GetAcadState', '{C2016470-443B-40D0-AD93-231ACFDCF594}')
        return ret

    def GetInterfaceObject(self, ProgID=defaultNamedNotOptArg):
        'Accepts a program ID and attempts to load it into BricsCAD as an in-process server'
        ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1),),ProgID
            )
        if ret is not None:
            ret = Dispatch(ret, 'GetInterfaceObject', None)
        return ret

    def ListArx(self):
        'Gets the currently loaded BricsCAD ARX applications.'
        return self._ApplyTypes_(18, 1, (12, 0), (), 'ListArx', None,)

    def LoadArx(self, Name=defaultNamedNotOptArg):
        'Loads the specified BricsCAD ARX application'
        return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def LoadDVB(self, Name=defaultNamedNotOptArg):
        'Loads the specified BricsCAD VBA project file.'
        return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Quit(self):
        'Closes the drawing file and exits the BricsCAD application'
        return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

    def RunCommand(self, Command=defaultNamedNotOptArg):
        'Runs a commmand.'
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), ((8, 1),),Command
            )

    def RunMacro(self, MacroPath=defaultNamedNotOptArg):
        'Runs a VBA macro from the Application object'
        return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((8, 1),),MacroPath
            )

    def RunScript(self, Script=defaultNamedNotOptArg):
        'Runs a script.'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1),),Script
            )

    # The method StatusId is actually a property, but must be used as a method to correctly pass the arguments
    def StatusId(self, VportObj=defaultNamedNotOptArg):
        'Gets the current active status of the viewport.'
        return self._oleobj_.InvokeTypes(17, LCID, 2, (11, 0), ((9, 1),),VportObj
            )

    def UndefineFunction(self, FunctionName=defaultNamedNotOptArg):
        'Removes a previously defined VBA macro from the command list.'
        return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((8, 1),),FunctionName
            )

    def UnloadArx(self, Name=defaultNamedNotOptArg):
        'Unloads the specified BricsCAD ARX application'
        return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def UnloadDVB(self, Name=defaultNamedNotOptArg):
        'Unloads the specified BricsCAD VBA project file.'
        return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),Name
            )

    def Update(self):
        'Updates the object to the drawing screen'
        return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

    def Zoom(self, Type=defaultNamedNotOptArg, vParams=defaultNamedNotOptArg):
        'Zoom. Not implemented yet.'
        return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1), (16396, 1)),Type
            , vParams)

    def ZoomAll(self):
        'Zooms the current viewport to display the entire drawing'
        return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

    def ZoomCenter(self, Center=defaultNamedNotOptArg, Magnify=defaultNamedNotOptArg):
        'Zooms the current viewport to a specified center point and magnification'
        Center = VTR8ArrayOrVal(Center)
        return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((12, 1), (5, 1)),Center
            , Magnify)

    def ZoomExtents(self):
        'Zooms the current viewport to the drawing extents'
        return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

    def ZoomPickWindow(self):
        'Zooms the current viewport to a window defined by points picked on the screen'
        return self._oleobj_.InvokeTypes(41, LCID, 1, (24, 0), (),)

    def ZoomPrevious(self):
        'Zooms the current viewport to its previous extents'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), (),)

    def ZoomScaled(self, scale=defaultNamedNotOptArg, ScaleType=defaultNamedNotOptArg):
        'Zooms the current viewport to given scale factor'
        return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), ((5, 1), (3, 1)),scale
            , ScaleType)

    def ZoomWindow(self, LowerLeft=defaultNamedNotOptArg, UpperRight=defaultNamedNotOptArg):
        'Zooms the current viewport to the area specified by two opposite corners of a rectangle'
        LowerLeft = VTR8ArrayOrVal(LowerLeft)
        UpperRight = VTR8ArrayOrVal(UpperRight)
        return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((12, 1), (12, 1)),LowerLeft
            , UpperRight)

    _prop_map_get_ = {
        # Method 'ActiveDocument' returns object of type 'IAcadDocument'
        "ActiveDocument": (5, 2, (9, 0), (), "ActiveDocument", '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}'),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (4, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Caption": (3, 2, (8, 0), (), "Caption", None),
        # Method 'Documents' returns object of type 'IAcadDocuments'
        "Documents": (32, 2, (9, 0), (), "Documents", '{CFFD1390-466A-49D9-9EE0-1884E930DFF9}'),
        "FullName": (6, 2, (8, 0), (), "FullName", None),
        "HWND": (44, 2, (20, 0), (), "HWND", None),
        "Height": (7, 2, (3, 0), (), "Height", None),
        "LocaleId": (10, 2, (3, 0), (), "LocaleId", None),
        # Method 'MenuBar' returns object of type 'IAcadMenuBar'
        "MenuBar": (29, 2, (9, 0), (), "MenuBar", '{A174CCC8-D19F-421F-8F4E-65C2E4F43167}'),
        # Method 'MenuGroups' returns object of type 'IAcadMenuGroups'
        "MenuGroups": (28, 2, (9, 0), (), "MenuGroups", '{798225D3-984D-471E-84F3-D1EC56FA05EA}'),
        "Name": (2, 2, (8, 0), (), "Name", None),
        "Path": (9, 2, (8, 0), (), "Path", None),
        # Method 'Preferences' returns object of type 'IAcadPreferences'
        "Preferences": (14, 2, (9, 0), (), "Preferences", '{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}'),
        "VBE": (27, 2, (9, 0), (), "VBE", None),
        "Visible": (1, 2, (11, 0), (), "Visible", None),
        "Width": (13, 2, (3, 0), (), "Width", None),
        "WindowLeft": (8, 2, (3, 0), (), "WindowLeft", None),
        "WindowState": (34, 2, (3, 0), (), "WindowState", None),
        "WindowTop": (11, 2, (3, 0), (), "WindowTop", None),
        "version": (12, 2, (8, 0), (), "version", None),
    }
    _prop_map_put_ = {
        "ActiveDocument": ((5, LCID, 4, 0),()),
        "Height": ((7, LCID, 4, 0),()),
        "Visible": ((1, LCID, 4, 0),()),
        "Width": ((13, LCID, 4, 0),()),
        "WindowLeft": ((8, LCID, 4, 0),()),
        "WindowState": ((34, LCID, 4, 0),()),
        "WindowTop": ((11, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDocument(DispatchBaseClass):
    'A BricsCAD drawing'
    CLSID = IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
    coclass_clsid = IID('{3975E80C-5EC5-4EE0-B432-E9EC7BBB9A5A}')

    def AbortTransaction(self):
        'Aborts the current transaction with rollback of all changes done to the database since StartTransaction'
        return self._oleobj_.InvokeTypes(81, LCID, 1, (24, 0), (),)

    def Activate(self):
        'Makes the specified drawing active'
        return self._oleobj_.InvokeTypes(57, LCID, 1, (24, 0), (),)

    def AuditInfo(self, FixErr=defaultNamedNotOptArg):
        'Evaluates the integrity of the drawing'
        return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), ((11, 1),),FixErr
            )

    def Close(self, SaveChanges=defaultNamedOptArg, FileName=defaultNamedOptArg):
        'Closes the specified drawing, or all open drawings'
        return self._oleobj_.InvokeTypes(58, LCID, 1, (24, 0), ((12, 17), (12, 17)),SaveChanges
            , FileName)

    def CopyObjects(self, Objects=defaultNamedNotOptArg, Owner=defaultNamedOptArg, IdPairs=defaultNamedOptArg):
        'Duplicates multiple objects.'
        return self._ApplyTypes_(4, 1, (12, 0), ((12, 1), (12, 17), (16396, 19)), 'CopyObjects', None,Objects
            , Owner, IdPairs)

    def EndTransaction(self):
        'Finishes the current transaction and commits all changes done to the database since StartTransaction'
        return self._oleobj_.InvokeTypes(80, LCID, 1, (24, 0), (),)

    def EndUndoMark(self):
        'Marks the end of a block of operations'
        return self._oleobj_.InvokeTypes(69, LCID, 1, (24, 0), (),)

    def EvaluateLisp(self, lispString=defaultNamedNotOptArg):
        'Executes a LISP expression.'
        return self._ApplyTypes_(76, 1, (12, 0), ((8, 1),), 'EvaluateLisp', None,lispString
            )

    def Export(self, FileName=defaultNamedNotOptArg, Extension=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
        'Exports the BricsCAD drawing to a WMF, SAT, EPS, DXF, BMP or PDF format'
        return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((8, 1), (8, 1), (9, 1)),FileName
            , Extension, SelectionSet)

    def GetVariable(self, Name=defaultNamedNotOptArg):
        'Gets the current setting of a system variable'
        return self._ApplyTypes_(51, 1, (12, 0), ((8, 1),), 'GetVariable', None,Name
            )

    def HandleToObject(self, Handle=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified handle.'
        ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),Handle
            )
        if ret is not None:
            ret = Dispatch(ret, 'HandleToObject', None)
        return ret

    def Import(self, FileName=defaultNamedNotOptArg, InsertionPoint=defaultNamedNotOptArg, ScaleFactor=defaultNamedNotOptArg):
        'Imports a drawing file in SAT, EPS, DXF, or WMF format'
        ret = self._oleobj_.InvokeTypes(44, LCID, 1, (9, 0), ((8, 1), (12, 1), (5, 1)),FileName
            , InsertionPoint, ScaleFactor)
        if ret is not None:
            ret = Dispatch(ret, 'Import', None)
        return ret

    def LoadShapeFile(self, FullName=defaultNamedNotOptArg):
        'Loads a shape file (SHX)'
        return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), ((8, 1),),FullName
            )

    # Result is of type IAcadDocument
    def New(self, TemplateFileName=defaultNamedNotOptArg):
        'Creates a new document in SDI mode. Not implemented yet.'
        ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), ((8, 1),),TemplateFileName
            )
        if ret is not None:
            ret = Dispatch(ret, 'New', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    def ObjectIdToObject(self, ObjectID=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified object ID.'
        ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((20, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject', None)
        return ret

    def ObjectIdToObject32(self, ObjectID=defaultNamedNotOptArg):
        'Returns the object that corresponds with a specified object ID.'
        ret = self._oleobj_.InvokeTypes(74, LCID, 1, (9, 0), ((3, 1),),ObjectID
            )
        if ret is not None:
            ret = Dispatch(ret, 'ObjectIdToObject32', None)
        return ret

    # Result is of type IAcadDocument
    def Open(self, FullName=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Opens an existing drawing file (DWG) and makes it the active document. Not implemented yet.'
        ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), ((8, 1), (12, 17)),FullName
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'Open', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    def PurgeAll(self):
        'Removes unused named references such as unused blocks or layers from the document'
        return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

    def Regen(self, WhichViewports=defaultNamedNotOptArg):
        'Regenerates the entire drawing and recomputes the screen coordinates and view resolution for all objects'
        return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1),),WhichViewports
            )

    def Save(self):
        'Saves the document or menu group'
        return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), (),)

    def SaveAs(self, FullFileName=defaultNamedNotOptArg, SaveAsType=defaultNamedOptArg, vSecurityParams=defaultNamedOptArg):
        'Saves the document or menu group to a specified file'
        return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),FullFileName
            , SaveAsType, vSecurityParams)

    def SendCommand(self, Command=defaultNamedNotOptArg):
        'Sends a command string from a VB or VBA application to the document for processing'
        return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((8, 1),),Command
            )

    def SetVariable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
        'Sets the value of a system variable'
        return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((8, 1), (12, 1)),Name
            , Value)

    def StartTransaction(self):
        "Starts a new transaction for this document's database"
        return self._oleobj_.InvokeTypes(79, LCID, 1, (24, 0), (),)

    def StartUndoMark(self):
        'Marks the beginning of a block of operations'
        return self._oleobj_.InvokeTypes(68, LCID, 1, (24, 0), (),)

    def Wblock(self, FileName=defaultNamedNotOptArg, SelectionSet=defaultNamedNotOptArg):
        'Writes out the given selection set as a new drawing file'
        return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), ((8, 1), (9, 1)),FileName
            , SelectionSet)

    # Result is of type ITransmittalOperation
    def getTransmittalOperationInterface(self):
        'Gets the TransmittalOperation object for the document.'
        ret = self._oleobj_.InvokeTypes(75, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'getTransmittalOperationInterface', '{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}')
        return ret

    _prop_map_get_ = {
        "Active": (56, 2, (11, 0), (), "Active", None),
        # Method 'ActiveDimStyle' returns object of type 'IAcadDimStyle'
        "ActiveDimStyle": (26, 2, (9, 0), (), "ActiveDimStyle", '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}'),
        # Method 'ActiveLayer' returns object of type 'IAcadLayer'
        "ActiveLayer": (24, 2, (9, 0), (), "ActiveLayer", '{A5484251-D4DF-4F32-A23F-445882F48F1B}'),
        # Method 'ActiveLayout' returns object of type 'IAcadLayout'
        "ActiveLayout": (62, 2, (9, 0), (), "ActiveLayout", '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}'),
        # Method 'ActiveLinetype' returns object of type 'IAcadLineType'
        "ActiveLinetype": (25, 2, (9, 0), (), "ActiveLinetype", '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}'),
        # Method 'ActiveMaterial' returns object of type 'IAcadMaterial'
        "ActiveMaterial": (77, 2, (9, 0), (), "ActiveMaterial", '{4D24EA66-A2B3-4129-8367-81D93B44BE07}'),
        # Method 'ActivePViewport' returns object of type 'IAcadPViewport'
        "ActivePViewport": (30, 2, (9, 0), (), "ActivePViewport", '{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}'),
        # Method 'ActiveSelectionSet' returns object of type 'IAcadSelectionSet'
        "ActiveSelectionSet": (33, 2, (9, 0), (), "ActiveSelectionSet", '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}'),
        "ActiveSpace": (31, 2, (3, 0), (), "ActiveSpace", None),
        # Method 'ActiveTextStyle' returns object of type 'IAcadTextStyle'
        "ActiveTextStyle": (27, 2, (9, 0), (), "ActiveTextStyle", '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}'),
        # Method 'ActiveUCS' returns object of type 'IAcadUCS'
        "ActiveUCS": (28, 2, (9, 0), (), "ActiveUCS", '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}'),
        # Method 'ActiveViewport' returns object of type 'IAcadViewport'
        "ActiveViewport": (29, 2, (9, 0), (), "ActiveViewport", '{A9B1F951-1AA7-4C23-8D57-AA199803D381}'),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (66, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        # Method 'Blocks' returns object of type 'IAcadBlocks'
        "Blocks": (3, 2, (9, 0), (), "Blocks", '{98F7CE82-8E41-4D58-A784-30B3F33F7853}'),
        # Method 'Dictionaries' returns object of type 'IAcadDictionaries'
        "Dictionaries": (9, 2, (9, 0), (), "Dictionaries", '{B6D57083-036D-48AB-8BF4-0902B5C88BFF}'),
        # Method 'DimStyles' returns object of type 'IAcadDimStyles'
        "DimStyles": (6, 2, (9, 0), (), "DimStyles", '{DAB1760C-8402-4520-AD32-9396AEF1C677}'),
        "ElevationModelSpace": (15, 2, (5, 0), (), "ElevationModelSpace", None),
        "ElevationPaperSpace": (16, 2, (5, 0), (), "ElevationPaperSpace", None),
        # Method 'FileDependencies' returns object of type 'IAcadFileDependencies'
        "FileDependencies": (70, 2, (9, 0), (), "FileDependencies", '{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}'),
        "FullName": (34, 2, (8, 0), (), "FullName", None),
        # Method 'Groups' returns object of type 'IAcadGroups'
        "Groups": (5, 2, (9, 0), (), "Groups", '{973585F9-D300-4BA7-9D0F-6EE59533A0DC}'),
        "HWND": (64, 2, (20, 0), (), "HWND", None),
        "Height": (61, 2, (3, 0), (), "Height", None),
        # Method 'Layers' returns object of type 'IAcadLayers'
        "Layers": (7, 2, (9, 0), (), "Layers", '{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}'),
        # Method 'Layouts' returns object of type 'IAcadLayouts'
        "Layouts": (20, 2, (9, 0), (), "Layouts", '{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}'),
        "Limits": (17, 2, (12, 0), (), "Limits", None),
        # Method 'Linetypes' returns object of type 'IAcadLineTypes'
        "Linetypes": (8, 2, (9, 0), (), "Linetypes", '{669E518F-46F5-4E21-8447-7F8D1435AE94}'),
        "MSpace": (40, 2, (11, 0), (), "MSpace", None),
        # Method 'Materials' returns object of type 'IAcadMaterials'
        "Materials": (73, 2, (9, 0), (), "Materials", '{6B7DDA98-B483-40F8-905C-2DF10E936021}'),
        # Method 'ModelSpace' returns object of type 'IAcadModelSpace'
        "ModelSpace": (1, 2, (9, 0), (), "ModelSpace", '{ECE694AB-7306-4687-AD03-C7017AE8DED1}'),
        "Name": (35, 2, (8, 0), (), "Name", None),
        "NumTransactions": (78, 2, (3, 0), (), "NumTransactions", None),
        "ObjectSnapMode": (37, 2, (11, 0), (), "ObjectSnapMode", None),
        # Method 'PaperSpace' returns object of type 'IAcadPaperSpace'
        "PaperSpace": (2, 2, (9, 0), (), "PaperSpace", '{39377F68-1F53-4433-90AE-05526FEA4FE5}'),
        "Path": (36, 2, (8, 0), (), "Path", None),
        "PickfirstSelectionSet": (55, 2, (9, 0), (), "PickfirstSelectionSet", None),
        # Method 'Plot' returns object of type 'IAcadPlot'
        "Plot": (23, 2, (9, 0), (), "Plot", '{445545BB-394E-481A-AC4F-F073E53030E8}'),
        # Method 'PlotConfigurations' returns object of type 'IAcadPlotConfigurations'
        "PlotConfigurations": (21, 2, (9, 0), (), "PlotConfigurations", '{38436519-BF47-4848-B6B2-CB6944F167D3}'),
        # Method 'Preferences' returns object of type 'IAcadDatabasePreferences'
        "Preferences": (22, 2, (9, 0), (), "Preferences", '{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}'),
        "ReadOnly": (38, 2, (11, 0), (), "ReadOnly", None),
        # Method 'RegisteredApplications' returns object of type 'IAcadRegisteredApplications'
        "RegisteredApplications": (10, 2, (9, 0), (), "RegisteredApplications", '{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}'),
        "Saved": (39, 2, (11, 0), (), "Saved", None),
        # Method 'SectionManager' returns object of type 'IAcadSectionManager'
        "SectionManager": (72, 2, (9, 0), (), "SectionManager", '{47495992-2633-4FA4-8B0F-213F0C2D20A5}'),
        # Method 'SelectionSets' returns object of type 'IAcadSelectionSets'
        "SelectionSets": (32, 2, (9, 0), (), "SelectionSets", '{37E34D42-8CD8-4E25-83BF-80C791AFEADE}'),
        # Method 'SummaryInfo' returns object of type 'IAcadSummaryInfo'
        "SummaryInfo": (71, 2, (9, 0), (), "SummaryInfo", '{95D1CD9E-63E7-4860-9BE2-8F684047E102}'),
        # Method 'TextStyles' returns object of type 'IAcadTextStyles'
        "TextStyles": (11, 2, (9, 0), (), "TextStyles", '{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}'),
        # Method 'UserCoordinateSystems' returns object of type 'IAcadUCSs'
        "UserCoordinateSystems": (12, 2, (9, 0), (), "UserCoordinateSystems", '{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}'),
        # Method 'Utility' returns object of type 'IAcadUtility'
        "Utility": (41, 2, (9, 0), (), "Utility", '{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}'),
        # Method 'Viewports' returns object of type 'IAcadViewports'
        "Viewports": (14, 2, (9, 0), (), "Viewports", '{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}'),
        # Method 'Views' returns object of type 'IAcadViews'
        "Views": (13, 2, (9, 0), (), "Views", '{E1673534-4417-4D0A-95FB-6E02246096D6}'),
        "Width": (60, 2, (3, 0), (), "Width", None),
        "WindowState": (59, 2, (3, 0), (), "WindowState", None),
        "WindowTitle": (65, 2, (8, 0), (), "WindowTitle", None),
        # Method 'database' returns object of type 'IAcadDatabase'
        "database": (67, 2, (9, 0), (), "database", '{236374B2-E248-484D-91D4-C13FA726645D}'),
    }
    _prop_map_put_ = {
        "ActiveDimStyle": ((26, LCID, 4, 0),()),
        "ActiveLayer": ((24, LCID, 4, 0),()),
        "ActiveLayout": ((62, LCID, 4, 0),()),
        "ActiveLinetype": ((25, LCID, 4, 0),()),
        "ActiveMaterial": ((77, LCID, 4, 0),()),
        "ActivePViewport": ((30, LCID, 4, 0),()),
        "ActiveSpace": ((31, LCID, 4, 0),()),
        "ActiveTextStyle": ((27, LCID, 4, 0),()),
        "ActiveUCS": ((28, LCID, 4, 0),()),
        "ActiveViewport": ((29, LCID, 4, 0),()),
        "ElevationModelSpace": ((15, LCID, 4, 0),()),
        "ElevationPaperSpace": ((16, LCID, 4, 0),()),
        "Height": ((61, LCID, 4, 0),()),
        "Limits": ((17, LCID, 4, 0),()),
        "MSpace": ((40, LCID, 4, 0),()),
        "ObjectSnapMode": ((37, LCID, 4, 0),()),
        "Width": ((60, LCID, 4, 0),()),
        "WindowState": ((59, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadDocuments(DispatchBaseClass):
    'The collection of all BricsCAD drawings open in the current session'
    CLSID = IID('{CFFD1390-466A-49D9-9EE0-1884E930DFF9}')
    coclass_clsid = IID('{5F5D38B7-C56C-4250-B088-2B06EEEC1EE9}')

    # Result is of type IAcadDocument
    def Add(self, TemplateName=defaultNamedOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743812, LCID, 1, (9, 0), ((12, 17),),TemplateName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    def Close(self):
        'Closes the specified drawing, or all open drawings'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), (),)

    # Result is of type IAcadDocument
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    # Result is of type IAcadDocument
    def Open(self, Name=defaultNamedNotOptArg, ReadOnly=defaultNamedOptArg, Password=defaultNamedOptArg):
        'Opens an existing drawing file (DWG) and makes it the active document'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Name
            , ReadOnly, Password)
        if ret is not None:
            ret = Dispatch(ret, 'Open', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    def __getitem__(self, *args): 
        try:
            return self.__call__(*args)
        except:
            raise IndexError
        
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadLayerStateManager(DispatchBaseClass):
    'IAcadLayerStateManager Interface'
    CLSID = IID('{65CDCC9F-F651-4DC4-A361-A8307F08AEE3}')
    coclass_clsid = IID('{2F38A4F0-DDE8-488C-B53C-5E364C267B53}')

    def Delete(self, bsName=defaultNamedNotOptArg):
        'Deletes the specified layers state.'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),bsName
            )

    def Export(self, bsName=defaultNamedNotOptArg, bsFilename=defaultNamedNotOptArg):
        'Exports the specified layer state to the specified file.'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
            , bsFilename)

    def Import(self, bsFilename=defaultNamedNotOptArg):
        'Imports all layer states from the specified file.'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1),),bsFilename
            )

    # The method Mask is actually a property, but must be used as a method to correctly pass the arguments
    def Mask(self, bsName=defaultNamedNotOptArg):
        'Sets the mask used for restoring the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743809, LCID, 2, (3, 0), ((8, 1),),bsName
            )

    def Rename(self, bsName=defaultNamedNotOptArg, bsNewName=defaultNamedNotOptArg):
        'Renames the specified layers state.'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (8, 1)),bsName
            , bsNewName)

    def Restore(self, bsName=defaultNamedNotOptArg):
        'Restores the layers to the specified state as per the layer state mask.'
        return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1),),bsName
            )

    def Save(self, bsName=defaultNamedNotOptArg, eMask=defaultNamedNotOptArg):
        'Saves the attribute mask and the state of all layers into the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (3, 1)),bsName
            , eMask)

    def SetDatabase(self, iHostDb=defaultNamedNotOptArg):
        'Sets the working database for the layer state manager.'
        return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (24, 0), ((9, 1),),iHostDb
            )

    # The method SetMask is actually a property, but must be used as a method to correctly pass the arguments
    def SetMask(self, bsName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Sets the mask used for restoring the specified layer state.'
        return self._oleobj_.InvokeTypes(1610743809, LCID, 4, (24, 0), ((8, 1), (3, 1)),bsName
            , arg1)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMenuBar(DispatchBaseClass):
    'This collection contains all the menus that are displayed in the Briccad menu bar'
    CLSID = IID('{A174CCC8-D19F-421F-8F4E-65C2E4F43167}')
    coclass_clsid = IID('{DE927728-3684-4835-8255-54350D951307}')

    # Result is of type IAcadPopupMenu
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadApplication'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadMenuGroup(DispatchBaseClass):
    'IAcadMenuGroup Interface'
    CLSID = IID('{DF14CB14-CDC6-463F-B71C-356149D1F935}')
    coclass_clsid = IID('{A07E5142-51E0-441E-B442-1F46F53F3888}')

    def Save(self, MenuFileType=defaultNamedNotOptArg):
        'Saves the menu group'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((3, 1),),MenuFileType
            )

    def SaveAs(self, MenuFileName=defaultNamedNotOptArg, MenuFileType=defaultNamedNotOptArg):
        'Saves the menu group to a specified file'
        return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (24, 0), ((8, 1), (3, 1)),MenuFileName
            , MenuFileType)

    def Unload(self):
        'Unloads the menu group'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "MenuFileName": (1610743812, 2, (8, 0), (), "MenuFileName", None),
        # Method 'Menus' returns object of type 'IAcadPopupMenus'
        "Menus": (1610743813, 2, (9, 0), (), "Menus", '{3305CB53-F955-41F3-A47B-B7AA53B22D48}'),
        "Name": (1610743810, 2, (8, 0), (), "Name", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroups'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{798225D3-984D-471E-84F3-D1EC56FA05EA}'),
        # Method 'Toolbars' returns object of type 'IAcadToolbars'
        "Toolbars": (1610743814, 2, (9, 0), (), "Toolbars", '{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}'),
        "Type": (1610743811, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadMenuGroups(DispatchBaseClass):
    'A collection of MenuGroup objects'
    CLSID = IID('{798225D3-984D-471E-84F3-D1EC56FA05EA}')
    coclass_clsid = IID('{FE3FC546-AF40-4A2E-9C5C-14B7B4B8A54D}')

    # Result is of type IAcadMenuGroup
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{DF14CB14-CDC6-463F-B71C-356149D1F935}')
        return ret

    # Result is of type IAcadMenuGroup
    def Load(self, MenuFileName=defaultNamedNotOptArg, BaseMenu=defaultNamedOptArg):
        'Loads a menu group from a menu file'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1), (12, 17)),MenuFileName
            , BaseMenu)
        if ret is not None:
            ret = Dispatch(ret, 'Load', '{DF14CB14-CDC6-463F-B71C-356149D1F935}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadApplication'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{DF14CB14-CDC6-463F-B71C-356149D1F935}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{DF14CB14-CDC6-463F-B71C-356149D1F935}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPlot(DispatchBaseClass):
    'Plot interface object'
    CLSID = IID('{445545BB-394E-481A-AC4F-F073E53030E8}')
    coclass_clsid = IID('{126D4FCB-3E3D-491B-9F0B-D6C9D362116A}')

    def DisplayPlotPreview(self, PreviewMode=defaultNamedNotOptArg):
        'Displays the Plot Preview dialog box with the specified partial or full view preview.'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1),),PreviewMode
            )

    def PlotToDevice(self, plotConfig=defaultNamedOptArg):
        'Plots a layout to a device.'
        return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((12, 17),),plotConfig
            )

    def PlotToFile(self, plotFile=defaultNamedNotOptArg, plotConfig=defaultNamedOptArg):
        'Plots a layout to the specified file.'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1), (12, 17)),plotFile
            , plotConfig)

    def SetLayoutsToPlot(self, layoutList=defaultNamedNotOptArg):
        'Specifies the layout or layouts to plot.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1),),layoutList
            )

    def StartBatchMode(self, entryCount=defaultNamedNotOptArg):
        'Invokes batchmode printing. Not implemented yet.'
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1),),entryCount
            )

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "BatchPlotProgress": (4, 2, (11, 0), (), "BatchPlotProgress", None),
        "NumberOfCopies": (3, 2, (3, 0), (), "NumberOfCopies", None),
        "QuietErrorMode": (2, 2, (11, 0), (), "QuietErrorMode", None),
    }
    _prop_map_put_ = {
        "BatchPlotProgress": ((4, LCID, 4, 0),()),
        "NumberOfCopies": ((3, LCID, 4, 0),()),
        "QuietErrorMode": ((2, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenu(DispatchBaseClass):
    'IAcadPopupMenu Interface'
    CLSID = IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
    coclass_clsid = IID('{62AB6B80-D12D-40C8-8970-9915E69E05E0}')

    # Result is of type IAcadPopupMenuItem
    def AddMenuItem(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg):
        'Adds a popup menu item to a popup menu'
        ret = self._oleobj_.InvokeTypes(1610743818, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1)),Index
            , Label, Macro)
        if ret is not None:
            ret = Dispatch(ret, 'AddMenuItem', '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
        return ret

    # Result is of type IAcadPopupMenuItem
    def AddSeparator(self, Index=defaultNamedNotOptArg):
        'Adds a separator to an existing menu'
        ret = self._oleobj_.InvokeTypes(1610743820, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddSeparator', '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
        return ret

    # Result is of type IAcadPopupMenu
    def AddSubMenu(self, Index=defaultNamedNotOptArg, Label=defaultNamedNotOptArg):
        'Adds a submenu to an existing menu'
        ret = self._oleobj_.InvokeTypes(1610743819, LCID, 1, (9, 0), ((12, 1), (8, 1)),Index
            , Label)
        if ret is not None:
            ret = Dispatch(ret, 'AddSubMenu', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    def InsertInMenuBar(self, Index=defaultNamedNotOptArg):
        'Inserts the popup menu into the menu bar at a specified location'
        return self._oleobj_.InvokeTypes(1610743821, LCID, 1, (24, 0), ((12, 1),),Index
            )

    # Result is of type IAcadPopupMenuItem
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a group'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
        return ret

    def RemoveFromMenuBar(self):
        'Removes the popup menu from the menu bar'
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "Name": (1610743813, 2, (8, 0), (), "Name", None),
        "NameNoMnemonic": (1610743815, 2, (8, 0), (), "NameNoMnemonic", None),
        "OnMenuBar": (1610743817, 2, (11, 0), (), "OnMenuBar", None),
        "Parent": (1610743812, 2, (9, 0), (), "Parent", None),
        "ShortcutMenu": (1610743816, 2, (11, 0), (), "ShortcutMenu", None),
        "TagString": (1610743823, 2, (8, 0), (), "TagString", None),
    }
    _prop_map_put_ = {
        "Name": ((1610743813, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a group'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPopupMenuItem(DispatchBaseClass):
    'A single popup menu item'
    CLSID = IID('{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')
    coclass_clsid = IID('{E24D7979-088A-435B-B939-D8E18AD4BE1D}')

    def Delete(self):
        'Deletes a specified menu item'
        return self._oleobj_.InvokeTypes(1610743826, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Caption": (1610743823, 2, (8, 0), (), "Caption", None),
        "Check": (1610743816, 2, (11, 0), (), "Check", None),
        "Enable": (1610743814, 2, (11, 0), (), "Enable", None),
        "EndSubMenuLevel": (1610743827, 2, (3, 0), (), "EndSubMenuLevel", None),
        "HelpString": (1610743824, 2, (8, 0), (), "HelpString", None),
        "Index": (1610743822, 2, (3, 0), (), "Index", None),
        "Label": (1610743810, 2, (8, 0), (), "Label", None),
        "Macro": (1610743820, 2, (8, 0), (), "Macro", None),
        # Method 'Parent' returns object of type 'IAcadPopupMenu'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}'),
        # Method 'SubMenu' returns object of type 'IAcadPopupMenu'
        "SubMenu": (1610743819, 2, (9, 0), (), "SubMenu", '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}'),
        "TagString": (1610743812, 2, (8, 0), (), "TagString", None),
        "Type": (1610743818, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
        "Check": ((1610743816, LCID, 4, 0),()),
        "Enable": ((1610743814, LCID, 4, 0),()),
        "EndSubMenuLevel": ((1610743827, LCID, 4, 0),()),
        "HelpString": ((1610743824, LCID, 4, 0),()),
        "Label": ((1610743810, LCID, 4, 0),()),
        "Macro": ((1610743820, LCID, 4, 0),()),
        "TagString": ((1610743812, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPopupMenus(DispatchBaseClass):
    'A collection of PopupMenu objects'
    CLSID = IID('{3305CB53-F955-41F3-A47B-B7AA53B22D48}')
    coclass_clsid = IID('{18B24243-321E-4980-9351-57C02F246EC9}')

    # Result is of type IAcadPopupMenu
    def Add(self, MenuName=defaultNamedNotOptArg):
        'Creates a menu and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), ((8, 1),),MenuName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    def InsertMenuInMenuBar(self, MenuName=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
        'Inserts a menu into the menu bar'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1), (12, 1)),MenuName
            , Index)

    # Result is of type IAcadPopupMenu
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a group'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    def RemoveMenuFromMenuBar(self, Index=defaultNamedNotOptArg):
        'Removes the popup menu from the menu bar'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((12, 1),),Index
            )

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroup'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{DF14CB14-CDC6-463F-B71C-356149D1F935}'),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a group'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadPreferences(DispatchBaseClass):
    'This object specifies the current BricsCAD settings'
    CLSID = IID('{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}')
    coclass_clsid = IID('{A3EAF524-D893-4F6F-8D07-7F9416F7EBB9}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        # Method 'Display' returns object of type 'IAcadPreferencesDisplay'
        "Display": (1610743810, 2, (9, 0), (), "Display", '{0D71BC3C-9854-4076-BD32-D545259AB752}'),
        # Method 'Drafting' returns object of type 'IAcadPreferencesDrafting'
        "Drafting": (1610743815, 2, (9, 0), (), "Drafting", '{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}'),
        # Method 'Files' returns object of type 'IAcadPreferencesFiles'
        "Files": (1610743809, 2, (9, 0), (), "Files", '{125FA500-9ABC-4F98-87AD-869AEFA4AD72}'),
        # Method 'OpenSave' returns object of type 'IAcadPreferencesOpenSave'
        "OpenSave": (1610743811, 2, (9, 0), (), "OpenSave", '{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}'),
        # Method 'Output' returns object of type 'IAcadPreferencesOutput'
        "Output": (1610743812, 2, (9, 0), (), "Output", '{1560A14A-D97B-4B3B-BF95-D0F703723442}'),
        # Method 'Profiles' returns object of type 'IAcadPreferencesProfiles'
        "Profiles": (1610743817, 2, (9, 0), (), "Profiles", '{52F0656B-9D63-4C67-ADBF-E9C732ED271B}'),
        # Method 'Selection' returns object of type 'IAcadPreferencesSelection'
        "Selection": (1610743816, 2, (9, 0), (), "Selection", '{CE512178-E98E-4225-800E-0A29DEE39BCD}'),
        # Method 'System' returns object of type 'IAcadPreferencesSystem'
        "System": (1610743813, 2, (9, 0), (), "System", '{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}'),
        # Method 'User' returns object of type 'IAcadPreferencesUser'
        "User": (1610743814, 2, (9, 0), (), "User", '{689AE380-B75C-430E-8A70-D116D8B4FA63}'),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDisplay(DispatchBaseClass):
    'This object contains the options from the Display tab on the Options dialog'
    CLSID = IID('{0D71BC3C-9854-4076-BD32-D545259AB752}')
    coclass_clsid = IID('{100E11DA-6700-452D-B6BE-0B65FDB2E17A}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "AutoTrackingVecColor": (1610743841, 2, (19, 0), (), "AutoTrackingVecColor", None),
        "CursorSize": (1610743823, 2, (3, 0), (), "CursorSize", None),
        "DisplayLayoutTabs": (1610743853, 2, (11, 0), (), "DisplayLayoutTabs", None),
        "DisplayScreenMenu": (1610743821, 2, (11, 0), (), "DisplayScreenMenu", None),
        "DisplayScrollBars": (1610743819, 2, (11, 0), (), "DisplayScrollBars", None),
        "DockedVisibleLines": (1610743825, 2, (3, 0), (), "DockedVisibleLines", None),
        "GraphicsWinLayoutBackgrndColor": (1610743833, 2, (19, 0), (), "GraphicsWinLayoutBackgrndColor", None),
        "GraphicsWinModelBackgrndColor": (1610743829, 2, (19, 0), (), "GraphicsWinModelBackgrndColor", None),
        "HistoryLines": (1610743849, 2, (3, 0), (), "HistoryLines", None),
        "ImageFrameHighlight": (1610743855, 2, (11, 0), (), "ImageFrameHighlight", None),
        "LayoutCreateViewport": (1610743817, 2, (11, 0), (), "LayoutCreateViewport", None),
        "LayoutCrosshairColor": (1610743839, 2, (19, 0), (), "LayoutCrosshairColor", None),
        "LayoutDisplayMargins": (1610743809, 2, (11, 0), (), "LayoutDisplayMargins", None),
        "LayoutDisplayPaper": (1610743811, 2, (11, 0), (), "LayoutDisplayPaper", None),
        "LayoutDisplayPaperShadow": (1610743813, 2, (11, 0), (), "LayoutDisplayPaperShadow", None),
        "LayoutShowPlotSetup": (1610743815, 2, (11, 0), (), "LayoutShowPlotSetup", None),
        "MaxAutoCADWindow": (1610743851, 2, (11, 0), (), "MaxAutoCADWindow", None),
        "ModelCrosshairColor": (1610743831, 2, (19, 0), (), "ModelCrosshairColor", None),
        "ShowRasterImage": (1610743827, 2, (11, 0), (), "ShowRasterImage", None),
        "TextFont": (1610743843, 2, (8, 0), (), "TextFont", None),
        "TextFontSize": (1610743847, 2, (3, 0), (), "TextFontSize", None),
        "TextFontStyle": (1610743845, 2, (3, 0), (), "TextFontStyle", None),
        "TextWinBackgrndColor": (1610743835, 2, (19, 0), (), "TextWinBackgrndColor", None),
        "TextWinTextColor": (1610743837, 2, (19, 0), (), "TextWinTextColor", None),
        "TrueColorImages": (1610743857, 2, (11, 0), (), "TrueColorImages", None),
        "XRefFadeIntensity": (1610743859, 2, (3, 0), (), "XRefFadeIntensity", None),
    }
    _prop_map_put_ = {
        "AutoTrackingVecColor": ((1610743841, LCID, 4, 0),()),
        "CursorSize": ((1610743823, LCID, 4, 0),()),
        "DisplayLayoutTabs": ((1610743853, LCID, 4, 0),()),
        "DisplayScreenMenu": ((1610743821, LCID, 4, 0),()),
        "DisplayScrollBars": ((1610743819, LCID, 4, 0),()),
        "DockedVisibleLines": ((1610743825, LCID, 4, 0),()),
        "GraphicsWinLayoutBackgrndColor": ((1610743833, LCID, 4, 0),()),
        "GraphicsWinModelBackgrndColor": ((1610743829, LCID, 4, 0),()),
        "HistoryLines": ((1610743849, LCID, 4, 0),()),
        "ImageFrameHighlight": ((1610743855, LCID, 4, 0),()),
        "LayoutCreateViewport": ((1610743817, LCID, 4, 0),()),
        "LayoutCrosshairColor": ((1610743839, LCID, 4, 0),()),
        "LayoutDisplayMargins": ((1610743809, LCID, 4, 0),()),
        "LayoutDisplayPaper": ((1610743811, LCID, 4, 0),()),
        "LayoutDisplayPaperShadow": ((1610743813, LCID, 4, 0),()),
        "LayoutShowPlotSetup": ((1610743815, LCID, 4, 0),()),
        "MaxAutoCADWindow": ((1610743851, LCID, 4, 0),()),
        "ModelCrosshairColor": ((1610743831, LCID, 4, 0),()),
        "ShowRasterImage": ((1610743827, LCID, 4, 0),()),
        "TextFont": ((1610743843, LCID, 4, 0),()),
        "TextFontSize": ((1610743847, LCID, 4, 0),()),
        "TextFontStyle": ((1610743845, LCID, 4, 0),()),
        "TextWinBackgrndColor": ((1610743835, LCID, 4, 0),()),
        "TextWinTextColor": ((1610743837, LCID, 4, 0),()),
        "TrueColorImages": ((1610743857, LCID, 4, 0),()),
        "XRefFadeIntensity": ((1610743859, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesDrafting(DispatchBaseClass):
    'This object contains the options from the Drafting tab on the Options dialog'
    CLSID = IID('{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}')
    coclass_clsid = IID('{F6B948E8-500C-4305-A2EA-71FA28A35530}')

    _prop_map_get_ = {
        "AlignmentPointAcquisition": (1610743829, 2, (3, 0), (), "AlignmentPointAcquisition", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "AutoSnapAperture": (1610743815, 2, (11, 0), (), "AutoSnapAperture", None),
        "AutoSnapApertureSize": (1610743817, 2, (3, 0), (), "AutoSnapApertureSize", None),
        "AutoSnapMagnet": (1610743811, 2, (11, 0), (), "AutoSnapMagnet", None),
        "AutoSnapMarker": (1610743809, 2, (11, 0), (), "AutoSnapMarker", None),
        "AutoSnapMarkerColor": (1610743819, 2, (3, 0), (), "AutoSnapMarkerColor", None),
        "AutoSnapMarkerSize": (1610743821, 2, (3, 0), (), "AutoSnapMarkerSize", None),
        "AutoSnapTooltip": (1610743813, 2, (11, 0), (), "AutoSnapTooltip", None),
        "AutoTrackTooltip": (1610743827, 2, (11, 0), (), "AutoTrackTooltip", None),
        "FullScreenTrackingVector": (1610743825, 2, (11, 0), (), "FullScreenTrackingVector", None),
        "PolarTrackingVector": (1610743823, 2, (11, 0), (), "PolarTrackingVector", None),
    }
    _prop_map_put_ = {
        "AlignmentPointAcquisition": ((1610743829, LCID, 4, 0),()),
        "AutoSnapAperture": ((1610743815, LCID, 4, 0),()),
        "AutoSnapApertureSize": ((1610743817, LCID, 4, 0),()),
        "AutoSnapMagnet": ((1610743811, LCID, 4, 0),()),
        "AutoSnapMarker": ((1610743809, LCID, 4, 0),()),
        "AutoSnapMarkerColor": ((1610743819, LCID, 4, 0),()),
        "AutoSnapMarkerSize": ((1610743821, LCID, 4, 0),()),
        "AutoSnapTooltip": ((1610743813, LCID, 4, 0),()),
        "AutoTrackTooltip": ((1610743827, LCID, 4, 0),()),
        "FullScreenTrackingVector": ((1610743825, LCID, 4, 0),()),
        "PolarTrackingVector": ((1610743823, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesFiles(DispatchBaseClass):
    'This object contains the options from the Files tab on the Options dialog'
    CLSID = IID('{125FA500-9ABC-4F98-87AD-869AEFA4AD72}')
    coclass_clsid = IID('{354D8744-81E2-4BB0-AC00-2C2471F3BEBE}')

    def GetProjectFilePath(self, ProjectName=defaultNamedNotOptArg):
        'Gets the directory in which BricsCAD looks for external reference files'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743854, LCID, 1, (8, 0), ((8, 1),),ProjectName
            )

    def SetProjectFilePath(self, ProjectName=defaultNamedNotOptArg, ProjectFilePath=defaultNamedNotOptArg):
        'Sets the directory in which BricsCAD looks for external reference files'
        return self._oleobj_.InvokeTypes(1610743853, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProjectName
            , ProjectFilePath)

    _prop_map_get_ = {
        "AltFontFile": (1610743827, 2, (8, 0), (), "AltFontFile", None),
        "AltTabletMenuFile": (1610743851, 2, (8, 0), (), "AltTabletMenuFile", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "AutoSavePath": (1610743839, 2, (8, 0), (), "AutoSavePath", None),
        "ColorBookPath": (1610743865, 2, (8, 0), (), "ColorBookPath", None),
        "ConfigFile": (1610743819, 2, (8, 0), (), "ConfigFile", None),
        "CustomDictionary": (1610743825, 2, (8, 0), (), "CustomDictionary", None),
        "DefaultInternetURL": (1610743817, 2, (8, 0), (), "DefaultInternetURL", None),
        "DriversPath": (1610743811, 2, (8, 0), (), "DriversPath", None),
        "FontFileMap": (1610743829, 2, (8, 0), (), "FontFileMap", None),
        "HelpFilePath": (1610743815, 2, (8, 0), (), "HelpFilePath", None),
        "LicenseServer": (1610743820, 2, (8, 0), (), "LicenseServer", None),
        "LogFilePath": (1610743843, 2, (8, 0), (), "LogFilePath", None),
        "MainDictionary": (1610743823, 2, (8, 0), (), "MainDictionary", None),
        "MenuFile": (1610743813, 2, (8, 0), (), "MenuFile", None),
        "ObjectARXPath": (1610743863, 2, (8, 0), (), "ObjectARXPath", None),
        "PostScriptPrologFile": (1610743835, 2, (8, 0), (), "PostScriptPrologFile", None),
        "PrintFile": (1610743831, 2, (8, 0), (), "PrintFile", None),
        "PrintSpoolExecutable": (1610743833, 2, (8, 0), (), "PrintSpoolExecutable", None),
        "PrintSpoolerPath": (1610743837, 2, (8, 0), (), "PrintSpoolerPath", None),
        "PrinterConfigPath": (1610743855, 2, (8, 0), (), "PrinterConfigPath", None),
        "PrinterDescPath": (1610743857, 2, (8, 0), (), "PrinterDescPath", None),
        "PrinterStyleSheetPath": (1610743859, 2, (8, 0), (), "PrinterStyleSheetPath", None),
        "QNewTemplateFile": (1610743869, 2, (8, 0), (), "QNewTemplateFile", None),
        "SupportPath": (0, 2, (8, 0), (), "SupportPath", None),
        "TempFilePath": (1610743845, 2, (8, 0), (), "TempFilePath", None),
        "TempXrefPath": (1610743847, 2, (8, 0), (), "TempXrefPath", None),
        "TemplateDwgPath": (1610743841, 2, (8, 0), (), "TemplateDwgPath", None),
        "TextEditor": (1610743821, 2, (8, 0), (), "TextEditor", None),
        "TextureMapPath": (1610743849, 2, (8, 0), (), "TextureMapPath", None),
        "ToolPalettePath": (1610743867, 2, (8, 0), (), "ToolPalettePath", None),
        "WorkspacePath": (1610743861, 2, (8, 0), (), "WorkspacePath", None),
    }
    _prop_map_put_ = {
        "AltFontFile": ((1610743827, LCID, 4, 0),()),
        "AltTabletMenuFile": ((1610743851, LCID, 4, 0),()),
        "AutoSavePath": ((1610743839, LCID, 4, 0),()),
        "ColorBookPath": ((1610743865, LCID, 4, 0),()),
        "CustomDictionary": ((1610743825, LCID, 4, 0),()),
        "DefaultInternetURL": ((1610743817, LCID, 4, 0),()),
        "DriversPath": ((1610743811, LCID, 4, 0),()),
        "FontFileMap": ((1610743829, LCID, 4, 0),()),
        "HelpFilePath": ((1610743815, LCID, 4, 0),()),
        "LogFilePath": ((1610743843, LCID, 4, 0),()),
        "MainDictionary": ((1610743823, LCID, 4, 0),()),
        "MenuFile": ((1610743813, LCID, 4, 0),()),
        "ObjectARXPath": ((1610743863, LCID, 4, 0),()),
        "PostScriptPrologFile": ((1610743835, LCID, 4, 0),()),
        "PrintFile": ((1610743831, LCID, 4, 0),()),
        "PrintSpoolExecutable": ((1610743833, LCID, 4, 0),()),
        "PrintSpoolerPath": ((1610743837, LCID, 4, 0),()),
        "PrinterConfigPath": ((1610743855, LCID, 4, 0),()),
        "PrinterDescPath": ((1610743857, LCID, 4, 0),()),
        "PrinterStyleSheetPath": ((1610743859, LCID, 4, 0),()),
        "QNewTemplateFile": ((1610743869, LCID, 4, 0),()),
        "SupportPath": ((0, LCID, 4, 0),()),
        "TempFilePath": ((1610743845, LCID, 4, 0),()),
        "TempXrefPath": ((1610743847, LCID, 4, 0),()),
        "TemplateDwgPath": ((1610743841, LCID, 4, 0),()),
        "TextEditor": ((1610743821, LCID, 4, 0),()),
        "TextureMapPath": ((1610743849, LCID, 4, 0),()),
        "ToolPalettePath": ((1610743867, LCID, 4, 0),()),
        "WorkspacePath": ((1610743861, LCID, 4, 0),()),
    }
    # Default property for this class is 'SupportPath'
    def __call__(self):
        return self._ApplyTypes_(*(0, 2, (8, 0), (), "SupportPath", None))
    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOpenSave(DispatchBaseClass):
    'This object contains the options from the Open and Save tab on the Options dialog'
    CLSID = IID('{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}')
    coclass_clsid = IID('{E21FACEF-E6A4-4DE1-8315-7F0F07EB877E}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "AutoAudit": (1610743831, 2, (11, 0), (), "AutoAudit", None),
        "AutoSaveInterval": (1610743813, 2, (3, 0), (), "AutoSaveInterval", None),
        "CreateBackup": (1610743815, 2, (11, 0), (), "CreateBackup", None),
        "DWFFormat": (1610743836, 2, (3, 0), (), "DWFFormat", None),
        "DemandLoadARXApp": (1610743825, 2, (3, 0), (), "DemandLoadARXApp", None),
        "FullCRCValidation": (1610743817, 2, (11, 0), (), "FullCRCValidation", None),
        "IncrementalSavePercent": (1610743811, 2, (3, 0), (), "IncrementalSavePercent", None),
        "LogFileOn": (1610743819, 2, (11, 0), (), "LogFileOn", None),
        "MRUNumber": (1610743835, 2, (3, 0), (), "MRUNumber", None),
        "ProxyImage": (1610743827, 2, (3, 0), (), "ProxyImage", None),
        "SaveAsType": (1610743833, 2, (3, 0), (), "SaveAsType", None),
        "SavePreviewThumbnail": (1610743809, 2, (11, 0), (), "SavePreviewThumbnail", None),
        "ShowProxyDialogBox": (1610743829, 2, (11, 0), (), "ShowProxyDialogBox", None),
        "TempFileExtension": (1610743821, 2, (8, 0), (), "TempFileExtension", None),
        "XrefDemandLoad": (1610743823, 2, (3, 0), (), "XrefDemandLoad", None),
    }
    _prop_map_put_ = {
        "AutoAudit": ((1610743831, LCID, 4, 0),()),
        "AutoSaveInterval": ((1610743813, LCID, 4, 0),()),
        "CreateBackup": ((1610743815, LCID, 4, 0),()),
        "DWFFormat": ((1610743836, LCID, 4, 0),()),
        "DemandLoadARXApp": ((1610743825, LCID, 4, 0),()),
        "FullCRCValidation": ((1610743817, LCID, 4, 0),()),
        "IncrementalSavePercent": ((1610743811, LCID, 4, 0),()),
        "LogFileOn": ((1610743819, LCID, 4, 0),()),
        "ProxyImage": ((1610743827, LCID, 4, 0),()),
        "SaveAsType": ((1610743833, LCID, 4, 0),()),
        "SavePreviewThumbnail": ((1610743809, LCID, 4, 0),()),
        "ShowProxyDialogBox": ((1610743829, LCID, 4, 0),()),
        "TempFileExtension": ((1610743821, LCID, 4, 0),()),
        "XrefDemandLoad": ((1610743823, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesOutput(DispatchBaseClass):
    'This object contains the options from the Output tab on the Options dialog'
    CLSID = IID('{1560A14A-D97B-4B3B-BF95-D0F703723442}')
    coclass_clsid = IID('{46B6BEE0-DA5A-4089-AC8A-70A254F31659}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "DefaultOutputDevice": (1610743809, 2, (8, 0), (), "DefaultOutputDevice", None),
        "DefaultPlotStyleForLayer": (1610743827, 2, (8, 0), (), "DefaultPlotStyleForLayer", None),
        "DefaultPlotStyleForObjects": (1610743825, 2, (8, 0), (), "DefaultPlotStyleForObjects", None),
        "DefaultPlotStyleTable": (1610743823, 2, (8, 0), (), "DefaultPlotStyleTable", None),
        "OLEQuality": (1610743817, 2, (3, 0), (), "OLEQuality", None),
        # Method 'Pdf' returns object of type 'IAcadPreferencesPdfOutput'
        "Pdf": (1610743828, 2, (9, 0), (), "Pdf", '{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}'),
        "PlotLegacy": (1610743815, 2, (11, 0), (), "PlotLegacy", None),
        "PlotPolicy": (1610743821, 2, (3, 0), (), "PlotPolicy", None),
        "PrinterPaperSizeAlert": (1610743813, 2, (11, 0), (), "PrinterPaperSizeAlert", None),
        "PrinterSpoolAlert": (1610743811, 2, (3, 0), (), "PrinterSpoolAlert", None),
        "UseLastPlotSettings": (1610743819, 2, (11, 0), (), "UseLastPlotSettings", None),
    }
    _prop_map_put_ = {
        "DefaultOutputDevice": ((1610743809, LCID, 4, 0),()),
        "DefaultPlotStyleForLayer": ((1610743827, LCID, 4, 0),()),
        "DefaultPlotStyleForObjects": ((1610743825, LCID, 4, 0),()),
        "DefaultPlotStyleTable": ((1610743823, LCID, 4, 0),()),
        "OLEQuality": ((1610743817, LCID, 4, 0),()),
        "PlotLegacy": ((1610743815, LCID, 4, 0),()),
        "PlotPolicy": ((1610743821, LCID, 4, 0),()),
        "PrinterPaperSizeAlert": ((1610743813, LCID, 4, 0),()),
        "PrinterSpoolAlert": ((1610743811, LCID, 4, 0),()),
        "UseLastPlotSettings": ((1610743819, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesPdfOutput(DispatchBaseClass):
    'This object contains the pdf output options'
    CLSID = IID('{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}')
    coclass_clsid = IID('{CB5F57D2-535C-4550-BDAC-FBFDB8778294}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "CreateBookmarks": (1610743821, 2, (11, 0), (), "CreateBookmarks", None),
        "EmbeddedTtf": (1610743814, 2, (11, 0), (), "EmbeddedTtf", None),
        "ExportHyperlinks": (1610743820, 2, (11, 0), (), "ExportHyperlinks", None),
        "LayersSetting": (1610743815, 2, (3, 0), (), "LayersSetting", None),
        "LayoutsToExport": (1610743816, 2, (3, 0), (), "LayoutsToExport", None),
        "PaperHeight": (1610743817, 2, (3, 0), (), "PaperHeight", None),
        "PaperSizeOverride": (1610743810, 2, (11, 0), (), "PaperSizeOverride", None),
        "PaperWidth": (1610743818, 2, (3, 0), (), "PaperWidth", None),
        "ShxTextAsGeometry": (1610743811, 2, (11, 0), (), "ShxTextAsGeometry", None),
        "SimpleGeomOptimization": (1610743812, 2, (11, 0), (), "SimpleGeomOptimization", None),
        "TtfTextAsGeometry": (1610743813, 2, (11, 0), (), "TtfTextAsGeometry", None),
        "UsePlotStyles": (1610743819, 2, (11, 0), (), "UsePlotStyles", None),
        "ZoomToExtents": (1610743809, 2, (11, 0), (), "ZoomToExtents", None),
    }
    _prop_map_put_ = {
        "CreateBookmarks": ((1610743821, LCID, 4, 0),()),
        "EmbeddedTtf": ((1610743814, LCID, 4, 0),()),
        "ExportHyperlinks": ((1610743820, LCID, 4, 0),()),
        "LayersSetting": ((1610743815, LCID, 4, 0),()),
        "LayoutsToExport": ((1610743816, LCID, 4, 0),()),
        "PaperHeight": ((1610743817, LCID, 4, 0),()),
        "PaperSizeOverride": ((1610743810, LCID, 4, 0),()),
        "PaperWidth": ((1610743818, LCID, 4, 0),()),
        "ShxTextAsGeometry": ((1610743811, LCID, 4, 0),()),
        "SimpleGeomOptimization": ((1610743812, LCID, 4, 0),()),
        "TtfTextAsGeometry": ((1610743813, LCID, 4, 0),()),
        "UsePlotStyles": ((1610743819, LCID, 4, 0),()),
        "ZoomToExtents": ((1610743809, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesProfiles(DispatchBaseClass):
    'This object contains the options from the Profiles tab on the Options dialog'
    CLSID = IID('{52F0656B-9D63-4C67-ADBF-E9C732ED271B}')
    coclass_clsid = IID('{71AE8036-20F2-4439-BF71-F27400E3291D}')

    def CopyProfile(self, oldProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
        'Copies the specified profile'
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (24, 0), ((8, 1), (8, 1)),oldProfileName
            , newProfileName)

    def DeleteProfile(self, ProfileName=defaultNamedNotOptArg):
        'Deletes the specified profile'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((8, 1),),ProfileName
            )

    def ExportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg):
        'Exports the active profile so it can be shared with other users'
        return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), ((8, 1), (8, 1)),ProfileName
            , RegFile)

    def GetAllProfileNames(self, pNames=pythoncom.Missing):
        'Gets all available profiles for the system'
        return self._ApplyTypes_(1610743817, 1, (24, 0), ((16396, 2),), 'GetAllProfileNames', None,pNames
            )

    def ImportProfile(self, ProfileName=defaultNamedNotOptArg, RegFile=defaultNamedNotOptArg, IncludePathInfo=defaultNamedNotOptArg):
        'Imports a profile created by another user'
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (24, 0), ((8, 1), (8, 1), (11, 1)),ProfileName
            , RegFile, IncludePathInfo)

    def RenameProfile(self, origProfileName=defaultNamedNotOptArg, newProfileName=defaultNamedNotOptArg):
        'Renames the specified profile'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((8, 1), (8, 1)),origProfileName
            , newProfileName)

    def ResetProfile(self, Profile=defaultNamedNotOptArg):
        'Resets the value in the specified profile to its default values'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((8, 1),),Profile
            )

    _prop_map_get_ = {
        "ActiveProfile": (1610743809, 2, (8, 0), (), "ActiveProfile", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
    }
    _prop_map_put_ = {
        "ActiveProfile": ((1610743809, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSelection(DispatchBaseClass):
    'This object contains the options from the Selection tab on the Options dialog'
    CLSID = IID('{CE512178-E98E-4225-800E-0A29DEE39BCD}')
    coclass_clsid = IID('{469FB7EC-09CF-4D1D-BAC8-4553F5098ADD}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "DisplayGrips": (1610743819, 2, (3, 0), (), "DisplayGrips", None),
        "DisplayGripsWithinBlocks": (1610743821, 2, (11, 0), (), "DisplayGripsWithinBlocks", None),
        "GripColorSelected": (1610743823, 2, (3, 0), (), "GripColorSelected", None),
        "GripColorUnselected": (1610743825, 2, (3, 0), (), "GripColorUnselected", None),
        "GripSize": (1610743827, 2, (3, 0), (), "GripSize", None),
        "PickAdd": (1610743811, 2, (11, 0), (), "PickAdd", None),
        "PickAuto": (1610743815, 2, (11, 0), (), "PickAuto", None),
        "PickBoxSize": (1610743817, 2, (3, 0), (), "PickBoxSize", None),
        "PickDrag": (1610743813, 2, (11, 0), (), "PickDrag", None),
        "PickFirst": (1610743809, 2, (11, 0), (), "PickFirst", None),
        "PickGroup": (1610743829, 2, (11, 0), (), "PickGroup", None),
    }
    _prop_map_put_ = {
        "DisplayGrips": ((1610743819, LCID, 4, 0),()),
        "DisplayGripsWithinBlocks": ((1610743821, LCID, 4, 0),()),
        "GripColorSelected": ((1610743823, LCID, 4, 0),()),
        "GripColorUnselected": ((1610743825, LCID, 4, 0),()),
        "GripSize": ((1610743827, LCID, 4, 0),()),
        "PickAdd": ((1610743811, LCID, 4, 0),()),
        "PickAuto": ((1610743815, LCID, 4, 0),()),
        "PickBoxSize": ((1610743817, LCID, 4, 0),()),
        "PickDrag": ((1610743813, LCID, 4, 0),()),
        "PickFirst": ((1610743809, LCID, 4, 0),()),
        "PickGroup": ((1610743829, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesSystem(DispatchBaseClass):
    'This object contains the options from the System tab on the Options dialog'
    CLSID = IID('{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}')
    coclass_clsid = IID('{8A48E79C-D378-4111-82D9-A25F84F5B6DC}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "BeepOnError": (1610743819, 2, (11, 0), (), "BeepOnError", None),
        "DisplayOLEScale": (1610743811, 2, (11, 0), (), "DisplayOLEScale", None),
        "EnableStartupDialog": (1610743817, 2, (11, 0), (), "EnableStartupDialog", None),
        "LoadAcadLspInAllDocuments": (1610743823, 2, (11, 0), (), "LoadAcadLspInAllDocuments", None),
        "ShowWarningMessages": (1610743821, 2, (11, 0), (), "ShowWarningMessages", None),
        "SingleDocumentMode": (1610743809, 2, (11, 0), (), "SingleDocumentMode", None),
        "StoreSQLIndex": (1610743813, 2, (11, 0), (), "StoreSQLIndex", None),
        "TablesReadOnly": (1610743815, 2, (11, 0), (), "TablesReadOnly", None),
    }
    _prop_map_put_ = {
        "BeepOnError": ((1610743819, LCID, 4, 0),()),
        "DisplayOLEScale": ((1610743811, LCID, 4, 0),()),
        "EnableStartupDialog": ((1610743817, LCID, 4, 0),()),
        "LoadAcadLspInAllDocuments": ((1610743823, LCID, 4, 0),()),
        "ShowWarningMessages": ((1610743821, LCID, 4, 0),()),
        "SingleDocumentMode": ((1610743809, LCID, 4, 0),()),
        "StoreSQLIndex": ((1610743813, LCID, 4, 0),()),
        "TablesReadOnly": ((1610743815, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadPreferencesUser(DispatchBaseClass):
    'This object contains the options from the User tab on the Options dialog'
    CLSID = IID('{689AE380-B75C-430E-8A70-D116D8B4FA63}')
    coclass_clsid = IID('{DD509194-682F-49FE-9984-C7F0EE819A45}')

    _prop_map_get_ = {
        "ADCInsertUnitsDefaultSource": (1610743817, 2, (3, 0), (), "ADCInsertUnitsDefaultSource", None),
        "ADCInsertUnitsDefaultTarget": (1610743819, 2, (3, 0), (), "ADCInsertUnitsDefaultTarget", None),
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "HyperlinkDisplayCursor": (1610743813, 2, (11, 0), (), "HyperlinkDisplayCursor", None),
        "HyperlinkDisplayTooltip": (1610743815, 2, (11, 0), (), "HyperlinkDisplayTooltip", None),
        "KeyboardAccelerator": (1610743809, 2, (3, 0), (), "KeyboardAccelerator", None),
        "KeyboardPriority": (1610743811, 2, (3, 0), (), "KeyboardPriority", None),
        "SCMCommandMode": (1610743827, 2, (3, 0), (), "SCMCommandMode", None),
        "SCMDefaultMode": (1610743823, 2, (3, 0), (), "SCMDefaultMode", None),
        "SCMEditMode": (1610743825, 2, (3, 0), (), "SCMEditMode", None),
        "SCMTimeMode": (1610743829, 2, (11, 0), (), "SCMTimeMode", None),
        "SCMTimeValue": (1610743831, 2, (3, 0), (), "SCMTimeValue", None),
        "ShortCutMenuDisplay": (1610743821, 2, (11, 0), (), "ShortCutMenuDisplay", None),
    }
    _prop_map_put_ = {
        "ADCInsertUnitsDefaultSource": ((1610743817, LCID, 4, 0),()),
        "ADCInsertUnitsDefaultTarget": ((1610743819, LCID, 4, 0),()),
        "HyperlinkDisplayCursor": ((1610743813, LCID, 4, 0),()),
        "HyperlinkDisplayTooltip": ((1610743815, LCID, 4, 0),()),
        "KeyboardAccelerator": ((1610743809, LCID, 4, 0),()),
        "KeyboardPriority": ((1610743811, LCID, 4, 0),()),
        "SCMCommandMode": ((1610743827, LCID, 4, 0),()),
        "SCMDefaultMode": ((1610743823, LCID, 4, 0),()),
        "SCMEditMode": ((1610743825, LCID, 4, 0),()),
        "SCMTimeMode": ((1610743829, LCID, 4, 0),()),
        "SCMTimeValue": ((1610743831, LCID, 4, 0),()),
        "ShortCutMenuDisplay": ((1610743821, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSecurityParams(DispatchBaseClass):
    'Security Parameters Interface'
    CLSID = IID('{A058E098-4DCF-4E3B-93BC-EF0FA19B718A}')
    coclass_clsid = IID('{06F4FD5D-DBD9-4B44-B464-6683CC541EDD}')

    _prop_map_get_ = {
        "Action": (1, 2, (3, 0), (), "Action", None),
        "Algorithm": (5, 2, (3, 0), (), "Algorithm", None),
        "Comment": (10, 2, (8, 0), (), "Comment", None),
        "Issuer": (8, 2, (8, 0), (), "Issuer", None),
        "KeyLength": (6, 2, (3, 0), (), "KeyLength", None),
        "Password": (2, 2, (8, 0), (), "Password", None),
        "ProviderName": (4, 2, (8, 0), (), "ProviderName", None),
        "ProviderType": (3, 2, (3, 0), (), "ProviderType", None),
        "SerialNumber": (9, 2, (8, 0), (), "SerialNumber", None),
        "Subject": (7, 2, (8, 0), (), "Subject", None),
        "TimeServer": (11, 2, (8, 0), (), "TimeServer", None),
    }
    _prop_map_put_ = {
        "Action": ((1, LCID, 4, 0),()),
        "Algorithm": ((5, LCID, 4, 0),()),
        "Comment": ((10, LCID, 4, 0),()),
        "Issuer": ((8, LCID, 4, 0),()),
        "KeyLength": ((6, LCID, 4, 0),()),
        "Password": ((2, LCID, 4, 0),()),
        "ProviderName": ((4, LCID, 4, 0),()),
        "ProviderType": ((3, LCID, 4, 0),()),
        "SerialNumber": ((9, LCID, 4, 0),()),
        "Subject": ((7, LCID, 4, 0),()),
        "TimeServer": ((11, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadSelectionSet(DispatchBaseClass):
    'A group of one or more BricsCAD objects specified for processing as a single unit'
    CLSID = IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')
    coclass_clsid = IID('{F3862E27-3753-44F7-BDB0-24468C8E8CF6}')

    def AddItems(self, pSelSet=defaultNamedNotOptArg):
        'Adds one or more objects to the specified selection set'
        pSelSet = VTDISPArrayOrVal(pSelSet)
        return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((12, 1),),pSelSet
            )

    def Clear(self):
        'Clears the specified selection set of all items'
        return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

    def Erase(self):
        'Erases all the objects in a selection set'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    def Highlight(self, bFlag=defaultNamedNotOptArg):
        'Sets the highlight status for the given object, or for all objects in a given selection set'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((11, 1),),bFlag
            )

    # Result is of type IAcadEntity
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret

    def RemoveItems(self, Objects=defaultNamedNotOptArg):
        'Removes specified items from the group or selection set'
        pSelSet = VTDISPArrayOrVal(pSelSet)
        return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((12, 1),),Objects
            )

    def Select(self, Mode=defaultNamedNotOptArg, Point1=defaultNamedOptArg, Point2=defaultNamedOptArg, FilterType=defaultNamedOptArg
            , FilterData=defaultNamedOptArg):
        'Selects objects and places them into a selection set'
        Point1 = VTR8ArrayOrVal(Point1)
        Point2 = VTR8ArrayOrVal(Point2)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Mode
            , Point1, Point2, FilterType, FilterData)

    def SelectAtPoint(self, Point=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Selects an object passing through a given point and places it into a selection set'
        Point = VTR8ArrayOrVal(Point)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1), (12, 17), (12, 17)),Point
            , FilterType, FilterData)

    def SelectByPolygon(self, Mode=defaultNamedNotOptArg, PointsList=defaultNamedNotOptArg, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Selects entities within a fence and adds them to the selection set'
        PointsList = VTR8ArrayOrVal(PointsList)
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 17), (12, 17)),Mode
            , PointsList, FilterType, FilterData)

    def SelectOnScreen(self, FilterType=defaultNamedOptArg, FilterData=defaultNamedOptArg):
        'Prompts the user to pick an object from the screen'
        FilterType = VTI2ArrayOrVal(FilterType)
        FilterData = VTVARArrayOrVal(FilterData)
        return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 17), (12, 17)),FilterType
            , FilterData)

    def Update(self):
        'Updates the object to the drawing screen'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (6, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1, 2, (3, 0), (), "Count", None),
        "Name": (2, 2, (8, 0), (), "Name", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
        return ret
    
    def __getitem__(self, *args): 
        try:
            return self.__call__(*args)
        except:
            raise IndexError

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{FFE64704-CEBD-4C88-A867-E7C821AFE488}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadSelectionSets(DispatchBaseClass):
    'The collection of all selection sets in the drawing'
    CLSID = IID('{37E34D42-8CD8-4E25-83BF-80C791AFEADE}')
    coclass_clsid = IID('{2F021E6D-67B2-4955-9135-A28F93BCEE6D}')

    # Result is of type IAcadSelectionSet
    def Add(self, Name=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')
        return ret

    # Result is of type IAcadSelectionSet
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (2, 2, (3, 0), (), "Count", None),
    }
    _prop_map_put_ = {
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection, group, or selection set'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadState(DispatchBaseClass):
    'Application State Interface'
    CLSID = IID('{C2016470-443B-40D0-AD93-231ACFDCF594}')
    coclass_clsid = IID('{5696C1B9-643B-4E6E-B711-DB897137424E}')

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "IsQuiescent": (2, 2, (11, 0), (), "IsQuiescent", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadToolbar(DispatchBaseClass):
    'IAcadToolbar Interface'
    CLSID = IID('{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')
    coclass_clsid = IID('{A8D0AE76-640B-44AA-BB5C-6986706CA9F6}')

    # Result is of type IAcadToolbarItem
    def AddSeparator(self, Index=defaultNamedNotOptArg):
        'Adds a separator to an existing toolbar'
        ret = self._oleobj_.InvokeTypes(1610743830, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'AddSeparator', '{EBCED992-0BB7-4165-B4D6-44261F377565}')
        return ret

    # Result is of type IAcadToolbarItem
    def AddToolbarButton(self, Index=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, HelpString=defaultNamedNotOptArg, Macro=defaultNamedNotOptArg
            , FlyoutButton=defaultNamedOptArg):
        'Adds a toolbar item to a toolbar at a specified position'
        ret = self._oleobj_.InvokeTypes(1610743829, LCID, 1, (9, 0), ((12, 1), (8, 1), (8, 1), (8, 1), (12, 17)),Index
            , Name, HelpString, Macro, FlyoutButton)
        if ret is not None:
            ret = Dispatch(ret, 'AddToolbarButton', '{EBCED992-0BB7-4165-B4D6-44261F377565}')
        return ret

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1610743833, LCID, 1, (24, 0), (),)

    def Dock(self, Side=defaultNamedNotOptArg):
        'Docks the toolbar to the owning frame window'
        return self._oleobj_.InvokeTypes(1610743831, LCID, 1, (24, 0), ((3, 1),),Side
            )

    def Float(self, top=defaultNamedNotOptArg, left=defaultNamedNotOptArg, NumberFloatRows=defaultNamedNotOptArg):
        'Floats the toolbar'
        return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),top
            , left, NumberFloatRows)

    # Result is of type IAcadToolbarItem
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{EBCED992-0BB7-4165-B4D6-44261F377565}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "DockStatus": (1610743817, 2, (3, 0), (), "DockStatus", None),
        "FloatingRows": (1610743825, 2, (3, 0), (), "FloatingRows", None),
        "Height": (1610743824, 2, (3, 0), (), "Height", None),
        "HelpString": (1610743827, 2, (8, 0), (), "HelpString", None),
        "LargeButtons": (1610743818, 2, (11, 0), (), "LargeButtons", None),
        "Name": (1610743813, 2, (8, 0), (), "Name", None),
        "Parent": (1610743812, 2, (9, 0), (), "Parent", None),
        "TagString": (1610743834, 2, (8, 0), (), "TagString", None),
        "Visible": (1610743815, 2, (11, 0), (), "Visible", None),
        "Width": (1610743823, 2, (3, 0), (), "Width", None),
        "left": (1610743819, 2, (3, 0), (), "left", None),
        "top": (1610743821, 2, (3, 0), (), "top", None),
    }
    _prop_map_put_ = {
        "FloatingRows": ((1610743825, LCID, 4, 0),()),
        "HelpString": ((1610743827, LCID, 4, 0),()),
        "Name": ((1610743813, LCID, 4, 0),()),
        "Visible": ((1610743815, LCID, 4, 0),()),
        "left": ((1610743819, LCID, 4, 0),()),
        "top": ((1610743821, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{EBCED992-0BB7-4165-B4D6-44261F377565}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{EBCED992-0BB7-4165-B4D6-44261F377565}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadToolbarItem(DispatchBaseClass):
    'A single toolbar button'
    CLSID = IID('{EBCED992-0BB7-4165-B4D6-44261F377565}')
    coclass_clsid = IID('{C9F46D28-7AEE-48F1-B8B7-6F8E7EC40625}')

    def AttachToolbarToFlyout(self, MenuGroupName=defaultNamedNotOptArg, ToolbarName=defaultNamedNotOptArg):
        'Attaches a toolbar to a toolbar button defined as a flyout'
        return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (24, 0), ((8, 1), (8, 1)),MenuGroupName
            , ToolbarName)

    def Delete(self):
        'Deletes a specified object'
        return self._oleobj_.InvokeTypes(1610743824, LCID, 1, (24, 0), (),)

    def GetBitmaps(self, SmallIconName=pythoncom.Missing, LargeIconName=pythoncom.Missing):
        'Gets the large and small bitmaps used as icons for the toolbar item'
        return self._ApplyTypes_(1610743821, 1, (24, 0), ((16392, 2), (16392, 2)), 'GetBitmaps', None,SmallIconName
            , LargeIconName)

    def SetBitmaps(self, SmallIconName=defaultNamedNotOptArg, LargeIconName=defaultNamedNotOptArg):
        'Sets the large and small bitmaps used as icons for the toolbar item'
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (24, 0), ((8, 1), (8, 1)),SmallIconName
            , LargeIconName)

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743808, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        # Method 'Flyout' returns object of type 'IAcadToolbar'
        "Flyout": (1610743815, 2, (9, 0), (), "Flyout", '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}'),
        "HelpString": (1610743819, 2, (8, 0), (), "HelpString", None),
        "Index": (1610743818, 2, (3, 0), (), "Index", None),
        "Macro": (1610743816, 2, (8, 0), (), "Macro", None),
        "Name": (1610743810, 2, (8, 0), (), "Name", None),
        # Method 'Parent' returns object of type 'IAcadToolbar'
        "Parent": (1610743809, 2, (9, 0), (), "Parent", '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}'),
        "TagString": (1610743812, 2, (8, 0), (), "TagString", None),
        "Type": (1610743814, 2, (3, 0), (), "Type", None),
    }
    _prop_map_put_ = {
        "HelpString": ((1610743819, LCID, 4, 0),()),
        "Macro": ((1610743816, LCID, 4, 0),()),
        "Name": ((1610743810, LCID, 4, 0),()),
        "TagString": ((1610743812, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IAcadToolbars(DispatchBaseClass):
    'A collection of Toolbar objects'
    CLSID = IID('{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}')
    coclass_clsid = IID('{6625C943-4F9E-4FCD-B847-454FCDC56C19}')

    # Result is of type IAcadToolbar
    def Add(self, ToolbarName=defaultNamedNotOptArg):
        'Creates a member object and adds it to the appropriate collection'
        ret = self._oleobj_.InvokeTypes(1610743815, LCID, 1, (9, 0), ((8, 1),),ToolbarName
            )
        if ret is not None:
            ret = Dispatch(ret, 'Add', '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')
        return ret

    # Result is of type IAcadToolbar
    def Item(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Item', '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1610743811, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        "Count": (1610743810, 2, (3, 0), (), "Count", None),
        "LargeButtons": (1610743813, 2, (11, 0), (), "LargeButtons", None),
        # Method 'Parent' returns object of type 'IAcadMenuGroup'
        "Parent": (1610743812, 2, (9, 0), (), "Parent", '{DF14CB14-CDC6-463F-B71C-356149D1F935}'),
    }
    _prop_map_put_ = {
        "LargeButtons": ((1610743813, LCID, 4, 0),()),
    }
    # Default method for this class is 'Item'
    def __call__(self, Index=defaultNamedNotOptArg):
        'Gets the member object at a given index in a collection'
        ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, '__call__', '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')
        return ret

    def __str__(self, *args):
        return str(self.__call__(*args))
    def __int__(self, *args):
        return int(self.__call__(*args))
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')
    #This class has Count() property - allow len(ob) to provide this
    def __len__(self):
        return self._ApplyTypes_(*(1610743810, 2, (3, 0), (), "Count", None))
    #This class has a __len__ - this is needed so 'if object:' always returns TRUE.
    def __nonzero__(self):
        return True

class IAcadUtility(DispatchBaseClass):
    'A series of methods provided for utility purposes'
    CLSID = IID('{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}')
    coclass_clsid = IID('{AB480185-F159-4B5D-BC9E-AEA9AB722DF1}')

    def AngleFromXAxis(self, StartPoint=defaultNamedNotOptArg, EndPoint=defaultNamedNotOptArg):
        'Gets the angle of a line from the X axis'
        StartPoint = VTR8ArrayOrVal(StartPoint)
        EndPoint = VTR8ArrayOrVal(EndPoint)
        return self._oleobj_.InvokeTypes(1610743820, LCID, 1, (5, 0), ((12, 1), (12, 1)),StartPoint
            , EndPoint)

    def AngleToReal(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
        'Converts an angle as a string to a real (double) value'
        return self._oleobj_.InvokeTypes(1610743808, LCID, 1, (5, 0), ((8, 1), (3, 1)),Angle
            , Unit)

    def AngleToString(self, Angle=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
        'Converts an angle from a real (double) value to a string'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743809, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Angle
            , Unit, precision)

    def CreateTypedArray(self, *args):
        'Creates a variant that contains an array of typed arguments'
        return self._get_good_object_(self._oleobj_.Invoke(*((1610743826,0,1,1)+args)),'CreateTypedArray')

    def DistanceToReal(self, Distance=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg):
        'Converts a distance from a string to a real (double) value'
        return self._oleobj_.InvokeTypes(1610743810, LCID, 1, (5, 0), ((8, 1), (3, 1)),Distance
            , Unit)

    def GetAngle(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the angle specified. Considers the setting of the ANGBASE system variable'
        Point = VTR8ArrayOrVal(Point)
        return self._oleobj_.InvokeTypes(1610743819, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetCorner(self, Point=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
        'Gets a corner of a rectangle'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743821, 1, (12, 0), ((12, 1), (12, 17)), 'GetCorner', None,Point
            , Prompt)

    def GetDistance(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the distance from the prompt line or a selected set of points on the screen'
        Point = VTR8ArrayOrVal(Point)
        return self._oleobj_.InvokeTypes(1610743822, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetEntity(self, Object=pythoncom.Missing, PickedPoint=pythoncom.Missing, Prompt=defaultNamedOptArg):
        'Gets an object interactively'
        Object=None
        PickedPoint=None
        return self._ApplyTypes_(1610743827, 1, (24, 0), ((16393, 2), (16396, 2), (12, 17)), 'GetEntity', None,Object
            , PickedPoint, Prompt)

    def GetInput(self):
        'Converts an input string from the user into a keyword index'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743816, LCID, 1, (8, 0), (),)

    def GetInteger(self, Prompt=defaultNamedOptArg):
        'Gets an integer value from the user'
        return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (3, 0), ((12, 17),),Prompt
            )

    def GetKeyword(self, Prompt=defaultNamedOptArg):
        'Gets a keyword string from the user'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743817, LCID, 1, (8, 0), ((12, 17),),Prompt
            )

    def GetObjectIdString(self, Object=defaultNamedNotOptArg, asHex=defaultNamedNotOptArg):
        'Returns an integer or hexadecimal string for the given ObjectId.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743839, LCID, 1, (8, 0), ((9, 1), (11, 1)),Object
            , asHex)

    def GetOrientation(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the angle specified. Ignores the setting of the ANGBASE system variable'
        Point = VTR8ArrayOrVal(Point)
        return self._oleobj_.InvokeTypes(1610743823, LCID, 1, (5, 0), ((12, 17), (12, 17)),Point
            , Prompt)

    def GetPoint(self, Prompt=defaultNamedOptArg):
        'Gets the point selected in the application'
        Point = pythoncom.Empty
        return self._ApplyTypes_(1610743824, 1, (12, 0), ((12, 17), (12, 17)), 'GetPoint', None,Point
            , Prompt)
        
    def GetPointWithBase(self, Point=defaultNamedOptArg, Prompt=defaultNamedOptArg):
        'Gets the point selected in AutoCAD'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743824, 1, (12, 0), ((12, 17), (12, 17)), 'GetPoint', None,Point
            , Prompt)

    def GetReal(self, Prompt=defaultNamedOptArg):
        'Gets a real (double) value from the user'
        return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (5, 0), ((12, 17),),Prompt
            )

    def GetRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=pythoncom.Missing, IgnoreCache=defaultNamedNotOptArg):
        'Downloads the file specified by a URL. Not mplemented yet.'
        return self._ApplyTypes_(1610743831, 1, (24, 0), ((8, 1), (16392, 2), (11, 1)), 'GetRemoteFile', None,URL
            , LocalFile, IgnoreCache)

    def GetString(self, HasSpaces=defaultNamedNotOptArg, Prompt=defaultNamedOptArg):
        'Gets a string from the user'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743818, LCID, 1, (8, 0), ((3, 1), (12, 17)),HasSpaces
            , Prompt)

    def GetSubEntity(self, Object=pythoncom.Missing, PickedPoint=pythoncom.Missing, transMatrix=pythoncom.Missing, ContextData=pythoncom.Missing
            , Prompt=defaultNamedOptArg):
        'Gets an object or subentity interactively'
        Object=pythoncom.Missing
        PickedPoint=pythoncom.Missing
        transMatrix=pythoncom.Missing
        ContextData=pythoncom.Missing
        return self._ApplyTypes_(1610743829, 1, (24, 0), ((16393, 2), (16396, 2), (16396, 2), (16396, 2), (12, 17)), 'GetSubEntity', None,Object
            , PickedPoint, transMatrix, ContextData, Prompt)

    def InitializeUserInput(self, Bits=defaultNamedNotOptArg, KeyWordList=defaultNamedOptArg):
        'Initializes the GetKeyword method'
        return self._oleobj_.InvokeTypes(1610743813, LCID, 1, (24, 0), ((3, 1), (12, 17)),Bits
            , KeyWordList)

    def IsRemoteFile(self, LocalFile=defaultNamedNotOptArg, URL=pythoncom.Missing):
        'Returns the URL that a remote file was downloaded from. Not mplemented yet.'
        return self._ApplyTypes_(1610743833, 1, (11, 0), ((8, 1), (16392, 2)), 'IsRemoteFile', None,LocalFile
            , URL)

    def IsURL(self, URL=defaultNamedNotOptArg):
        'Validates a given URL. Not mplemented yet.'
        return self._oleobj_.InvokeTypes(1610743830, LCID, 1, (11, 0), ((8, 1),),URL
            )

    def LaunchBrowserDialog(self, SelectedURL=pythoncom.Missing, DialogTitle=defaultNamedNotOptArg, OpenButtonCaption=defaultNamedNotOptArg, StartPageURL=defaultNamedNotOptArg
            , RegistryRootKey=defaultNamedNotOptArg, OpenButtonAlwaysEnabled=defaultNamedNotOptArg):
        'Launches the Web Browser dialog that allows the user to navigate to any URL and select a URL. Not mplemented yet.'
        return self._ApplyTypes_(1610743834, 1, (11, 0), ((16392, 2), (8, 1), (8, 1), (8, 1), (8, 1), (11, 1)), 'LaunchBrowserDialog', None,SelectedURL
            , DialogTitle, OpenButtonCaption, StartPageURL, RegistryRootKey, OpenButtonAlwaysEnabled
            )

    def LogMessage(self, msg=defaultNamedNotOptArg):
        'Writes message to temp log file during regress script test session'
        return self._oleobj_.InvokeTypes(1610743856, LCID, 1, (24, 0), ((8, 1),),msg
            )

    def ObjectId32ToObjectIdString(self, objectId32=defaultNamedNotOptArg):
        'Returns an integer string for the ObjectId, specified as 32 bit value.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743838, LCID, 1, (8, 0), ((3, 1),),objectId32
            )

    def PolarPoint(self, Point=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Distance=defaultNamedNotOptArg):
        'Gets the point at a specified angle and distance from a given point'
        Point = VTR8ArrayOrVal(Point)
        return self._ApplyTypes_(1610743825, 1, (12, 0), ((12, 1), (5, 1), (5, 1)), 'PolarPoint', None,Point
            , Angle, Distance)

    def Prompt(self, Message=defaultNamedNotOptArg):
        'Posts a prompt to the command line'
        return self._oleobj_.InvokeTypes(1610743828, LCID, 1, (24, 0), ((8, 1),),Message
            )

    def PutRemoteFile(self, URL=defaultNamedNotOptArg, LocalFile=defaultNamedNotOptArg):
        'Uploads a file to a remote location specified by a URL. Not mplemented yet.'
        return self._oleobj_.InvokeTypes(1610743832, LCID, 1, (24, 0), ((8, 1), (8, 1)),URL
            , LocalFile)

    def RealToString(self, Value=defaultNamedNotOptArg, Unit=defaultNamedNotOptArg, precision=defaultNamedNotOptArg):
        'Converts a real (double) value to a string'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (8, 0), ((5, 1), (3, 1), (3, 1)),Value
            , Unit, precision)

    def SendModelessOperationEnded(self, operation=defaultNamedNotOptArg):
        'Notifyes the system about the end of a modeless operation.'
        return self._oleobj_.InvokeTypes(1610743836, LCID, 1, (24, 0), ((8, 0),),operation
            )

    def SendModelessOperationStart(self, operation=defaultNamedNotOptArg):
        'Notifyes the system about the start of a modeless operation.'
        return self._oleobj_.InvokeTypes(1610743835, LCID, 1, (24, 0), ((8, 0),),operation
            )

    def TranslateCoordinates(self, Point=defaultNamedNotOptArg, FromCoordSystem=defaultNamedNotOptArg, ToCoordSystem=defaultNamedNotOptArg, Displacement=defaultNamedNotOptArg
            , OCSNormal=defaultNamedOptArg):
        'Translates a point from one coordinate system to another coordinate system'
        Point = VTI2ArrayOrVal(Point)
        return self._ApplyTypes_(1610743812, 1, (12, 0), ((12, 1), (3, 1), (3, 1), (3, 1), (12, 17)), 'TranslateCoordinates', None,Point
            , FromCoordSystem, ToCoordSystem, Displacement, OCSNormal)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaAuditInfo(DispatchBaseClass):
    'IOdaAudit Interface'
    CLSID = IID('{56B202FE-BE71-43B4-B504-1902EDE89644}')
    coclass_clsid = None

    _prop_map_get_ = {
        "fixErrors": (3, 2, (11, 0), (), "fixErrors", None),
        "numErrors": (2, 2, (3, 0), (), "numErrors", None),
        "numFixes": (1, 2, (3, 0), (), "numFixes", None),
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaBagFiler(DispatchBaseClass):
    'IOdaBagFiler Interface'
    CLSID = IID('{6EBA6B5A-1D9F-4B21-BC0B-35EFDBAB543D}')
    coclass_clsid = IID('{DF962AF5-E3C8-4552-B65D-698F48DE2759}')

    def BufferToObject(self, pObj=defaultNamedNotOptArg, ResType=defaultNamedNotOptArg, ResValue=defaultNamedNotOptArg):
        'Writes result buffer to object.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((9, 1), (12, 1), (12, 1)),pObj
            , ResType, ResValue)

    def ObjectToBuffer(self, pObj=defaultNamedNotOptArg, ResType=pythoncom.Missing, ResValue=pythoncom.Missing):
        'Reads object and fills in result buffer.'
        return self._ApplyTypes_(1, 1, (24, 0), ((9, 1), (16396, 2), (16396, 2)), 'ObjectToBuffer', None,pObj
            , ResType, ResValue)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaBmpOut(DispatchBaseClass):
    'IOdaBmpOut Interface'
    CLSID = IID('{11C4F7AA-D8CC-4762-8C7C-3064E65EEDBD}')
    coclass_clsid = IID('{97B88F76-4023-412F-8C23-607C526E4E7D}')

    def WriteFile(self, database=defaultNamedNotOptArg, BitmapName=defaultNamedNotOptArg):
        'Writes Bmp file.'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((9, 1), (8, 1)),database
            , BitmapName)

    _prop_map_get_ = {
        # Method 'Background' returns object of type 'IAcadAcCmColor'
        "Background": (2, 2, (9, 0), (), "Background", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "BitPerPixel": (6, 2, (3, 0), (), "BitPerPixel", None),
        "Height": (4, 2, (3, 0), (), "Height", None),
        "Palette": (3, 2, (12, 0), (), "Palette", None),
        "Width": (5, 2, (3, 0), (), "Width", None),
    }
    _prop_map_put_ = {
        "Background": ((2, LCID, 4, 0),()),
        "BitPerPixel": ((6, LCID, 4, 0),()),
        "Height": ((4, LCID, 4, 0),()),
        "Palette": ((3, LCID, 4, 0),()),
        "Width": ((5, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaConsole(DispatchBaseClass):
    'IOdaConsole Interface'
    CLSID = IID('{9DFDB619-A15D-43CD-92D5-7987D452B9F1}')
    coclass_clsid = None

    def GetString(self, bAllowSpaces=defaultNamedNotOptArg):
        'Get user input string'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(2, LCID, 1, (8, 0), ((11, 1),),bAllowSpaces
            )

    def PutString(self, text=defaultNamedNotOptArg):
        'Output string'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((8, 1),),text
            )

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaDwf3dExport(DispatchBaseClass):
    'IOdaDwf3dExport Interface'
    CLSID = IID('{4E99C4A8-AFC0-45E9-B312-61D7DB4F2EE6}')
    coclass_clsid = IID('{7CCF62DE-076C-4ED9-9ED2-3D4A5AC9E4DE}')

    def Export3dDwf(self, database=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
        'Export to 3D Dwf file.'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((9, 1), (8, 1)),database
            , FileName)

    _prop_map_get_ = {
        # Method 'Background' returns object of type 'IAcadAcCmColor'
        "Background": (2, 2, (9, 0), (), "Background", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "Palette": (4, 2, (12, 0), (), "Palette", None),
        "Title": (3, 2, (8, 0), (), "Title", None),
        "xSize": (5, 2, (3, 0), (), "xSize", None),
        "ySize": (6, 2, (3, 0), (), "ySize", None),
    }
    _prop_map_put_ = {
        "Background": ((2, LCID, 4, 0),()),
        "Palette": ((4, LCID, 4, 0),()),
        "Title": ((3, LCID, 4, 0),()),
        "xSize": ((5, LCID, 4, 0),()),
        "ySize": ((6, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaDwfImporter(DispatchBaseClass):
    'IOdaDwfImport Interface'
    CLSID = IID('{C5631279-833D-4FE0-8965-B06E2FEC0E9C}')
    coclass_clsid = IID('{46901A1D-C99C-45E0-B2F5-D99C07CD8BBB}')

    def Import(self, database=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg, Password='0', wPaper=297.0
            , hPaper=210.0):
        'Import DWF file to database'
        return self._ApplyTypes_(1, 1, (24, 32), ((9, 1), (8, 1), (8, 49), (5, 49), (5, 49)), 'Import', None,database
            , FileName, Password, wPaper, hPaper)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaDwfImporter2(DispatchBaseClass):
    'IOdaDwfImport2 Interface'
    CLSID = IID('{7E8D21F1-6343-4CCC-9F7D-0B270A05DC12}')
    coclass_clsid = None

    def Close(self):
        'Release imported database'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

    def Import(self, database=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg, Password='0', wPaper=297.0
            , hPaper=210.0):
        'Import DWF file to database'
        return self._ApplyTypes_(1, 1, (24, 32), ((9, 1), (8, 1), (8, 49), (5, 49), (5, 49)), 'Import', None,database
            , FileName, Password, wPaper, hPaper)

    # The method Properties is actually a property, but must be used as a method to correctly pass the arguments
    def Properties(self, Name=defaultNamedNotOptArg):
        'Importer properties'
        return self._ApplyTypes_(2, 2, (12, 0), ((8, 1),), 'Properties', None,Name
            )

    # The method SetProperties is actually a property, but must be used as a method to correctly pass the arguments
    def SetProperties(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Importer properties'
        return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((8, 1), (12, 1)),Name
            , arg1)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaDwfPageData(DispatchBaseClass):
    'IOdaDwfPageData Interface'
    CLSID = IID('{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}')
    coclass_clsid = None

    _prop_map_get_ = {
        "Author": (2, 2, (8, 0), (), "Author", None),
        "Comments": (6, 2, (8, 0), (), "Comments", None),
        "Company": (5, 2, (8, 0), (), "Company", None),
        "Copyright": (10, 2, (8, 0), (), "Copyright", None),
        "Description": (9, 2, (8, 0), (), "Description", None),
        "Keywords": (8, 2, (8, 0), (), "Keywords", None),
        "LayoutName": (1, 2, (8, 0), (), "LayoutName", None),
        "Reviewers": (7, 2, (8, 0), (), "Reviewers", None),
        "Subject": (4, 2, (8, 0), (), "Subject", None),
        "Title": (3, 2, (8, 0), (), "Title", None),
    }
    _prop_map_put_ = {
        "Author": ((2, LCID, 4, 0),()),
        "Comments": ((6, LCID, 4, 0),()),
        "Company": ((5, LCID, 4, 0),()),
        "Copyright": ((10, LCID, 4, 0),()),
        "Description": ((9, LCID, 4, 0),()),
        "Keywords": ((8, LCID, 4, 0),()),
        "Reviewers": ((7, LCID, 4, 0),()),
        "Subject": ((4, LCID, 4, 0),()),
        "Title": ((3, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaDwfTemplate(DispatchBaseClass):
    'IOdaDwfTemplate Interface'
    CLSID = IID('{8F2A46C2-4D8A-46D5-8BBE-B06A4027BE10}')
    coclass_clsid = IID('{81186CAF-6BAC-4DD6-B470-3C7930A28DD5}')

    def AddPage(self, LayoutName=defaultNamedNotOptArg):
        'method AddPage'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (3, 0), ((8, 1),),LayoutName
            )

    # Result is of type IOdaDwfPageData
    # The method Page is actually a property, but must be used as a method to correctly pass the arguments
    def Page(self, Index=defaultNamedNotOptArg):
        'property Page'
        ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((12, 1),),Index
            )
        if ret is not None:
            ret = Dispatch(ret, 'Page', '{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}')
        return ret

    def RemoveAllPages(self):
        'method RemoveAllPages'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

    def RemovePage(self, Index=defaultNamedNotOptArg):
        'method RemovePage'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),Index
            )

    def WriteFile(self, database=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg, FileType=defaultNamedNotOptArg, version=defaultNamedNotOptArg):
        'Writes DWF file.'
        return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((9, 1), (8, 1), (3, 1), (3, 1)),database
            , FileName, FileType, version)

    _prop_map_get_ = {
        # Method 'Background' returns object of type 'IAcadAcCmColor'
        "Background": (11, 2, (9, 0), (), "Background", '{6F2B458D-6232-4085-AA60-BD5E8A967722}'),
        "ExportInvisibleLayers": (12, 2, (11, 0), (), "ExportInvisibleLayers", None),
        "ForceInitialViewToExtents": (13, 2, (11, 0), (), "ForceInitialViewToExtents", None),
        "PageCount": (3, 2, (3, 0), (), "PageCount", None),
        "Palette": (21, 2, (12, 0), (), "Palette", None),
        "Password": (17, 2, (8, 0), (), "Password", None),
        "Publisher": (18, 2, (8, 0), (), "Publisher", None),
        "SkipLayerInfo": (15, 2, (11, 0), (), "SkipLayerInfo", None),
        "SkipNamedViewsInfo": (16, 2, (11, 0), (), "SkipNamedViewsInfo", None),
        "SourceProductName": (20, 2, (8, 0), (), "SourceProductName", None),
        "WideComments": (19, 2, (8, 0), (), "WideComments", None),
        "xSize": (22, 2, (3, 0), (), "xSize", None),
        "ySize": (23, 2, (3, 0), (), "ySize", None),
    }
    _prop_map_put_ = {
        "Background": ((11, LCID, 4, 0),()),
        "ExportInvisibleLayers": ((12, LCID, 4, 0),()),
        "ForceInitialViewToExtents": ((13, LCID, 4, 0),()),
        "Palette": ((21, LCID, 4, 0),()),
        "Password": ((17, LCID, 4, 0),()),
        "Publisher": ((18, LCID, 4, 0),()),
        "SkipLayerInfo": ((15, LCID, 4, 0),()),
        "SkipNamedViewsInfo": ((16, LCID, 4, 0),()),
        "SourceProductName": ((20, LCID, 4, 0),()),
        "WideComments": ((19, LCID, 4, 0),()),
        "xSize": ((22, LCID, 4, 0),()),
        "ySize": ((23, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaHostApp(DispatchBaseClass):
    'IOdaHostApp Interface'
    CLSID = IID('{E789E253-BEDC-44FF-B228-AD3A17D9AB3A}')
    coclass_clsid = None

    def AuditDatabase(self, pDoc=defaultNamedNotOptArg, bFixErrors=defaultNamedNotOptArg):
        'method AuditDatabase - perform database audit'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 0), (11, 0)),pDoc
            , bFixErrors)

    def BrowseForOpenFileName(self, rootFolder=defaultNamedNotOptArg, fileFilter=defaultNamedNotOptArg, bOk=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
        'show the open file dialog with preview '
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((8, 0), (8, 0), (16395, 0), (16392, 0)),rootFolder
            , fileFilter, bOk, FileName)

    def OriginalFileType(self, pDoc=defaultNamedNotOptArg, FileType=defaultNamedNotOptArg):
        'method OriginalFileType - return the original file version and type'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 0), (16396, 0)),pDoc
            , FileType)

    # Result is of type IAcadDocument
    def Recover(self, FileName=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Recover specified file'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (12, 17)),FileName
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'Recover', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        # Method 'AuditInfo' returns object of type 'IOdaAuditInfo'
        "AuditInfo": (4, 2, (9, 0), (), "AuditInfo", '{56B202FE-BE71-43B4-B504-1902EDE89644}'),
        "OpenDbPartially": (7, 2, (11, 0), (), "OpenDbPartially", None),
    }
    _prop_map_put_ = {
        "OpenDbPartially": ((7, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaHostApp2(DispatchBaseClass):
    'IOdaHostApp2 Interface'
    CLSID = IID('{CFE29DD1-2A1B-49F9-853E-11918A789C6D}')
    coclass_clsid = IID('{D81CF9E5-4C85-435B-876B-C706E2D5F00E}')

    def AuditDatabase(self, pDoc=defaultNamedNotOptArg, bFixErrors=defaultNamedNotOptArg):
        'method AuditDatabase - perform database audit'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 0), (11, 0)),pDoc
            , bFixErrors)

    def BrowseForOpenFileName(self, rootFolder=defaultNamedNotOptArg, fileFilter=defaultNamedNotOptArg, bOk=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
        'show the open file dialog with preview '
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((8, 0), (8, 0), (16395, 0), (16392, 0)),rootFolder
            , fileFilter, bOk, FileName)

    def OriginalFileType(self, pDoc=defaultNamedNotOptArg, FileType=defaultNamedNotOptArg):
        'method OriginalFileType - return the original file version and type'
        return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 0), (16396, 0)),pDoc
            , FileType)

    # Result is of type IAcadDocument
    def Recover(self, FileName=defaultNamedNotOptArg, Password=defaultNamedOptArg):
        'Recover specified file'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (12, 17)),FileName
            , Password)
        if ret is not None:
            ret = Dispatch(ret, 'Recover', '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')
        return ret

    _prop_map_get_ = {
        # Method 'Application' returns object of type 'IAcadApplication'
        "Application": (1, 2, (9, 0), (), "Application", '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}'),
        # Method 'AuditInfo' returns object of type 'IOdaAuditInfo'
        "AuditInfo": (4, 2, (9, 0), (), "AuditInfo", '{56B202FE-BE71-43B4-B504-1902EDE89644}'),
        # Method 'Console' returns object of type 'IOdaConsole'
        "Console": (8, 2, (9, 0), (), "Console", '{9DFDB619-A15D-43CD-92D5-7987D452B9F1}'),
        "OpenDbPartially": (7, 2, (11, 0), (), "OpenDbPartially", None),
    }
    _prop_map_put_ = {
        "Console": ((8, LCID, 4, 0),()),
        "OpenDbPartially": ((7, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class IOdaSvgExporter(DispatchBaseClass):
    'IOdaSvgExporter Interface'
    CLSID = IID('{FDAF1115-5A20-4D16-A509-01012B71E4F7}')
    coclass_clsid = IID('{C0F35882-6A8B-426C-8787-001E1073197A}')

    def Export(self, database=defaultNamedNotOptArg, FilePath=defaultNamedNotOptArg):
        'method Export'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 1), (8, 1)),database
            , FilePath)

    # The method Properties is actually a property, but must be used as a method to correctly pass the arguments
    def Properties(self, Name=defaultNamedNotOptArg):
        'Exporter properties'
        return self._ApplyTypes_(2, 2, (12, 0), ((8, 1),), 'Properties', None,Name
            )

    # The method SetProperties is actually a property, but must be used as a method to correctly pass the arguments
    def SetProperties(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
        'Exporter properties'
        return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((8, 1), (12, 1)),Name
            , arg1)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class ITransmittalFile(DispatchBaseClass):
    'ITransmittalFile Interface'
    CLSID = IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')
    coclass_clsid = IID('{D944169D-A83B-4A9E-B543-5C66F52E3D35}')

    # Result is of type ITransmittalFile
    def getDependee(self, nIndex=defaultNamedNotOptArg):
        'Returns files that have a direct dependency on this file.'
        ret = self._oleobj_.InvokeTypes(13, LCID, 1, (9, 0), ((3, 1),),nIndex
            )
        if ret is not None:
            ret = Dispatch(ret, 'getDependee', '{0A107B59-34CE-4F40-9AF2-26060A3C2099}')
        return ret

    # Result is of type ITransmittalFile
    def getDependent(self, nIndex=defaultNamedNotOptArg):
        'Returns files on which this file has a direct dependency.'
        ret = self._oleobj_.InvokeTypes(12, LCID, 1, (9, 0), ((3, 1),),nIndex
            )
        if ret is not None:
            ret = Dispatch(ret, 'getDependent', '{0A107B59-34CE-4F40-9AF2-26060A3C2099}')
        return ret

    _prop_map_get_ = {
        "FileType": (7, 2, (3, 0), (), "FileType", None),
        "database": (11, 2, (9, 0), (), "database", None),
        "fileExists": (2, 2, (3, 0), (), "fileExists", None),
        "fileSize": (4, 2, (3, 0), (), "fileSize", None),
        "includeInTransmittal": (8, 2, (3, 0), (), "includeInTransmittal", None),
        "lastModifiedTime": (5, 2, (7, 0), (), "lastModifiedTime", None),
        "numberOfDependees": (10, 2, (3, 0), (), "numberOfDependees", None),
        "numberOfDependents": (9, 2, (3, 0), (), "numberOfDependents", None),
        "sourcePath": (1, 2, (8, 0), (), "sourcePath", None),
        "version": (3, 2, (8, 0), (), "version", None),
    }
    _prop_map_put_ = {
        "includeInTransmittal": ((8, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class ITransmittalFilesGraph(DispatchBaseClass):
    'ITransmittalFilesGraph Interface'
    CLSID = IID('{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}')
    coclass_clsid = IID('{658E0EA9-97D8-4D44-AFF0-A0F01094750D}')

    def addEdge(self, pTransmitFileFrom=defaultNamedNotOptArg, pTransmitFileTo=defaultNamedNotOptArg):
        'Adds an edge between specified files in the graph.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((9, 1), (9, 1)),pTransmitFileFrom
            , pTransmitFileTo)

    # Result is of type ITransmittalFile
    def getAt(self, nIndex=defaultNamedNotOptArg):
        'Returns the file based on its index in the graph. \r\nThe index can be used to iterate through the entries in the graph.'
        ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1),),nIndex
            )
        if ret is not None:
            ret = Dispatch(ret, 'getAt', '{0A107B59-34CE-4F40-9AF2-26060A3C2099}')
        return ret

    def getNumberOfFiles(self, bIncludeMissingFiles=defaultNamedNotOptArg, bIncludeUnselectedFiles=defaultNamedNotOptArg):
        'Returns the number of files in the graph.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((3, 1), (3, 1)),bIncludeMissingFiles
            , bIncludeUnselectedFiles)

    # Result is of type ITransmittalFile
    def getRoot(self):
        "The root of the graph is a dummy file. It doesn't represent any file. \r\nNavigation to all files can be done from this node by using numberOfDependents property and getDependent() method."
        ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'getRoot', '{0A107B59-34CE-4F40-9AF2-26060A3C2099}')
        return ret

    def removeEdge(self, pTransmitFile=defaultNamedNotOptArg, pParentFile=defaultNamedNotOptArg):
        'Removes a file relation edge from a given file to its parent.'
        return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 1), (9, 1)),pTransmitFile
            , pParentFile)

    def reset(self):
        'Removes all entries in the graph, which leaves an empty transmittal package.'
        return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

    # The method totalBytes is actually a property, but must be used as a method to correctly pass the arguments
    def totalBytes(self, bIncludedFilesOnly=defaultNamedNotOptArg):
        'Returns the total number of bytes based on files \r\nalready in the transmittal package. This calculation does not include dependency files that are missing.'
        return self._oleobj_.InvokeTypes(7, LCID, 2, (3, 0), ((3, 1),),bIncludedFilesOnly
            )

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class ITransmittalInfo(DispatchBaseClass):
    'ITransmittalInfo Interface'
    CLSID = IID('{122D84E7-A507-414C-A517-C33B19AF6BA5}')
    coclass_clsid = IID('{AD47B265-C3D5-437C-AA75-527C7A7793C6}')

    _prop_map_get_ = {
        "defaultOverwriteValue": (4, 2, (3, 0), (), "defaultOverwriteValue", None),
        "destinationRoot": (1, 2, (8, 0), (), "destinationRoot", None),
        "imageRelativePath": (7, 2, (3, 0), (), "imageRelativePath", None),
        "includeFontFile": (10, 2, (3, 0), (), "includeFontFile", None),
        "includeImageFile": (9, 2, (3, 0), (), "includeImageFile", None),
        "includeMaterialTextureFile": (23, 2, (3, 0), (), "includeMaterialTextureFile", None),
        "includePlotFile": (11, 2, (3, 0), (), "includePlotFile", None),
        "includeXrefDwg": (8, 2, (3, 0), (), "includeXrefDwg", None),
        "organizedFolder": (16, 2, (3, 0), (), "organizedFolder", None),
        "preserveSubdirs": (3, 2, (3, 0), (), "preserveSubdirs", None),
        "relativePath": (15, 2, (8, 0), (), "relativePath", None),
        "saveVersion": (2, 2, (3, 0), (), "saveVersion", None),
        "xrefRelativePath": (6, 2, (3, 0), (), "xrefRelativePath", None),
    }
    _prop_map_put_ = {
        "defaultOverwriteValue": ((4, LCID, 4, 0),()),
        "destinationRoot": ((1, LCID, 4, 0),()),
        "imageRelativePath": ((7, LCID, 4, 0),()),
        "includeFontFile": ((10, LCID, 4, 0),()),
        "includeImageFile": ((9, LCID, 4, 0),()),
        "includeMaterialTextureFile": ((23, LCID, 4, 0),()),
        "includePlotFile": ((11, LCID, 4, 0),()),
        "includeXrefDwg": ((8, LCID, 4, 0),()),
        "organizedFolder": ((16, LCID, 4, 0),()),
        "preserveSubdirs": ((3, LCID, 4, 0),()),
        "relativePath": ((15, LCID, 4, 0),()),
        "saveVersion": ((2, LCID, 4, 0),()),
        "xrefRelativePath": ((6, LCID, 4, 0),()),
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class ITransmittalOperation(DispatchBaseClass):
    'ITransmittalOperation Interface'
    CLSID = IID('{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}')
    coclass_clsid = IID('{9A61E0FC-4311-457B-8C65-2AD3531DC5DD}')

    def addDrawingFile(self, fullpathname=defaultNamedNotOptArg, ppIAddedFile=pythoncom.Missing):
        'Adds a drawing file to transmittal package and resolves any dependencies based on transmittal options.'
        return self._ApplyTypes_(3, 1, (3, 0), ((8, 1), (16393, 2)), 'addDrawingFile', None,fullpathname
            , ppIAddedFile)

    def addFile(self, bstrFullPath=defaultNamedNotOptArg, pIParentFile=defaultNamedNotOptArg, bAddedBy3rdParty=defaultNamedNotOptArg, ppIAddedFile=pythoncom.Missing):
        'Adds a file to transmittal package. \r\nFiles added through this method are usually third party custom files or user added files. \r\nIf a drawing file is added through this method, its dependencies are not resolved. '
        return self._ApplyTypes_(1, 1, (3, 0), ((8, 1), (9, 1), (3, 1), (16393, 2)), 'addFile', None,bstrFullPath
            , pIParentFile, bAddedBy3rdParty, ppIAddedFile)

    def addToReport(self, bstrTextToAdd=defaultNamedNotOptArg, nIndex=defaultNamedNotOptArg):
        'Adds a section to the transmittal report. \r\nThe section will be appended at the end of the report. If nIndex = -1 then text will be append at the end of report.'
        return self._oleobj_.InvokeTypes(2, LCID, 1, (3, 0), ((8, 1), (3, 1)),bstrTextToAdd
            , nIndex)

    def createTransmittalPackage(self):
        'Creates a transmittal package at specified root directory \r\nbased on given files already added and the transmittal options. The final outcome of this \r\noperation is a directory that contains all files in transmittal package based on options given.'
        return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

    # Result is of type ITransmittalFilesGraph
    def getTransmittalGraphInterface(self):
        'Returns the ITransmittalFilesGraph interface related to current transmittal operation.'
        ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'getTransmittalGraphInterface', '{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}')
        return ret

    # Result is of type ITransmittalInfo
    def getTransmittalInfoInterface(self):
        'Returns the ITransmittalInfo interface related to current transmittal operation.'
        ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), (),)
        if ret is not None:
            ret = Dispatch(ret, 'getTransmittalInfoInterface', '{122D84E7-A507-414C-A517-C33B19AF6BA5}')
        return ret

    def getTransmittalReport(self):
        'Returns the transmittal report based on files in already in the transmittal package.'
        # Result is a Unicode object
        return self._oleobj_.InvokeTypes(5, LCID, 1, (8, 0), (),)

    _prop_map_get_ = {
    }
    _prop_map_put_ = {
    }
    def __iter__(self):
        "Return a Python iterator for this object"
        try:
            ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
        except pythoncom.error:
            raise TypeError("This object does not support enumeration")
        return win32com.client.util.Iterator(ob, None)

class _DAcadApplicationEvents:
    'Event interface for AcadApplication'
    CLSID = CLSID_Sink = IID('{93E291E9-BB72-429B-B4DE-DF76B88603EB}')
    coclass_clsid = IID('{0E86524E-1812-426A-9A63-2C2B51B0D0E4}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
                1 : "OnSysVarChanged",
                2 : "OnNewDrawing",
                3 : "OnAppActivate",
                4 : "OnAppDeactivate",
                5 : "OnWindowMovedOrResized",
                6 : "OnBeginModal",
                7 : "OnEndModal",
                8 : "OnBeginQuit",
               10 : "OnBeginFileDrop",
               11 : "OnARXLoaded",
               12 : "OnARXUnloaded",
               13 : "OnBeginPlot",
               14 : "OnEndPlot",
               19 : "OnBeginSave",
               20 : "OnEndSave",
               21 : "OnBeginOpen",
               22 : "OnEndOpen",
               17 : "OnBeginCommand",
               18 : "OnEndCommand",
               15 : "OnBeginLisp",
               16 : "OnEndLisp",
               24 : "OnLispCancelled",
               25 : "OnWindowChanged",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnSysVarChanged(self, SysvarName=defaultNamedNotOptArg, newVal=defaultNamedNotOptArg):
#		'Triggered when the value of a system variable is changed'
#	def OnNewDrawing(self):
#		'Triggered just before a new drawing is created'
#	def OnAppActivate(self):
#		'Triggered just before the main application window is activated'
#	def OnAppDeactivate(self):
#		'Triggered just before the main application window is deactivated'
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#		'Happens when the main frame window is moved or resized'
#	def OnBeginModal(self):
#		'Triggered just before a modal dialog is displayed'
#	def OnEndModal(self):
#		'Triggered just after a modal dialog is dismissed'
#	def OnBeginQuit(self, Cancel=defaultNamedNotOptArg):
#		'Triggered just before an BricsCAD session ends or a document closes'
#	def OnBeginFileDrop(self, FileName=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#		'Triggered when a file is dropped on the main application window'
#	def OnARXLoaded(self, AppName=defaultNamedNotOptArg):
#		'Triggered when an BricsCAD application has been loaded'
#	def OnARXUnloaded(self, AppName=defaultNamedNotOptArg):
#		'Triggered when an BricsCAD application has been unloaded'
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to print a drawing'
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered after a document has been sent to the printer'
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to save the drawing'
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered when BricsCAD has finished saving the drawing'
#	def OnBeginOpen(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to open an existing drawing'
#	def OnEndOpen(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD finishes opening an existing drawing'
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command is issued, but before it completes'
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command completes'
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to evaluate a LISP expression'
#	def OnEndLisp(self):
#		'Triggered upon completion of evaluating a LISP expression'
#	def OnLispCancelled(self):
#		'Triggered when the evaluation of a LISP expression is cancelled'
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):
#		'Triggered when there is a change to the application or document windows'


class _DAcadDocumentEvents:
    'Event interface for ThisDrawing'
    CLSID = CLSID_Sink = IID('{63A90E32-CB8B-4A3B-ADFF-EF94A35278B2}')
    coclass_clsid = IID('{3975E80C-5EC5-4EE0-B432-E9EC7BBB9A5A}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
                1 : "OnBeginSave",
                2 : "OnEndSave",
                6 : "OnBeginCommand",
                7 : "OnEndCommand",
                8 : "OnBeginLisp",
                9 : "OnEndLisp",
               10 : "OnLispCancelled",
               11 : "OnSelectionChanged",
               12 : "OnActivate",
               13 : "OnDeactivate",
               14 : "OnBeginRightClick",
               15 : "OnBeginShortcutMenuDefault",
               16 : "OnBeginShortcutMenuEdit",
               17 : "OnBeginShortcutMenuCommand",
               18 : "OnBeginShortcutMenuGrip",
               19 : "OnBeginShortcutMenuOsnap",
               30 : "OnEndShortcutMenu",
               20 : "OnBeginDoubleClick",
               21 : "OnObjectAdded",
               22 : "OnObjectErased",
               23 : "OnObjectModified",
               24 : "OnBeginPlot",
               25 : "OnEndPlot",
               29 : "OnWindowMovedOrResized",
               31 : "OnLayoutSwitched",
               32 : "OnWindowChanged",
               33 : "OnBeginClose",
               34 : "OnBeginDocClose",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnBeginSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to save the drawing'
#	def OnEndSave(self, FileName=defaultNamedNotOptArg):
#		'Triggered when BricsCAD has finished saving the drawing'
#	def OnBeginCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command is issued, but before it completes'
#	def OnEndCommand(self, CommandName=defaultNamedNotOptArg):
#		'Triggered immediately after a command completes'
#	def OnBeginLisp(self, FirstLine=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to evaluate a LISP expression'
#	def OnEndLisp(self):
#		'Triggered upon completion of evaluating a LISP expression'
#	def OnLispCancelled(self):
#		'Triggered when the evaluation of a LISP expression is cancelled'
#	def OnSelectionChanged(self):
#		'Triggered when the current pickfirst selection set changes'
#	def OnActivate(self):
#		'Triggered when a document window is activated'
#	def OnDeactivate(self):
#		'Triggered when the drawing window is deactivated'
#	def OnBeginRightClick(self, PickPoint=defaultNamedNotOptArg):
#		'Triggered after the user right-clicks on the drawing window'
#	def OnBeginShortcutMenuDefault(self, ShortcutMenu=pythoncom.Missing):
#		'Triggered after the user right-clicks on the drawing window, and before the shortcut menu appears in default mode'
#	def OnBeginShortcutMenuEdit(self, ShortcutMenu=pythoncom.Missing, SelectionSet=pythoncom.Missing):
#		'Triggered after the user right-clicks on the drawing window, and before the shortcut menu appears in edit mode'
#	def OnBeginShortcutMenuCommand(self, ShortcutMenu=pythoncom.Missing, Command=defaultNamedNotOptArg):
#		'Triggered after the user right-clicks on the drawing window, and before the shortcut menu appears in command mode'
#	def OnBeginShortcutMenuGrip(self, ShortcutMenu=pythoncom.Missing):
#		'Triggered after the user right-clicks on the drawing window, and before the shortcut menu appears in grip mode'
#	def OnBeginShortcutMenuOsnap(self, ShortcutMenu=pythoncom.Missing):
#		'Triggered after the user right-clicks on the drawing window, and before the shortcut menu appears in osnap mode'
#	def OnEndShortcutMenu(self, ShortcutMenu=pythoncom.Missing):
#		'Triggered after the shortcut menu appears'
#	def OnBeginDoubleClick(self, PickPoint=defaultNamedNotOptArg):
#		'Triggered after the user double-clicks on an object in the drawing'
#	def OnObjectAdded(self, Object=defaultNamedNotOptArg):
#		'Triggered when an object has been added to the drawing'
#	def OnObjectErased(self, ObjectID=defaultNamedNotOptArg):
#		'Triggered when an object has been erased from the drawing'
#	def OnObjectModified(self, Object=defaultNamedNotOptArg):
#		'Triggered when an object in the drawing has been modified'
#	def OnBeginPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered immediately after BricsCAD receives a request to print a drawing'
#	def OnEndPlot(self, DrawingName=defaultNamedNotOptArg):
#		'Triggered after a document has been sent to the printer'
#	def OnWindowMovedOrResized(self, HWNDFrame=defaultNamedNotOptArg, bMoved=defaultNamedNotOptArg):
#		'Happens when the drawing window is moved or resized.'
#	def OnLayoutSwitched(self, LayoutName=defaultNamedNotOptArg):
#		'Triggered after the user switches to a different layout'
#	def OnWindowChanged(self, WindowState=defaultNamedNotOptArg):
#		'Triggered when there is a change to the application or document windows'
#	def OnBeginClose(self):
#		'Triggered immediately after BricsCAD receives a request to close a drawing'
#	def OnBeginDocClose(self, Cancel=defaultNamedNotOptArg):
#		'Triggered before the BeginClose event. This is an opportunity to cancel the closing process'


class _IOdaHostAppEvents:
    '_IOdaHostAppEvents Interface'
    CLSID = CLSID_Sink = IID('{5FA75E80-D112-4186-AD8E-0992D7F13475}')
    coclass_clsid = IID('{D81CF9E5-4C85-435B-876B-C706E2D5F00E}')
    _public_methods_ = [] # For COM Server support
    _dispid_to_func_ = {
               32 : "OnStep",
               33 : "OnStart",
               34 : "OnStop",
               35 : "OnSetLimit",
               36 : "OnAuditError",
               37 : "OnAuditMessage",
               38 : "OnAuditErrorEx",
               39 : "OnGetPassword",
        }

    def __init__(self, oobj = None):
        if oobj is None:
            self._olecp = None
        else:
            import win32com.server.util
            from win32com.server.policy import EventHandlerPolicy
            cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
            cp=cpc.FindConnectionPoint(self.CLSID_Sink)
            cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
            self._olecp,self._olecp_cookie = cp,cookie
    def __del__(self):
        try:
            self.close()
        except pythoncom.com_error:
            pass
    def close(self):
        if self._olecp is not None:
            cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
            cp.Unadvise(cookie)
    def _query_interface_(self, iid):
        import win32com.server.util
        if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

    # Event Handlers
    # If you create handlers, they should have the following prototypes:
#	def OnStep(self):
#		'method progress Step'
#	def OnStart(self, DisplayString=defaultNamedNotOptArg):
#		'method Start new progress meter'
#	def OnStop(self):
#		'method progress Stop'
#	def OnSetLimit(self, nMax=defaultNamedNotOptArg):
#		'method set progress limit'
#	def OnAuditError(self, DisplayString=defaultNamedNotOptArg):
#		'method audit error notification'
#	def OnAuditMessage(self, DisplayString=defaultNamedNotOptArg):
#		'method audit information'
#	def OnAuditErrorEx(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Validation=defaultNamedNotOptArg, DefaultValue=defaultNamedNotOptArg):
#		'method audit error notification extention'
#	def OnGetPassword(self, FileName=defaultNamedNotOptArg, Value=pythoncom.Missing):
#		'ask user to supply password for file'


from win32com.client import CoClassBaseClass
# This CoClass is known by the name 'BricscadApp.AcPePick2PointsCtrl.24.0'
class AcPePick2PointsCtrl(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{4735C83D-5F58-4963-8571-A4424C619D7F}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorColor.24.0'
class AcPePropertyEditorColor(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{61F2A9AB-8A44-4C20-953A-735508C1CA85}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorEllipses.24.0'
class AcPePropertyEditorEllipses(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{7507B465-281A-465C-A724-A72D09327153}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorLType.24.0'
class AcPePropertyEditorLType(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{8C9F3B98-30E9-45CE-9F07-63955326E8D4}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorLWeight.24.0'
class AcPePropertyEditorLWeight(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{4F19983F-AB24-4FB9-ADC0-0B6026080239}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorLayer.24.0'
class AcPePropertyEditorLayer(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{96F57653-F913-4CAB-B511-2F14AF9138D3}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcPePropertyEditorTextStyle.24.0'
class AcPePropertyEditorTextStyle(CoClassBaseClass): # A CoClass
    #  
    CLSID = IID('{4B61C84D-A730-4760-A409-4023DD1D8E57}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadApplication,
    ]

# This CoClass is known by the name 'BricscadApp.AcadApplication.24.0'
class AcadApplication(CoClassBaseClass): # A CoClass
    # AcadApplication Class
    CLSID = IID('{0E86524E-1812-426A-9A63-2C2B51B0D0E4}')
    coclass_sources = [
        _DAcadApplicationEvents,
    ]
    default_source = _DAcadApplicationEvents
    coclass_interfaces = [
        IAcadApplication,
    ]
    default_interface = IAcadApplication

# This CoClass is known by the name 'BricscadApp.AcadDocument.24.0'
class AcadDocument(CoClassBaseClass): # A CoClass
    # AcadDocument Class | Bricscad24
    CLSID = IID('{3975E80C-5EC5-4EE0-B432-E9EC7BBB9A5A}')
    coclass_sources = [
        _DAcadDocumentEvents,
    ]
    default_source = _DAcadDocumentEvents
    coclass_interfaces = [
        IAcadDocument,
    ]
    default_interface = IAcadDocument

# This CoClass is known by the name 'BricscadApp.AcadDocuments.24.0'
class AcadDocuments(CoClassBaseClass): # A CoClass
    # AcadDocuments Class
    CLSID = IID('{5F5D38B7-C56C-4250-B088-2B06EEEC1EE9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadDocuments,
    ]
    default_interface = IAcadDocuments

# This CoClass is known by the name 'BricscadApp.AcadLayerStateManager.24.0'
class AcadLayerStateManager(CoClassBaseClass): # A CoClass
    # AcadLayerStateManager Class
    CLSID = IID('{2F38A4F0-DDE8-488C-B53C-5E364C267B53}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadLayerStateManager,
    ]
    default_interface = IAcadLayerStateManager

# This CoClass is known by the name 'BricscadApp.AcadMenuBar.24.0'
class AcadMenuBar(CoClassBaseClass): # A CoClass
    # AcadMenuBar class
    CLSID = IID('{DE927728-3684-4835-8255-54350D951307}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuBar,
    ]
    default_interface = IAcadMenuBar

# This CoClass is known by the name 'BricscadApp.AcadMenuGroup.24.0'
class AcadMenuGroup(CoClassBaseClass): # A CoClass
    # AcadMenuGroup class
    CLSID = IID('{A07E5142-51E0-441E-B442-1F46F53F3888}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuGroup,
    ]
    default_interface = IAcadMenuGroup

# This CoClass is known by the name 'BricscadApp.AcadMenuGroups.24.0'
class AcadMenuGroups(CoClassBaseClass): # A CoClass
    # AcadMenuGroups class
    CLSID = IID('{FE3FC546-AF40-4A2E-9C5C-14B7B4B8A54D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadMenuGroups,
    ]
    default_interface = IAcadMenuGroups

# This CoClass is known by the name 'BricscadApp.AcadPlot.24.0'
class AcadPlot(CoClassBaseClass): # A CoClass
    # AcadPlot Class
    CLSID = IID('{126D4FCB-3E3D-491B-9F0B-D6C9D362116A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPlot,
    ]
    default_interface = IAcadPlot

# This CoClass is known by the name 'BricscadApp.AcadPopupMenu.24.0'
class AcadPopupMenu(CoClassBaseClass): # A CoClass
    # AcadPopupMenu class
    CLSID = IID('{62AB6B80-D12D-40C8-8970-9915E69E05E0}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenu,
    ]
    default_interface = IAcadPopupMenu

# This CoClass is known by the name 'BricscadApp.AcadPopupMenuItem.24.0'
class AcadPopupMenuItem(CoClassBaseClass): # A CoClass
    # AcadPopupMenuItem class
    CLSID = IID('{E24D7979-088A-435B-B939-D8E18AD4BE1D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenuItem,
    ]
    default_interface = IAcadPopupMenuItem

# This CoClass is known by the name 'BricscadApp.AcadPopupMenus.24.0'
class AcadPopupMenus(CoClassBaseClass): # A CoClass
    # AcadPopupMenus class
    CLSID = IID('{18B24243-321E-4980-9351-57C02F246EC9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPopupMenus,
    ]
    default_interface = IAcadPopupMenus

# This CoClass is known by the name 'BricscadApp.AcadPreferences.24.0'
class AcadPreferences(CoClassBaseClass): # A CoClass
    # AcadPreferences Class
    CLSID = IID('{A3EAF524-D893-4F6F-8D07-7F9416F7EBB9}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferences,
    ]
    default_interface = IAcadPreferences

# This CoClass is known by the name 'BricscadApp.AcadPreferencesDisplay.24.0'
class AcadPreferencesDisplay(CoClassBaseClass): # A CoClass
    # AcadPreferencesDisplay Class
    CLSID = IID('{100E11DA-6700-452D-B6BE-0B65FDB2E17A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesDisplay,
    ]
    default_interface = IAcadPreferencesDisplay

# This CoClass is known by the name 'BricscadApp.AcadPreferencesDrafting.24.0'
class AcadPreferencesDrafting(CoClassBaseClass): # A CoClass
    # AcadPreferencesDrafting Class
    CLSID = IID('{F6B948E8-500C-4305-A2EA-71FA28A35530}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesDrafting,
    ]
    default_interface = IAcadPreferencesDrafting

# This CoClass is known by the name 'BricscadApp.AcadPreferencesFiles.24.0'
class AcadPreferencesFiles(CoClassBaseClass): # A CoClass
    # AcadPreferencesFiles Class
    CLSID = IID('{354D8744-81E2-4BB0-AC00-2C2471F3BEBE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesFiles,
    ]
    default_interface = IAcadPreferencesFiles

# This CoClass is known by the name 'BricscadApp.AcadPreferencesOpenSave.24.0'
class AcadPreferencesOpenSave(CoClassBaseClass): # A CoClass
    # AcadPreferencesOpenSave Class
    CLSID = IID('{E21FACEF-E6A4-4DE1-8315-7F0F07EB877E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesOpenSave,
    ]
    default_interface = IAcadPreferencesOpenSave

# This CoClass is known by the name 'BricscadApp.AcadPreferencesOutput.24.0'
class AcadPreferencesOutput(CoClassBaseClass): # A CoClass
    # AcadPreferencesOutput Class
    CLSID = IID('{46B6BEE0-DA5A-4089-AC8A-70A254F31659}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesOutput,
    ]
    default_interface = IAcadPreferencesOutput

# This CoClass is known by the name 'BricscadApp.AcadPreferencesPdfOutput.24.0'
class AcadPreferencesPdfOutput(CoClassBaseClass): # A CoClass
    # AcadPreferencesPdfOutput Class
    CLSID = IID('{CB5F57D2-535C-4550-BDAC-FBFDB8778294}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesPdfOutput,
    ]
    default_interface = IAcadPreferencesPdfOutput

# This CoClass is known by the name 'BricscadApp.AcadPreferencesProfiles.24.0'
class AcadPreferencesProfiles(CoClassBaseClass): # A CoClass
    # AcadPreferencesProfiles Class
    CLSID = IID('{71AE8036-20F2-4439-BF71-F27400E3291D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesProfiles,
    ]
    default_interface = IAcadPreferencesProfiles

# This CoClass is known by the name 'BricscadApp.AcadPreferencesSelection.24.0'
class AcadPreferencesSelection(CoClassBaseClass): # A CoClass
    # AcadPreferencesSelection Class
    CLSID = IID('{469FB7EC-09CF-4D1D-BAC8-4553F5098ADD}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesSelection,
    ]
    default_interface = IAcadPreferencesSelection

# This CoClass is known by the name 'BricscadApp.AcadPreferencesSystem.24.0'
class AcadPreferencesSystem(CoClassBaseClass): # A CoClass
    # AcadPreferencesSystem Class
    CLSID = IID('{8A48E79C-D378-4111-82D9-A25F84F5B6DC}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesSystem,
    ]
    default_interface = IAcadPreferencesSystem

# This CoClass is known by the name 'BricscadApp.AcadPreferencesUser.24.0'
class AcadPreferencesUser(CoClassBaseClass): # A CoClass
    # AcadPreferencesUser Class
    CLSID = IID('{DD509194-682F-49FE-9984-C7F0EE819A45}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadPreferencesUser,
    ]
    default_interface = IAcadPreferencesUser

# This CoClass is known by the name 'BricscadApp.AcadSecurityParams.24.0'
class AcadSecurityParams(CoClassBaseClass): # A CoClass
    # AcadSecurityParams Class
    CLSID = IID('{06F4FD5D-DBD9-4B44-B464-6683CC541EDD}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSecurityParams,
    ]
    default_interface = IAcadSecurityParams

# This CoClass is known by the name 'BricscadApp.AcadSelectionSet.24.0'
class AcadSelectionSet(CoClassBaseClass): # A CoClass
    # AcadSelectionSet Class
    CLSID = IID('{F3862E27-3753-44F7-BDB0-24468C8E8CF6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSelectionSet,
    ]
    default_interface = IAcadSelectionSet

# This CoClass is known by the name 'BricscadApp.AcadSelectionSets.24.0'
class AcadSelectionSets(CoClassBaseClass): # A CoClass
    # AcadSelectionSets Class
    CLSID = IID('{2F021E6D-67B2-4955-9135-A28F93BCEE6D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadSelectionSets,
    ]
    default_interface = IAcadSelectionSets

# This CoClass is known by the name 'BricscadApp.AcadState.24.0'
class AcadState(CoClassBaseClass): # A CoClass
    # AcadState Class
    CLSID = IID('{5696C1B9-643B-4E6E-B711-DB897137424E}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadState,
    ]
    default_interface = IAcadState

# This CoClass is known by the name 'BricscadApp.AcadToolbar.24.0'
class AcadToolbar(CoClassBaseClass): # A CoClass
    # An AutoCAD toolbar
    CLSID = IID('{A8D0AE76-640B-44AA-BB5C-6986706CA9F6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbar,
    ]
    default_interface = IAcadToolbar

# This CoClass is known by the name 'BricscadApp.AcadToolbarItem.24.0'
class AcadToolbarItem(CoClassBaseClass): # A CoClass
    # AcadToolbarItem class
    CLSID = IID('{C9F46D28-7AEE-48F1-B8B7-6F8E7EC40625}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbarItem,
    ]
    default_interface = IAcadToolbarItem

# This CoClass is known by the name 'BricscadApp.AcadToolbars.24.0'
class AcadToolbars(CoClassBaseClass): # A CoClass
    # AcadToolbars class
    CLSID = IID('{6625C943-4F9E-4FCD-B847-454FCDC56C19}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadToolbars,
    ]
    default_interface = IAcadToolbars

# This CoClass is known by the name 'BricscadApp.AcadUtility.24.0'
class AcadUtility(CoClassBaseClass): # A CoClass
    # AcadUtility Class
    CLSID = IID('{AB480185-F159-4B5D-BC9E-AEA9AB722DF1}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IAcadUtility,
    ]
    default_interface = IAcadUtility

# This CoClass is known by the name 'BricscadApp.OdaBagFiler.24.0'
class OdaBagFiler(CoClassBaseClass): # A CoClass
    # OdaBagFiler Class
    CLSID = IID('{DF962AF5-E3C8-4552-B65D-698F48DE2759}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaBagFiler,
    ]
    default_interface = IOdaBagFiler

# This CoClass is known by the name 'BricscadApp.OdaBmpOut.24.0'
class OdaBmpOut(CoClassBaseClass): # A CoClass
    # OdaBmpOut Class
    CLSID = IID('{97B88F76-4023-412F-8C23-607C526E4E7D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaBmpOut,
    ]
    default_interface = IOdaBmpOut

# This CoClass is known by the name 'BricscadApp.OdaDwf3dExport.24.0'
class OdaDwf3dExport(CoClassBaseClass): # A CoClass
    # OdaDwf3dExport Class
    CLSID = IID('{7CCF62DE-076C-4ED9-9ED2-3D4A5AC9E4DE}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaDwf3dExport,
    ]
    default_interface = IOdaDwf3dExport

# This CoClass is known by the name 'BricscadApp.OdaDwfImporter.24.0'
class OdaDwfImporter(CoClassBaseClass): # A CoClass
    # OdaDwfImporter Class
    CLSID = IID('{46901A1D-C99C-45E0-B2F5-D99C07CD8BBB}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaDwfImporter,
    ]
    default_interface = IOdaDwfImporter

# This CoClass is known by the name 'BricscadApp.OdaDwfTemplate.24.0'
class OdaDwfTemplate(CoClassBaseClass): # A CoClass
    # OdaDwfTemplate Class
    CLSID = IID('{81186CAF-6BAC-4DD6-B470-3C7930A28DD5}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaDwfTemplate,
    ]
    default_interface = IOdaDwfTemplate

# This CoClass is known by the name 'BricscadApp.OdaHostApp.24.0'
class OdaHostApp(CoClassBaseClass): # A CoClass
    # OdaHostApp Class
    CLSID = IID('{D81CF9E5-4C85-435B-876B-C706E2D5F00E}')
    coclass_sources = [
        _IOdaHostAppEvents,
    ]
    default_source = _IOdaHostAppEvents
    coclass_interfaces = [
        IOdaHostApp2,
    ]
    default_interface = IOdaHostApp2

# This CoClass is known by the name 'BricscadApp.OdaSvgExporter.24.0'
class OdaSvgExporter(CoClassBaseClass): # A CoClass
    # SvgExporter Class
    CLSID = IID('{C0F35882-6A8B-426C-8787-001E1073197A}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        IOdaSvgExporter,
    ]
    default_interface = IOdaSvgExporter

# This CoClass is known by the name 'BricscadApp.TransmittalFile.24.0'
class TransmittalFile(CoClassBaseClass): # A CoClass
    # TransmittalFile Class
    CLSID = IID('{D944169D-A83B-4A9E-B543-5C66F52E3D35}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        ITransmittalFile,
    ]
    default_interface = ITransmittalFile

# This CoClass is known by the name 'BricscadApp.TransmittalFilesGraph.24.0'
class TransmittalFilesGraph(CoClassBaseClass): # A CoClass
    # TransmittalFilesGraph Class
    CLSID = IID('{658E0EA9-97D8-4D44-AFF0-A0F01094750D}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        ITransmittalFilesGraph,
    ]
    default_interface = ITransmittalFilesGraph

# This CoClass is known by the name 'BricscadApp.TransmittalInfo.24.0'
class TransmittalInfo(CoClassBaseClass): # A CoClass
    # TransmittalInfo Class
    CLSID = IID('{AD47B265-C3D5-437C-AA75-527C7A7793C6}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        ITransmittalInfo,
    ]
    default_interface = ITransmittalInfo

# This CoClass is known by the name 'BricscadApp.TransmittalOperation.24.0'
class TransmittalOperation(CoClassBaseClass): # A CoClass
    # TransmittalOperation Class
    CLSID = IID('{9A61E0FC-4311-457B-8C65-2AD3531DC5DD}')
    coclass_sources = [
    ]
    coclass_interfaces = [
        ITransmittalOperation,
    ]
    default_interface = ITransmittalOperation

IAcadApplication_vtables_dispatch_ = 1
IAcadApplication_vtables_ = [
    (( 'Visible' , 'Visible' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'Visible' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'pAppName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Caption' , 'bstrCaption' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 4, (4, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDocument' , 'pActiveDoc' , ), 5, (5, (), [ (9, 1, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'FullName' , 'FullName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'Height' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'WindowLeft' , 'left' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'WindowLeft' , 'left' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'bstrPath' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'LocaleId' , 'lcid' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'WindowTop' , 'top' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'WindowTop' , 'top' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'version' , 'bstrVer' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'Width' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Preferences' , 'pPreferences' , ), 14, (14, (), [ (16393, 10, None, "IID('{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'StatusId' , 'VportObj' , 'bStatus' , ), 17, (17, (), [ (9, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ListArx' , 'pVarListArray' , ), 18, (18, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'LoadArx' , 'Name' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'GetInterfaceObject' , 'ProgID' , 'pObj' , ), 20, (20, (), [ (8, 1, None, None) , 
             (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'UnloadArx' , 'Name' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'Quit' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'Zoom' , 'Type' , 'vParams' , ), 26, (26, (), [ (3, 1, None, None) , 
             (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
    (( 'VBE' , 'pDispVBE' , ), 27, (27, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'MenuGroups' , 'pMenuGroups' , ), 28, (28, (), [ (16393, 10, None, "IID('{798225D3-984D-471E-84F3-D1EC56FA05EA}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'MenuBar' , 'pMenuBar' , ), 29, (29, (), [ (16393, 10, None, "IID('{A174CCC8-D19F-421F-8F4E-65C2E4F43167}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LoadDVB' , 'Name' , ), 30, (30, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'UnloadDVB' , 'Name' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'Documents' , 'pDocuments' , ), 32, (32, (), [ (16393, 10, None, "IID('{CFFD1390-466A-49D9-9EE0-1884E930DFF9}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'Eval' , 'Expression' , ), 33, (33, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'eWinState' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'RunMacro' , 'MacroPath' , ), 35, (35, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'ZoomExtents' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'ZoomAll' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'ZoomCenter' , 'Center' , 'Magnify' , ), 38, (38, (), [ (12, 1, None, None) , 
             (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'ZoomScaled' , 'scale' , 'ScaleType' , ), 39, (39, (), [ (5, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'ZoomWindow' , 'LowerLeft' , 'UpperRight' , ), 40, (40, (), [ (12, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'ZoomPickWindow' , ), 41, (41, (), [ ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'GetAcadState' , 'pVal' , ), 42, (42, (), [ (16393, 10, None, "IID('{C2016470-443B-40D0-AD93-231ACFDCF594}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'ZoomPrevious' , ), 43, (43, (), [ ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'HWND' , 'HWND' , ), 44, (44, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'DefineFunction' , 'FunctionName' , 'FunctionPointer' , ), 45, (45, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'UndefineFunction' , 'FunctionName' , ), 46, (46, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'RunCommand' , 'Command' , ), 47, (47, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'RunScript' , 'Script' , ), 48, (48, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

IAcadDocument_vtables_dispatch_ = 1
IAcadDocument_vtables_ = [
    (( 'Plot' , 'pPlot' , ), 23, (23, (), [ (16393, 10, None, "IID('{445545BB-394E-481A-AC4F-F073E53030E8}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (16393, 10, None, "IID('{A5484251-D4DF-4F32-A23F-445882F48F1B}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayer' , 'pActLayer' , ), 24, (24, (), [ (9, 1, None, "IID('{A5484251-D4DF-4F32-A23F-445882F48F1B}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (16393, 10, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLinetype' , 'pActLinetype' , ), 25, (25, (), [ (9, 1, None, "IID('{908A55EF-9ED0-4A36-BD47-AD0818AF9317}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (16393, 10, None, "IID('{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'ActiveDimStyle' , 'pActDimStyle' , ), 26, (26, (), [ (9, 1, None, "IID('{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}')") , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (16393, 10, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'ActiveTextStyle' , 'pActTextStyle' , ), 27, (27, (), [ (9, 1, None, "IID('{EE473D68-C42F-4A9D-8393-C3975C17BC4A}')") , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (16393, 10, None, "IID('{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'ActiveUCS' , 'pActUCS' , ), 28, (28, (), [ (9, 1, None, "IID('{F5F78A02-09C6-49EB-812A-04B5ACC46F71}')") , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (16393, 10, None, "IID('{A9B1F951-1AA7-4C23-8D57-AA199803D381}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'ActiveViewport' , 'pActView' , ), 29, (29, (), [ (9, 1, None, "IID('{A9B1F951-1AA7-4C23-8D57-AA199803D381}')") , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (16393, 10, None, "IID('{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'ActivePViewport' , 'pActView' , ), 30, (30, (), [ (9, 1, None, "IID('{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}')") , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSpace' , 'ActSpace' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'SelectionSets' , 'pSelSets' , ), 32, (32, (), [ (16393, 10, None, "IID('{37E34D42-8CD8-4E25-83BF-80C791AFEADE}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ActiveSelectionSet' , 'pSelSet' , ), 33, (33, (), [ (16393, 10, None, "IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'FullName' , 'FullName' , ), 34, (34, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 35, (35, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'Path' , 'Path' , ), 36, (36, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'ObjectSnapMode' , 'fSnapMode' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'ReadOnly' , 'bReadOnly' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'Saved' , 'bSaved' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
    (( 'MSpace' , 'Mode' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
    (( 'MSpace' , 'Mode' , ), 40, (40, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'Utility' , 'pUtil' , ), 41, (41, (), [ (16393, 10, None, "IID('{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'Open' , 'FullName' , 'Password' , 'pDocObj' , ), 42, (42, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 1 , 528 , (3, 0, None, None) , 0 , )),
    (( 'AuditInfo' , 'FixErr' , ), 43, (43, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'Import' , 'FileName' , 'InsertionPoint' , 'ScaleFactor' , 'pObj' , 
             ), 44, (44, (), [ (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'Export' , 'FileName' , 'Extension' , 'SelectionSet' , ), 45, (45, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
    (( 'New' , 'TemplateFileName' , 'pDocObj' , ), 46, (46, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
    (( 'Save' , ), 47, (47, (), [ ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
    (( 'SaveAs' , 'FullFileName' , 'SaveAsType' , 'vSecurityParams' , ), 48, (48, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 576 , (3, 0, None, None) , 0 , )),
    (( 'Wblock' , 'FileName' , 'SelectionSet' , ), 49, (49, (), [ (8, 1, None, None) , 
             (9, 1, None, "IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')") , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
    (( 'PurgeAll' , ), 50, (50, (), [ ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
    (( 'GetVariable' , 'Name' , 'Value' , ), 51, (51, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
    (( 'SetVariable' , 'Name' , 'Value' , ), 52, (52, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
    (( 'LoadShapeFile' , 'FullName' , ), 53, (53, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
    (( 'Regen' , 'WhichViewports' , ), 54, (54, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
    (( 'PickfirstSelectionSet' , 'pSelSet' , ), 55, (55, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
    (( 'Active' , 'pvbActive' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
    (( 'Activate' , ), 57, (57, (), [ ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
    (( 'Close' , 'SaveChanges' , 'FileName' , ), 58, (58, (), [ (12, 17, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 656 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
    (( 'WindowState' , 'pWinState' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pWidth' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pHeight' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (9, 1, None, "IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')") , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
    (( 'ActiveLayout' , 'pLayout' , ), 62, (62, (), [ (16393, 10, None, "IID('{50D89DB1-E146-428F-92BD-87F4EB9A46B4}')") , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
    (( 'SendCommand' , 'Command' , ), 63, (63, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
    (( 'HWND' , 'HWND' , ), 64, (64, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
    (( 'WindowTitle' , 'Title' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 66, (66, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
    (( 'database' , 'pDatabase' , ), 67, (67, (), [ (16393, 10, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
    (( 'StartUndoMark' , ), 68, (68, (), [ ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
    (( 'EndUndoMark' , ), 69, (69, (), [ ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
    (( 'getTransmittalOperationInterface' , 'ppITrmOp' , ), 75, (75, (), [ (16393, 10, None, "IID('{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
    (( 'EvaluateLisp' , 'lispString' , 'pvResult' , ), 76, (76, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
    (( 'ActiveMaterial' , 'pActMaterial' , ), 77, (77, (), [ (16393, 10, None, "IID('{4D24EA66-A2B3-4129-8367-81D93B44BE07}')") , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
    (( 'ActiveMaterial' , 'pActMaterial' , ), 77, (77, (), [ (9, 1, None, "IID('{4D24EA66-A2B3-4129-8367-81D93B44BE07}')") , ], 1 , 4 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
    (( 'NumTransactions' , 'pNumTransactions' , ), 78, (78, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
    (( 'StartTransaction' , ), 79, (79, (), [ ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
    (( 'EndTransaction' , ), 80, (80, (), [ ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
    (( 'AbortTransaction' , ), 81, (81, (), [ ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
]

IAcadDocuments_vtables_dispatch_ = 1
IAcadDocuments_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'TemplateName' , 'pDispDoc' , ), 1610743812, (1610743812, (), [ (12, 17, None, None) , 
             (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Open' , 'Name' , 'ReadOnly' , 'Password' , 'pDispDoc' , 
             ), 1610743813, (1610743813, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 2 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Close' , ), 1610743814, (1610743814, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAcadLayerStateManager_vtables_dispatch_ = 1
IAcadLayerStateManager_vtables_ = [
    (( 'SetDatabase' , 'iHostDb' , ), 1610743808, (1610743808, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Mask' , 'bsName' , 'eMask' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Save' , 'bsName' , 'eMask' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Restore' , 'bsName' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , 'bsName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Rename' , 'bsName' , 'bsNewName' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Import' , 'bsFilename' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Export' , 'bsName' , 'bsFilename' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAcadMenuBar_vtables_dispatch_ = 1
IAcadMenuBar_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroup_vtables_dispatch_ = 1
IAcadMenuGroup_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{798225D3-984D-471E-84F3-D1EC56FA05EA}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'Name' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'menuType' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'MenuFileName' , 'Name' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Menus' , 'pMenus' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{3305CB53-F955-41F3-A47B-B7AA53B22D48}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Toolbars' , 'pToolbars' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Unload' , ), 1610743815, (1610743815, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Save' , 'MenuFileType' , ), 1610743816, (1610743816, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'SaveAs' , 'MenuFileName' , 'MenuFileType' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , 
             (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadMenuGroups_vtables_dispatch_ = 1
IAcadMenuGroups_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{DF14CB14-CDC6-463F-B71C-356149D1F935}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Load' , 'MenuFileName' , 'BaseMenu' , 'pMenuGroup' , ), 1610743813, (1610743813, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{DF14CB14-CDC6-463F-B71C-356149D1F935}')") , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
]

IAcadPlot_vtables_dispatch_ = 1
IAcadPlot_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'QuietErrorMode' , 'pQuietErrorMode' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'QuietErrorMode' , 'pQuietErrorMode' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfCopies' , 'pNumberOfCopies' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'NumberOfCopies' , 'pNumberOfCopies' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'BatchPlotProgress' , 'pBatchPlotProgress' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'BatchPlotProgress' , 'pBatchPlotProgress' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'DisplayPlotPreview' , 'PreviewMode' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'SetLayoutsToPlot' , 'layoutList' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'StartBatchMode' , 'entryCount' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'PlotToDevice' , 'plotConfig' , 'pResult' , ), 8, (8, (), [ (12, 17, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 136 , (3, 0, None, None) , 0 , )),
    (( 'PlotToFile' , 'plotFile' , 'plotConfig' , 'pResult' , ), 9, (9, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 144 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenu_vtables_dispatch_ = 1
IAcadPopupMenu_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'NameNoMnemonic' , 'bstrName' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'ShortcutMenu' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'OnMenuBar' , 'bFlag' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AddMenuItem' , 'Index' , 'Label' , 'Macro' , 'pItem' , 
             ), 1610743818, (1610743818, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'AddSubMenu' , 'Index' , 'Label' , 'pMenu' , ), 1610743819, (1610743819, (), [ 
             (12, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743820, (1610743820, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{5B5C5A15-81D2-4360-937A-4F2FA18FB266}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'InsertInMenuBar' , 'Index' , ), 1610743821, (1610743821, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'RemoveFromMenuBar' , ), 1610743822, (1610743822, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenuItem_vtables_dispatch_ = 1
IAcadPopupMenuItem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Label' , 'bstrLabel' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Enable' , 'bFlag' , ), 1610743814, (1610743814, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Check' , 'bFlag' , ), 1610743816, (1610743816, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'itemType' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'SubMenu' , 'pMenu' , ), 1610743819, (1610743819, (), [ (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743820, (1610743820, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'nIndex' , ), 1610743822, (1610743822, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Caption' , 'bstrCaption' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743824, (1610743824, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743826, (1610743826, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'EndSubMenuLevel' , 'Level' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAcadPopupMenus_vtables_dispatch_ = 1
IAcadPopupMenus_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{DF14CB14-CDC6-463F-B71C-356149D1F935}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'MenuName' , 'pMenu' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'InsertMenuInMenuBar' , 'MenuName' , 'Index' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'RemoveMenuFromMenuBar' , 'Index' , ), 1610743815, (1610743815, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadPreferences_vtables_dispatch_ = 1
IAcadPreferences_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Files' , 'pObj' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{125FA500-9ABC-4F98-87AD-869AEFA4AD72}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Display' , 'pObj' , ), 1610743810, (1610743810, (), [ (16393, 10, None, "IID('{0D71BC3C-9854-4076-BD32-D545259AB752}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'OpenSave' , 'pObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Output' , 'pObj' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{1560A14A-D97B-4B3B-BF95-D0F703723442}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'System' , 'pObj' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'User' , 'pObj' , ), 1610743814, (1610743814, (), [ (16393, 10, None, "IID('{689AE380-B75C-430E-8A70-D116D8B4FA63}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Drafting' , 'pObj' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Selection' , 'pObj' , ), 1610743816, (1610743816, (), [ (16393, 10, None, "IID('{CE512178-E98E-4225-800E-0A29DEE39BCD}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Profiles' , 'pObj' , ), 1610743817, (1610743817, (), [ (16393, 10, None, "IID('{52F0656B-9D63-4C67-ADBF-E9C732ED271B}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDisplay_vtables_dispatch_ = 1
IAcadPreferencesDisplay_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayMargins' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaper' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'LayoutDisplayPaperShadow' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'LayoutShowPlotSetup' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCreateViewport' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScrollBars' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'DisplayScreenMenu' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'CursorSize' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DockedVisibleLines' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ShowRasterImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinModelBackgrndColor' , 'color' , ), 1610743829, (1610743829, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ModelCrosshairColor' , 'crossHairColor' , ), 1610743831, (1610743831, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'GraphicsWinLayoutBackgrndColor' , 'color' , ), 1610743833, (1610743833, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'TextWinBackgrndColor' , 'Path' , ), 1610743835, (1610743835, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'TextWinTextColor' , 'Path' , ), 1610743837, (1610743837, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'LayoutCrosshairColor' , 'crossHairColor' , ), 1610743839, (1610743839, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackingVecColor' , 'AutoTrackingVecColor' , ), 1610743841, (1610743841, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'TextFont' , 'Path' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'TextFontStyle' , 'Path' , ), 1610743845, (1610743845, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'TextFontSize' , 'Path' , ), 1610743847, (1610743847, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'HistoryLines' , 'Path' , ), 1610743849, (1610743849, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'MaxAutoCADWindow' , 'Path' , ), 1610743851, (1610743851, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'DisplayLayoutTabs' , 'Path' , ), 1610743853, (1610743853, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'ImageFrameHighlight' , 'Path' , ), 1610743855, (1610743855, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'TrueColorImages' , 'Path' , ), 1610743857, (1610743857, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'XRefFadeIntensity' , 'Path' , ), 1610743859, (1610743859, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesDrafting_vtables_dispatch_ = 1
IAcadPreferencesDrafting_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarker' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMagnet' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapTooltip' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapAperture' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapApertureSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerColor' , 'Path' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'AutoSnapMarkerSize' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'PolarTrackingVector' , 'Path' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'FullScreenTrackingVector' , 'Path' , ), 1610743825, (1610743825, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'AutoTrackTooltip' , 'Path' , ), 1610743827, (1610743827, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'AlignmentPointAcquisition' , 'Path' , ), 1610743829, (1610743829, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesFiles_vtables_dispatch_ = 1
IAcadPreferencesFiles_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SupportPath' , 'orient' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SupportPath' , 'orient' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DriversPath' , 'Path' , ), 1610743811, (1610743811, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'MenuFile' , 'Path' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'HelpFilePath' , 'Path' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'HelpFilePath' , 'Path' , ), 1610743815, (1610743815, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'DefaultInternetURL' , 'Path' , ), 1610743817, (1610743817, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'DefaultInternetURL' , 'Path' , ), 1610743817, (1610743817, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ConfigFile' , 'ConfigFile' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'LicenseServer' , 'Path' , ), 1610743820, (1610743820, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
    (( 'TextEditor' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'TextEditor' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'MainDictionary' , 'Path' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'MainDictionary' , 'Path' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'CustomDictionary' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'CustomDictionary' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'AltFontFile' , 'fontFile' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'AltFontFile' , 'fontFile' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'FontFileMap' , 'Path' , ), 1610743829, (1610743829, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'FontFileMap' , 'Path' , ), 1610743829, (1610743829, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'PrintFile' , 'Path' , ), 1610743831, (1610743831, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PrintFile' , 'Path' , ), 1610743831, (1610743831, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolExecutable' , 'Path' , ), 1610743833, (1610743833, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolExecutable' , 'Path' , ), 1610743833, (1610743833, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'PostScriptPrologFile' , 'Path' , ), 1610743835, (1610743835, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'PostScriptPrologFile' , 'Path' , ), 1610743835, (1610743835, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolerPath' , 'Path' , ), 1610743837, (1610743837, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'PrintSpoolerPath' , 'Path' , ), 1610743837, (1610743837, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'AutoSavePath' , 'AutoSavePath' , ), 1610743839, (1610743839, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
    (( 'AutoSavePath' , 'AutoSavePath' , ), 1610743839, (1610743839, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
    (( 'TemplateDwgPath' , 'Path' , ), 1610743841, (1610743841, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
    (( 'TemplateDwgPath' , 'Path' , ), 1610743841, (1610743841, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
    (( 'LogFilePath' , 'Path' , ), 1610743843, (1610743843, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
    (( 'LogFilePath' , 'Path' , ), 1610743843, (1610743843, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
    (( 'TempFilePath' , 'Path' , ), 1610743845, (1610743845, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
    (( 'TempFilePath' , 'Path' , ), 1610743845, (1610743845, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
    (( 'TempXrefPath' , 'Path' , ), 1610743847, (1610743847, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
    (( 'TempXrefPath' , 'Path' , ), 1610743847, (1610743847, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
    (( 'TextureMapPath' , 'Path' , ), 1610743849, (1610743849, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
    (( 'TextureMapPath' , 'Path' , ), 1610743849, (1610743849, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
    (( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743851, (1610743851, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
    (( 'AltTabletMenuFile' , 'MenuFile' , ), 1610743851, (1610743851, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
    (( 'SetProjectFilePath' , 'ProjectName' , 'ProjectFilePath' , ), 1610743853, (1610743853, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
    (( 'GetProjectFilePath' , 'ProjectName' , 'Path' , ), 1610743854, (1610743854, (), [ (8, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
    (( 'PrinterConfigPath' , 'Path' , ), 1610743855, (1610743855, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
    (( 'PrinterConfigPath' , 'Path' , ), 1610743855, (1610743855, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
    (( 'PrinterDescPath' , 'Path' , ), 1610743857, (1610743857, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
    (( 'PrinterDescPath' , 'Path' , ), 1610743857, (1610743857, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
    (( 'PrinterStyleSheetPath' , 'Path' , ), 1610743859, (1610743859, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
    (( 'PrinterStyleSheetPath' , 'Path' , ), 1610743859, (1610743859, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
    (( 'WorkspacePath' , 'Path' , ), 1610743861, (1610743861, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
    (( 'WorkspacePath' , 'Path' , ), 1610743861, (1610743861, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
    (( 'ObjectARXPath' , 'Path' , ), 1610743863, (1610743863, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 64 , )),
    (( 'ObjectARXPath' , 'Path' , ), 1610743863, (1610743863, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
    (( 'ColorBookPath' , 'Path' , ), 1610743865, (1610743865, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
    (( 'ColorBookPath' , 'Path' , ), 1610743865, (1610743865, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
    (( 'ToolPalettePath' , 'Path' , ), 1610743867, (1610743867, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
    (( 'ToolPalettePath' , 'Path' , ), 1610743867, (1610743867, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
    (( 'QNewTemplateFile' , 'Path' , ), 1610743869, (1610743869, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
    (( 'QNewTemplateFile' , 'Path' , ), 1610743869, (1610743869, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOpenSave_vtables_dispatch_ = 1
IAcadPreferencesOpenSave_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SavePreviewThumbnail' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'IncrementalSavePercent' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'AutoSaveInterval' , 'Path' , ), 1610743813, (1610743813, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'CreateBackup' , 'CreateBackup' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'FullCRCValidation' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'LogFileOn' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'TempFileExtension' , 'Path' , ), 1610743821, (1610743821, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'XrefDemandLoad' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DemandLoadARXApp' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'ProxyImage' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'ShowProxyDialogBox' , 'Path' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'AutoAudit' , 'bAudit' , ), 1610743831, (1610743831, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'SaveAsType' , 'Path' , ), 1610743833, (1610743833, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'MRUNumber' , 'Path' , ), 1610743835, (1610743835, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'DWFFormat' , 'Path' , ), 1610743836, (1610743836, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'DWFFormat' , 'Path' , ), 1610743836, (1610743836, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesOutput_vtables_dispatch_ = 1
IAcadPreferencesOutput_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'DefaultOutputDevice' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'PrinterSpoolAlert' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'PrinterPaperSizeAlert' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'PlotLegacy' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'OLEQuality' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'UseLastPlotSettings' , 'Path' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'PlotPolicy' , 'Path' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleTable' , 'Path' , ), 1610743823, (1610743823, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForObjects' , 'Path' , ), 1610743825, (1610743825, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'DefaultPlotStyleForLayer' , 'Path' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'Pdf' , 'pObj' , ), 1610743828, (1610743828, (), [ (16393, 10, None, "IID('{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesPdfOutput_vtables_dispatch_ = 1
IAcadPreferencesPdfOutput_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ZoomToExtents' , 'Flag' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'ZoomToExtents' , 'Flag' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'PaperSizeOverride' , 'Flag' , ), 1610743810, (1610743810, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'PaperSizeOverride' , 'Flag' , ), 1610743810, (1610743810, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ShxTextAsGeometry' , 'Flag' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ShxTextAsGeometry' , 'Flag' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'SimpleGeomOptimization' , 'Flag' , ), 1610743812, (1610743812, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'SimpleGeomOptimization' , 'Flag' , ), 1610743812, (1610743812, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'TtfTextAsGeometry' , 'Flag' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'TtfTextAsGeometry' , 'Flag' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'EmbeddedTtf' , 'Flag' , ), 1610743814, (1610743814, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'EmbeddedTtf' , 'Flag' , ), 1610743814, (1610743814, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'LayersSetting' , 'Value' , ), 1610743815, (1610743815, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'LayersSetting' , 'Value' , ), 1610743815, (1610743815, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'LayoutsToExport' , 'Value' , ), 1610743816, (1610743816, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'LayoutsToExport' , 'Value' , ), 1610743816, (1610743816, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'PaperHeight' , 'Value' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'PaperHeight' , 'Value' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'PaperWidth' , 'Value' , ), 1610743818, (1610743818, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'PaperWidth' , 'Value' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'UsePlotStyles' , 'Value' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'UsePlotStyles' , 'Value' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'ExportHyperlinks' , 'Value' , ), 1610743820, (1610743820, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'ExportHyperlinks' , 'Value' , ), 1610743820, (1610743820, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'CreateBookmarks' , 'Value' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'CreateBookmarks' , 'Value' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesProfiles_vtables_dispatch_ = 1
IAcadPreferencesProfiles_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'ActiveProfile' , 'Path' , ), 1610743809, (1610743809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'ImportProfile' , 'ProfileName' , 'RegFile' , 'IncludePathInfo' , ), 1610743811, (1610743811, (), [ 
             (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'ExportProfile' , 'ProfileName' , 'RegFile' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'DeleteProfile' , 'ProfileName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ResetProfile' , 'Profile' , ), 1610743814, (1610743814, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'RenameProfile' , 'origProfileName' , 'newProfileName' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'CopyProfile' , 'oldProfileName' , 'newProfileName' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetAllProfileNames' , 'pNames' , ), 1610743817, (1610743817, (), [ (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSelection_vtables_dispatch_ = 1
IAcadPreferencesSelection_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'PickFirst' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'PickAdd' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'PickDrag' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'PickAuto' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'PickBoxSize' , 'Path' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGrips' , 'Path' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'DisplayGripsWithinBlocks' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GripColorSelected' , 'Path' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'GripColorUnselected' , 'Path' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'GripSize' , 'Path' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'PickGroup' , 'pick' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesSystem_vtables_dispatch_ = 1
IAcadPreferencesSystem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'SingleDocumentMode' , 'Path' , ), 1610743809, (1610743809, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'DisplayOLEScale' , 'Path' , ), 1610743811, (1610743811, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'StoreSQLIndex' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'TablesReadOnly' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'EnableStartupDialog' , 'Path' , ), 1610743817, (1610743817, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'BeepOnError' , 'BeepOnError' , ), 1610743819, (1610743819, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ShowWarningMessages' , 'Path' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'LoadAcadLspInAllDocuments' , 'pALID' , ), 1610743823, (1610743823, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadPreferencesUser_vtables_dispatch_ = 1
IAcadPreferencesUser_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardAccelerator' , 'Path' , ), 1610743809, (1610743809, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'KeyboardPriority' , 'Path' , ), 1610743811, (1610743811, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayCursor' , 'Path' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'HyperlinkDisplayTooltip' , 'Path' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultSource' , 'pIU' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'ADCInsertUnitsDefaultTarget' , 'pSUunits' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'ShortCutMenuDisplay' , 'pSCM' , ), 1610743821, (1610743821, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'SCMDefaultMode' , 'pSCM' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'SCMEditMode' , 'pSCM' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'SCMCommandMode' , 'pSCM' , ), 1610743827, (1610743827, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeMode' , 'time' , ), 1610743829, (1610743829, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'SCMTimeValue' , 'time' , ), 1610743831, (1610743831, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAcadSecurityParams_vtables_dispatch_ = 1
IAcadSecurityParams_vtables_ = [
    (( 'Action' , 'pOperations' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Action' , 'pOperations' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pSecret' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pSecret' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'ProviderType' , 'pProvType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'ProviderName' , 'pProvName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Algorithm' , 'pAlgId' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'KeyLength' , 'pKeyLen' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pCertSubject' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Issuer' , 'pCertIssuer' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'SerialNumber' , 'pSerialNum' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Comment' , 'pText' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Comment' , 'pText' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'TimeServer' , 'pTimeServerName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSet_vtables_dispatch_ = 1
IAcadSelectionSet_vtables_ = [
    (( 'Item' , 'Index' , 'pEntity' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{FFE64704-CEBD-4C88-A867-E7C821AFE488}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Name' , 'bstrName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Highlight' , 'bFlag' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Erase' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Update' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 6, (6, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'AddItems' , 'pSelSet' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'RemoveItems' , 'Objects' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Clear' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Select' , 'Mode' , 'Point1' , 'Point2' , 'FilterType' , 
             'FilterData' , ), 10, (10, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
             (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 144 , (3, 0, None, None) , 0 , )),
    (( 'SelectAtPoint' , 'Point' , 'FilterType' , 'FilterData' , ), 11, (11, (), [ 
             (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 152 , (3, 0, None, None) , 0 , )),
    (( 'SelectByPolygon' , 'Mode' , 'PointsList' , 'FilterType' , 'FilterData' , 
             ), 12, (12, (), [ (3, 1, None, None) , (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SelectOnScreen' , 'FilterType' , 'FilterData' , ), 13, (13, (), [ (12, 17, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAcadSelectionSets_vtables_dispatch_ = 1
IAcadSelectionSets_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Count' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 65 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'Name' , 'pSet' , ), 4, (4, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{01374CB7-5D3B-4556-800C-9BFC71BBEC42}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IAcadState_vtables_dispatch_ = 1
IAcadState_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1, (1, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'IsQuiescent' , 'bQuiescent' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IAcadToolbar_vtables_dispatch_ = 1
IAcadToolbar_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{EBCED992-0BB7-4165-B4D6-44261F377565}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743813, (1610743813, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Visible' , 'bFlag' , ), 1610743815, (1610743815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'DockStatus' , 'nStatus' , ), 1610743817, (1610743817, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743818, (1610743818, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'left' , 'nLeft' , ), 1610743819, (1610743819, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'top' , 'nTop' , ), 1610743821, (1610743821, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'nWidth' , ), 1610743823, (1610743823, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'nHeight' , ), 1610743824, (1610743824, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'FloatingRows' , 'nRows' , ), 1610743825, (1610743825, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743827, (1610743827, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'AddToolbarButton' , 'Index' , 'Name' , 'HelpString' , 'Macro' , 
             'FlyoutButton' , 'pItem' , ), 1610743829, (1610743829, (), [ (12, 1, None, None) , (8, 1, None, None) , 
             (8, 1, None, None) , (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{EBCED992-0BB7-4165-B4D6-44261F377565}')") , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
    (( 'AddSeparator' , 'Index' , 'pItem' , ), 1610743830, (1610743830, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{EBCED992-0BB7-4165-B4D6-44261F377565}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'Dock' , 'Side' , ), 1610743831, (1610743831, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Float' , 'top' , 'left' , 'NumberFloatRows' , ), 1610743832, (1610743832, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743833, (1610743833, (), [ ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743834, (1610743834, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IAcadToolbarItem_vtables_dispatch_ = 1
IAcadToolbarItem_vtables_ = [
    (( 'Application' , 'pAppObj' , ), 1610743808, (1610743808, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743809, (1610743809, (), [ (16393, 10, None, "IID('{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Name' , 'bstrName' , ), 1610743810, (1610743810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'TagString' , 'bstrTag' , ), 1610743812, (1610743812, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Type' , 'itemType' , ), 1610743814, (1610743814, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Flyout' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (16393, 10, None, "IID('{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Macro' , 'bstrMacro' , ), 1610743816, (1610743816, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Index' , 'nIndex' , ), 1610743818, (1610743818, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'HelpString' , 'bstrHelp' , ), 1610743819, (1610743819, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'GetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743821, (1610743821, (), [ (16392, 2, None, None) , 
             (16392, 2, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SetBitmaps' , 'SmallIconName' , 'LargeIconName' , ), 1610743822, (1610743822, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'AttachToolbarToFlyout' , 'MenuGroupName' , 'ToolbarName' , ), 1610743823, (1610743823, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Delete' , ), 1610743824, (1610743824, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAcadToolbars_vtables_dispatch_ = 1
IAcadToolbars_vtables_ = [
    (( 'Item' , 'Index' , 'pItem' , ), 0, (0, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( '_NewEnum' , 'pEnumVariant' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
    (( 'Count' , 'Count' , ), 1610743810, (1610743810, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Application' , 'pAppObj' , ), 1610743811, (1610743811, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Parent' , 'pParent' , ), 1610743812, (1610743812, (), [ (16393, 10, None, "IID('{DF14CB14-CDC6-463F-B71C-356149D1F935}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'LargeButtons' , 'bFlag' , ), 1610743813, (1610743813, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Add' , 'ToolbarName' , 'pTlbar' , ), 1610743815, (1610743815, (), [ (8, 1, None, None) , 
             (16393, 10, None, "IID('{618F1FE3-4CF9-41D4-A070-387C8560D4EC}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IAcadUtility_vtables_dispatch_ = 1
IAcadUtility_vtables_ = [
    (( 'AngleToReal' , 'Angle' , 'Unit' , 'Value' , ), 1610743808, (1610743808, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'AngleToString' , 'Angle' , 'Unit' , 'precision' , 'bstrValue' , 
             ), 1610743809, (1610743809, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'DistanceToReal' , 'Distance' , 'Unit' , 'Value' , ), 1610743810, (1610743810, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'RealToString' , 'Value' , 'Unit' , 'precision' , 'bstrValue' , 
             ), 1610743811, (1610743811, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'TranslateCoordinates' , 'Point' , 'FromCoordSystem' , 'ToCoordSystem' , 'Displacement' , 
             'OCSNormal' , 'transPt' , ), 1610743812, (1610743812, (), [ (12, 1, None, None) , (3, 1, None, None) , 
             (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
    (( 'InitializeUserInput' , 'Bits' , 'KeyWordList' , ), 1610743813, (1610743813, (), [ (3, 1, None, None) , 
             (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
    (( 'GetInteger' , 'Prompt' , 'Value' , ), 1610743814, (1610743814, (), [ (12, 17, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
    (( 'GetReal' , 'Prompt' , 'Value' , ), 1610743815, (1610743815, (), [ (12, 17, None, None) , 
             (16389, 10, None, None) , ], 1 , 1 , 4 , 1 , 112 , (3, 0, None, None) , 0 , )),
    (( 'GetInput' , 'Value' , ), 1610743816, (1610743816, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'GetKeyword' , 'Prompt' , 'bstrKeyword' , ), 1610743817, (1610743817, (), [ (12, 17, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 128 , (3, 0, None, None) , 0 , )),
    (( 'GetString' , 'HasSpaces' , 'Prompt' , 'bstrValue' , ), 1610743818, (1610743818, (), [ 
             (3, 1, None, None) , (12, 17, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 136 , (3, 0, None, None) , 0 , )),
    (( 'GetAngle' , 'Point' , 'Prompt' , 'Angle' , ), 1610743819, (1610743819, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 144 , (3, 0, None, None) , 0 , )),
    (( 'AngleFromXAxis' , 'StartPoint' , 'EndPoint' , 'Angle' , ), 1610743820, (1610743820, (), [ 
             (12, 1, None, None) , (12, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'GetCorner' , 'Point' , 'Prompt' , 'corner' , ), 1610743821, (1610743821, (), [ 
             (12, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 160 , (3, 0, None, None) , 0 , )),
    (( 'GetDistance' , 'Point' , 'Prompt' , 'dist' , ), 1610743822, (1610743822, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 168 , (3, 0, None, None) , 0 , )),
    (( 'GetOrientation' , 'Point' , 'Prompt' , 'Angle' , ), 1610743823, (1610743823, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 2 , 176 , (3, 0, None, None) , 0 , )),
    (( 'GetPoint' , 'Point' , 'Prompt' , 'inputPoint' , ), 1610743824, (1610743824, (), [ 
             (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 184 , (3, 0, None, None) , 0 , )),
    (( 'PolarPoint' , 'Point' , 'Angle' , 'Distance' , 'inputPoint' , 
             ), 1610743825, (1610743825, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'CreateTypedArray' , 'varArr' , 'Type' , 'inArgs' , ), 1610743826, (1610743826, (), [ 
             (16396, 2, None, None) , (3, 1, None, None) , (8204, 1, None, None) , ], 1 , 1 , 4 , -1 , 200 , (3, 0, None, None) , 0 , )),
    (( 'GetEntity' , 'Object' , 'PickedPoint' , 'Prompt' , ), 1610743827, (1610743827, (), [ 
             (16393, 2, None, None) , (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 208 , (3, 0, None, None) , 0 , )),
    (( 'Prompt' , 'Message' , ), 1610743828, (1610743828, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'GetSubEntity' , 'Object' , 'PickedPoint' , 'transMatrix' , 'ContextData' , 
             'Prompt' , ), 1610743829, (1610743829, (), [ (16393, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
             (16396, 2, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 224 , (3, 0, None, None) , 0 , )),
    (( 'IsURL' , 'URL' , 'IsValidURL' , ), 1610743830, (1610743830, (), [ (8, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'GetRemoteFile' , 'URL' , 'LocalFile' , 'IgnoreCache' , ), 1610743831, (1610743831, (), [ 
             (8, 1, None, None) , (16392, 2, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'PutRemoteFile' , 'URL' , 'LocalFile' , ), 1610743832, (1610743832, (), [ (8, 1, None, None) , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'IsRemoteFile' , 'LocalFile' , 'URL' , 'IsDownloadedFile' , ), 1610743833, (1610743833, (), [ 
             (8, 1, None, None) , (16392, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'LaunchBrowserDialog' , 'SelectedURL' , 'DialogTitle' , 'OpenButtonCaption' , 'StartPageURL' , 
             'RegistryRootKey' , 'OpenButtonAlwaysEnabled' , 'success' , ), 1610743834, (1610743834, (), [ (16392, 2, None, None) , 
             (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , 
             (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'SendModelessOperationStart' , 'operation' , ), 1610743835, (1610743835, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'SendModelessOperationEnded' , 'operation' , ), 1610743836, (1610743836, (), [ (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ObjectId32ToObjectIdString' , 'objectId32' , 'idString' , ), 1610743838, (1610743838, (), [ (3, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
    (( 'GetObjectIdString' , 'Object' , 'asHex' , 'idString' , ), 1610743839, (1610743839, (), [ 
             (9, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
    (( 'LogMessage' , 'msg' , ), 1610743856, (1610743856, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IOdaAuditInfo_vtables_dispatch_ = 1
IOdaAuditInfo_vtables_ = [
    (( 'numFixes' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'numErrors' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'fixErrors' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IOdaBagFiler_vtables_dispatch_ = 1
IOdaBagFiler_vtables_ = [
    (( 'ObjectToBuffer' , 'pObj' , 'ResType' , 'ResValue' , ), 1, (1, (), [ 
             (9, 1, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , (16396, 2, None, None) , (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'BufferToObject' , 'pObj' , 'ResType' , 'ResValue' , ), 2, (2, (), [ 
             (9, 1, None, "IID('{153A7BFD-AB55-48D4-81C7-22252D635ECE}')") , (12, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IOdaBmpOut_vtables_dispatch_ = 1
IOdaBmpOut_vtables_ = [
    (( 'WriteFile' , 'database' , 'BitmapName' , ), 1, (1, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 2, (2, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Height' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Width' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'BitPerPixel' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'BitPerPixel' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IOdaConsole_vtables_dispatch_ = 1
IOdaConsole_vtables_ = [
    (( 'PutString' , 'text' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'GetString' , 'bAllowSpaces' , 'result' , ), 2, (2, (), [ (11, 1, None, None) , 
             (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IOdaDwf3dExport_vtables_dispatch_ = 1
IOdaDwf3dExport_vtables_ = [
    (( 'Export3dDwf' , 'database' , 'FileName' , ), 1, (1, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 2, (2, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'xSize' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'xSize' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'ySize' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ySize' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IOdaDwfImporter_vtables_dispatch_ = 1
IOdaDwfImporter_vtables_ = [
    (( 'Import' , 'database' , 'FileName' , 'Password' , 'wPaper' , 
             'hPaper' , ), 1, (1, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , (8, 1, None, None) , (8, 49, "'0'", None) , 
             (5, 49, '297.0', None) , (5, 49, '210.0', None) , ], 1 , 1 , 4 , 0 , 56 , (3, 32, None, None) , 0 , )),
]

IOdaDwfImporter2_vtables_dispatch_ = 1
IOdaDwfImporter2_vtables_ = [
    (( 'Properties' , 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Properties' , 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Close' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IOdaDwfPageData_vtables_dispatch_ = 1
IOdaDwfPageData_vtables_ = [
    (( 'LayoutName' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Author' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Author' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'Title' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Subject' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Company' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'Company' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'Comments' , 'pVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'Reviewers' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'Reviewers' , 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'Keywords' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Description' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Copyright' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Copyright' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IOdaDwfTemplate_vtables_dispatch_ = 1
IOdaDwfTemplate_vtables_ = [
    (( 'WriteFile' , 'database' , 'FileName' , 'FileType' , 'version' , 
             ), 1, (1, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'AddPage' , 'LayoutName' , 'PageIndex' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'PageCount' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'Page' , 'Index' , 'PageData' , ), 4, (4, (), [ (12, 1, None, None) , 
             (16393, 10, None, "IID('{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'RemovePage' , 'Index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'RemoveAllPages' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'Background' , 'pVal' , ), 11, (11, (), [ (9, 1, None, "IID('{6F2B458D-6232-4085-AA60-BD5E8A967722}')") , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'ExportInvisibleLayers' , 'pVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'ExportInvisibleLayers' , 'pVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'ForceInitialViewToExtents' , 'pVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'ForceInitialViewToExtents' , 'pVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'SkipLayerInfo' , 'pVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'SkipLayerInfo' , 'pVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'SkipNamedViewsInfo' , 'pVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'SkipNamedViewsInfo' , 'pVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pVal' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'Password' , 'pVal' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'Publisher' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'Publisher' , 'pVal' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'WideComments' , 'pVal' , ), 19, (19, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'WideComments' , 'pVal' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'SourceProductName' , 'pVal' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'SourceProductName' , 'pVal' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 21, (21, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'Palette' , 'pVal' , ), 21, (21, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
    (( 'xSize' , 'pVal' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
    (( 'xSize' , 'pVal' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
    (( 'ySize' , 'pVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
    (( 'ySize' , 'pVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IOdaHostApp_vtables_dispatch_ = 1
IOdaHostApp_vtables_ = [
    (( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'BrowseForOpenFileName' , 'rootFolder' , 'fileFilter' , 'bOk' , 'FileName' , 
             ), 2, (2, (), [ (8, 0, None, None) , (8, 0, None, None) , (16395, 0, None, None) , (16392, 0, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'AuditDatabase' , 'pDoc' , 'bFixErrors' , ), 3, (3, (), [ (9, 0, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , 
             (11, 0, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'AuditInfo' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{56B202FE-BE71-43B4-B504-1902EDE89644}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'OriginalFileType' , 'pDoc' , 'FileType' , ), 5, (5, (), [ (9, 0, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , 
             (16396, 0, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'Recover' , 'FileName' , 'Password' , 'pDoc' , ), 6, (6, (), [ 
             (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}')") , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
    (( 'OpenDbPartially' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'OpenDbPartially' , 'pVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IOdaHostApp2_vtables_dispatch_ = 1
IOdaHostApp2_vtables_ = [
    (( 'Console' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{9DFDB619-A15D-43CD-92D5-7987D452B9F1}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'Console' , 'pVal' , ), 8, (8, (), [ (9, 1, None, "IID('{9DFDB619-A15D-43CD-92D5-7987D452B9F1}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IOdaSvgExporter_vtables_dispatch_ = 1
IOdaSvgExporter_vtables_ = [
    (( 'Properties' , 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , 
             (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'Properties' , 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , 
             (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'Export' , 'database' , 'FilePath' , ), 3, (3, (), [ (9, 1, None, "IID('{236374B2-E248-484D-91D4-C13FA726645D}')") , 
             (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ITransmittalFile_vtables_dispatch_ = 1
ITransmittalFile_vtables_ = [
    (( 'sourcePath' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'fileExists' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'version' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'fileSize' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'lastModifiedTime' , 'pVal' , ), 5, (5, (), [ (16391, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'FileType' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'includeInTransmittal' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'includeInTransmittal' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'numberOfDependents' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'numberOfDependees' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'database' , 'ppDatabase' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'getDependent' , 'nIndex' , 'ppFile' , ), 12, (12, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'getDependee' , 'nIndex' , 'ppFile' , ), 13, (13, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

ITransmittalFilesGraph_vtables_dispatch_ = 1
ITransmittalFilesGraph_vtables_ = [
    (( 'getRoot' , 'ppFile' , ), 1, (1, (), [ (16393, 10, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'addEdge' , 'pTransmitFileFrom' , 'pTransmitFileTo' , ), 2, (2, (), [ (9, 1, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , 
             (9, 1, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'removeEdge' , 'pTransmitFile' , 'pParentFile' , ), 3, (3, (), [ (9, 1, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , 
             (9, 1, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'getNumberOfFiles' , 'bIncludeMissingFiles' , 'bIncludeUnselectedFiles' , 'pnSize' , ), 4, (4, (), [ 
             (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'getAt' , 'nIndex' , 'ppFile' , ), 5, (5, (), [ (3, 1, None, None) , 
             (16393, 10, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'reset' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'totalBytes' , 'bIncludedFilesOnly' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , 
             (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITransmittalInfo_vtables_dispatch_ = 1
ITransmittalInfo_vtables_ = [
    (( 'destinationRoot' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'destinationRoot' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'saveVersion' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'saveVersion' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'preserveSubdirs' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'preserveSubdirs' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'defaultOverwriteValue' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
    (( 'defaultOverwriteValue' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
    (( 'xrefRelativePath' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
    (( 'xrefRelativePath' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
    (( 'imageRelativePath' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
    (( 'imageRelativePath' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
    (( 'includeXrefDwg' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
    (( 'includeXrefDwg' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
    (( 'includeImageFile' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
    (( 'includeImageFile' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
    (( 'includeFontFile' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
    (( 'includeFontFile' , 'pVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
    (( 'includePlotFile' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
    (( 'includePlotFile' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
    (( 'relativePath' , 'pVal' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
    (( 'relativePath' , 'pVal' , ), 15, (15, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
    (( 'organizedFolder' , 'pVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
    (( 'organizedFolder' , 'pVal' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
    (( 'includeMaterialTextureFile' , 'pVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
    (( 'includeMaterialTextureFile' , 'pVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

ITransmittalOperation_vtables_dispatch_ = 1
ITransmittalOperation_vtables_ = [
    (( 'addFile' , 'bstrFullPath' , 'pIParentFile' , 'bAddedBy3rdParty' , 'ppIAddedFile' , 
             'pRetVal' , ), 1, (1, (), [ (8, 1, None, None) , (9, 1, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , (3, 1, None, None) , 
             (16393, 2, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
    (( 'addToReport' , 'bstrTextToAdd' , 'nIndex' , 'pnIndex' , ), 2, (2, (), [ 
             (8, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
    (( 'addDrawingFile' , 'fullpathname' , 'ppIAddedFile' , 'pRetVal' , ), 3, (3, (), [ 
             (8, 1, None, None) , (16393, 2, None, "IID('{0A107B59-34CE-4F40-9AF2-26060A3C2099}')") , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
    (( 'createTransmittalPackage' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
    (( 'getTransmittalReport' , 'bstrReport' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
    (( 'getTransmittalInfoInterface' , 'ppIInfo' , ), 6, (6, (), [ (16393, 10, None, "IID('{122D84E7-A507-414C-A517-C33B19AF6BA5}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
    (( 'getTransmittalGraphInterface' , 'ppIGraph' , ), 7, (7, (), [ (16393, 10, None, "IID('{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

CLSIDToClassMap = {
    '{153A7BFD-AB55-48D4-81C7-22252D635ECE}' : IAcadObject,
    '{236374B2-E248-484D-91D4-C13FA726645D}' : IAcadDatabase,
    '{ECE694AB-7306-4687-AD03-C7017AE8DED1}' : IAcadModelSpace,
    '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}' : IAcadBlock,
    '{FFE64704-CEBD-4C88-A867-E7C821AFE488}' : IAcadEntity,
    '{6F2B458D-6232-4085-AA60-BD5E8A967722}' : IAcadAcCmColor,
    '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}' : IAcadHyperlinks,
    '{CFC06944-7FD0-432E-A430-B77F2967EB4C}' : IAcadHyperlink,
    '{7FBB52D0-2190-4A17-9A16-CB37821293B5}' : IAcad3DFace,
    '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}' : IAcadPolygonMesh,
    '{E82F96B5-BA0E-4569-BD8A-596495947C12}' : IAcad3DPolyline,
    '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}' : IAcadArc,
    '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}' : IAcadAttribute,
    '{34C7D347-D220-40C8-A81F-4B76ED6E5751}' : IAcad3DSolid,
    '{D9F13162-0CFA-4506-AAAD-D46724407877}' : IAcadRegion,
    '{E23D2B17-487F-4016-A5D4-6C27643F308F}' : IAcadCircle,
    '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}' : IAcadDimAligned,
    '{91BBC3D7-F48C-4703-8867-0F025F95DD56}' : IAcadDimension,
    '{559F6310-4DB2-4B61-8B4C-96D89006711B}' : IAcadDimAngular,
    '{0FB4DC41-B309-41C8-B5E7-23B284C98450}' : IAcadDimDiametric,
    '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}' : IAcadDimRotated,
    '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}' : IAcadDimOrdinate,
    '{0F29A519-B989-4E81-B41F-3346F3BE65CE}' : IAcadDimRadial,
    '{5B4B058E-B8AA-4C76-B652-76AF101C380F}' : IAcadEllipse,
    '{A7072E19-38E6-4320-9045-B67E53179643}' : IAcadLeader,
    '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}' : IAcadMText,
    '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}' : IAcadPoint,
    '{037572DF-0207-4B27-BCDA-C163054A21DF}' : IAcadLWPolyline,
    '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}' : IAcadPolyline,
    '{C888FAF5-E377-4624-A8E2-898031AB58BB}' : IAcadRay,
    '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}' : IAcadShape,
    '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}' : IAcadSolid,
    '{B05C2404-6A45-4A57-8075-F98464C350BE}' : IAcadSpline,
    '{9CD7E38D-0003-410D-B6DF-DE36FD190850}' : IAcadText,
    '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}' : IAcadTolerance,
    '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}' : IAcadTrace,
    '{703DF76F-5C64-414A-B271-4520E1244353}' : IAcadXline,
    '{A40DEA37-8356-415A-B3AC-E087819C6301}' : IAcadBlockReference,
    '{173ED161-3D64-4EF5-85F4-6AACA83CD382}' : IAcadHatch,
    '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}' : IAcadRasterImage,
    '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}' : IAcadLine,
    '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}' : IAcadLayout,
    '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}' : IAcadPlotConfiguration,
    '{A6653F5A-001E-4125-8BB0-597E96CDE498}' : IAcadMInsertBlock,
    '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}' : IAcadPolyfaceMesh,
    '{C35F5577-83CE-43C7-B10E-AFEF9E345739}' : IAcadMLine,
    '{B0E595FE-21A5-4C67-A916-4689ABA37E62}' : IAcadDim3PointAngular,
    '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}' : IAcadExternalReference,
    '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}' : IAcadTable,
    '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}' : IAcadDimArcLength,
    '{F2B4D571-C206-4E19-B1C0-55C95BED669C}' : IAcadDimRadialLarge,
    '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}' : IAcadSection,
    '{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}' : IAcadSectionSettings,
    '{2F52131D-45D6-4302-993D-ADA413443FD7}' : IAcadSectionTypeSettings,
    '{A2F0013E-ACE4-41C5-9015-37587663DD30}' : IAcadMLeader,
    '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}' : IAcadOle,
    '{39377F68-1F53-4433-90AE-05526FEA4FE5}' : IAcadPaperSpace,
    '{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}' : IAcadPViewport,
    '{13AC5968-504B-4C8D-BED6-208B3A562D90}' : IAcadView,
    '{98F7CE82-8E41-4D58-A784-30B3F33F7853}' : IAcadBlocks,
    '{973585F9-D300-4BA7-9D0F-6EE59533A0DC}' : IAcadGroups,
    '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}' : IAcadGroup,
    '{DAB1760C-8402-4520-AD32-9396AEF1C677}' : IAcadDimStyles,
    '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}' : IAcadDimStyle,
    '{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}' : IAcadLayers,
    '{A5484251-D4DF-4F32-A23F-445882F48F1B}' : IAcadLayer,
    '{669E518F-46F5-4E21-8447-7F8D1435AE94}' : IAcadLineTypes,
    '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}' : IAcadLineType,
    '{B6D57083-036D-48AB-8BF4-0902B5C88BFF}' : IAcadDictionaries,
    '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}' : IAcadDictionary,
    '{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}' : IAcadXRecord,
    '{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}' : IAcadRegisteredApplications,
    '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}' : IAcadRegisteredApplication,
    '{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}' : IAcadTextStyles,
    '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}' : IAcadTextStyle,
    '{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}' : IAcadUCSs,
    '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}' : IAcadUCS,
    '{E1673534-4417-4D0A-95FB-6E02246096D6}' : IAcadViews,
    '{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}' : IAcadViewports,
    '{A9B1F951-1AA7-4C23-8D57-AA199803D381}' : IAcadViewport,
    '{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}' : IAcadLayouts,
    '{38436519-BF47-4848-B6B2-CB6944F167D3}' : IAcadPlotConfigurations,
    '{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}' : IAcadDatabasePreferences,
    '{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}' : IAcadFileDependencies,
    '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}' : IAcadFileDependency,
    '{95D1CD9E-63E7-4860-9BE2-8F684047E102}' : IAcadSummaryInfo,
    '{47495992-2633-4FA4-8B0F-213F0C2D20A5}' : IAcadSectionManager,
    '{6B7DDA98-B483-40F8-905C-2DF10E936021}' : IAcadMaterials,
    '{4D24EA66-A2B3-4129-8367-81D93B44BE07}' : IAcadMaterial,
    '{1033C7F9-2D77-449D-8EA2-BD61DA1C9BCB}' : IAcadIdPair,
    '{090EF3DE-E74D-44C0-8B8B-89D0A79FBE52}' : IAcadAttributeReference,
    '{04C4F44E-99B7-490B-8823-F68ED45A487B}' : IAcadSortentsTable,
    '{65AFF703-323D-4562-B235-CC43966A7922}' : IAcadTableStyle,
    '{671D7077-2C99-4D21-A5D3-A5001F1B8F12}' : IAcadDynamicBlockReferenceProperty,
    '{DB31BDE0-6DD6-4FDF-A289-214EEA6C0072}' : IAcadSurface,
    '{FFCCA3F9-8BB7-4693-B7F7-07EFDF4DE8A9}' : IAcadPlaneSurface,
    '{91D470C0-CAB6-49F8-B13B-83D53527933A}' : IAcadExtrudedSurface,
    '{2AA6DCC2-C242-49CB-A576-545E4F500722}' : IAcadRevolvedSurface,
    '{A1E46554-B62E-4CEB-A9B8-8C9BC7E8252D}' : IAcadSweptSurface,
    '{9A580AC7-FD1D-4D94-A668-B00745FDB153}' : IAcadLoftedSurface,
    '{7480DD11-B890-41B3-BD1A-562D5190DDC2}' : IAcadHelix,
    '{D076BB70-1090-4438-9922-3FD91BA4BB4A}' : IAcadUnderlay,
    '{9E7B3D0B-36F8-444E-89A7-324B3E877BDC}' : IAcadMLeaderStyle,
    '{70991FC5-F814-45A8-BB15-BC703AB5BF63}' : IAcadSubEntity,
    '{D0AC8EBF-1F76-43EF-9748-D7EE52AABE25}' : IAcadMLeaderLeader,
    '{A095BF5E-B1A5-413F-A6EA-6E057C63CA59}' : IAcadDwfUnderlay,
    '{9D76FD22-F78B-40B5-94A3-B8C0AB17A1E2}' : IAcadSubEntSolidFace,
    '{EA82FD79-6DE0-445E-ABFB-541E52C91BB5}' : IAcadSubEntSolidEdge,
    '{45CF6C7D-7191-420A-9881-09042DD618ED}' : IAcadSubEntSolidVertex,
    '{977345B6-A313-4F2E-A4EE-1C2BB3C2FE0E}' : IAcadWipeout,
    '{A3D0151B-A26A-4803-BF89-37C525D058EE}' : IOdaLineType,
    '{D288082B-EC5B-4B26-A983-3AAD6F980D6C}' : IOdaBlock,
    '{EAB07C99-ABCA-4880-9B1C-4FD13FC3DE3A}' : IOdaMLineStyles,
    '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}' : IOdaMLineStyle,
    '{D2F02FB4-2990-4D58-80DC-9B756FC36FD0}' : IOdaRasterImage,
    '{39614E96-FFD9-42EA-99F0-FD7DC498D9B6}' : IOdaOle,
    '{7BB45F85-7771-4B5C-9D8E-EA0E79228461}' : IOdaLight,
    '{416400A5-8C83-49A6-9ED3-EFF0322FCFA9}' : IOdaCamera,
    '{4EE8DF6D-534E-4819-87AE-51FA448BCD6A}' : IOdaSpline,
    '{8CF4A451-A8A4-40C1-9ECC-26EF097042D6}' : IAcadHatch2,
    '{5EB52F66-908B-48C5-87D9-0180E81BF64F}' : IAcadSectionTypeSettings2,
    '{88F4A330-80BA-4593-975B-BB2ACDC4E465}' : IOdaPolyfaceMesh,
    '{E0ED259B-1BDB-4411-95BF-495BA25926A9}' : AcadLine,
    '{1ECF9DF9-7F91-48F5-963E-2740C5972B68}' : AcadObject,
    '{7B91A7F3-234E-4BD1-8914-76856A2AF7D9}' : AcadEntity,
    '{5FB8DBE0-D358-433C-ACAC-BC068C7037BA}' : AcadDimension,
    '{1DB6148A-7A75-431A-9F6E-5EE1DF74AD0F}' : AcadDimRotated,
    '{78D1C5E6-5650-4BFB-B601-93358EC97545}' : AcadMText,
    '{5EF88703-1D0E-410B-93B1-45956D27AD4E}' : AcadDatabase,
    '{4C1BF9A1-35AA-491B-8B22-2B2195D8229F}' : AcadViewport,
    '{9C67AAB4-9FF9-4CE0-9B87-8EF15358F7B3}' : AcadViewports,
    '{82833E4D-7362-465C-B00B-70F453668575}' : AcadText,
    '{5F7B73C4-ED41-4B98-98C6-EBA460B2F8F7}' : AcadTrace,
    '{F1B5F011-5265-4E87-9CE9-225743FB78D4}' : AcadPolyline,
    '{D49DF09F-070E-429D-976D-39F53AE3EF0B}' : AcadLineTypes,
    '{90507134-664C-4253-AD47-8F3AD62F3B2F}' : OdaLineType,
    '{0781CAE4-6055-4D40-B954-42D5EC725018}' : AcadLineType,
    '{59A0D5D3-CD4B-404E-888E-B280E8C7FE8A}' : AcadBlocks,
    '{D1D3025A-2179-4913-8262-F39523B04636}' : OdaBlock,
    '{5BE85927-9C3C-4E1F-BAE0-CCDA866949C5}' : AcadBlock,
    '{3E7B0C05-2062-420C-8EB3-EA62DC886DB1}' : AcadEllipse,
    '{B495AD49-5306-4B28-89F5-A69ED8798A4F}' : AcadCircle,
    '{D3EF1961-790F-4F88-98C6-49B664435505}' : AcadPoint,
    '{3B3E11A0-2824-4ADA-9EFE-41578212028F}' : Acad3DFace,
    '{90D9E3BD-E641-45B1-9C71-10F66E673E6E}' : Acad3DPolyline,
    '{365AF1BE-48C3-4099-951D-C1791294DE19}' : Acad3DSolid,
    '{96810171-584F-4A58-95DF-F90746B866A0}' : AcadArc,
    '{A6D6469F-6F70-4864-A8DC-5DB7397C658E}' : AcadAttribute,
    '{B02B4037-B189-4C98-BBF6-6DA42B1D673D}' : AcadLeader,
    '{CF0F8CEA-42D4-49E7-BDFA-764CFC2F412C}' : AcadMLeader,
    '{A708E24B-99D0-4D39-82C5-BD5BAAE97DFF}' : AcadMLeaderStyle,
    '{57FF5291-176F-4957-9FA6-5C2324976AA8}' : AcadTolerance,
    '{BEC51FF5-8BEE-4E41-9208-C23E7245B237}' : AcadBlockReference,
    '{2CD4FC7D-3E9F-42E6-9D76-F42B55AAEEC5}' : AcadDim3PointAngular,
    '{1158BDED-3762-405F-A58F-8789BCD31AE4}' : AcadDimAligned,
    '{FD968BB1-F1E1-4250-9903-56DF5171CF3D}' : AcadShape,
    '{61375357-7DDF-41E8-A003-5D44D0ED4617}' : AcadSolid,
    '{5F8B0FFC-7274-4725-980A-5007C132C268}' : AcadSpline,
    '{9681B428-389B-4E38-9718-26FBBC646BEE}' : AcadDimAngular,
    '{34A10E3E-AB48-4CBB-88CF-815F87738E90}' : AcadDimDiametric,
    '{685766B4-4712-4A68-9F6C-67765BF17C2B}' : AcadDimOrdinate,
    '{83F62228-2B26-4C18-8579-A9FC76D6422B}' : AcadDimRadial,
    '{BBAE1F47-D006-4796-A760-90F869EBA3F4}' : AcadDimRadialLarge,
    '{8A36FC37-0C0B-44FB-BA25-B6ED2090394B}' : AcadDimArcLength,
    '{2F5F8554-25D4-4D47-ABE3-4F92E81D4DFF}' : AcadXRecord,
    '{D0720E0B-260B-4E8E-B02E-BB1C6882AB2F}' : AcadXline,
    '{B71AD3CB-A8BC-4EB7-9946-579E44B8393E}' : AcadRay,
    '{FCF82E37-DD4C-4992-AF92-5FB8923AAC11}' : AcadDimStyle,
    '{97A26D82-C2A9-4D4E-8036-8A841A26D262}' : AcadExternalReference,
    '{A3E63831-0E7F-492F-9621-21B2627DF0D1}' : AcadMInsertBlock,
    '{9AB84FD1-1BEF-4A4B-BC47-C34ADA79F397}' : AcadDimStyles,
    '{647A8606-56EB-41CB-B6AE-6353DE9212F6}' : AcadUCS,
    '{35730B52-1E06-4055-B96F-472E4BA49750}' : AcadUCSs,
    '{05C08097-1095-42F2-83B1-789661B77D37}' : AcadView,
    '{AB479309-A94E-45F8-B968-09766E364886}' : AcadViews,
    '{3C200789-8338-447D-8373-AFEF38713BAA}' : AcadGroup,
    '{2D7FB26E-9052-4F9F-BD2D-D18C50713ED6}' : AcadGroups,
    '{887A471D-8E5B-46DD-B1FC-9248511A45B1}' : AcadDictionaries,
    '{BF982612-77C8-45E1-8F25-F10392D86C71}' : AcadDictionary,
    '{E386A799-DE90-42E8-9FC1-89DDB6CEFC41}' : AcadLayouts,
    '{D3D20BA9-3EDD-4108-9E10-4EE99F917847}' : AcadLayout,
    '{6201AE6E-3520-424A-903D-6F9F882C846E}' : AcadTextStyle,
    '{F9FF244F-67A9-4A6F-94FF-F839614E1470}' : AcadTextStyles,
    '{4B2665FC-67ED-44AF-8C4D-6A04816631F3}' : AcadHatch,
    '{F4F5165B-D882-4A22-9821-8F8A5092D87A}' : AcadMLine,
    '{84CA9670-95BB-48D2-886A-64FECD7DF55B}' : AcadPolygonMesh,
    '{52215AF1-CE88-43F7-BC8A-65E9AC73AB69}' : AcadPolyfaceMesh,
    '{34F35DB3-EA8B-4EF7-8AEE-009362201B18}' : AcadPlotConfiguration,
    '{A0E0F939-5A48-40A3-99D3-C57C25BE9E60}' : AcadPlotConfigurations,
    '{3C32ECD7-9763-4A13-BCED-A7E0A7CBB3EC}' : OdaRasterImage,
    '{5DAC02AE-C024-4E70-ACD2-CBDBB3AC3686}' : AcadRasterImage,
    '{37FDD4DC-7074-46A2-8140-7B8CB49D4C5A}' : AcadRegion,
    '{804668AC-29D1-4325-9C2F-9082076A8D32}' : AcadRegisteredApplication,
    '{505EC430-224F-4DF3-B7B8-0615AA6C2F36}' : AcadRegisteredApplications,
    '{4AC35C83-26ED-4BCC-A25F-78D31643490A}' : AcadPViewport,
    '{CA59FF45-6C1E-4223-9530-35C60DE7480D}' : AcadDatabasePreferences,
    '{2591C8C9-336E-4DA2-875F-5BD437A4E6A5}' : AcadHyperlink,
    '{277E3E52-6C69-4AC1-9312-DD3A02519F33}' : AcadHyperlinks,
    '{4EDD52C1-33F1-4B70-A800-2654F60D1D2B}' : AcadLayer,
    '{B9FEA495-416E-44BC-AB51-7150524E5AE0}' : AcadLayers,
    '{87897864-72C3-4D87-81DD-00614EC82213}' : AcadLWPolyline,
    '{A6413E76-C1F2-4883-A9DF-4F328C9375EC}' : AcadPaperSpace,
    '{D28289A3-5CCD-42DB-83BA-79C472D1BC7E}' : AcadModelSpace,
    '{50463551-644F-48E0-ADF0-70BDE39C2379}' : AcadAttributeReference,
    '{2A3294B7-AB1F-40C1-98E9-EA193E2847DB}' : AcadAcCmColor,
    '{40BB6348-8E1C-415D-A9D2-90C573CDB364}' : AcadSummaryInfo,
    '{2155F8AB-E527-45F7-8A97-FD850E710340}' : AcadFileDependencies,
    '{6F500011-5D1F-40A1-A1FD-109084F95E07}' : AcadFileDependency,
    '{35BEAEB0-3061-4089-9E36-5FF6C8B9B34A}' : AcadTable,
    '{CC40EAA3-6269-4D03-A2FC-3756679F5179}' : OdaOle,
    '{50F5CD60-FD9D-4FEE-A36E-CE9C411213EE}' : AcadTableStyle,
    '{3710CC1D-B641-43B7-AA95-DD105F2E3304}' : AcadSortentsTable,
    '{E15628CD-21E1-449A-8A74-5673C390599A}' : OdaMLineStyles,
    '{9D7870FF-F579-42F2-B5C8-68C1F81520B1}' : OdaMLineStyle,
    '{0E35FAA5-88E5-4697-948A-D262A2680445}' : AcadDynamicBlockReferenceProperty,
    '{4ED7B981-124E-465A-89E3-919A01A16824}' : AcadSection,
    '{79CA2C51-081A-466B-B451-D39485782330}' : AcadSurface,
    '{50347C02-0E1F-407E-9962-A96E32FA97D7}' : AcadLoftedSurface,
    '{531C8060-0A55-478B-A517-F7B3369306E9}' : AcadSweptSurface,
    '{ADF8BDAF-0231-422E-ACB9-6B769A5C8F96}' : AcadRevolvedSurface,
    '{7D3E8B0E-13E1-4DED-AD26-D39649A19DA6}' : AcadExtrudedSurface,
    '{02C58A19-A75E-4E03-BFDA-05F83B0EE9EE}' : AcadPlaneSurface,
    '{AA0DEA33-0EB3-432B-B91B-88384639BBA3}' : AcadHelix,
    '{FDCF150A-D241-4F4A-A3AC-2B6C7BEE6814}' : AcadSectionSettings,
    '{D8A7A1C3-D35B-49B1-84FE-408F5DD74504}' : AcadSectionTypeSettings,
    '{6C36E808-470A-42DC-A317-95D4529339F9}' : AcadSectionManager,
    '{D75D937B-6DD9-407E-AF88-6D29801CB204}' : AcadMaterial,
    '{16F19695-0DD8-494B-9FF3-756EF0AB29B1}' : AcadMaterials,
    '{71B03226-0D81-4E25-869B-5DA9E3F6B7CE}' : AcadDwfUnderlay,
    '{BA52E9FE-ED83-40C5-B0B1-5745C9E07B2B}' : AcadDgnUnderlay,
    '{31348C0E-FAD9-455F-B469-77CAA3C15DA2}' : AcadPdfUnderlay,
    '{EEA688F8-1BA2-46DE-80F8-39C0EB3F592B}' : AcadMLeaderLeader,
    '{E0A0C0B2-5007-454B-AB84-EE81C5E38A90}' : AcadSubEntity,
    '{48488B9F-D0D3-4835-8250-920A8C1FB3C9}' : AcadSubEntSolidFace,
    '{278C11AB-1CFD-4323-B9CC-8B7CA06D38C4}' : AcadSubEntSolidEdge,
    '{B82EA70D-951C-4A43-AFE8-A8DDD4E710F4}' : AcadSubEntSolidVertex,
    '{AB17FEA5-1C04-4E2B-BF37-7FADA3403BEB}' : AcadWipeout,
    '{2DB71EA6-47C0-457C-9E36-D5FDE0E72C05}' : OdaLight,
    '{6CEF829F-33B8-4FF2-B641-8333F877B180}' : OdaCamera,
    '{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}' : ITransmittalOperation,
    '{0A107B59-34CE-4F40-9AF2-26060A3C2099}' : ITransmittalFile,
    '{122D84E7-A507-414C-A517-C33B19AF6BA5}' : ITransmittalInfo,
    '{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}' : ITransmittalFilesGraph,
    '{798225D3-984D-471E-84F3-D1EC56FA05EA}' : IAcadMenuGroups,
    '{DF14CB14-CDC6-463F-B71C-356149D1F935}' : IAcadMenuGroup,
    '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}' : IAcadApplication,
    '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}' : IAcadDocument,
    '{445545BB-394E-481A-AC4F-F073E53030E8}' : IAcadPlot,
    '{37E34D42-8CD8-4E25-83BF-80C791AFEADE}' : IAcadSelectionSets,
    '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}' : IAcadSelectionSet,
    '{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}' : IAcadUtility,
    '{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}' : IAcadPreferences,
    '{125FA500-9ABC-4F98-87AD-869AEFA4AD72}' : IAcadPreferencesFiles,
    '{0D71BC3C-9854-4076-BD32-D545259AB752}' : IAcadPreferencesDisplay,
    '{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}' : IAcadPreferencesOpenSave,
    '{1560A14A-D97B-4B3B-BF95-D0F703723442}' : IAcadPreferencesOutput,
    '{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}' : IAcadPreferencesPdfOutput,
    '{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}' : IAcadPreferencesSystem,
    '{689AE380-B75C-430E-8A70-D116D8B4FA63}' : IAcadPreferencesUser,
    '{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}' : IAcadPreferencesDrafting,
    '{CE512178-E98E-4225-800E-0A29DEE39BCD}' : IAcadPreferencesSelection,
    '{52F0656B-9D63-4C67-ADBF-E9C732ED271B}' : IAcadPreferencesProfiles,
    '{A174CCC8-D19F-421F-8F4E-65C2E4F43167}' : IAcadMenuBar,
    '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}' : IAcadPopupMenu,
    '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}' : IAcadPopupMenuItem,
    '{CFFD1390-466A-49D9-9EE0-1884E930DFF9}' : IAcadDocuments,
    '{C2016470-443B-40D0-AD93-231ACFDCF594}' : IAcadState,
    '{3305CB53-F955-41F3-A47B-B7AA53B22D48}' : IAcadPopupMenus,
    '{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}' : IAcadToolbars,
    '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}' : IAcadToolbar,
    '{EBCED992-0BB7-4165-B4D6-44261F377565}' : IAcadToolbarItem,
    '{65CDCC9F-F651-4DC4-A361-A8307F08AEE3}' : IAcadLayerStateManager,
    '{A058E098-4DCF-4E3B-93BC-EF0FA19B718A}' : IAcadSecurityParams,
    '{8F2A46C2-4D8A-46D5-8BBE-B06A4027BE10}' : IOdaDwfTemplate,
    '{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}' : IOdaDwfPageData,
    '{C5631279-833D-4FE0-8965-B06E2FEC0E9C}' : IOdaDwfImporter,
    '{7E8D21F1-6343-4CCC-9F7D-0B270A05DC12}' : IOdaDwfImporter2,
    '{FDAF1115-5A20-4D16-A509-01012B71E4F7}' : IOdaSvgExporter,
    '{56B202FE-BE71-43B4-B504-1902EDE89644}' : IOdaAuditInfo,
    '{11C4F7AA-D8CC-4762-8C7C-3064E65EEDBD}' : IOdaBmpOut,
    '{4E99C4A8-AFC0-45E9-B312-61D7DB4F2EE6}' : IOdaDwf3dExport,
    '{9A61E0FC-4311-457B-8C65-2AD3531DC5DD}' : TransmittalOperation,
    '{658E0EA9-97D8-4D44-AFF0-A0F01094750D}' : TransmittalFilesGraph,
    '{D944169D-A83B-4A9E-B543-5C66F52E3D35}' : TransmittalFile,
    '{AD47B265-C3D5-437C-AA75-527C7A7793C6}' : TransmittalInfo,
    '{FE3FC546-AF40-4A2E-9C5C-14B7B4B8A54D}' : AcadMenuGroups,
    '{A07E5142-51E0-441E-B442-1F46F53F3888}' : AcadMenuGroup,
    '{DE927728-3684-4835-8255-54350D951307}' : AcadMenuBar,
    '{18B24243-321E-4980-9351-57C02F246EC9}' : AcadPopupMenus,
    '{62AB6B80-D12D-40C8-8970-9915E69E05E0}' : AcadPopupMenu,
    '{E24D7979-088A-435B-B939-D8E18AD4BE1D}' : AcadPopupMenuItem,
    '{6625C943-4F9E-4FCD-B847-454FCDC56C19}' : AcadToolbars,
    '{A8D0AE76-640B-44AA-BB5C-6986706CA9F6}' : AcadToolbar,
    '{C9F46D28-7AEE-48F1-B8B7-6F8E7EC40625}' : AcadToolbarItem,
    '{93E291E9-BB72-429B-B4DE-DF76B88603EB}' : _DAcadApplicationEvents,
    '{63A90E32-CB8B-4A3B-ADFF-EF94A35278B2}' : _DAcadDocumentEvents,
    '{E789E253-BEDC-44FF-B228-AD3A17D9AB3A}' : IOdaHostApp,
    '{9DFDB619-A15D-43CD-92D5-7987D452B9F1}' : IOdaConsole,
    '{CFE29DD1-2A1B-49F9-853E-11918A789C6D}' : IOdaHostApp2,
    '{6EBA6B5A-1D9F-4B21-BC0B-35EFDBAB543D}' : IOdaBagFiler,
    '{61F2A9AB-8A44-4C20-953A-735508C1CA85}' : AcPePropertyEditorColor,
    '{4B61C84D-A730-4760-A409-4023DD1D8E57}' : AcPePropertyEditorTextStyle,
    '{8C9F3B98-30E9-45CE-9F07-63955326E8D4}' : AcPePropertyEditorLType,
    '{96F57653-F913-4CAB-B511-2F14AF9138D3}' : AcPePropertyEditorLayer,
    '{4F19983F-AB24-4FB9-ADC0-0B6026080239}' : AcPePropertyEditorLWeight,
    '{7507B465-281A-465C-A724-A72D09327153}' : AcPePropertyEditorEllipses,
    '{4735C83D-5F58-4963-8571-A4424C619D7F}' : AcPePick2PointsCtrl,
    '{0E86524E-1812-426A-9A63-2C2B51B0D0E4}' : AcadApplication,
    '{5F5D38B7-C56C-4250-B088-2B06EEEC1EE9}' : AcadDocuments,
    '{3975E80C-5EC5-4EE0-B432-E9EC7BBB9A5A}' : AcadDocument,
    '{5FA75E80-D112-4186-AD8E-0992D7F13475}' : _IOdaHostAppEvents,
    '{D81CF9E5-4C85-435B-876B-C706E2D5F00E}' : OdaHostApp,
    '{AB480185-F159-4B5D-BC9E-AEA9AB722DF1}' : AcadUtility,
    '{A3EAF524-D893-4F6F-8D07-7F9416F7EBB9}' : AcadPreferences,
    '{354D8744-81E2-4BB0-AC00-2C2471F3BEBE}' : AcadPreferencesFiles,
    '{100E11DA-6700-452D-B6BE-0B65FDB2E17A}' : AcadPreferencesDisplay,
    '{E21FACEF-E6A4-4DE1-8315-7F0F07EB877E}' : AcadPreferencesOpenSave,
    '{46B6BEE0-DA5A-4089-AC8A-70A254F31659}' : AcadPreferencesOutput,
    '{CB5F57D2-535C-4550-BDAC-FBFDB8778294}' : AcadPreferencesPdfOutput,
    '{8A48E79C-D378-4111-82D9-A25F84F5B6DC}' : AcadPreferencesSystem,
    '{DD509194-682F-49FE-9984-C7F0EE819A45}' : AcadPreferencesUser,
    '{F6B948E8-500C-4305-A2EA-71FA28A35530}' : AcadPreferencesDrafting,
    '{469FB7EC-09CF-4D1D-BAC8-4553F5098ADD}' : AcadPreferencesSelection,
    '{71AE8036-20F2-4439-BF71-F27400E3291D}' : AcadPreferencesProfiles,
    '{5696C1B9-643B-4E6E-B711-DB897137424E}' : AcadState,
    '{F3862E27-3753-44F7-BDB0-24468C8E8CF6}' : AcadSelectionSet,
    '{2F021E6D-67B2-4955-9135-A28F93BCEE6D}' : AcadSelectionSets,
    '{126D4FCB-3E3D-491B-9F0B-D6C9D362116A}' : AcadPlot,
    '{81186CAF-6BAC-4DD6-B470-3C7930A28DD5}' : OdaDwfTemplate,
    '{7CCF62DE-076C-4ED9-9ED2-3D4A5AC9E4DE}' : OdaDwf3dExport,
    '{46901A1D-C99C-45E0-B2F5-D99C07CD8BBB}' : OdaDwfImporter,
    '{2F38A4F0-DDE8-488C-B53C-5E364C267B53}' : AcadLayerStateManager,
    '{06F4FD5D-DBD9-4B44-B464-6683CC541EDD}' : AcadSecurityParams,
    '{C0F35882-6A8B-426C-8787-001E1073197A}' : OdaSvgExporter,
    '{97B88F76-4023-412F-8C23-607C526E4E7D}' : OdaBmpOut,
    '{DF962AF5-E3C8-4552-B65D-698F48DE2759}' : OdaBagFiler,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
    '{153A7BFD-AB55-48D4-81C7-22252D635ECE}' : 'IAcadObject',
    '{236374B2-E248-484D-91D4-C13FA726645D}' : 'IAcadDatabase',
    '{ECE694AB-7306-4687-AD03-C7017AE8DED1}' : 'IAcadModelSpace',
    '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}' : 'IAcadBlock',
    '{FFE64704-CEBD-4C88-A867-E7C821AFE488}' : 'IAcadEntity',
    '{6F2B458D-6232-4085-AA60-BD5E8A967722}' : 'IAcadAcCmColor',
    '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}' : 'IAcadHyperlinks',
    '{CFC06944-7FD0-432E-A430-B77F2967EB4C}' : 'IAcadHyperlink',
    '{7FBB52D0-2190-4A17-9A16-CB37821293B5}' : 'IAcad3DFace',
    '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}' : 'IAcadPolygonMesh',
    '{E82F96B5-BA0E-4569-BD8A-596495947C12}' : 'IAcad3DPolyline',
    '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}' : 'IAcadArc',
    '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}' : 'IAcadAttribute',
    '{34C7D347-D220-40C8-A81F-4B76ED6E5751}' : 'IAcad3DSolid',
    '{D9F13162-0CFA-4506-AAAD-D46724407877}' : 'IAcadRegion',
    '{E23D2B17-487F-4016-A5D4-6C27643F308F}' : 'IAcadCircle',
    '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}' : 'IAcadDimAligned',
    '{91BBC3D7-F48C-4703-8867-0F025F95DD56}' : 'IAcadDimension',
    '{559F6310-4DB2-4B61-8B4C-96D89006711B}' : 'IAcadDimAngular',
    '{0FB4DC41-B309-41C8-B5E7-23B284C98450}' : 'IAcadDimDiametric',
    '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}' : 'IAcadDimRotated',
    '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}' : 'IAcadDimOrdinate',
    '{0F29A519-B989-4E81-B41F-3346F3BE65CE}' : 'IAcadDimRadial',
    '{5B4B058E-B8AA-4C76-B652-76AF101C380F}' : 'IAcadEllipse',
    '{A7072E19-38E6-4320-9045-B67E53179643}' : 'IAcadLeader',
    '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}' : 'IAcadMText',
    '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}' : 'IAcadPoint',
    '{037572DF-0207-4B27-BCDA-C163054A21DF}' : 'IAcadLWPolyline',
    '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}' : 'IAcadPolyline',
    '{C888FAF5-E377-4624-A8E2-898031AB58BB}' : 'IAcadRay',
    '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}' : 'IAcadShape',
    '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}' : 'IAcadSolid',
    '{B05C2404-6A45-4A57-8075-F98464C350BE}' : 'IAcadSpline',
    '{9CD7E38D-0003-410D-B6DF-DE36FD190850}' : 'IAcadText',
    '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}' : 'IAcadTolerance',
    '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}' : 'IAcadTrace',
    '{703DF76F-5C64-414A-B271-4520E1244353}' : 'IAcadXline',
    '{A40DEA37-8356-415A-B3AC-E087819C6301}' : 'IAcadBlockReference',
    '{173ED161-3D64-4EF5-85F4-6AACA83CD382}' : 'IAcadHatch',
    '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}' : 'IAcadRasterImage',
    '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}' : 'IAcadLine',
    '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}' : 'IAcadLayout',
    '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}' : 'IAcadPlotConfiguration',
    '{A6653F5A-001E-4125-8BB0-597E96CDE498}' : 'IAcadMInsertBlock',
    '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}' : 'IAcadPolyfaceMesh',
    '{C35F5577-83CE-43C7-B10E-AFEF9E345739}' : 'IAcadMLine',
    '{B0E595FE-21A5-4C67-A916-4689ABA37E62}' : 'IAcadDim3PointAngular',
    '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}' : 'IAcadExternalReference',
    '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}' : 'IAcadTable',
    '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}' : 'IAcadDimArcLength',
    '{F2B4D571-C206-4E19-B1C0-55C95BED669C}' : 'IAcadDimRadialLarge',
    '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}' : 'IAcadSection',
    '{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}' : 'IAcadSectionSettings',
    '{2F52131D-45D6-4302-993D-ADA413443FD7}' : 'IAcadSectionTypeSettings',
    '{A2F0013E-ACE4-41C5-9015-37587663DD30}' : 'IAcadMLeader',
    '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}' : 'IAcadOle',
    '{39377F68-1F53-4433-90AE-05526FEA4FE5}' : 'IAcadPaperSpace',
    '{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}' : 'IAcadPViewport',
    '{13AC5968-504B-4C8D-BED6-208B3A562D90}' : 'IAcadView',
    '{98F7CE82-8E41-4D58-A784-30B3F33F7853}' : 'IAcadBlocks',
    '{973585F9-D300-4BA7-9D0F-6EE59533A0DC}' : 'IAcadGroups',
    '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}' : 'IAcadGroup',
    '{DAB1760C-8402-4520-AD32-9396AEF1C677}' : 'IAcadDimStyles',
    '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}' : 'IAcadDimStyle',
    '{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}' : 'IAcadLayers',
    '{A5484251-D4DF-4F32-A23F-445882F48F1B}' : 'IAcadLayer',
    '{669E518F-46F5-4E21-8447-7F8D1435AE94}' : 'IAcadLineTypes',
    '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}' : 'IAcadLineType',
    '{B6D57083-036D-48AB-8BF4-0902B5C88BFF}' : 'IAcadDictionaries',
    '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}' : 'IAcadDictionary',
    '{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}' : 'IAcadXRecord',
    '{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}' : 'IAcadRegisteredApplications',
    '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}' : 'IAcadRegisteredApplication',
    '{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}' : 'IAcadTextStyles',
    '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}' : 'IAcadTextStyle',
    '{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}' : 'IAcadUCSs',
    '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}' : 'IAcadUCS',
    '{E1673534-4417-4D0A-95FB-6E02246096D6}' : 'IAcadViews',
    '{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}' : 'IAcadViewports',
    '{A9B1F951-1AA7-4C23-8D57-AA199803D381}' : 'IAcadViewport',
    '{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}' : 'IAcadLayouts',
    '{38436519-BF47-4848-B6B2-CB6944F167D3}' : 'IAcadPlotConfigurations',
    '{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}' : 'IAcadDatabasePreferences',
    '{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}' : 'IAcadFileDependencies',
    '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}' : 'IAcadFileDependency',
    '{95D1CD9E-63E7-4860-9BE2-8F684047E102}' : 'IAcadSummaryInfo',
    '{47495992-2633-4FA4-8B0F-213F0C2D20A5}' : 'IAcadSectionManager',
    '{6B7DDA98-B483-40F8-905C-2DF10E936021}' : 'IAcadMaterials',
    '{4D24EA66-A2B3-4129-8367-81D93B44BE07}' : 'IAcadMaterial',
    '{1033C7F9-2D77-449D-8EA2-BD61DA1C9BCB}' : 'IAcadIdPair',
    '{090EF3DE-E74D-44C0-8B8B-89D0A79FBE52}' : 'IAcadAttributeReference',
    '{5195F20D-9F99-43C4-9A6A-198355A920ED}' : 'IAcadObjectEvents',
    '{04C4F44E-99B7-490B-8823-F68ED45A487B}' : 'IAcadSortentsTable',
    '{65AFF703-323D-4562-B235-CC43966A7922}' : 'IAcadTableStyle',
    '{671D7077-2C99-4D21-A5D3-A5001F1B8F12}' : 'IAcadDynamicBlockReferenceProperty',
    '{DB31BDE0-6DD6-4FDF-A289-214EEA6C0072}' : 'IAcadSurface',
    '{FFCCA3F9-8BB7-4693-B7F7-07EFDF4DE8A9}' : 'IAcadPlaneSurface',
    '{91D470C0-CAB6-49F8-B13B-83D53527933A}' : 'IAcadExtrudedSurface',
    '{2AA6DCC2-C242-49CB-A576-545E4F500722}' : 'IAcadRevolvedSurface',
    '{A1E46554-B62E-4CEB-A9B8-8C9BC7E8252D}' : 'IAcadSweptSurface',
    '{9A580AC7-FD1D-4D94-A668-B00745FDB153}' : 'IAcadLoftedSurface',
    '{7480DD11-B890-41B3-BD1A-562D5190DDC2}' : 'IAcadHelix',
    '{D076BB70-1090-4438-9922-3FD91BA4BB4A}' : 'IAcadUnderlay',
    '{9E7B3D0B-36F8-444E-89A7-324B3E877BDC}' : 'IAcadMLeaderStyle',
    '{70991FC5-F814-45A8-BB15-BC703AB5BF63}' : 'IAcadSubEntity',
    '{D0AC8EBF-1F76-43EF-9748-D7EE52AABE25}' : 'IAcadMLeaderLeader',
    '{A095BF5E-B1A5-413F-A6EA-6E057C63CA59}' : 'IAcadDwfUnderlay',
    '{9D76FD22-F78B-40B5-94A3-B8C0AB17A1E2}' : 'IAcadSubEntSolidFace',
    '{EA82FD79-6DE0-445E-ABFB-541E52C91BB5}' : 'IAcadSubEntSolidEdge',
    '{45CF6C7D-7191-420A-9881-09042DD618ED}' : 'IAcadSubEntSolidVertex',
    '{977345B6-A313-4F2E-A4EE-1C2BB3C2FE0E}' : 'IAcadWipeout',
    '{A3D0151B-A26A-4803-BF89-37C525D058EE}' : 'IOdaLineType',
    '{D288082B-EC5B-4B26-A983-3AAD6F980D6C}' : 'IOdaBlock',
    '{EAB07C99-ABCA-4880-9B1C-4FD13FC3DE3A}' : 'IOdaMLineStyles',
    '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}' : 'IOdaMLineStyle',
    '{D2F02FB4-2990-4D58-80DC-9B756FC36FD0}' : 'IOdaRasterImage',
    '{39614E96-FFD9-42EA-99F0-FD7DC498D9B6}' : 'IOdaOle',
    '{7BB45F85-7771-4B5C-9D8E-EA0E79228461}' : 'IOdaLight',
    '{416400A5-8C83-49A6-9ED3-EFF0322FCFA9}' : 'IOdaCamera',
    '{E3CD32AF-3A8F-49D9-9DC5-527E91318993}' : 'IOPMPropertyExpander',
    '{9850E632-7168-452B-A262-FC3DCB313851}' : 'IOPMPropertyExtension',
    '{4EE8DF6D-534E-4819-87AE-51FA448BCD6A}' : 'IOdaSpline',
    '{8CF4A451-A8A4-40C1-9ECC-26EF097042D6}' : 'IAcadHatch2',
    '{5EB52F66-908B-48C5-87D9-0180E81BF64F}' : 'IAcadSectionTypeSettings2',
    '{88F4A330-80BA-4593-975B-BB2ACDC4E465}' : 'IOdaPolyfaceMesh',
     '{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}' : 'ITransmittalOperation',
    '{0A107B59-34CE-4F40-9AF2-26060A3C2099}' : 'ITransmittalFile',
    '{122D84E7-A507-414C-A517-C33B19AF6BA5}' : 'ITransmittalInfo',
    '{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}' : 'ITransmittalFilesGraph',
    '{798225D3-984D-471E-84F3-D1EC56FA05EA}' : 'IAcadMenuGroups',
    '{DF14CB14-CDC6-463F-B71C-356149D1F935}' : 'IAcadMenuGroup',
    '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}' : 'IAcadApplication',
    '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}' : 'IAcadDocument',
    '{445545BB-394E-481A-AC4F-F073E53030E8}' : 'IAcadPlot',
    '{37E34D42-8CD8-4E25-83BF-80C791AFEADE}' : 'IAcadSelectionSets',
    '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}' : 'IAcadSelectionSet',
    '{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}' : 'IAcadUtility',
    '{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}' : 'IAcadPreferences',
    '{125FA500-9ABC-4F98-87AD-869AEFA4AD72}' : 'IAcadPreferencesFiles',
    '{0D71BC3C-9854-4076-BD32-D545259AB752}' : 'IAcadPreferencesDisplay',
    '{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}' : 'IAcadPreferencesOpenSave',
    '{1560A14A-D97B-4B3B-BF95-D0F703723442}' : 'IAcadPreferencesOutput',
    '{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}' : 'IAcadPreferencesPdfOutput',
    '{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}' : 'IAcadPreferencesSystem',
    '{689AE380-B75C-430E-8A70-D116D8B4FA63}' : 'IAcadPreferencesUser',
    '{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}' : 'IAcadPreferencesDrafting',
    '{CE512178-E98E-4225-800E-0A29DEE39BCD}' : 'IAcadPreferencesSelection',
    '{52F0656B-9D63-4C67-ADBF-E9C732ED271B}' : 'IAcadPreferencesProfiles',
    '{A174CCC8-D19F-421F-8F4E-65C2E4F43167}' : 'IAcadMenuBar',
    '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}' : 'IAcadPopupMenu',
    '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}' : 'IAcadPopupMenuItem',
    '{CFFD1390-466A-49D9-9EE0-1884E930DFF9}' : 'IAcadDocuments',
    '{C2016470-443B-40D0-AD93-231ACFDCF594}' : 'IAcadState',
    '{3305CB53-F955-41F3-A47B-B7AA53B22D48}' : 'IAcadPopupMenus',
    '{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}' : 'IAcadToolbars',
    '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}' : 'IAcadToolbar',
    '{EBCED992-0BB7-4165-B4D6-44261F377565}' : 'IAcadToolbarItem',
    '{65CDCC9F-F651-4DC4-A361-A8307F08AEE3}' : 'IAcadLayerStateManager',
    '{A058E098-4DCF-4E3B-93BC-EF0FA19B718A}' : 'IAcadSecurityParams',
    '{8F2A46C2-4D8A-46D5-8BBE-B06A4027BE10}' : 'IOdaDwfTemplate',
    '{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}' : 'IOdaDwfPageData',
    '{C5631279-833D-4FE0-8965-B06E2FEC0E9C}' : 'IOdaDwfImporter',
    '{7E8D21F1-6343-4CCC-9F7D-0B270A05DC12}' : 'IOdaDwfImporter2',
    '{FDAF1115-5A20-4D16-A509-01012B71E4F7}' : 'IOdaSvgExporter',
    '{56B202FE-BE71-43B4-B504-1902EDE89644}' : 'IOdaAuditInfo',
    '{11C4F7AA-D8CC-4762-8C7C-3064E65EEDBD}' : 'IOdaBmpOut',
    '{4E99C4A8-AFC0-45E9-B312-61D7DB4F2EE6}' : 'IOdaDwf3dExport',
    '{E789E253-BEDC-44FF-B228-AD3A17D9AB3A}' : 'IOdaHostApp',
    '{9DFDB619-A15D-43CD-92D5-7987D452B9F1}' : 'IOdaConsole',
    '{CFE29DD1-2A1B-49F9-853E-11918A789C6D}' : 'IOdaHostApp2',
    '{6EBA6B5A-1D9F-4B21-BC0B-35EFDBAB543D}' : 'IOdaBagFiler',
}


NamesToIIDMap = {
    'IAcadObject' : '{153A7BFD-AB55-48D4-81C7-22252D635ECE}',
    'IAcadDatabase' : '{236374B2-E248-484D-91D4-C13FA726645D}',
    'IAcadModelSpace' : '{ECE694AB-7306-4687-AD03-C7017AE8DED1}',
    'IAcadBlock' : '{A1F2F50A-DEC5-4D37-B62D-393491DACB2E}',
    'IAcadEntity' : '{FFE64704-CEBD-4C88-A867-E7C821AFE488}',
    'IAcadAcCmColor' : '{6F2B458D-6232-4085-AA60-BD5E8A967722}',
    'IAcadHyperlinks' : '{BBC2B22B-AE20-47B7-98AC-A75114C62CF9}',
    'IAcadHyperlink' : '{CFC06944-7FD0-432E-A430-B77F2967EB4C}',
    'IAcad3DFace' : '{7FBB52D0-2190-4A17-9A16-CB37821293B5}',
    'IAcadPolygonMesh' : '{CA0C9AB2-0AC7-47C1-9877-FBCDCA68F403}',
    'IAcad3DPolyline' : '{E82F96B5-BA0E-4569-BD8A-596495947C12}',
    'IAcadArc' : '{426D2F0F-4A34-44D9-82D4-37E1A55605D2}',
    'IAcadAttribute' : '{E6A50EDF-A944-4172-8B2B-737EC047AD0F}',
    'IAcad3DSolid' : '{34C7D347-D220-40C8-A81F-4B76ED6E5751}',
    'IAcadRegion' : '{D9F13162-0CFA-4506-AAAD-D46724407877}',
    'IAcadCircle' : '{E23D2B17-487F-4016-A5D4-6C27643F308F}',
    'IAcadDimAligned' : '{9E7FFD46-F51C-44CE-9C06-01EFE94B7E04}',
    'IAcadDimension' : '{91BBC3D7-F48C-4703-8867-0F025F95DD56}',
    'IAcadDimAngular' : '{559F6310-4DB2-4B61-8B4C-96D89006711B}',
    'IAcadDimDiametric' : '{0FB4DC41-B309-41C8-B5E7-23B284C98450}',
    'IAcadDimRotated' : '{A7BDFAD9-F3EA-4B81-B03F-24FA2BFFA32B}',
    'IAcadDimOrdinate' : '{5A31D60B-3F6D-45C2-8A55-9CC70626D20D}',
    'IAcadDimRadial' : '{0F29A519-B989-4E81-B41F-3346F3BE65CE}',
    'IAcadEllipse' : '{5B4B058E-B8AA-4C76-B652-76AF101C380F}',
    'IAcadLeader' : '{A7072E19-38E6-4320-9045-B67E53179643}',
    'IAcadMText' : '{21E0293A-4AAE-4049-87D3-336F8F4D2D45}',
    'IAcadPoint' : '{C0CA40EE-60A1-4E76-AAEF-801E2CCC97A1}',
    'IAcadLWPolyline' : '{037572DF-0207-4B27-BCDA-C163054A21DF}',
    'IAcadPolyline' : '{8C60FDCD-785A-40EA-92FE-6DC1DAC29E7B}',
    'IAcadRay' : '{C888FAF5-E377-4624-A8E2-898031AB58BB}',
    'IAcadShape' : '{24F52F8C-7BC3-41CC-93E7-ADC6A0F75A83}',
    'IAcadSolid' : '{A2F8C6B2-C9D6-4A48-9B9D-8CA3E604166C}',
    'IAcadSpline' : '{B05C2404-6A45-4A57-8075-F98464C350BE}',
    'IAcadText' : '{9CD7E38D-0003-410D-B6DF-DE36FD190850}',
    'IAcadTolerance' : '{C7ECDEAB-7E7A-40DE-90D4-7D009D03266D}',
    'IAcadTrace' : '{128CC5FA-D347-4DCF-B0EA-574BADC9461A}',
    'IAcadXline' : '{703DF76F-5C64-414A-B271-4520E1244353}',
    'IAcadBlockReference' : '{A40DEA37-8356-415A-B3AC-E087819C6301}',
    'IAcadHatch' : '{173ED161-3D64-4EF5-85F4-6AACA83CD382}',
    'IAcadRasterImage' : '{1334DA0A-AFF4-4E2A-8540-5313AA8A47E4}',
    'IAcadLine' : '{34257E2A-6A0C-4DEF-A740-65455AC05B1D}',
    'IAcadLayout' : '{50D89DB1-E146-428F-92BD-87F4EB9A46B4}',
    'IAcadPlotConfiguration' : '{3648ECB5-D174-4212-8D3F-273DB12C4EAC}',
    'IAcadMInsertBlock' : '{A6653F5A-001E-4125-8BB0-597E96CDE498}',
    'IAcadPolyfaceMesh' : '{5BBFB818-58E4-466A-BCBF-27CF88E2FE08}',
    'IAcadMLine' : '{C35F5577-83CE-43C7-B10E-AFEF9E345739}',
    'IAcadDim3PointAngular' : '{B0E595FE-21A5-4C67-A916-4689ABA37E62}',
    'IAcadExternalReference' : '{CD8AF174-69E8-4044-841A-7CDC34FE43BF}',
    'IAcadTable' : '{62AE6596-74E9-4FC1-9F31-CB9567E550F9}',
    'IAcadDimArcLength' : '{2E0ED9F5-20D4-45D5-9241-93E3B1BF56D3}',
    'IAcadDimRadialLarge' : '{F2B4D571-C206-4E19-B1C0-55C95BED669C}',
    'IAcadSection' : '{3BF84F02-EA6E-4B36-87D7-F9070DDA9657}',
    'IAcadSectionSettings' : '{BD245AB1-A6D8-4F1F-9D6E-ED76AB3615F9}',
    'IAcadSectionTypeSettings' : '{2F52131D-45D6-4302-993D-ADA413443FD7}',
    'IAcadMLeader' : '{A2F0013E-ACE4-41C5-9015-37587663DD30}',
    'IAcadOle' : '{5A90AA1A-8525-49B7-9F44-62E6A958DE82}',
    'IAcadPaperSpace' : '{39377F68-1F53-4433-90AE-05526FEA4FE5}',
    'IAcadPViewport' : '{894A0DA6-C91F-458C-AC86-7FEDBF35CD30}',
    'IAcadView' : '{13AC5968-504B-4C8D-BED6-208B3A562D90}',
    'IAcadBlocks' : '{98F7CE82-8E41-4D58-A784-30B3F33F7853}',
    'IAcadGroups' : '{973585F9-D300-4BA7-9D0F-6EE59533A0DC}',
    'IAcadGroup' : '{5AF2F067-C79B-4C61-B0EF-950C44990DAA}',
    'IAcadDimStyles' : '{DAB1760C-8402-4520-AD32-9396AEF1C677}',
    'IAcadDimStyle' : '{F1E716A4-FBC3-4893-A8C4-5E59A537D7CE}',
    'IAcadLayers' : '{EA5AF871-E4B9-4903-9509-DF622C0DC6E7}',
    'IAcadLayer' : '{A5484251-D4DF-4F32-A23F-445882F48F1B}',
    'IAcadLineTypes' : '{669E518F-46F5-4E21-8447-7F8D1435AE94}',
    'IAcadLineType' : '{908A55EF-9ED0-4A36-BD47-AD0818AF9317}',
    'IAcadDictionaries' : '{B6D57083-036D-48AB-8BF4-0902B5C88BFF}',
    'IAcadDictionary' : '{542B5C1D-3280-4154-B3C6-B9D55E9A153B}',
    'IAcadXRecord' : '{30EDB9F1-6E3A-4428-9DA5-BFCDFEF07D75}',
    'IAcadRegisteredApplications' : '{AD2DE5AD-7787-4890-A818-BF9E0B1D4F43}',
    'IAcadRegisteredApplication' : '{CEE7E95F-2FDC-4E74-B87C-9443B5EC029D}',
    'IAcadTextStyles' : '{2D0D8EA6-992A-4CF8-966F-3DE39A3BF22F}',
    'IAcadTextStyle' : '{EE473D68-C42F-4A9D-8393-C3975C17BC4A}',
    'IAcadUCSs' : '{B07B7A4C-A7D7-4116-BD27-D46030FDFE1B}',
    'IAcadUCS' : '{F5F78A02-09C6-49EB-812A-04B5ACC46F71}',
    'IAcadViews' : '{E1673534-4417-4D0A-95FB-6E02246096D6}',
    'IAcadViewports' : '{181E70E5-A50B-46DA-93EE-BCC068BFEBEC}',
    'IAcadViewport' : '{A9B1F951-1AA7-4C23-8D57-AA199803D381}',
    'IAcadLayouts' : '{88CC8ED5-7AEF-459A-BE86-45C7AFD8EAE8}',
    'IAcadPlotConfigurations' : '{38436519-BF47-4848-B6B2-CB6944F167D3}',
    'IAcadDatabasePreferences' : '{41A5D923-4AB8-48DD-B24D-FBAFE94BA683}',
    'IAcadFileDependencies' : '{DA84BC48-A8C9-45CC-B042-07B8C95CD0E4}',
    'IAcadFileDependency' : '{AB7F29F6-3436-434F-8F92-9D3C1ED2D3DF}',
    'IAcadSummaryInfo' : '{95D1CD9E-63E7-4860-9BE2-8F684047E102}',
    'IAcadSectionManager' : '{47495992-2633-4FA4-8B0F-213F0C2D20A5}',
    'IAcadMaterials' : '{6B7DDA98-B483-40F8-905C-2DF10E936021}',
    'IAcadMaterial' : '{4D24EA66-A2B3-4129-8367-81D93B44BE07}',
    'IAcadIdPair' : '{1033C7F9-2D77-449D-8EA2-BD61DA1C9BCB}',
    'IAcadAttributeReference' : '{090EF3DE-E74D-44C0-8B8B-89D0A79FBE52}',
    'IAcadSortentsTable' : '{04C4F44E-99B7-490B-8823-F68ED45A487B}',
    'IAcadTableStyle' : '{65AFF703-323D-4562-B235-CC43966A7922}',
    'IAcadDynamicBlockReferenceProperty' : '{671D7077-2C99-4D21-A5D3-A5001F1B8F12}',
    'IAcadSurface' : '{DB31BDE0-6DD6-4FDF-A289-214EEA6C0072}',
    'IAcadPlaneSurface' : '{FFCCA3F9-8BB7-4693-B7F7-07EFDF4DE8A9}',
    'IAcadExtrudedSurface' : '{91D470C0-CAB6-49F8-B13B-83D53527933A}',
    'IAcadRevolvedSurface' : '{2AA6DCC2-C242-49CB-A576-545E4F500722}',
    'IAcadSweptSurface' : '{A1E46554-B62E-4CEB-A9B8-8C9BC7E8252D}',
    'IAcadLoftedSurface' : '{9A580AC7-FD1D-4D94-A668-B00745FDB153}',
    'IAcadHelix' : '{7480DD11-B890-41B3-BD1A-562D5190DDC2}',
    'IAcadUnderlay' : '{D076BB70-1090-4438-9922-3FD91BA4BB4A}',
    'IAcadMLeaderStyle' : '{9E7B3D0B-36F8-444E-89A7-324B3E877BDC}',
    'IAcadSubEntity' : '{70991FC5-F814-45A8-BB15-BC703AB5BF63}',
    'IAcadMLeaderLeader' : '{D0AC8EBF-1F76-43EF-9748-D7EE52AABE25}',
    'IAcadDwfUnderlay' : '{A095BF5E-B1A5-413F-A6EA-6E057C63CA59}',
    'IAcadSubEntSolidFace' : '{9D76FD22-F78B-40B5-94A3-B8C0AB17A1E2}',
    'IAcadSubEntSolidEdge' : '{EA82FD79-6DE0-445E-ABFB-541E52C91BB5}',
    'IAcadSubEntSolidVertex' : '{45CF6C7D-7191-420A-9881-09042DD618ED}',
    'IAcadWipeout' : '{977345B6-A313-4F2E-A4EE-1C2BB3C2FE0E}',
    'IOdaLineType' : '{A3D0151B-A26A-4803-BF89-37C525D058EE}',
    'IOdaBlock' : '{D288082B-EC5B-4B26-A983-3AAD6F980D6C}',
    'IOdaMLineStyles' : '{EAB07C99-ABCA-4880-9B1C-4FD13FC3DE3A}',
    'IOdaMLineStyle' : '{3A1DC1C0-D49D-4DC6-A944-A158227BFF03}',
    'IOdaRasterImage' : '{D2F02FB4-2990-4D58-80DC-9B756FC36FD0}',
    'IOdaOle' : '{39614E96-FFD9-42EA-99F0-FD7DC498D9B6}',
    'IOdaLight' : '{7BB45F85-7771-4B5C-9D8E-EA0E79228461}',
    'IOdaCamera' : '{416400A5-8C83-49A6-9ED3-EFF0322FCFA9}',
    'IOdaSpline' : '{4EE8DF6D-534E-4819-87AE-51FA448BCD6A}',
    'IAcadHatch2' : '{8CF4A451-A8A4-40C1-9ECC-26EF097042D6}',
    'IAcadSectionTypeSettings2' : '{5EB52F66-908B-48C5-87D9-0180E81BF64F}',
    'IOdaPolyfaceMesh' : '{88F4A330-80BA-4593-975B-BB2ACDC4E465}',
    'IAcadObjectEvents' : '{5195F20D-9F99-43C4-9A6A-198355A920ED}',
    'IOPMPropertyExpander' : '{E3CD32AF-3A8F-49D9-9DC5-527E91318993}',
    'IOPMPropertyExtension' : '{9850E632-7168-452B-A262-FC3DCB313851}',
    'ITransmittalOperation' : '{7EFB484A-0280-4ED6-A73F-6DBE663DB79D}',
    'ITransmittalFile' : '{0A107B59-34CE-4F40-9AF2-26060A3C2099}',
    'ITransmittalInfo' : '{122D84E7-A507-414C-A517-C33B19AF6BA5}',
    'ITransmittalFilesGraph' : '{DE88EA7C-176A-42C7-BF1A-CFCCDEAB3EDB}',
    'IAcadMenuGroups' : '{798225D3-984D-471E-84F3-D1EC56FA05EA}',
    'IAcadMenuGroup' : '{DF14CB14-CDC6-463F-B71C-356149D1F935}',
    'IAcadApplication' : '{D48F17B7-773E-4238-A6C6-B2BBEBAA9A1E}',
    'IAcadDocument' : '{5896DFEB-2488-49F7-8A9D-CF0DEA5AC6FB}',
    'IAcadPlot' : '{445545BB-394E-481A-AC4F-F073E53030E8}',
    'IAcadSelectionSets' : '{37E34D42-8CD8-4E25-83BF-80C791AFEADE}',
    'IAcadSelectionSet' : '{01374CB7-5D3B-4556-800C-9BFC71BBEC42}',
    'IAcadUtility' : '{5046A00A-7C22-4D39-ADE0-FB1AE3709B4D}',
    'IAcadPreferences' : '{03CE46C1-93A9-4E5C-B7F5-7AC7E2D48948}',
    'IAcadPreferencesFiles' : '{125FA500-9ABC-4F98-87AD-869AEFA4AD72}',
    'IAcadPreferencesDisplay' : '{0D71BC3C-9854-4076-BD32-D545259AB752}',
    'IAcadPreferencesOpenSave' : '{5E24ED87-DC43-4771-B7E6-7FE35C21CAB1}',
    'IAcadPreferencesOutput' : '{1560A14A-D97B-4B3B-BF95-D0F703723442}',
    'IAcadPreferencesPdfOutput' : '{21F2EB66-F27E-40AF-A3F5-7F2E7D6F6AA6}',
    'IAcadPreferencesSystem' : '{408546BA-FF59-4AA8-98C5-A1DBA4B730F8}',
    'IAcadPreferencesUser' : '{689AE380-B75C-430E-8A70-D116D8B4FA63}',
    'IAcadPreferencesDrafting' : '{35D9C296-C2E9-4DAB-93CA-4A62F71C9FC1}',
    'IAcadPreferencesSelection' : '{CE512178-E98E-4225-800E-0A29DEE39BCD}',
    'IAcadPreferencesProfiles' : '{52F0656B-9D63-4C67-ADBF-E9C732ED271B}',
    'IAcadMenuBar' : '{A174CCC8-D19F-421F-8F4E-65C2E4F43167}',
    'IAcadPopupMenu' : '{E63FD651-4B1B-40BE-B7FA-CBAE74D97FE5}',
    'IAcadPopupMenuItem' : '{5B5C5A15-81D2-4360-937A-4F2FA18FB266}',
    'IAcadDocuments' : '{CFFD1390-466A-49D9-9EE0-1884E930DFF9}',
    'IAcadState' : '{C2016470-443B-40D0-AD93-231ACFDCF594}',
    'IAcadPopupMenus' : '{3305CB53-F955-41F3-A47B-B7AA53B22D48}',
    'IAcadToolbars' : '{F7DF12AA-4EF4-4EEE-8D00-68BB80D7F092}',
    'IAcadToolbar' : '{618F1FE3-4CF9-41D4-A070-387C8560D4EC}',
    'IAcadToolbarItem' : '{EBCED992-0BB7-4165-B4D6-44261F377565}',
    'IAcadLayerStateManager' : '{65CDCC9F-F651-4DC4-A361-A8307F08AEE3}',
    'IAcadSecurityParams' : '{A058E098-4DCF-4E3B-93BC-EF0FA19B718A}',
    'IOdaDwfTemplate' : '{8F2A46C2-4D8A-46D5-8BBE-B06A4027BE10}',
    'IOdaDwfPageData' : '{6C2751B5-A21F-46D8-8EBE-59F0A15288D9}',
    'IOdaDwfImporter' : '{C5631279-833D-4FE0-8965-B06E2FEC0E9C}',
    'IOdaDwfImporter2' : '{7E8D21F1-6343-4CCC-9F7D-0B270A05DC12}',
    'IOdaSvgExporter' : '{FDAF1115-5A20-4D16-A509-01012B71E4F7}',
    'IOdaAuditInfo' : '{56B202FE-BE71-43B4-B504-1902EDE89644}',
    'IOdaBmpOut' : '{11C4F7AA-D8CC-4762-8C7C-3064E65EEDBD}',
    'IOdaDwf3dExport' : '{4E99C4A8-AFC0-45E9-B312-61D7DB4F2EE6}',
    '_DAcadApplicationEvents' : '{93E291E9-BB72-429B-B4DE-DF76B88603EB}',
    '_DAcadDocumentEvents' : '{63A90E32-CB8B-4A3B-ADFF-EF94A35278B2}',
    'IOdaHostApp' : '{E789E253-BEDC-44FF-B228-AD3A17D9AB3A}',
    'IOdaConsole' : '{9DFDB619-A15D-43CD-92D5-7987D452B9F1}',
    'IOdaHostApp2' : '{CFE29DD1-2A1B-49F9-853E-11918A789C6D}',
    'IOdaBagFiler' : '{6EBA6B5A-1D9F-4B21-BC0B-35EFDBAB543D}',
    '_IOdaHostAppEvents' : '{5FA75E80-D112-4186-AD8E-0992D7F13475}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

def getApp() -> IAcadApplication:
    iptr = Ap.Application.acadGetIDispatch()
    punk = pythoncom.ObjectFromAddress(iptr,pythoncom.IID_IDispatch)
    return win32com.client.Dispatch(punk, resultCLSID=AcadApplication.CLSID)

def createEventObject(obj, eventclass):
    win32com.client.WithEvents(obj,eventclass)
