from _typeshed import Incomplete
from win32com.client import CoClassBaseClass, DispatchBaseClass

makepy_version: str
python_version: int
defaultNamedOptArg: Incomplete
defaultNamedNotOptArg: Incomplete
defaultUnnamedArg: Incomplete
CLSID: Incomplete
MajorVersion: int
MinorVersion: int
LibraryFlags: int
LCID: int

class constants:
    acCubicSpline3DPoly: int
    acQuadSpline3DPoly: int
    acSimple3DPoly: int
    gcCubicSpline3DPoly: int
    gcQuadSpline3DPoly: int
    gcSimple3DPoly: int
    acModelSpace: int
    acPaperSpace: int
    gcModelSpace: int
    gcPaperSpace: int
    acAlignmentAligned: int
    acAlignmentBottomCenter: int
    acAlignmentBottomLeft: int
    acAlignmentBottomRight: int
    acAlignmentCenter: int
    acAlignmentFit: int
    acAlignmentLeft: int
    acAlignmentMiddle: int
    acAlignmentMiddleCenter: int
    acAlignmentMiddleLeft: int
    acAlignmentMiddleRight: int
    acAlignmentRight: int
    acAlignmentTopCenter: int
    acAlignmentTopLeft: int
    acAlignmentTopRight: int
    gcAlignmentAligned: int
    gcAlignmentBottomCenter: int
    gcAlignmentBottomLeft: int
    gcAlignmentBottomRight: int
    gcAlignmentCenter: int
    gcAlignmentFit: int
    gcAlignmentLeft: int
    gcAlignmentMiddle: int
    gcAlignmentMiddleCenter: int
    gcAlignmentMiddleLeft: int
    gcAlignmentMiddleRight: int
    gcAlignmentRight: int
    gcAlignmentTopCenter: int
    gcAlignmentTopLeft: int
    gcAlignmentTopRight: int
    acAlignPntAcquisitionAutomatic: int
    acAlignPntAcquisitionShiftToAcquire: int
    gcAlignPntAcquisitionAutomatic: int
    gcAlignPntAcquisitionShiftToAcquire: int
    acDegreeMinuteSeconds: int
    acDegrees: int
    acGrads: int
    acRadians: int
    gcDegreeMinuteSeconds: int
    gcDegrees: int
    gcGrads: int
    gcRadians: int
    acAttachmentPointBottomCenter: int
    acAttachmentPointBottomLeft: int
    acAttachmentPointBottomRight: int
    acAttachmentPointMiddleCenter: int
    acAttachmentPointMiddleLeft: int
    acAttachmentPointMiddleRight: int
    acAttachmentPointTopCenter: int
    acAttachmentPointTopLeft: int
    acAttachmentPointTopRight: int
    gcAttachmentPointBottomCenter: int
    gcAttachmentPointBottomLeft: int
    gcAttachmentPointBottomRight: int
    gcAttachmentPointMiddleCenter: int
    gcAttachmentPointMiddleLeft: int
    gcAttachmentPointMiddleRight: int
    gcAttachmentPointTopCenter: int
    gcAttachmentPointTopLeft: int
    gcAttachmentPointTopRight: int
    acAttributeModeConstant: int
    acAttributeModeInvisible: int
    acAttributeModeLockPosition: int
    acAttributeModeMultipleLine: int
    acAttributeModeNormal: int
    acAttributeModePreset: int
    acAttributeModeVerify: int
    gcAttributeModeConstant: int
    gcAttributeModeInvisible: int
    gcAttributeModeLockPosition: int
    gcAttributeModeMultipleLine: int
    gcAttributeModeNormal: int
    gcAttributeModePreset: int
    gcAttributeModeVerify: int
    acConnectBase: int
    acConnectExtents: int
    gcConnectBase: int
    gcConnectExtents: int
    acAny: int
    acUniform: int
    gcAny: int
    gcUniform: int
    acIntersection: int
    acSubtraction: int
    acUnion: int
    gcIntersection: int
    gcSubtraction: int
    gcUnion: int
    acBottomCenter: int
    acBottomLeft: int
    acBottomRight: int
    acMiddleCenter: int
    acMiddleLeft: int
    acMiddleRight: int
    acTopCenter: int
    acTopLeft: int
    acTopRight: int
    gcBottomCenter: int
    gcBottomLeft: int
    gcBottomRight: int
    gcMiddleCenter: int
    gcMiddleLeft: int
    gcMiddleRight: int
    gcTopCenter: int
    gcTopLeft: int
    gcTopRight: int
    acBottomMask: int
    acLeftMask: int
    acRightMask: int
    acTopMask: int
    gcBottomMask: int
    gcLeftMask: int
    gcRightMask: int
    gcTopMask: int
    acCellStateContentLocked: int
    acCellStateContentModified: int
    acCellStateContentReadOnly: int
    acCellStateFormatLocked: int
    acCellStateFormatModified: int
    acCellStateFormatReadOnly: int
    acCellStateLinked: int
    acCellStateNone: int
    gcCellStateContentLocked: int
    gcCellStateContentModified: int
    gcCellStateContentReadOnly: int
    gcCellStateFormatLocked: int
    gcCellStateFormatModified: int
    gcCellStateFormatReadOnly: int
    gcCellStateLinked: int
    gcCellStateNone: int
    acBlockCell: int
    acTextCell: int
    acUnknownCell: int
    gcBlockCell: int
    gcTextCell: int
    gcUnknownCell: int
    acBlue: int
    acByBlock: int
    acByLayer: int
    acCyan: int
    acGreen: int
    acMagenta: int
    acRed: int
    acWhite: int
    acYellow: int
    gcBlue: int
    gcByBlock: int
    gcByLayer: int
    gcCyan: int
    gcGreen: int
    gcMagenta: int
    gcRed: int
    gcWhite: int
    gcYellow: int
    acColorMethodByACI: int
    acColorMethodByBlock: int
    acColorMethodByLayer: int
    acColorMethodByRGB: int
    acColorMethodForeground: int
    gcColorMethodByACI: int
    gcColorMethodByBlock: int
    gcColorMethodByLayer: int
    gcColorMethodByRGB: int
    gcColorMethodForeground: int
    acDisplayDCS: int
    acOCS: int
    acPaperSpaceDCS: int
    acUCS: int
    acWorld: int
    gcDisplayDCS: int
    gcOCS: int
    gcPaperSpaceDCS: int
    gcUCS: int
    gcWorld: int
    acSymAbove: int
    acSymInFront: int
    acSymNone: int
    gcSymAbove: int
    gcSymInFront: int
    gcSymNone: int
    acArrowArchTick: int
    acArrowBoxBlank: int
    acArrowBoxFilled: int
    acArrowClosed: int
    acArrowClosedBlank: int
    acArrowDatumBlank: int
    acArrowDatumFilled: int
    acArrowDefault: int
    acArrowDot: int
    acArrowDotBlank: int
    acArrowDotSmall: int
    acArrowIntegral: int
    acArrowNone: int
    acArrowOblique: int
    acArrowOpen: int
    acArrowOpen30: int
    acArrowOpen90: int
    acArrowOrigin: int
    acArrowOrigin2: int
    acArrowSmall: int
    acArrowUserDefined: int
    gcArrowArchTick: int
    gcArrowBoxBlank: int
    gcArrowBoxFilled: int
    gcArrowClosed: int
    gcArrowClosedBlank: int
    gcArrowDatumBlank: int
    gcArrowDatumFilled: int
    gcArrowDefault: int
    gcArrowDot: int
    gcArrowDotBlank: int
    gcArrowDotSmall: int
    gcArrowIntegral: int
    gcArrowNone: int
    gcArrowOblique: int
    gcArrowOpen: int
    gcArrowOpen30: int
    gcArrowOpen90: int
    gcArrowOrigin: int
    gcArrowOrigin2: int
    gcArrowSmall: int
    gcArrowUserDefined: int
    acCenterLine: int
    acCenterMark: int
    acCenterNone: int
    gcCenterLine: int
    gcCenterMark: int
    gcCenterNone: int
    acArrowsOnly: int
    acBestFit: int
    acTextAndArrows: int
    acTextOnly: int
    gcArrowsOnly: int
    gcBestFit: int
    gcTextAndArrows: int
    gcTextOnly: int
    acDiagonal: int
    acHorizontal: int
    acNotStacked: int
    gcDiagonal: int
    gcHorizontal: int
    gcNotStacked: int
    acFirstExtensionLine: int
    acHorzCentered: int
    acOverFirstExtension: int
    acOverSecondExtension: int
    acSecondExtensionLine: int
    gcFirstExtensionLine: int
    gcHorzCentered: int
    gcOverFirstExtension: int
    gcOverSecondExtension: int
    gcSecondExtensionLine: int
    acDimLArchitectural: int
    acDimLDecimal: int
    acDimLEngineering: int
    acDimLFractional: int
    acDimLScientific: int
    acDimLWindowsDesktop: int
    gcDimLArchitectural: int
    gcDimLDecimal: int
    gcDimLEngineering: int
    gcDimLFractional: int
    gcDimLScientific: int
    gcDimLWindowsDesktop: int
    acDimPrecisionEight: int
    acDimPrecisionFive: int
    acDimPrecisionFour: int
    acDimPrecisionOne: int
    acDimPrecisionSeven: int
    acDimPrecisionSix: int
    acDimPrecisionThree: int
    acDimPrecisionTwo: int
    acDimPrecisionZero: int
    gcDimPrecisionEight: int
    gcDimPrecisionFive: int
    gcDimPrecisionFour: int
    gcDimPrecisionOne: int
    gcDimPrecisionSeven: int
    gcDimPrecisionSix: int
    gcDimPrecisionThree: int
    gcDimPrecisionTwo: int
    gcDimPrecisionZero: int
    acDimLineWithText: int
    acMoveTextAddLeader: int
    acMoveTextNoLeader: int
    gcDimLineWithText: int
    gcMoveTextAddLeader: int
    gcMoveTextNoLeader: int
    acTolBottom: int
    acTolMiddle: int
    acTolTop: int
    gcTolBottom: int
    gcTolMiddle: int
    gcTolTop: int
    acTolBasic: int
    acTolDeviation: int
    acTolLimits: int
    acTolNone: int
    acTolSymmetrical: int
    gcTolBasic: int
    gcTolDeviation: int
    gcTolLimits: int
    gcTolNone: int
    gcTolSymmetrical: int
    acDimArchitectural: int
    acDimArchitecturalStacked: int
    acDimDecimal: int
    acDimEngineering: int
    acDimFractional: int
    acDimFractionalStacked: int
    acDimScientific: int
    acDimWindowsDesktop: int
    gcDimArchitectural: int
    gcDimArchitecturalStacked: int
    gcDimDecimal: int
    gcDimEngineering: int
    gcDimFractional: int
    gcDimFractionalStacked: int
    gcDimScientific: int
    gcDimWindowsDesktop: int
    acAbove: int
    acJIS: int
    acOutside: int
    acUnder: int
    acVertCentered: int
    gcAbove: int
    gcJIS: int
    gcOutside: int
    gcUnder: int
    gcVertCentered: int
    acDrawLeaderHeadFirst: int
    acDrawLeaderTailFirst: int
    gcDrawLeaderHeadFirst: int
    gcDrawLeaderTailFirst: int
    acDrawContentFirst: int
    acDrawLeaderFirst: int
    gcDrawContentFirst: int
    gcDrawLeaderFirst: int
    acEnableSCM: int
    acEnableSCMOptions: int
    acEnter: int
    gcEnableSCM: int
    gcEnableSCMOptions: int
    gcEnter: int
    acRepeatLastCommand: int
    acSCM: int
    gcRepeatLastCommand: int
    gcSCM: int
    acEdRepeatLastCommand: int
    acEdSCM: int
    gcEdRepeatLastCommand: int
    gcEdSCM: int
    acBottomToTop: int
    acByStyle: int
    acLeftToRight: int
    acRightToLeft: int
    acTopToBottom: int
    gcBottomToTop: int
    gcByStyle: int
    gcLeftToRight: int
    gcRightToLeft: int
    gcTopToBottom: int
    acAngular: int
    acArea: int
    acDistance: int
    acNoUnits: int
    gcAngular: int
    gcArea: int
    gcDistance: int
    gcNoUnits: int
    acExtendBoth: int
    acExtendNone: int
    acExtendOtherEntity: int
    acExtendThisEntity: int
    gcExtendBoth: int
    gcExtendNone: int
    gcExtendOtherEntity: int
    gcExtendThisEntity: int
    acForEditing: int
    acForExpression: int
    acIgnoreMtextFormat: int
    acUseMaximumPrecision: int
    gcForEditing: int
    gcForExpression: int
    gcIgnoreMtextFormat: int
    gcUseMaximumPrecision: int
    kFormatOptionNone: int
    acDemanLoadDisable: int
    acDemandLoadCmdInvoke: int
    acDemandLoadOnObjectDetect: int
    gcDemanLoadDisable: int
    gcDemandLoadCmdInvoke: int
    gcDemandLoadOnObjectDetect: int
    acPreDefinedGradient: int
    acUserDefinedGradient: int
    gcPreDefinedGradient: int
    gcUserDefinedGradient: int
    acHorzBottom: int
    acHorzInside: int
    acHorzTop: int
    acInvalidGridLine: int
    acVertInside: int
    acVertLeft: int
    acVertRight: int
    gcHorzBottom: int
    gcHorzInside: int
    gcHorzTop: int
    gcInvalidGridLine: int
    gcVertInside: int
    gcVertLeft: int
    gcVertRight: int
    acGradientObject: int
    acHatchObject: int
    gcGradientObject: int
    gcHatchObject: int
    acHatchStyleIgnore: int
    acHatchStyleNormal: int
    acHatchStyleOuter: int
    gcHatchStyleIgnore: int
    gcHatchStyleNormal: int
    gcHatchStyleOuter: int
    acHeight: int
    acTurnHeight: int
    acTurns: int
    gcHeight: int
    gcTurnHeight: int
    gcTurns: int
    acCCW: int
    acCW: int
    gcCCW: int
    gcCW: int
    acHorizontalAlignmentAligned: int
    acHorizontalAlignmentCenter: int
    acHorizontalAlignmentFit: int
    acHorizontalAlignmentLeft: int
    acHorizontalAlignmentMiddle: int
    acHorizontalAlignmentRight: int
    gcHorizontalAlignmentAligned: int
    gcHorizontalAlignmentCenter: int
    gcHorizontalAlignmentFit: int
    gcHorizontalAlignmentLeft: int
    gcHorizontalAlignmentMiddle: int
    gcHorizontalAlignmentRight: int
    acPenWidth013: int
    acPenWidth018: int
    acPenWidth025: int
    acPenWidth035: int
    acPenWidth050: int
    acPenWidth070: int
    acPenWidth100: int
    acPenWidth140: int
    acPenWidth200: int
    acPenWidthUnk: int
    gcPenWidth013: int
    gcPenWidth018: int
    gcPenWidth025: int
    gcPenWidth035: int
    gcPenWidth050: int
    gcPenWidth070: int
    gcPenWidth100: int
    gcPenWidth140: int
    gcPenWidth200: int
    gcPenWidthUnk: int
    acInsertUnitsAngstroms: int
    acInsertUnitsAstronomicalUnits: int
    acInsertUnitsCentimeters: int
    acInsertUnitsDecameters: int
    acInsertUnitsDecimeters: int
    acInsertUnitsFeet: int
    acInsertUnitsGigameters: int
    acInsertUnitsHectometers: int
    acInsertUnitsInches: int
    acInsertUnitsKilometers: int
    acInsertUnitsLightYears: int
    acInsertUnitsMeters: int
    acInsertUnitsMicroinches: int
    acInsertUnitsMicrons: int
    acInsertUnitsMiles: int
    acInsertUnitsMillimeters: int
    acInsertUnitsMils: int
    acInsertUnitsNanometers: int
    acInsertUnitsParsecs: int
    acInsertUnitsUnitless: int
    acInsertUnitsYards: int
    gcInsertUnitsAngstroms: int
    gcInsertUnitsAstronomicalUnits: int
    gcInsertUnitsCentimeters: int
    gcInsertUnitsDecameters: int
    gcInsertUnitsDecimeters: int
    gcInsertUnitsFeet: int
    gcInsertUnitsGigameters: int
    gcInsertUnitsHectometers: int
    gcInsertUnitsInches: int
    gcInsertUnitsKilometers: int
    gcInsertUnitsLightYears: int
    gcInsertUnitsMeters: int
    gcInsertUnitsMicroinches: int
    gcInsertUnitsMicrons: int
    gcInsertUnitsMiles: int
    gcInsertUnitsMillimeters: int
    gcInsertUnitsMils: int
    gcInsertUnitsNanometers: int
    gcInsertUnitsParsecs: int
    gcInsertUnitsUnitless: int
    gcInsertUnitsYards: int
    acPreferenceClassic: int
    acPreferenceCustom: int
    gcPreferenceClassic: int
    gcPreferenceCustom: int
    acKeyboardEntry: int
    acKeyboardEntryExceptScripts: int
    acKeyboardRunningObjSnap: int
    gcKeyboardEntry: int
    gcKeyboardEntryExceptScripts: int
    gcKeyboardRunningObjSnap: int
    acLsAll: int
    acLsColor: int
    acLsFrozen: int
    acLsLineType: int
    acLsLineWeight: int
    acLsLocked: int
    acLsNewViewport: int
    acLsNone: int
    acLsOn: int
    acLsPlot: int
    acLsPlotStyle: int
    gcLsAll: int
    gcLsColor: int
    gcLsFrozen: int
    gcLsLineType: int
    gcLsLineWeight: int
    gcLsLocked: int
    gcLsNewViewport: int
    gcLsNone: int
    gcLsOn: int
    gcLsPlot: int
    gcLsPlotStyle: int
    acLineNoArrow: int
    acLineWithArrow: int
    acSplineNoArrow: int
    acSplineWithArrow: int
    gcLineNoArrow: int
    gcLineWithArrow: int
    gcSplineNoArrow: int
    gcSplineWithArrow: int
    acLineSpacingStyleAtLeast: int
    acLineSpacingStyleExactly: int
    gcLineSpacingStyleAtLeast: int
    gcLineSpacingStyleExactly: int
    acLnWt000: int
    acLnWt005: int
    acLnWt009: int
    acLnWt013: int
    acLnWt015: int
    acLnWt018: int
    acLnWt020: int
    acLnWt025: int
    acLnWt030: int
    acLnWt035: int
    acLnWt040: int
    acLnWt050: int
    acLnWt053: int
    acLnWt060: int
    acLnWt070: int
    acLnWt080: int
    acLnWt090: int
    acLnWt100: int
    acLnWt106: int
    acLnWt120: int
    acLnWt140: int
    acLnWt158: int
    acLnWt200: int
    acLnWt211: int
    acLnWtByBlock: int
    acLnWtByLayer: int
    acLnWtByLwDefault: int
    gcLnWt000: int
    gcLnWt005: int
    gcLnWt009: int
    gcLnWt013: int
    gcLnWt015: int
    gcLnWt018: int
    gcLnWt020: int
    gcLnWt025: int
    gcLnWt030: int
    gcLnWt035: int
    gcLnWt040: int
    gcLnWt050: int
    gcLnWt053: int
    gcLnWt060: int
    gcLnWt070: int
    gcLnWt080: int
    gcLnWt090: int
    gcLnWt100: int
    gcLnWt106: int
    gcLnWt120: int
    gcLnWt140: int
    gcLnWt158: int
    gcLnWt200: int
    gcLnWt211: int
    gcLnWtByBlock: int
    gcLnWtByLayer: int
    gcLnWtByLwDefault: int
    acAllNormal: int
    acEndsNormal: int
    acFirstNormal: int
    acLastNormal: int
    acRuled: int
    acSmooth: int
    acUseDraftAngles: int
    gcAllNormal: int
    gcEndsNormal: int
    gcFirstNormal: int
    gcLastNormal: int
    gcRuled: int
    gcSmooth: int
    gcUseDraftAngles: int
    acHatchLoopTypeDefault: int
    acHatchLoopTypeDerived: int
    acHatchLoopTypeExternal: int
    acHatchLoopTypePolyline: int
    acHatchLoopTypeTextbox: int
    gcHatchLoopTypeDefault: int
    gcHatchLoopTypeDerived: int
    gcHatchLoopTypeExternal: int
    gcHatchLoopTypePolyline: int
    gcHatchLoopTypeTextbox: int
    acBlockContent: int
    acMTextContent: int
    acNoneContent: int
    gcBlockContent: int
    gcMTextContent: int
    gcNoneContent: int
    acInVisibleLeader: int
    acSplineLeader: int
    acStraightLeader: int
    gcInVisibleLeader: int
    gcSplineLeader: int
    gcStraightLeader: int
    acBottom: int
    acTop: int
    acZero: int
    gcBottom: int
    gcTop: int
    gcZero: int
    acMenuFileCompiled: int
    acMenuFileSource: int
    gcMenuFileCompiled: int
    gcMenuFileSource: int
    acBaseMenuGroup: int
    acPartialMenuGroup: int
    gcBaseMenuGroup: int
    gcPartialMenuGroup: int
    acMenuItem: int
    acMenuSeparator: int
    acMenuSubMenu: int
    gcMenuItem: int
    gcMenuSeparator: int
    gcMenuSubMenu: int
    acOPQHighGraphics: int
    acOPQLowGraphics: int
    acOPQMonochrome: int
    gcOPQHighGraphics: int
    gcOPQLowGraphics: int
    gcOPQMonochrome: int
    acOQGraphics: int
    acOQHighPhoto: int
    acOQLineArt: int
    acOQPhoto: int
    acOQText: int
    gcOQGraphics: int
    gcOQHighPhoto: int
    gcOQLineArt: int
    gcOQPhoto: int
    gcOQText: int
    acOTEmbedded: int
    acOTLink: int
    acOTStatic: int
    gcOTEmbedded: int
    gcOTLink: int
    gcOTStatic: int
    acParseOptionNone: int
    acPreserveMtextFormat: int
    acSetDefaultFormat: int
    gcParseOptionNone: int
    gcPreserveMtextFormat: int
    gcSetDefaultFormat: int
    acHatchPatternTypeCustomDefined: int
    acHatchPatternTypePreDefined: int
    acHatchPatternTypeUserDefined: int
    gcHatchPatternTypeCustomDefined: int
    gcHatchPatternTypePreDefined: int
    gcHatchPatternTypeUserDefined: int
    acInches: int
    acMillimeters: int
    acPixels: int
    gcInches: int
    gcMillimeters: int
    gcPixels: int
    acPolicyLegacy: int
    acPolicyNamed: int
    gcPolicyLegacy: int
    gcPolicyNamed: int
    ac0degrees: int
    ac180degrees: int
    ac270degrees: int
    ac90degrees: int
    gc0degrees: int
    gc180degrees: int
    gc270degrees: int
    gc90degrees: int
    ac100_1: int
    ac10_1: int
    ac1_1: int
    ac1_10: int
    ac1_100: int
    ac1_128in_1ft: int
    ac1_16: int
    ac1_16in_1ft: int
    ac1_2: int
    ac1_20: int
    ac1_2in_1ft: int
    ac1_30: int
    ac1_32in_1ft: int
    ac1_4: int
    ac1_40: int
    ac1_4in_1ft: int
    ac1_50: int
    ac1_64in_1ft: int
    ac1_8: int
    ac1_8in_1ft: int
    ac1ft_1ft: int
    ac1in_1ft: int
    ac2_1: int
    ac3_16in_1ft: int
    ac3_32in_1ft: int
    ac3_4in_1ft: int
    ac3_8in_1ft: int
    ac3in_1ft: int
    ac4_1: int
    ac6in_1ft: int
    ac8_1: int
    acScaleToFit: int
    gc100_1: int
    gc10_1: int
    gc1_1: int
    gc1_10: int
    gc1_100: int
    gc1_128in_1ft: int
    gc1_16: int
    gc1_16in_1ft: int
    gc1_2: int
    gc1_20: int
    gc1_2in_1ft: int
    gc1_30: int
    gc1_32in_1ft: int
    gc1_4: int
    gc1_40: int
    gc1_4in_1ft: int
    gc1_50: int
    gc1_64in_1ft: int
    gc1_8: int
    gc1_8in_1ft: int
    gc1ft_1ft: int
    gc1in_1ft: int
    gc2_1: int
    gc3_16in_1ft: int
    gc3_32in_1ft: int
    gc3_4in_1ft: int
    gc3_8in_1ft: int
    gc3in_1ft: int
    gc4_1: int
    gc6in_1ft: int
    gc8_1: int
    gcScaleToFit: int
    acDisplay: int
    acExtents: int
    acLayout: int
    acLimits: int
    acView: int
    acWindow: int
    gcDisplay: int
    gcExtents: int
    gcLayout: int
    gcLimits: int
    gcView: int
    gcWindow: int
    acClassification: int
    acElevation: int
    acIntensities: int
    acNormals: int
    acObject: int
    acRGB: int
    gcClassification: int
    gcElevation: int
    gcIntensities: int
    gcNormals: int
    gcObject: int
    gcRGB: int
    acCubicSplinePoly: int
    acFitCurvePoly: int
    acQuadSplinePoly: int
    acSimplePoly: int
    gcCubicSplinePoly: int
    gcFitCurvePoly: int
    gcQuadSplinePoly: int
    gcSimplePoly: int
    acBezierSurfaceMesh: int
    acCubicSurfaceMesh: int
    acQuadSurfaceMesh: int
    acSimpleMesh: int
    gcBezierSurfaceMesh: int
    gcCubicSurfaceMesh: int
    gcQuadSurfaceMesh: int
    gcSimpleMesh: int
    acBlockBox: int
    acBlockCircle: int
    acBlockHexagon: int
    acBlockImperial: int
    acBlockSlot: int
    acBlockTriangle: int
    acBlockUserDefined: int
    gcBlockBox: int
    gcBlockCircle: int
    gcBlockHexagon: int
    gcBlockImperial: int
    gcBlockSlot: int
    gcBlockTriangle: int
    gcBlockUserDefined: int
    acFullPreview: int
    acPartialPreview: int
    gcFullPreview: int
    gcPartialPreview: int
    acPrinterAlertOnce: int
    acPrinterAlwaysAlert: int
    acPrinterNeverAlert: int
    acPrinterNeverAlertLogOnce: int
    gcPrinterAlertOnce: int
    gcPrinterAlwaysAlert: int
    gcPrinterNeverAlert: int
    gcPrinterNeverAlertLogOnce: int
    acProxyBoundingBox: int
    acProxyNotShow: int
    acProxyShow: int
    gcProxyBoundingBox: int
    gcProxyNotShow: int
    gcProxyShow: int
    acActiveViewport: int
    acAllViewports: int
    gcActiveViewport: int
    gcAllViewports: int
    acDegrees000: int
    acDegrees090: int
    acDegrees180: int
    acDegrees270: int
    acDegreesUnknown: int
    gcDegrees000: int
    gcDegrees090: int
    gcDegrees180: int
    gcDegrees270: int
    gcDegreesUnknown: int
    acDataRow: int
    acHeaderRow: int
    acTitleRow: int
    acUnknownRow: int
    gcDataRow: int
    gcHeaderRow: int
    gcTitleRow: int
    gcUnknownRow: int
    ac2000_Template: int
    ac2000_dwg: int
    ac2000_dxf: int
    ac2004_Template: int
    ac2004_dwg: int
    ac2004_dxf: int
    ac2007_Template: int
    ac2007_dwg: int
    ac2007_dxf: int
    ac2010_Template: int
    ac2010_dwg: int
    ac2010_dxf: int
    ac2013_Template: int
    ac2013_dwg: int
    ac2013_dxf: int
    ac2018_Template: int
    ac2018_dwg: int
    ac2018_dxf: int
    acNative: int
    acR09_dxf: int
    acR10_dxf: int
    acR12_dwg: int
    acR12_dxf: int
    acR13_dwg: int
    acR13_dxf: int
    acR14_dwg: int
    acR14_dxf: int
    acR15_Template: int
    acR15_dwg: int
    acR15_dxf: int
    acR18_Template: int
    acR18_dwg: int
    acR18_dxf: int
    acUnknown: int
    gc2000_Template: int
    gc2000_dwg: int
    gc2000_dxf: int
    gc2004_Template: int
    gc2004_dwg: int
    gc2004_dxf: int
    gc2007_Template: int
    gc2007_dwg: int
    gc2007_dxf: int
    gc2010_Template: int
    gc2010_dwg: int
    gc2010_dxf: int
    gc2013_Template: int
    gc2013_dwg: int
    gc2013_dxf: int
    gc2018_Template: int
    gc2018_dwg: int
    gc2018_dxf: int
    gcNative: int
    gcR09_dxf: int
    gcR10_dxf: int
    gcR12_dwg: int
    gcR12_dxf: int
    gcR13_dwg: int
    gcR13_dxf: int
    gcR14_dwg: int
    gcR14_dxf: int
    gcR15_Template: int
    gcR15_dwg: int
    gcR15_dxf: int
    gcR18_Template: int
    gcR18_dwg: int
    gcR18_dxf: int
    gcUnknown: int
    acSectionGenerationDestinationFile: int
    acSectionGenerationDestinationNewBlock: int
    acSectionGenerationDestinationReplaceBlock: int
    acSectionGenerationSourceAllObjects: int
    acSectionGenerationSourceSelectedObjects: int
    gcSectionGenerationDestinationFile: int
    gcSectionGenerationDestinationNewBlock: int
    gcSectionGenerationDestinationReplgceBlock: int
    gcSectionGenerationSourceAllObjects: int
    gcSectionGenerationSourceSelectedObjects: int
    acSectionStateBoundary: int
    acSectionStatePlane: int
    acSectionStateVolume: int
    gcSectionStateBoundary: int
    gcSectionStatePlane: int
    gcSectionStateVolume: int
    acSectionState2Boundary: int
    acSectionState2Plane: int
    acSectionState2Slice: int
    acSectionState2Volume: int
    gcSectionState2Boundary: int
    gcSectionState2Plane: int
    gcSectionState2Slice: int
    gcSectionState2Volume: int
    acSectionSubItemBackLine: int
    acSectionSubItemBackLineBottom: int
    acSectionSubItemBackLineTop: int
    acSectionSubItemSectionLine: int
    acSectionSubItemSectionLineBottom: int
    acSectionSubItemSectionLineTop: int
    acSectionSubItemVerticalLineBottom: int
    acSectionSubItemVerticalLineTop: int
    acSectionSubItemkNone: int
    gcSectionSubItemBackLine: int
    gcSectionSubItemBackLineBottom: int
    gcSectionSubItemBackLineTop: int
    gcSectionSubItemSectionLine: int
    gcSectionSubItemSectionLineBottom: int
    gcSectionSubItemSectionLineTop: int
    gcSectionSubItemVerticalLineBottom: int
    gcSectionSubItemVerticalLineTop: int
    gcSectionSubItemkNone: int
    acSectionType2dSection: int
    acSectionType3dSection: int
    acSectionTypeLiveSection: int
    gcSectionType2dSection: int
    gcSectionType3dSection: int
    gcSectionTypeLiveSection: int
    acDegrees15: int
    acDegrees30: int
    acDegrees45: int
    acDegrees60: int
    acDegrees90: int
    acDegreesAny: int
    acDegreesHorz: int
    gcDegrees15: int
    gcDegrees30: int
    gcDegrees45: int
    gcDegrees60: int
    gcDegrees90: int
    gcDegreesAny: int
    gcDegreesHorz: int
    acSelectionSetAll: int
    acSelectionSetCrossing: int
    acSelectionSetCrossingPolygon: int
    acSelectionSetFence: int
    acSelectionSetLast: int
    acSelectionSetPrevious: int
    acSelectionSetWindow: int
    acSelectionSetWindowPolygon: int
    gcSelectionSetAll: int
    gcSelectionSetCrossing: int
    gcSelectionSetCrossingPolygon: int
    gcSelectionSetFence: int
    gcSelectionSetLast: int
    gcSelectionSetPrevious: int
    gcSelectionSetWindow: int
    gcSelectionSetWindowPolygon: int
    acTableSelectCrossing: int
    acTableSelectWindow: int
    gcTableSelectCrossing: int
    gcTableSelectWindow: int
    acCastsAndReceivesShadows: int
    acCastsShadows: int
    acIgnoreShadows: int
    acReceivesShadows: int
    gcCastsAndReceivesShadows: int
    gcCastsShadows: int
    gcIgnoreShadows: int
    gcReceivesShadows: int
    acTableBottomToTop: int
    acTableTopToBottom: int
    gcTableBottomToTop: int
    gcTableTopToBottom: int
    acTableFlowDownOrUp: int
    acTableFlowLeft: int
    acTableFlowRight: int
    gcTableFlowDownOrUp: int
    gcTableFlowLeft: int
    gcTableFlowRight: int
    acCenterAlignment: int
    acLeftAlignment: int
    acRightAlignment: int
    gcCenterAlignment: int
    gcLeftAlignment: int
    gcRightAlignment: int
    acAlwaysRightReadingAngle: int
    acHorizontalAngle: int
    acInsertAngle: int
    gcAlwaysRightReadingAngle: int
    gcHorizontalAngle: int
    gcInsertAngle: int
    acAttachmentHorizontal: int
    acAttachmentVertical: int
    gcAttachmentHorizontal: int
    gcAttachmentVertical: int
    acAttachmentAllLine: int
    acAttachmentBottomLine: int
    acAttachmentBottomOfBottom: int
    acAttachmentBottomOfTop: int
    acAttachmentBottomOfTopLine: int
    acAttachmentMiddle: int
    acAttachmentMiddleOfBottom: int
    acAttachmentMiddleOfTop: int
    acAttachmentTopOfTop: int
    gcAttachmentAllLine: int
    gcAttachmentBottomLine: int
    gcAttachmentBottomOfBottom: int
    gcAttachmentBottomOfTop: int
    gcAttachmentBottomOfTopLine: int
    gcAttachmentMiddle: int
    gcAttachmentMiddleOfBottom: int
    gcAttachmentMiddleOfTop: int
    gcAttachmentTopOfTop: int
    acFontBold: int
    acFontBoldItalic: int
    acFontItalic: int
    acFontRegular: int
    gcFontBold: int
    gcFontBoldItalic: int
    gcFontItalic: int
    gcFontRegular: int
    acTextFlagBackward: int
    acTextFlagUpsideDown: int
    gcTextFlagBackward: int
    gcTextFlagUpsideDown: int
    acToolbarDockBottom: int
    acToolbarDockLeft: int
    acToolbarDockRight: int
    acToolbarDockTop: int
    acToolbarFloating: int
    gcToolbarDockBottom: int
    gcToolbarDockLeft: int
    gcToolbarDockRight: int
    gcToolbarDockTop: int
    gcToolbarFloating: int
    acToolbarButton: int
    acToolbarControl: int
    acToolbarFlyout: int
    acToolbarSeparator: int
    gcToolbarButton: int
    gcToolbarControl: int
    gcToolbarFlyout: int
    gcToolbarSeparator: int
    acApplied: int
    acNoOverrides: int
    gcApplied: int
    gcNoOverrides: int
    acArchitectural: int
    acDecimal: int
    acDefaultUnits: int
    acEngineering: int
    acFractional: int
    acScientific: int
    gcArchitectural: int
    gcDecimal: int
    gcDefaultUnits: int
    gcEngineering: int
    gcFractional: int
    gcScientific: int
    acBuffer: int
    acDate: int
    acDouble: int
    acGeneral: int
    acLong: int
    acObjectId: int
    acPoint2d: int
    acPoint3d: int
    acResbuf: int
    acString: int
    acUnknownDataType: int
    gcBuffer: int
    gcDate: int
    gcDouble: int
    gcGeneral: int
    gcLong: int
    gcObjectId: int
    gcPoint2d: int
    gcPoint3d: int
    gcResbuf: int
    gcString: int
    gcUnknownDataType: int
    acUnitAngle: int
    acUnitArea: int
    acUnitDistance: int
    acUnitVolume: int
    acUnitless: int
    gcUnitAngle: int
    gcUnitArea: int
    gcUnitDistance: int
    gcUnitVolume: int
    gcUnitless: int
    acVerticalAlignmentBaseline: int
    acVerticalAlignmentBottom: int
    acVerticalAlignmentMiddle: int
    acVerticalAlignmentTop: int
    gcVerticalAlignmentBaseline: int
    gcVerticalAlignmentBottom: int
    gcVerticalAlignmentMiddle: int
    gcVerticalAlignmentTop: int
    acAttachmentCenter: int
    acAttachmentLinedCenter: int
    gcAttachmentCenter: int
    gcAttachmentLinedCenter: int
    acVp1: int
    acVp10: int
    acVp100: int
    acVp100_1: int
    acVp10_1: int
    acVp11: int
    acVp12: int
    acVp13: int
    acVp14: int
    acVp15: int
    acVp16: int
    acVp17: int
    acVp18: int
    acVp19: int
    acVp1_1: int
    acVp1_10: int
    acVp1_100: int
    acVp1_128in_1ft: int
    acVp1_16: int
    acVp1_16in_1ft: int
    acVp1_2: int
    acVp1_20: int
    acVp1_2in_1ft: int
    acVp1_30: int
    acVp1_32in_1ft: int
    acVp1_4: int
    acVp1_40: int
    acVp1_4in_1ft: int
    acVp1_50: int
    acVp1_64in_1ft: int
    acVp1_8: int
    acVp1_8in_1ft: int
    acVp1and1_2in_1ft: int
    acVp1ft_1ft: int
    acVp1in_1ft: int
    acVp2: int
    acVp20: int
    acVp21: int
    acVp22: int
    acVp23: int
    acVp24: int
    acVp25: int
    acVp26: int
    acVp27: int
    acVp28: int
    acVp29: int
    acVp2_1: int
    acVp3: int
    acVp30: int
    acVp31: int
    acVp32: int
    acVp33: int
    acVp34: int
    acVp35: int
    acVp36: int
    acVp37: int
    acVp38: int
    acVp39: int
    acVp3_16in_1ft: int
    acVp3_32in_1ft: int
    acVp3_4in_1ft: int
    acVp3_8in_1ft: int
    acVp3in_1ft: int
    acVp4: int
    acVp40: int
    acVp41: int
    acVp42: int
    acVp43: int
    acVp44: int
    acVp45: int
    acVp46: int
    acVp47: int
    acVp48: int
    acVp49: int
    acVp4_1: int
    acVp5: int
    acVp50: int
    acVp51: int
    acVp52: int
    acVp53: int
    acVp54: int
    acVp55: int
    acVp56: int
    acVp57: int
    acVp58: int
    acVp59: int
    acVp6: int
    acVp60: int
    acVp61: int
    acVp62: int
    acVp63: int
    acVp64: int
    acVp65: int
    acVp66: int
    acVp67: int
    acVp68: int
    acVp69: int
    acVp6in_1ft: int
    acVp7: int
    acVp70: int
    acVp71: int
    acVp72: int
    acVp73: int
    acVp74: int
    acVp75: int
    acVp76: int
    acVp77: int
    acVp78: int
    acVp79: int
    acVp8: int
    acVp80: int
    acVp81: int
    acVp82: int
    acVp83: int
    acVp84: int
    acVp85: int
    acVp86: int
    acVp87: int
    acVp88: int
    acVp89: int
    acVp8_1: int
    acVp9: int
    acVp90: int
    acVp91: int
    acVp92: int
    acVp93: int
    acVp94: int
    acVp95: int
    acVp96: int
    acVp97: int
    acVp98: int
    acVp99: int
    acVpCustomScale: int
    acVpScaleToFit: int
    gcVp1: int
    gcVp10: int
    gcVp100: int
    gcVp100_1: int
    gcVp10_1: int
    gcVp11: int
    gcVp12: int
    gcVp13: int
    gcVp14: int
    gcVp15: int
    gcVp16: int
    gcVp17: int
    gcVp18: int
    gcVp19: int
    gcVp1_1: int
    gcVp1_10: int
    gcVp1_100: int
    gcVp1_128in_1ft: int
    gcVp1_16: int
    gcVp1_16in_1ft: int
    gcVp1_2: int
    gcVp1_20: int
    gcVp1_2in_1ft: int
    gcVp1_30: int
    gcVp1_32in_1ft: int
    gcVp1_4: int
    gcVp1_40: int
    gcVp1_4in_1ft: int
    gcVp1_50: int
    gcVp1_64in_1ft: int
    gcVp1_8: int
    gcVp1_8in_1ft: int
    gcVp1and1_2in_1ft: int
    gcVp1ft_1ft: int
    gcVp1in_1ft: int
    gcVp2: int
    gcVp20: int
    gcVp21: int
    gcVp22: int
    gcVp23: int
    gcVp24: int
    gcVp25: int
    gcVp26: int
    gcVp27: int
    gcVp28: int
    gcVp29: int
    gcVp2_1: int
    gcVp3: int
    gcVp30: int
    gcVp31: int
    gcVp32: int
    gcVp33: int
    gcVp34: int
    gcVp35: int
    gcVp36: int
    gcVp37: int
    gcVp38: int
    gcVp39: int
    gcVp3_16in_1ft: int
    gcVp3_32in_1ft: int
    gcVp3_4in_1ft: int
    gcVp3_8in_1ft: int
    gcVp3in_1ft: int
    gcVp4: int
    gcVp40: int
    gcVp41: int
    gcVp42: int
    gcVp43: int
    gcVp44: int
    gcVp45: int
    gcVp46: int
    gcVp47: int
    gcVp48: int
    gcVp49: int
    gcVp4_1: int
    gcVp5: int
    gcVp50: int
    gcVp51: int
    gcVp52: int
    gcVp53: int
    gcVp54: int
    gcVp55: int
    gcVp56: int
    gcVp57: int
    gcVp58: int
    gcVp59: int
    gcVp6: int
    gcVp60: int
    gcVp61: int
    gcVp62: int
    gcVp63: int
    gcVp64: int
    gcVp65: int
    gcVp66: int
    gcVp67: int
    gcVp68: int
    gcVp69: int
    gcVp6in_1ft: int
    gcVp7: int
    gcVp70: int
    gcVp71: int
    gcVp72: int
    gcVp73: int
    gcVp74: int
    gcVp75: int
    gcVp76: int
    gcVp77: int
    gcVp78: int
    gcVp79: int
    gcVp8: int
    gcVp80: int
    gcVp81: int
    gcVp82: int
    gcVp83: int
    gcVp84: int
    gcVp85: int
    gcVp86: int
    gcVp87: int
    gcVp88: int
    gcVp89: int
    gcVp8_1: int
    gcVp9: int
    gcVp90: int
    gcVp91: int
    gcVp92: int
    gcVp93: int
    gcVp94: int
    gcVp95: int
    gcVp96: int
    gcVp97: int
    gcVp98: int
    gcVp99: int
    gcVpCustomScale: int
    gcVpScaleToFit: int
    acViewport2Horizontal: int
    acViewport2Vertical: int
    acViewport3Above: int
    acViewport3Below: int
    acViewport3Horizontal: int
    acViewport3Left: int
    acViewport3Right: int
    acViewport3Vertical: int
    acViewport4: int
    gcViewport2Horizontal: int
    gcViewport2Vertical: int
    gcViewport3Above: int
    gcViewport3Below: int
    gcViewport3Horizontal: int
    gcViewport3Left: int
    gcViewport3Right: int
    gcViewport3Vertical: int
    gcViewport4: int
    acMax: int
    acMin: int
    acNorm: int
    gcMax: int
    gcMin: int
    gcNorm: int
    acIsolines: int
    acIsoparms: int
    gcIsolines: int
    gcIsoparms: int
    acDemandLoadDisabled: int
    acDemandLoadEnabled: int
    acDemandLoadEnabledWithCopy: int
    gcDemandLoadDisabled: int
    gcDemandLoadEnabled: int
    gcDemandLoadEnabledWithCopy: int
    acZoomScaledAbsolute: int
    acZoomScaledRelative: int
    acZoomScaledRelativePSpace: int
    gcZoomScaledAbsolute: int
    gcZoomScaledRelative: int
    gcZoomScaledRelativePSpace: int
    ACADSECURITYPARAMS_ALGID_RC4: int
    GCADSECURITYPARAMS_ALGID_RC4: int
    ACADSECURITYPARAMS_ADD_TIMESTAMP: int
    ACADSECURITYPARAMS_ENCRYPT_DATA: int
    ACADSECURITYPARAMS_ENCRYPT_PROPS: int
    ACADSECURITYPARAMS_SIGN_DATA: int
    GCADSECURITYPARAMS_ADD_TIMESTAMP: int
    GCADSECURITYPARAMS_ENCRYPT_DATA: int
    GCADSECURITYPARAMS_ENCRYPT_PROPS: int
    GCADSECURITYPARAMS_SIGN_DATA: int
    kCellOptionNone: int
    kInheritCellFormat: int
    acMergeCellStyleConvertDuplicatesToOverrides: int
    acMergeCellStyleCopyDuplicates: int
    acMergeCellStyleIgnoreNewStyles: int
    acMergeCellStyleNone: int
    acMergeCellStyleOverwriteDuplicates: int
    gcMergeCellStyleConvertDuplicatesToOverrides: int
    gcMergeCellStyleCopyDuplicates: int
    gcMergeCellStyleIgnoreNewStyles: int
    gcMergeCellStyleNone: int
    gcMergeCellStyleOverwriteDuplicates: int

class IGcPePropertyEditorColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcad3DFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetInvisibleEdge(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetInvisibleEdge(self, Index=..., State=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcad3DPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcad3DSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., SolidObject=...): ...
    def CheckInterference(self, Object=..., CreateInterferenceSolid=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SectionSolid(self, Point1=..., Point2=..., point3=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SliceSolid(self, Point1=..., Point2=..., point3=..., Negative=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Eval(self, Expression=...): ...
    def GetAcadState(self): ...
    def GetInterfaceObject(self, ProgID=...): ...
    def InitApp(self, pApp=...): ...
    def ListGrx(self): ...
    def LoadDVB(self, Name=...): ...
    def LoadGrx(self, Name=...): ...
    def LoadVBI(self, Name=...): ...
    def Quit(self): ...
    def RunMacro(self, MacroPath=...): ...
    def StatusId(self, VportObj=...): ...
    def UnloadDVB(self, Name=...): ...
    def UnloadGrx(self, Name=...): ...
    def UnloadVBI(self, Name=...): ...
    def Update(self): ...
    def Zoom(self, Type=..., vParams=...): ...
    def ZoomAll(self): ...
    def ZoomCenter(self, Center=..., Magnify=...): ...
    def ZoomExtents(self): ...
    def ZoomPickWindow(self): ...
    def ZoomPrevious(self): ...
    def ZoomScaled(self, scale=..., ScaleType=...): ...
    def ZoomWindow(self, LowerLeft=..., UpperRight=...): ...
    def __iter__(self): ...

class IGcadArc(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadArcAlignedText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadAssocArrayPath(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadAssocArrayPolar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadAssocArrayRectangular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadAttribute(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...

class IGcadAttributeReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadBlockReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadBlocks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, InsertionPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadCamera(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadCircle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDatabase(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def HandleToObject(self, Handle=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def ObjectIdToObject32(self, ObjectID=...): ...
    def __iter__(self): ...

class IGcadDatabasePreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadDictionaries(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadDictionary(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddObject(self, Keyword=..., ObjectName=...): ...
    def AddXRecord(self, Keyword=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetName(self, Object=...): ...
    def GetObject(self, Name=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Remove(self, Name=...): ...
    def Rename(self, OldName=..., NewName=...): ...
    def Replace(self, OldName=..., pObj=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadDim3PointAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimAligned(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimArcLength(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimDiametric(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimOrdinate(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimRadial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimRadialLarge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimRotated(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDimStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, StyleSource=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadDimStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadDimension(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDocument(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Activate(self): ...
    def AuditInfo(self, FixErr=...): ...
    def BindDatabase(self, pDb=...): ...
    def Close(self, SaveChanges=..., FileName=...): ...
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def EndUndoMark(self): ...
    def Export(self, FileName=..., Extension=..., SelectionSet=...): ...
    def GetVariable(self, Name=...): ...
    def HandleToObject(self, Handle=...): ...
    def Import(self, FileName=..., InsertionPoint=..., ScaleFactor=...): ...
    def InitDoc(self, pDoc=...): ...
    def LoadShapeFile(self, FullName=...): ...
    def New(self, TemplateFileName=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def ObjectIdToObject32(self, ObjectID=...): ...
    def Open(self, FullName=..., Password=...): ...
    def PurgeAll(self): ...
    def Regen(self, WhichViewports=...): ...
    def Save(self): ...
    def SaveAs(self, FullFileName=..., SaveAsType=..., vSecurityParams=...): ...
    def SendCommand(self, Command=...): ...
    def SetVariable(self, Name=..., Value=...): ...
    def StartUndoMark(self): ...
    def Wblock(self, FileName=..., SelectionSet=...): ...
    def __iter__(self): ...

class IGcadDocuments(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, TemplateName=...): ...
    def Close(self): ...
    def Item(self, Index=...): ...
    def Open(self, Name=..., ReadOnly=..., Password=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadDwfUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadDynamicBlockReferenceProperty(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...

class IGcadEllipse(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadExternalReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadExtrudedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadFileDependencies(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateEntry(self, Feature=..., FullFileName=..., AffectsGraphics=..., noIncrement=...): ...
    def IndexOf(self, Feature=..., FullFileName=...): ...
    def Item(self, Index=...): ...
    def RemoveEntry(self, Index=..., forceRemove=...): ...
    def UpdateEntry(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadFileDependency(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadGcCmColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def SetColorBookColor(self, BookName=..., ColorName=...): ...
    def SetNames(self, ColorName=..., BookName=...): ...
    def SetRGB(self, Red=..., Green=..., Blue=...): ...
    def __iter__(self): ...

class IGcadGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendItems(self, Objects=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadHatch(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendInnerLoop(self, ObjectArray=...): ...
    def AppendOuterLoop(self, ObjectArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetLoopAt(self, Index=..., ObjectArray=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def InsertLoopAt(self, Index=..., LoopType=..., ObjectArray=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetPattern(self, PatternType=..., PatternName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadHelix(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadHyperlink(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...

class IGcadHyperlinks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., Description=..., NamedLocation=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadIdPair(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...

class IGcadLWPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, Index=..., vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLayer(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadLayerStateManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self, bsName=...): ...
    def Export(self, bsName=..., bsFilename=...): ...
    def Import(self, bsFilename=...): ...
    def Mask(self, bsName=...): ...
    def Rename(self, bsName=..., bsNewName=...): ...
    def Restore(self, bsName=...): ...
    def Save(self, bsName=..., eMask=...): ...
    def SetDatabase(self, iHostDb=...): ...
    def SetMask(self, bsName=..., arg1=...): ...
    def __iter__(self): ...

class IGcadLayers(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateUsageData(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadLayout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadLayouts(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLight(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLight2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLight3(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadLineType(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadLineTypes(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Load(self, Name=..., FileName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadLoftedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadMInsertBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadMLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddLeader(self): ...
    def AddLeaderLine(self, leaderIndex=..., pointArray=...): ...
    def AddLeaderLineEx(self, pointArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBlockAttributeValue(self, attdefId=...): ...
    def GetBlockAttributeValue32(self, attdefId=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetDoglegDirection(self, leaderIndex=...): ...
    def GetExtensionDictionary(self): ...
    def GetLeaderIndex(self, leaderLineIndex=...): ...
    def GetLeaderLineIndexes(self, leaderIndex=...): ...
    def GetLeaderLineVertices(self, leaderLineIndex=...): ...
    def GetVertexCount(self, leaderLineIndex=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveLeader(self, leaderIndex=...): ...
    def RemoveLeaderLine(self, leaderLineIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBlockAttributeValue(self, attdefId=..., Value=...): ...
    def SetBlockAttributeValue32(self, attdefId=..., Value=...): ...
    def SetDoglegDirection(self, leaderIndex=..., dirVec=...): ...
    def SetLeaderLineVertices(self, leaderLineIndex=..., pointArray=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadMLeaderStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadMLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadMText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadMaterial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadMaterials(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadMenuBar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadMenuGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Save(self, MenuFileType=...): ...
    def SaveAs(self, MenuFileName=..., MenuFileType=...): ...
    def Unload(self): ...
    def __iter__(self): ...

class IGcadMenuGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def Load(self, MenuFileName=..., BaseMenu=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadModelSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadNurbSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadObject(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadObjectEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class IGcadOle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Display(self, bStatus=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SyncModelView(self): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPaperSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPViewport(self, Center=..., Width=..., Height=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadPlaneSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPlot(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def DisplayPlotPreview(self, Preview=...): ...
    def PlotToDevice(self, plotConfig=...): ...
    def PlotToFile(self, plotFile=..., plotConfig=...): ...
    def SetLayoutsToPlot(self, layoutList=...): ...
    def StartBatchMode(self, entryCount=...): ...
    def __iter__(self): ...

class IGcadPlotConfiguration(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadPlotConfigurations(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., ModelType=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadPoint(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPointCloudEx(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPolyfaceMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPolygonMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadPopupMenu(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddMenuItem(self, Index=..., Label=..., Macro=...): ...
    def AddSeparator(self, Index=...): ...
    def AddSubMenu(self, Index=..., Label=...): ...
    def InsertInMenuBar(self, Index=...): ...
    def Item(self, Index=...): ...
    def RemoveFromMenuBar(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadPopupMenuItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...

class IGcadPopupMenus(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, MenuName=...): ...
    def InsertMenuInMenuBar(self, MenuName=..., Index=...): ...
    def Item(self, Index=...): ...
    def RemoveMenuFromMenuBar(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadPreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesDisplay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesDrafting(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesFiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def GetProjectFilePath(self, ProjectName=...): ...
    def SetProjectFilePath(self, ProjectName=..., ProjectFilePath=...): ...
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...

class IGcadPreferencesOpenSave(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesOutput(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesProfiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyProfile(self, oldProfileName=..., newProfileName=...): ...
    def DeleteProfile(self, ProfileName=...): ...
    def ExportProfile(self, ProfileName=..., RegFile=...): ...
    def GetAllProfileNames(self, pNames=...): ...
    def ImportProfile(self, ProfileName=..., RegFile=..., IncludePathInfo=...): ...
    def RenameProfile(self, origProfileName=..., newProfileName=...): ...
    def ResetProfile(self, Profile=...): ...
    def __iter__(self): ...

class IGcadPreferencesSelection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesSystem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadPreferencesUser(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadRasterImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadRay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadRegion(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., Object=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadRegisteredApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadRegisteredApplications(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadRevolvedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadScriptJet(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddNamedItem(self, pstrCode=..., dwFlags: int = ...): ...
    def AddVariant(self, varName=..., var=...): ...
    def Close(self): ...
    def Create(self): ...
    def GetVariant(self, varName=...): ...
    def ParseScriptText_E(self, pstrCode=...): ...
    def Run(self): ...
    def __iter__(self): ...

class IGcadSection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSection2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSectionManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetLiveSection(self): ...
    def GetUniqueSectionName(self, pBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadSectionSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetSectionTypeSettings(self, secType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadSectionTypeSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadSecurityParams(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadSelectionSet(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddItems(self, pSelSet=...): ...
    def Clear(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Highlight(self, bFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def Select(self, Mode=..., Point1=..., Point2=..., FilterType=..., FilterData=...): ...
    def SelectAtPoint(self, Point=..., FilterType=..., FilterData=...): ...
    def SelectByPolygon(self, Mode=..., PointsList=..., FilterType=..., FilterData=...): ...
    def SelectOnScreen(self, FilterType=..., FilterData=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadSelectionSets(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def GetActiveSelectionSet(self): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadShape(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSortentsTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Block(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFullDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetRelativeDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def MoveAbove(self, Objects=..., Target=...): ...
    def MoveBelow(self, Objects=..., Target=...): ...
    def MoveToBottom(self, Objects=...): ...
    def MoveToTop(self, Objects=...): ...
    def SetRelativeDrawOrder(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SwapOrder(self, Object1=..., Object2=...): ...
    def __iter__(self): ...

class IGcadSpline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddFitPoint(self, Index=..., fitPoint=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteFitPoint(self, Index=...): ...
    def ElevateOrder(self, Order=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetControlPoint(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetFitPoint(self, Index=...): ...
    def GetWeight(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def PurgeFitData(self): ...
    def Reverse(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetControlPoint(self, Index=..., controlPoint=...): ...
    def SetFitPoint(self, Index=..., fitPoint=...): ...
    def SetWeight(self, Index=..., weight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadState(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IGcadSubDMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSummaryInfo(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddCustomInfo(self, key=..., Value=...): ...
    def GetCustomByIndex(self, Index=..., pKey=..., pValue=...): ...
    def GetCustomByKey(self, key=..., pValue=...): ...
    def NumCustomInfo(self): ...
    def RemoveCustomByIndex(self, Index=...): ...
    def RemoveCustomByKey(self, key=...): ...
    def SetCustomByIndex(self, Index=..., key=..., Value=...): ...
    def SetCustomByKey(self, key=..., Value=...): ...
    def __iter__(self): ...

class IGcadSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadSweptSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClearSubSelection(self): ...
    def ClearTableStyleOverrides(self, flag=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteCellContent(self, row=..., col=...): ...
    def DeleteColumns(self, col=..., cols=...): ...
    def DeleteRows(self, row=..., Rows=...): ...
    def Erase(self): ...
    def FormatValue(self, row=..., col=..., nOption=..., pVal=...): ...
    def GenerateLayout(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAttachmentPoint(self, row=..., col=...): ...
    def GetAutoScale(self, row=..., col=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetBlockAttributeValue(self, row=..., col=..., attdefId=...): ...
    def GetBlockAttributeValue232(self, nRow=..., nCol=..., nContent=..., blkId=...): ...
    def GetBlockAttributeValue32(self, row=..., col=..., attdefId=...): ...
    def GetBlockRotation(self, row=..., col=...): ...
    def GetBlockScale(self, row=..., col=...): ...
    def GetBlockTableRecordId(self, row=..., col=...): ...
    def GetBlockTableRecordId232(self, nRow=..., nCol=..., nContent=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetCellAlignment(self, row=..., col=...): ...
    def GetCellBackgroundColor(self, row=..., col=...): ...
    def GetCellBackgroundColorNone(self, row=..., col=...): ...
    def GetCellContentColor(self, row=..., col=...): ...
    def GetCellDataType(self, row=..., col=..., pDataType=..., pUnitType=...): ...
    def GetCellExtents(self, row=..., col=..., bOuterCell=...): ...
    def GetCellFormat(self, row=..., col=...): ...
    def GetCellGridColor(self, row=..., col=..., edge=...): ...
    def GetCellGridLineWeight(self, row=..., col=..., edge=...): ...
    def GetCellGridVisibility(self, row=..., col=..., edge=...): ...
    def GetCellState(self, nRow=..., nCol=...): ...
    def GetCellStyleOverrides(self, row=..., col=...): ...
    def GetCellTextHeight(self, row=..., col=...): ...
    def GetCellTextStyle(self, row=..., col=...): ...
    def GetCellType(self, row=..., col=...): ...
    def GetCellValue(self, row=..., col=...): ...
    def GetColumnWidth(self, col=...): ...
    def GetContentColor(self, rowType=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFieldId(self, row=..., col=...): ...
    def GetFieldId232(self, nRow=..., nCol=..., nContent=...): ...
    def GetFieldId32(self, row=..., col=...): ...
    def GetFormat(self, rowType=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLinetype32(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetMinimumColumnWidth(self, col=...): ...
    def GetMinimumRowHeight(self, row=...): ...
    def GetRowHeight(self, row=...): ...
    def GetRowType(self, row=...): ...
    def GetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def GetText(self, row=..., col=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextRotation(self, row=..., col=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, wpt=..., wviewVec=..., resultRowIndex=..., resultColumnIndex=...): ...
    def InsertColumns(self, col=..., Width=..., cols=...): ...
    def InsertRows(self, row=..., Height=..., Rows=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def IsMergedCell(self, row=..., col=..., minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def MergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RecomputeTableBlock(self, bForceUpdate=...): ...
    def ReselectSubRegion(self): ...
    def ResetCellValue(self, row=..., col=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def Select(self, wpt=..., wvwVec=..., wvwxVec=..., wxaper=..., wyaper=..., allowOutside=..., resultRowIndex=..., resultColumnIndex=...): ...
    def SelectSubRegion(self, wpt1=..., wpt2=..., wvwVec=..., wvwxVec=..., seltype=..., bIncludeCurrentSelection=..., rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAutoScale(self, row=..., col=..., bValue=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetBlockAttributeValue(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockAttributeValue232(self, nRow=..., nCol=..., nContent=..., blkId=..., Value=...): ...
    def SetBlockAttributeValue32(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockRotation(self, row=..., col=..., blkRotation=...): ...
    def SetBlockScale(self, row=..., col=..., blkScale=...): ...
    def SetBlockTableRecordId(self, row=..., col=..., blkId=..., bAutoFit=...): ...
    def SetBlockTableRecordId232(self, nRow=..., nCol=..., nContent=..., blkId=..., autoFit=...): ...
    def SetCellAlignment(self, row=..., col=..., cellAlignment=...): ...
    def SetCellBackgroundColor(self, row=..., col=..., pColor=...): ...
    def SetCellBackgroundColorNone(self, row=..., col=..., bValue=...): ...
    def SetCellContentColor(self, row=..., col=..., pColor=...): ...
    def SetCellDataType(self, row=..., col=..., dataType=..., unitType=...): ...
    def SetCellFormat(self, row=..., col=..., pFormat=...): ...
    def SetCellGridColor(self, row=..., col=..., edges=..., pColor=...): ...
    def SetCellGridLineWeight(self, row=..., col=..., edges=..., Lineweight=...): ...
    def SetCellGridVisibility(self, row=..., col=..., edges=..., bValue=...): ...
    def SetCellState(self, nRow=..., nCol=..., nState=...): ...
    def SetCellTextHeight(self, row=..., col=..., TextHeight=...): ...
    def SetCellTextStyle(self, row=..., col=..., bstrName=...): ...
    def SetCellType(self, row=..., col=..., CellType=...): ...
    def SetCellValue(self, row=..., col=..., val=...): ...
    def SetCellValueFromText(self, row=..., col=..., val=..., nOption=...): ...
    def SetColumnWidth(self, col=..., Width=...): ...
    def SetContentColor(self, rowTypes=..., pColor=...): ...
    def SetDataType(self, rowTypes=..., dataType=..., unitType=...): ...
    def SetFieldId(self, row=..., col=..., fieldId=...): ...
    def SetFieldId232(self, nRow=..., nCol=..., nContent=..., acDbObjectId=..., nflag=...): ...
    def SetFieldId32(self, row=..., col=..., fieldId=...): ...
    def SetFormat(self, rowTypes=..., pFormat=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLinetype32(self, nRow=..., nCol=..., nGridLineType=..., idLinetype=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetRowHeight(self, row=..., Height=...): ...
    def SetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetText(self, row=..., col=..., pStr=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextRotation(self, row=..., col=..., TextRotation=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def UnmergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadTableCell(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadTableStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetColor(self, rowType=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFormat(self, rowType=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyleId32(self, bstrCellStyle=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetColor(self, rowTypes=..., pColor=...): ...
    def SetDataType(self, rowTypes=..., nDataType=..., nUnitType=...): ...
    def SetFormat(self, rowTypes=..., val=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetTemplateId32(self, val=..., option=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyleId32(self, bstrCellStyle=..., val=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadTextStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadTextStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadTolerance(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadToolbar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddSeparator(self, Index=...): ...
    def AddToolbarButton(self, Index=..., Name=..., HelpString=..., Macro=..., FlyoutButton=...): ...
    def Delete(self): ...
    def Dock(self, Side=...): ...
    def Float(self, top=..., left=..., NumberFloatRows=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadToolbarItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AttachToolbarToFlyout(self, MenuGroupName=..., ToolbarName=...): ...
    def Delete(self): ...
    def GetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def SetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def __iter__(self): ...

class IGcadToolbars(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, ToolbarName=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadTrace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadUCS(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetUCSMatrix(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadUCSs(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Origin=..., XAxisPoint=..., YAxisPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IGcadUtility(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AngleFromXAxis(self, StartPoint=..., EndPoint=...): ...
    def AngleToReal(self, Angle=..., Unit=...): ...
    def AngleToString(self, Angle=..., Unit=..., precision=...): ...
    def CreateTypedArray(self, *args): ...
    def DistanceToReal(self, Distance=..., Unit=...): ...
    def GetAngle(self, Point=..., Prompt=...): ...
    def GetCorner(self, Point=..., Prompt=...): ...
    def GetDistance(self, Point=..., Prompt=...): ...
    def GetEntity(self, Object=..., PickedPoint=..., Prompt=...): ...
    def GetInput(self): ...
    def GetInteger(self, Prompt=...): ...
    def GetKeyword(self, Prompt=...): ...
    def GetObjectIdString(self, Object=..., bHex=...): ...
    def GetOrientation(self, Point=..., Prompt=...): ...
    def GetPoint(self, Point=..., Prompt=...): ...
    def GetReal(self, Prompt=...): ...
    def GetRemoteFile(self, URL=..., LocalFile=..., IgnoreCache=...): ...
    def GetString(self, HasSpaces=..., Prompt=...): ...
    def GetSubEntity(self, Object=..., PickedPoint=..., transMatrix=..., ContextData=..., Prompt=...): ...
    def GetSubEntity32(self, Object=..., PickedPoint=..., transMatrix=..., ContextData=..., Prompt=...): ...
    def InitializeUserInput(self, Bits=..., KeyWordList=...): ...
    def IsRemoteFile(self, LocalFile=..., URL=...): ...
    def IsURL(self, URL=...): ...
    def LaunchBrowserDialog(self, SelectedURL=..., DialogTitle=..., OpenButtonCaption=..., StartPageURL=..., RegistryRootKey=..., OpenButtonAlwaysEnabled=...): ...
    def ObjectId32ToObjectIdString(self, ObjectID32=...): ...
    def PolarPoint(self, Point=..., Angle=..., Distance=...): ...
    def Prompt(self, Message=...): ...
    def PutRemoteFile(self, URL=..., LocalFile=...): ...
    def RealToString(self, Value=..., Unit=..., precision=...): ...
    def SendModelessOperationEnded(self, Context=...): ...
    def SendModelessOperationStart(self, Context=...): ...
    def TranslateCoordinates(self, Point=..., FromCoordSystem=..., ToCoordSystem=..., Displacement=..., OCSNormal=...): ...
    def __iter__(self): ...

class IGcadView(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IGcadViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetView(self, View=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Split(self, NumWins=...): ...
    def __iter__(self): ...

class IGcadViewports(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def DeleteConfiguration(self, Name=...): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadViews(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IGcadXRecord(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def GetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def __iter__(self): ...

class IGcadXline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class _DGcadApplicationEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class _DGcadDocumentEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class _IGcadScriptJetEvents(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class GcPePropertyEditorColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcPePropertyEditorColor

class Gcad3DFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcad3DFace

class Gcad3DPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcad3DPolyline

class Gcad3DSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcad3DSolid

class GcadAcCmColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadGcCmColor

class GcadApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadApplication

class GcadArc(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadArc

class GcadArcAlignedText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadArcAlignedText

class GcadAssocArrayPath(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadAssocArrayPath

class GcadAssocArrayPolar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadAssocArrayPolar

class GcadAssocArrayRectangular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadAssocArrayRectangular

class GcadAttribute(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadAttribute

class GcadAttributeReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadAttributeReference

class GcadBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadBlock

class GcadBlockReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadBlockReference

class GcadBlocks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadBlocks

class GcadCamera(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadCamera

class GcadCircle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadCircle

class GcadDatabase(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadDatabase

class GcadDatabasePreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadDatabasePreferences

class GcadDgnUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadUnderlay

class GcadDictionaries(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDictionaries

class GcadDictionary(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDictionary

class GcadDim3PointAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDim3PointAngular

class GcadDimAligned(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimAligned

class GcadDimAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimAngular

class GcadDimArcLength(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimArcLength

class GcadDimDiametric(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimDiametric

class GcadDimOrdinate(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimOrdinate

class GcadDimRadial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimRadial

class GcadDimRadialLarge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimRadialLarge

class GcadDimRotated(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimRotated

class GcadDimStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimStyle

class GcadDimStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimStyles

class GcadDimension(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadDimension

class GcadDocument(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadDocument

class GcadDocuments(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadDocuments

class GcadDwfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadUnderlay

class GcadDynamicBlockReferenceProperty(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadDynamicBlockReferenceProperty

class GcadEllipse(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadEllipse

class GcadEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadEntity

class GcadExternalReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadExternalReference

class GcadExtrudedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadExtrudedSurface

class GcadFileDependencies(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadFileDependencies

class GcadFileDependency(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadFileDependency

class GcadGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadGroup

class GcadGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadGroups

class GcadHatch(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadHatch

class GcadHelix(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadHelix

class GcadHyperlink(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadHyperlink

class GcadHyperlinks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadHyperlinks

class GcadIdPair(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadIdPair

class GcadLWPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLWPolyline

class GcadLayer(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLayer

class GcadLayerStateManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadLayerStateManager

class GcadLayers(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLayers

class GcadLayout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLayout

class GcadLayouts(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLayouts

class GcadLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLeader

class GcadLight(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLight

class GcadLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLine

class GcadLineType(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLineType

class GcadLineTypes(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLineTypes

class GcadLoftedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadLoftedSurface

class GcadMInsertBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMInsertBlock

class GcadMLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMLeader

class GcadMLeaderStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMLeaderStyle

class GcadMLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMLine

class GcadMText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMText

class GcadMaterial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMaterial

class GcadMaterials(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadMaterials

class GcadMenuBar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadMenuBar

class GcadMenuGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadMenuGroup

class GcadMenuGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadMenuGroups

class GcadModelSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadModelSpace

class GcadNurbSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadNurbSurface

class GcadObject(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadObject

class GcadOle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadOle

class GcadPViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPViewport

class GcadPaperSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPaperSpace

class GcadPdfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadUnderlay

class GcadPlaneSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPlaneSurface

class GcadPlot(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPlot

class GcadPlotConfiguration(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPlotConfiguration

class GcadPlotConfigurations(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPlotConfigurations

class GcadPoint(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPoint

class GcadPointCloudEx(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPointCloudEx

class GcadPolyfaceMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPolyfaceMesh

class GcadPolygonMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPolygonMesh

class GcadPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadPolyline

class GcadPopupMenu(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPopupMenu

class GcadPopupMenuItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPopupMenuItem

class GcadPopupMenus(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPopupMenus

class GcadPreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferences

class GcadPreferencesDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesDisplay

class GcadPreferencesDrafting(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesDrafting

class GcadPreferencesFiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesFiles

class GcadPreferencesOpenSave(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesOpenSave

class GcadPreferencesOutput(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesOutput

class GcadPreferencesProfiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesProfiles

class GcadPreferencesSelection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesSelection

class GcadPreferencesSystem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesSystem

class GcadPreferencesUser(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadPreferencesUser

class GcadRasterImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRasterImage

class GcadRay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRay

class GcadRegion(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRegion

class GcadRegisteredApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRegisteredApplication

class GcadRegisteredApplications(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRegisteredApplications

class GcadRevolvedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadRevolvedSurface

class GcadScriptJet(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadScriptJet

class GcadSection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSection

class GcadSectionManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSectionManager

class GcadSectionSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSectionSettings

class GcadSecurityParams(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadSecurityParams

class GcadSelectionSet(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadSelectionSet

class GcadSelectionSets(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadSelectionSets

class GcadShadowDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class GcadShape(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadShape

class GcadSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSolid

class GcadSortentsTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadSortentsTable

class GcadSpline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSpline

class GcadState(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadState

class GcadSubDMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSubDMesh

class GcadSummaryInfo(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadSummaryInfo

class GcadSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSurface

class GcadSweptSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadSweptSurface

class GcadTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTable

class GcadTableCell(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTableCell

class GcadTableStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadTableStyle

class GcadText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadText

class GcadTextStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTextStyle

class GcadTextStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTextStyles

class GcadTolerance(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTolerance

class GcadToolbar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadToolbar

class GcadToolbarItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadToolbarItem

class GcadToolbars(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadToolbars

class GcadTrace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadTrace

class GcadUCS(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadUCS

class GcadUCSs(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadUCSs

class GcadUtility(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IGcadUtility

class GcadView(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadView

class GcadViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadViewport

class GcadViewports(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadViewports

class GcadViews(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadViews

class GcadXRecord(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadXRecord

class GcadXline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source = IGcadObjectEvents
    coclass_interfaces: Incomplete
    default_interface = IGcadXline

IGcPePropertyEditorColor_vtables_dispatch_: int
IGcPePropertyEditorColor_vtables_: Incomplete
IGcad3DFace_vtables_dispatch_: int
IGcad3DFace_vtables_: Incomplete
IGcad3DPolyline_vtables_dispatch_: int
IGcad3DPolyline_vtables_: Incomplete
IGcad3DSolid_vtables_dispatch_: int
IGcad3DSolid_vtables_: Incomplete
IGcadApplication_vtables_dispatch_: int
IGcadApplication_vtables_: Incomplete
IGcadArc_vtables_dispatch_: int
IGcadArc_vtables_: Incomplete
IGcadArcAlignedText_vtables_dispatch_: int
IGcadArcAlignedText_vtables_: Incomplete
IGcadAssocArrayPath_vtables_dispatch_: int
IGcadAssocArrayPath_vtables_: Incomplete
IGcadAssocArrayPolar_vtables_dispatch_: int
IGcadAssocArrayPolar_vtables_: Incomplete
IGcadAssocArrayRectangular_vtables_dispatch_: int
IGcadAssocArrayRectangular_vtables_: Incomplete
IGcadAttribute_vtables_dispatch_: int
IGcadAttribute_vtables_: Incomplete
IGcadAttributeReference_vtables_dispatch_: int
IGcadAttributeReference_vtables_: Incomplete
IGcadBlock_vtables_dispatch_: int
IGcadBlock_vtables_: Incomplete
IGcadBlockReference_vtables_dispatch_: int
IGcadBlockReference_vtables_: Incomplete
IGcadBlocks_vtables_dispatch_: int
IGcadBlocks_vtables_: Incomplete
IGcadCamera_vtables_dispatch_: int
IGcadCamera_vtables_: Incomplete
IGcadCircle_vtables_dispatch_: int
IGcadCircle_vtables_: Incomplete
IGcadDatabase_vtables_dispatch_: int
IGcadDatabase_vtables_: Incomplete
IGcadDatabasePreferences_vtables_dispatch_: int
IGcadDatabasePreferences_vtables_: Incomplete
IGcadDictionaries_vtables_dispatch_: int
IGcadDictionaries_vtables_: Incomplete
IGcadDictionary_vtables_dispatch_: int
IGcadDictionary_vtables_: Incomplete
IGcadDim3PointAngular_vtables_dispatch_: int
IGcadDim3PointAngular_vtables_: Incomplete
IGcadDimAligned_vtables_dispatch_: int
IGcadDimAligned_vtables_: Incomplete
IGcadDimAngular_vtables_dispatch_: int
IGcadDimAngular_vtables_: Incomplete
IGcadDimArcLength_vtables_dispatch_: int
IGcadDimArcLength_vtables_: Incomplete
IGcadDimDiametric_vtables_dispatch_: int
IGcadDimDiametric_vtables_: Incomplete
IGcadDimOrdinate_vtables_dispatch_: int
IGcadDimOrdinate_vtables_: Incomplete
IGcadDimRadial_vtables_dispatch_: int
IGcadDimRadial_vtables_: Incomplete
IGcadDimRadialLarge_vtables_dispatch_: int
IGcadDimRadialLarge_vtables_: Incomplete
IGcadDimRotated_vtables_dispatch_: int
IGcadDimRotated_vtables_: Incomplete
IGcadDimStyle_vtables_dispatch_: int
IGcadDimStyle_vtables_: Incomplete
IGcadDimStyles_vtables_dispatch_: int
IGcadDimStyles_vtables_: Incomplete
IGcadDimension_vtables_dispatch_: int
IGcadDimension_vtables_: Incomplete
IGcadDocument_vtables_dispatch_: int
IGcadDocument_vtables_: Incomplete
IGcadDocuments_vtables_dispatch_: int
IGcadDocuments_vtables_: Incomplete
IGcadDwfUnderlay_vtables_dispatch_: int
IGcadDwfUnderlay_vtables_: Incomplete
IGcadDynamicBlockReferenceProperty_vtables_dispatch_: int
IGcadDynamicBlockReferenceProperty_vtables_: Incomplete
IGcadEllipse_vtables_dispatch_: int
IGcadEllipse_vtables_: Incomplete
IGcadEntity_vtables_dispatch_: int
IGcadEntity_vtables_: Incomplete
IGcadExternalReference_vtables_dispatch_: int
IGcadExternalReference_vtables_: Incomplete
IGcadExtrudedSurface_vtables_dispatch_: int
IGcadExtrudedSurface_vtables_: Incomplete
IGcadFileDependencies_vtables_dispatch_: int
IGcadFileDependencies_vtables_: Incomplete
IGcadFileDependency_vtables_dispatch_: int
IGcadFileDependency_vtables_: Incomplete
IGcadGcCmColor_vtables_dispatch_: int
IGcadGcCmColor_vtables_: Incomplete
IGcadGroup_vtables_dispatch_: int
IGcadGroup_vtables_: Incomplete
IGcadGroups_vtables_dispatch_: int
IGcadGroups_vtables_: Incomplete
IGcadHatch_vtables_dispatch_: int
IGcadHatch_vtables_: Incomplete
IGcadHelix_vtables_dispatch_: int
IGcadHelix_vtables_: Incomplete
IGcadHyperlink_vtables_dispatch_: int
IGcadHyperlink_vtables_: Incomplete
IGcadHyperlinks_vtables_dispatch_: int
IGcadHyperlinks_vtables_: Incomplete
IGcadIdPair_vtables_dispatch_: int
IGcadIdPair_vtables_: Incomplete
IGcadLWPolyline_vtables_dispatch_: int
IGcadLWPolyline_vtables_: Incomplete
IGcadLayer_vtables_dispatch_: int
IGcadLayer_vtables_: Incomplete
IGcadLayerStateManager_vtables_dispatch_: int
IGcadLayerStateManager_vtables_: Incomplete
IGcadLayers_vtables_dispatch_: int
IGcadLayers_vtables_: Incomplete
IGcadLayout_vtables_dispatch_: int
IGcadLayout_vtables_: Incomplete
IGcadLayouts_vtables_dispatch_: int
IGcadLayouts_vtables_: Incomplete
IGcadLeader_vtables_dispatch_: int
IGcadLeader_vtables_: Incomplete
IGcadLight_vtables_dispatch_: int
IGcadLight_vtables_: Incomplete
IGcadLight2_vtables_dispatch_: int
IGcadLight2_vtables_: Incomplete
IGcadLight3_vtables_dispatch_: int
IGcadLight3_vtables_: Incomplete
IGcadLine_vtables_dispatch_: int
IGcadLine_vtables_: Incomplete
IGcadLineType_vtables_dispatch_: int
IGcadLineType_vtables_: Incomplete
IGcadLineTypes_vtables_dispatch_: int
IGcadLineTypes_vtables_: Incomplete
IGcadLoftedSurface_vtables_dispatch_: int
IGcadLoftedSurface_vtables_: Incomplete
IGcadMInsertBlock_vtables_dispatch_: int
IGcadMInsertBlock_vtables_: Incomplete
IGcadMLeader_vtables_dispatch_: int
IGcadMLeader_vtables_: Incomplete
IGcadMLeaderStyle_vtables_dispatch_: int
IGcadMLeaderStyle_vtables_: Incomplete
IGcadMLine_vtables_dispatch_: int
IGcadMLine_vtables_: Incomplete
IGcadMText_vtables_dispatch_: int
IGcadMText_vtables_: Incomplete
IGcadMaterial_vtables_dispatch_: int
IGcadMaterial_vtables_: Incomplete
IGcadMaterials_vtables_dispatch_: int
IGcadMaterials_vtables_: Incomplete
IGcadMenuBar_vtables_dispatch_: int
IGcadMenuBar_vtables_: Incomplete
IGcadMenuGroup_vtables_dispatch_: int
IGcadMenuGroup_vtables_: Incomplete
IGcadMenuGroups_vtables_dispatch_: int
IGcadMenuGroups_vtables_: Incomplete
IGcadModelSpace_vtables_dispatch_: int
IGcadModelSpace_vtables_: Incomplete
IGcadNurbSurface_vtables_dispatch_: int
IGcadNurbSurface_vtables_: Incomplete
IGcadObject_vtables_dispatch_: int
IGcadObject_vtables_: Incomplete
IGcadOle_vtables_dispatch_: int
IGcadOle_vtables_: Incomplete
IGcadPViewport_vtables_dispatch_: int
IGcadPViewport_vtables_: Incomplete
IGcadPaperSpace_vtables_dispatch_: int
IGcadPaperSpace_vtables_: Incomplete
IGcadPlaneSurface_vtables_dispatch_: int
IGcadPlaneSurface_vtables_: Incomplete
IGcadPlot_vtables_dispatch_: int
IGcadPlot_vtables_: Incomplete
IGcadPlotConfiguration_vtables_dispatch_: int
IGcadPlotConfiguration_vtables_: Incomplete
IGcadPlotConfigurations_vtables_dispatch_: int
IGcadPlotConfigurations_vtables_: Incomplete
IGcadPoint_vtables_dispatch_: int
IGcadPoint_vtables_: Incomplete
IGcadPointCloudEx_vtables_dispatch_: int
IGcadPointCloudEx_vtables_: Incomplete
IGcadPolyfaceMesh_vtables_dispatch_: int
IGcadPolyfaceMesh_vtables_: Incomplete
IGcadPolygonMesh_vtables_dispatch_: int
IGcadPolygonMesh_vtables_: Incomplete
IGcadPolyline_vtables_dispatch_: int
IGcadPolyline_vtables_: Incomplete
IGcadPopupMenu_vtables_dispatch_: int
IGcadPopupMenu_vtables_: Incomplete
IGcadPopupMenuItem_vtables_dispatch_: int
IGcadPopupMenuItem_vtables_: Incomplete
IGcadPopupMenus_vtables_dispatch_: int
IGcadPopupMenus_vtables_: Incomplete
IGcadPreferences_vtables_dispatch_: int
IGcadPreferences_vtables_: Incomplete
IGcadPreferencesDisplay_vtables_dispatch_: int
IGcadPreferencesDisplay_vtables_: Incomplete
IGcadPreferencesDrafting_vtables_dispatch_: int
IGcadPreferencesDrafting_vtables_: Incomplete
IGcadPreferencesFiles_vtables_dispatch_: int
IGcadPreferencesFiles_vtables_: Incomplete
IGcadPreferencesOpenSave_vtables_dispatch_: int
IGcadPreferencesOpenSave_vtables_: Incomplete
IGcadPreferencesOutput_vtables_dispatch_: int
IGcadPreferencesOutput_vtables_: Incomplete
IGcadPreferencesProfiles_vtables_dispatch_: int
IGcadPreferencesProfiles_vtables_: Incomplete
IGcadPreferencesSelection_vtables_dispatch_: int
IGcadPreferencesSelection_vtables_: Incomplete
IGcadPreferencesSystem_vtables_dispatch_: int
IGcadPreferencesSystem_vtables_: Incomplete
IGcadPreferencesUser_vtables_dispatch_: int
IGcadPreferencesUser_vtables_: Incomplete
IGcadRasterImage_vtables_dispatch_: int
IGcadRasterImage_vtables_: Incomplete
IGcadRay_vtables_dispatch_: int
IGcadRay_vtables_: Incomplete
IGcadRegion_vtables_dispatch_: int
IGcadRegion_vtables_: Incomplete
IGcadRegisteredApplication_vtables_dispatch_: int
IGcadRegisteredApplication_vtables_: Incomplete
IGcadRegisteredApplications_vtables_dispatch_: int
IGcadRegisteredApplications_vtables_: Incomplete
IGcadRevolvedSurface_vtables_dispatch_: int
IGcadRevolvedSurface_vtables_: Incomplete
IGcadScriptJet_vtables_dispatch_: int
IGcadScriptJet_vtables_: Incomplete
IGcadSection_vtables_dispatch_: int
IGcadSection_vtables_: Incomplete
IGcadSection2_vtables_dispatch_: int
IGcadSection2_vtables_: Incomplete
IGcadSectionManager_vtables_dispatch_: int
IGcadSectionManager_vtables_: Incomplete
IGcadSectionSettings_vtables_dispatch_: int
IGcadSectionSettings_vtables_: Incomplete
IGcadSectionTypeSettings_vtables_dispatch_: int
IGcadSectionTypeSettings_vtables_: Incomplete
IGcadSecurityParams_vtables_dispatch_: int
IGcadSecurityParams_vtables_: Incomplete
IGcadSelectionSet_vtables_dispatch_: int
IGcadSelectionSet_vtables_: Incomplete
IGcadSelectionSets_vtables_dispatch_: int
IGcadSelectionSets_vtables_: Incomplete
IGcadShadowDisplay_vtables_dispatch_: int
IGcadShadowDisplay_vtables_: Incomplete
IGcadShape_vtables_dispatch_: int
IGcadShape_vtables_: Incomplete
IGcadSolid_vtables_dispatch_: int
IGcadSolid_vtables_: Incomplete
IGcadSortentsTable_vtables_dispatch_: int
IGcadSortentsTable_vtables_: Incomplete
IGcadSpline_vtables_dispatch_: int
IGcadSpline_vtables_: Incomplete
IGcadState_vtables_dispatch_: int
IGcadState_vtables_: Incomplete
IGcadSubDMesh_vtables_dispatch_: int
IGcadSubDMesh_vtables_: Incomplete
IGcadSummaryInfo_vtables_dispatch_: int
IGcadSummaryInfo_vtables_: Incomplete
IGcadSurface_vtables_dispatch_: int
IGcadSurface_vtables_: Incomplete
IGcadSweptSurface_vtables_dispatch_: int
IGcadSweptSurface_vtables_: Incomplete
IGcadTable_vtables_dispatch_: int
IGcadTable_vtables_: Incomplete
IGcadTableCell_vtables_dispatch_: int
IGcadTableCell_vtables_: Incomplete
IGcadTableStyle_vtables_dispatch_: int
IGcadTableStyle_vtables_: Incomplete
IGcadText_vtables_dispatch_: int
IGcadText_vtables_: Incomplete
IGcadTextStyle_vtables_dispatch_: int
IGcadTextStyle_vtables_: Incomplete
IGcadTextStyles_vtables_dispatch_: int
IGcadTextStyles_vtables_: Incomplete
IGcadTolerance_vtables_dispatch_: int
IGcadTolerance_vtables_: Incomplete
IGcadToolbar_vtables_dispatch_: int
IGcadToolbar_vtables_: Incomplete
IGcadToolbarItem_vtables_dispatch_: int
IGcadToolbarItem_vtables_: Incomplete
IGcadToolbars_vtables_dispatch_: int
IGcadToolbars_vtables_: Incomplete
IGcadTrace_vtables_dispatch_: int
IGcadTrace_vtables_: Incomplete
IGcadUCS_vtables_dispatch_: int
IGcadUCS_vtables_: Incomplete
IGcadUCSs_vtables_dispatch_: int
IGcadUCSs_vtables_: Incomplete
IGcadUnderlay_vtables_dispatch_: int
IGcadUnderlay_vtables_: Incomplete
IGcadUtility_vtables_dispatch_: int
IGcadUtility_vtables_: Incomplete
IGcadView_vtables_dispatch_: int
IGcadView_vtables_: Incomplete
IGcadViewport_vtables_dispatch_: int
IGcadViewport_vtables_: Incomplete
IGcadViewports_vtables_dispatch_: int
IGcadViewports_vtables_: Incomplete
IGcadViews_vtables_dispatch_: int
IGcadViews_vtables_: Incomplete
IGcadXRecord_vtables_dispatch_: int
IGcadXRecord_vtables_: Incomplete
IGcadXline_vtables_dispatch_: int
IGcadXline_vtables_: Incomplete
RecordMap: Incomplete
CLSIDToClassMap: Incomplete
CLSIDToPackageMap: Incomplete
VTablesToPackageMap: Incomplete
VTablesToClassMap: Incomplete
NamesToIIDMap: Incomplete
