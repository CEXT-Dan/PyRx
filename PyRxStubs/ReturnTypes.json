{
    "type": "table",
    "database": null,
    "name": "RETURNTYPES",
    "withoutRowId": false,
    "strict": false,
    "ddl": "CREATE TABLE RETURNTYPES (Key TEXT UNIQUE NOT NULL ON CONFLICT ROLLBACK, Value TEXT);",
    "columns": [
        {
            "name": "Key",
            "type": "TEXT",
            "constraints": [
                {
                    "type": "UNIQUE",
                    "definition": "UNIQUE "
                },
                {
                    "type": "NOT NULL",
                    "definition": "NOT NULL ON CONFLICT ROLLBACK"
                }
            ]
        },
        {
            "name": "Value",
            "type": "TEXT"
        }
    ],
    "rows": [
        [
            "PyEd::Editor::getKword",
            "tuple[int, str]"
        ],
        [
            "PyEd::Editor::getCorner",
            "tuple[PyEd.PromptStatus, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::getInteger",
            "tuple[PyEd.PromptStatus, int]"
        ],
        [
            "PyEd::Editor::getDouble",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getAngle",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getPoint",
            "tuple[PyEd.PromptStatus, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::getDist",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getReal",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getString",
            "tuple[PyEd.PromptStatus, str]"
        ],
        [
            "PyEd::Editor::select",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectFence",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectLast",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectPrevious",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectPrompt",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectWindow",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectWindowPolygon",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::ssget",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectAll",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::entSel",
            "tuple[PyEd.PromptStatus, PyDb.ObjectId, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::nEntSelP",
            "tuple[PyEd.PromptStatus, PyDb.ObjectId, PyGe.Point3d,PyGe.Matrix3d,list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::Editor::nEntSelPEx",
            "tuple[PyEd.PromptStatus,PyDb.ObjectId,PyGe.Point3d,PyGe.Matrix3d,int,list[PyDb.ObjectId]]"
        ],
        [
            "objectIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "acquireString",
            "tuple[PyGe.DragStatus,str]"
        ],
        [
            "acquireAngle",
            "tuple[PyGe.DragStatus,float]"
        ],
        [
            "acquireDist",
            "tuple[PyGe.DragStatus,float]"
        ],
        [
            "acquirePoint",
            "tuple[PyGe.DragStatus,PyGe.Point3d]"
        ],
        [
            "PyEd::SelectionSet::toList",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::Editor::getCurrentSelectionSet",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::InputPoint::pickedEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::Core::getRGB",
            "tuple[int,...]"
        ],
        [
            "PyAp::DocManager::documents",
            "list[PyAp.Document]"
        ],
        [
            "PyDb::explode",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::getGripPoints",
            "tuple[list[PyGe.Point3d],list[int],list[int]]"
        ],
        [
            "PyDb::getStretchPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::xData",
            "list"
        ],
        [
            "PyDb::intersectWith",
            "list[PyGe.Point3d]"
        ],
        [
            "recordIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::getOffsetCurves",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getOffsetCurvesGivenPlaneNormal",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurves",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtParam",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtParams",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtPoint",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtPoints",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::appendAcDbEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::activeDatabaseArray",
            "list[PyDb.PyDbDatabase]"
        ],
        [
            "PyDb::Core::dictNext",
            "list"
        ],
        [
            "PyDb::Core::dictSearch",
            "list"
        ],
        [
            "PyDb::Core::entGet",
            "list"
        ],
        [
            "PyDb::Core::entGetX",
            "list"
        ],
        [
            "PyDb::Core::getDimAssocIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::openDbEntities",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::Core::openDbObjects",
            "list[PyDb.DbObject]"
        ],
        [
            "PyDb::Core::resbufTest",
            "list"
        ],
        [
            "PyEd::Core::getSym",
            "list"
        ],
        [
            "PyEd::Core::invoke",
            "list"
        ],
        [
            "PyPl::PlotProgressDialog::getSheetProgressRange",
            "tuple[int,int]"
        ],
        [
            "PyPl::PlotProgressDialog::getPlotProgressRange",
            "tuple[int,int]"
        ],
        [
            "PyPl::PlotConfigManager::getStyleList",
            "list[str]"
        ],
        [
            "PyPl::PlotConfigManager::getDevicesList",
            "list[PyPl.PlotConfigInfo]"
        ],
        [
            "PyPl::PlotConfig::getDescriptionFields",
            "tuple[str,...]"
        ],
        [
            "PyPl::PlotConfig::getCanonicalMediaNameList",
            "list[str]"
        ],
        [
            "PyPl::DSDData::getPrecisionEntries",
            "list[PyPl.PrecisionEntry]"
        ],
        [
            "PyPl::DSDData::getDSDEntries",
            "list[PyPl.DSDEntry]"
        ],
        [
            "PyPl::DSDData::get3dDwfOptions",
            "tuple[bool,bool]"
        ],
        [
            "PyEd::SelectionSet::ssNameX",
            "list"
        ],
        [
            "PyEd::InputPoint::nestedPickedEntities",
            "list[list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::InputPoint::nestedKeyPointEntities",
            "list[list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::InputPoint::keyPointGsSelectionMark",
            "list[int]"
        ],
        [
            "PyEd::InputPoint::keyPointEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::InputPoint::gsSelectionMark",
            "list[int]"
        ],
        [
            "PyEd::InputPoint::alignmentPaths",
            "list[PyGe.Curve]"
        ],
        [
            "PyEd::Editor::traceBoundary",
            "list[PyDb.Polyline]"
        ]
    ]
}