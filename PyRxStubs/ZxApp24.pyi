from _typeshed import Incomplete
from win32com.client import CoClassBaseClass, DispatchBaseClass

makepy_version: str
python_version: int
defaultNamedOptArg: Incomplete
defaultNamedNotOptArg: Incomplete
defaultUnnamedArg: Incomplete
CLSID: Incomplete
MajorVersion: int
MinorVersion: int
LibraryFlags: int
LCID: int

class constants:
    zcCubicSpline3DPoly: int
    zcQuadSpline3DPoly: int
    zcSimple3DPoly: int
    zcModelSpace: int
    zcPaperSpace: int
    zcAlignmentAligned: int
    zcAlignmentBottomCenter: int
    zcAlignmentBottomLeft: int
    zcAlignmentBottomRight: int
    zcAlignmentCenter: int
    zcAlignmentFit: int
    zcAlignmentLeft: int
    zcAlignmentMiddle: int
    zcAlignmentMiddleCenter: int
    zcAlignmentMiddleLeft: int
    zcAlignmentMiddleRight: int
    zcAlignmentRight: int
    zcAlignmentTopCenter: int
    zcAlignmentTopLeft: int
    zcAlignmentTopRight: int
    zcAlignPntAcquisitionAutomatic: int
    zcAlignPntAcquisitionShiftToAcquire: int
    zcDegreeMinuteSeconds: int
    zcDegrees: int
    zcGrads: int
    zcRadians: int
    zcAttachmentPointBottomCenter: int
    zcAttachmentPointBottomLeft: int
    zcAttachmentPointBottomRight: int
    zcAttachmentPointMiddleCenter: int
    zcAttachmentPointMiddleLeft: int
    zcAttachmentPointMiddleRight: int
    zcAttachmentPointTopCenter: int
    zcAttachmentPointTopLeft: int
    zcAttachmentPointTopRight: int
    zcAttributeModeConstant: int
    zcAttributeModeInvisible: int
    zcAttributeModeLockPosition: int
    zcAttributeModeMultipleLine: int
    zcAttributeModeNormal: int
    zcAttributeModePreset: int
    zcAttributeModeVerify: int
    zcConnectBase: int
    zcConnectExtents: int
    zcAny: int
    zcUniform: int
    zcFalse: int
    zcTrue: int
    zcIntersection: int
    zcSubtraction: int
    zcUnion: int
    zcBottomCenter: int
    zcBottomLeft: int
    zcBottomRight: int
    zcMiddleCenter: int
    zcMiddleLeft: int
    zcMiddleRight: int
    zcTopCenter: int
    zcTopLeft: int
    zcTopRight: int
    zcCellContentLayoutFlow: int
    zcCellContentLayoutStackedHorizontal: int
    zcCellContentLayoutStackedVertical: int
    zcCellContentTypeBlock: int
    zcCellContentTypeField: int
    zcCellContentTypeUnknown: int
    zcCellContentTypeValue: int
    zcBottomMask: int
    zcLeftMask: int
    zcRightMask: int
    zcTopMask: int
    zcCellMarginBottom: int
    zcCellMarginHorzSpacing: int
    zcCellMarginLeft: int
    zcCellMarginRight: int
    zcCellMarginTop: int
    zcCellMarginVertSpacing: int
    kCellOptionNone: int
    kInheritCellFormat: int
    zcAlignmentProperty: int
    zcAllCellProperties: int
    zcAutoScale: int
    zcBackgroundColor: int
    zcBitProperties: int
    zcContentColor: int
    zcContentLayout: int
    zcContentProperties: int
    zcDataFormat: int
    zcDataType: int
    zcDataTypeAndFormat: int
    zcEnableBackgroundColor: int
    zcFlowDirBtoT: int
    zcInvalidCellProperty: int
    zcLock: int
    zcMarginBottom: int
    zcMarginLeft: int
    zcMarginRight: int
    zcMarginTop: int
    zcMergeAll: int
    zcRotation: int
    zcScale: int
    zcTextHeight: int
    zcTextStyle: int
    zcCellStateContentLocked: int
    zcCellStateContentModified: int
    zcCellStateContentReadOnly: int
    zcCellStateFormatLocked: int
    zcCellStateFormatModified: int
    zcCellStateFormatReadOnly: int
    zcCellStateLinked: int
    zcCellStateNone: int
    zcBlockCell: int
    zcTextCell: int
    zcUnknownCell: int
    zcBlue: int
    zcByBlock: int
    zcByLayer: int
    zcCyan: int
    zcGreen: int
    zcMagenta: int
    zcRed: int
    zcWhite: int
    zcYellow: int
    zcColorMethodByACI: int
    zcColorMethodByBlock: int
    zcColorMethodByLayer: int
    zcColorMethodByRGB: int
    zcColorMethodForeground: int
    zcDisplayDCS: int
    zcOCS: int
    zcPaperSpaceDCS: int
    zcUCS: int
    zcWorld: int
    zcUpdateDataFromSource: int
    zcUpdateSourceFromData: int
    zcUpdateOptionIncludeXrefs: int
    zcUpdateOptionNone: int
    zcUpdateOptionOverwriteContentModifiedAfterUpdate: int
    zcUpdateOptionOverwriteFormatModifiedAfterUpdate: int
    zcUpdateOptionUpdateFullSourceRange: int
    zcSymAbove: int
    zcSymInFront: int
    zcSymNone: int
    zcArrowArchTick: int
    zcArrowBoxBlank: int
    zcArrowBoxFilled: int
    zcArrowClosed: int
    zcArrowClosedBlank: int
    zcArrowDatumBlank: int
    zcArrowDatumFilled: int
    zcArrowDefault: int
    zcArrowDot: int
    zcArrowDotBlank: int
    zcArrowDotSmall: int
    zcArrowIntegral: int
    zcArrowNone: int
    zcArrowOblique: int
    zcArrowOpen: int
    zcArrowOpen30: int
    zcArrowOpen90: int
    zcArrowOrigin: int
    zcArrowOrigin2: int
    zcArrowSmall: int
    zcArrowUserDefined: int
    zcCenterLine: int
    zcCenterMark: int
    zcCenterNone: int
    zcArrowsOnly: int
    zcBestFit: int
    zcTextAndArrows: int
    zcTextOnly: int
    zcDiagonal: int
    zcHorizontal: int
    zcNotStacked: int
    zcFirstExtensionLine: int
    zcHorzCentered: int
    zcOverFirstExtension: int
    zcOverSecondExtension: int
    zcSecondExtensionLine: int
    zcDimLArchitectural: int
    zcDimLDecimal: int
    zcDimLEngineering: int
    zcDimLFractional: int
    zcDimLScientific: int
    zcDimLWindowsDesktop: int
    zcDimPrecisionEight: int
    zcDimPrecisionFive: int
    zcDimPrecisionFour: int
    zcDimPrecisionOne: int
    zcDimPrecisionSeven: int
    zcDimPrecisionSix: int
    zcDimPrecisionThree: int
    zcDimPrecisionTwo: int
    zcDimPrecisionZero: int
    zcDimLineWithText: int
    zcMoveTextAddLeader: int
    zcMoveTextNoLeader: int
    zcTolBottom: int
    zcTolMiddle: int
    zcTolTop: int
    zcTolBasic: int
    zcTolDeviation: int
    zcTolLimits: int
    zcTolNone: int
    zcTolSymmetrical: int
    zcDimArchitectural: int
    zcDimArchitecturalStacked: int
    zcDimDecimal: int
    zcDimEngineering: int
    zcDimFractional: int
    zcDimFractionalStacked: int
    zcDimScientific: int
    zcDimWindowsDesktop: int
    zcAbove: int
    zcJIS: int
    zcOutside: int
    zcUnder: int
    zcVertCentered: int
    zcDragDisplayAutomatically: int
    zcDragDisplayOnRequest: int
    zcDragDoNotDisplay: int
    zcDrawLeaderHeadFirst: int
    zcDrawLeaderTailFirst: int
    zcDrawContentFirst: int
    zcDrawLeaderFirst: int
    zcEnableSCM: int
    zcEnableSCMOptions: int
    zcEnter: int
    zcRepeatLastCommand: int
    zcSCM: int
    zcEdRepeatLastCommand: int
    zcEdSCM: int
    zcNoDrawingAreaShortCutMenu: int
    zcUseDefaultDrawingAreaShortCutMenu: int
    zcBottomToTop: int
    zcByStyle: int
    zcLeftToRight: int
    zcRightToLeft: int
    zcTopToBottom: int
    zcAngular: int
    zcArea: int
    zcDistance: int
    zcNoUnits: int
    zc3dFace: int
    zc3dPolyline: int
    zc3dSolid: int
    zcArc: int
    zcAttribute: int
    zcAttributeReference: int
    zcBlockReference: int
    zcCircle: int
    zcDgnUnderlay: int
    zcDim3PointAngular: int
    zcDimAligned: int
    zcDimAngular: int
    zcDimArcLength: int
    zcDimDiametric: int
    zcDimOrdinate: int
    zcDimRadial: int
    zcDimRadialLarge: int
    zcDimRotated: int
    zcDwfUnderlay: int
    zcEllipse: int
    zcExternalReference: int
    zcGroup: int
    zcHatch: int
    zcLeader: int
    zcLine: int
    zcMInsertBlock: int
    zcMLeader: int
    zcMLine: int
    zcMtext: int
    zcNurbSurface: int
    zcPViewport: int
    zcPdfUnderlay: int
    zcPoint: int
    zcPolyfaceMesh: int
    zcPolyline: int
    zcPolylineLight: int
    zcPolymesh: int
    zcRaster: int
    zcRay: int
    zcRegion: int
    zcShape: int
    zcSolid: int
    zcSpline: int
    zcSubDMesh: int
    zcTable: int
    zcText: int
    zcTolerance: int
    zcTrace: int
    zcXline: int
    zcExtendBoth: int
    zcExtendNone: int
    zcExtendOtherEntity: int
    zcExtendThisEntity: int
    kFormatOptionNone: int
    zcForEditing: int
    zcForExpression: int
    zcIgnoreMtextFormat: int
    zcUseMaximumPrecision: int
    zcPreDefinedGradient: int
    zcUserDefinedGradient: int
    zcGridLineStyleDouble: int
    zcGridLineStyleSingle: int
    zcHorzBottom: int
    zcHorzInside: int
    zcHorzTop: int
    zcInvalidGridLine: int
    zcVertInside: int
    zcVertLeft: int
    zcVertRight: int
    zcGradientObject: int
    zcHatchObject: int
    zcHatchStyleIgnore: int
    zcHatchStyleNormal: int
    zcHatchStyleOuter: int
    zcHeight: int
    zcTurnHeight: int
    zcTurns: int
    zcCCW: int
    zcCW: int
    zcHorizontalAlignmentAligned: int
    zcHorizontalAlignmentCenter: int
    zcHorizontalAlignmentFit: int
    zcHorizontalAlignmentLeft: int
    zcHorizontalAlignmentMiddle: int
    zcHorizontalAlignmentRight: int
    zcPenWidth013: int
    zcPenWidth018: int
    zcPenWidth025: int
    zcPenWidth035: int
    zcPenWidth050: int
    zcPenWidth070: int
    zcPenWidth100: int
    zcPenWidth140: int
    zcPenWidth200: int
    zcPenWidthUnk: int
    zcInsertUnitsAngstroms: int
    zcInsertUnitsAstronomicalUnits: int
    zcInsertUnitsCentimeters: int
    zcInsertUnitsDecameters: int
    zcInsertUnitsDecimeters: int
    zcInsertUnitsFeet: int
    zcInsertUnitsGigameters: int
    zcInsertUnitsHectometers: int
    zcInsertUnitsInches: int
    zcInsertUnitsKilometers: int
    zcInsertUnitsLightYears: int
    zcInsertUnitsMeters: int
    zcInsertUnitsMicroinches: int
    zcInsertUnitsMicrons: int
    zcInsertUnitsMiles: int
    zcInsertUnitsMillimeters: int
    zcInsertUnitsMils: int
    zcInsertUnitsNanometers: int
    zcInsertUnitsParsecs: int
    zcInsertUnitsUSSurveyFeet: int
    zcInsertUnitsUSSurveyInch: int
    zcInsertUnitsUSSurveyMile: int
    zcInsertUnitsUSSurveyYard: int
    zcInsertUnitsUnitless: int
    zcInsertUnitsYards: int
    zcInsertUnitsAutoAssign: int
    zcInsertUnitsPrompt: int
    zcPreferenceClassic: int
    zcPreferenceCustom: int
    zcKeyboardEntry: int
    zcKeyboardEntryExceptScripts: int
    zcKeyboardRunningObjSnap: int
    zcLsAll: int
    zcLsColor: int
    zcLsFrozen: int
    zcLsLineType: int
    zcLsLineWeight: int
    zcLsLocked: int
    zcLsNewViewport: int
    zcLsNone: int
    zcLsOn: int
    zcLsPlot: int
    zcLsPlotStyle: int
    zcLineNoArrow: int
    zcLineWithArrow: int
    zcSplineNoArrow: int
    zcSplineWithArrow: int
    zcLineSpacingStyleAtLeast: int
    zcLineSpacingStyleExactly: int
    zcLnWt000: int
    zcLnWt005: int
    zcLnWt009: int
    zcLnWt013: int
    zcLnWt015: int
    zcLnWt018: int
    zcLnWt020: int
    zcLnWt025: int
    zcLnWt030: int
    zcLnWt035: int
    zcLnWt040: int
    zcLnWt050: int
    zcLnWt053: int
    zcLnWt060: int
    zcLnWt070: int
    zcLnWt080: int
    zcLnWt090: int
    zcLnWt100: int
    zcLnWt106: int
    zcLnWt120: int
    zcLnWt140: int
    zcLnWt158: int
    zcLnWt200: int
    zcLnWt211: int
    zcLnWtByBlock: int
    zcLnWtByLayer: int
    zcLnWtByLwDefault: int
    zcPaletteByDrawing: int
    zcPaletteBySession: int
    zcAllNormal: int
    zcEndsNormal: int
    zcFirstNormal: int
    zcLastNormal: int
    zcRuled: int
    zcSmooth: int
    zcUseDraftAngles: int
    zcHatchLoopTypeDefault: int
    zcHatchLoopTypeDerived: int
    zcHatchLoopTypeExternal: int
    zcHatchLoopTypePolyline: int
    zcHatchLoopTypeTextbox: int
    zcBlockContent: int
    zcMTextContent: int
    zcNoneContent: int
    zcInVisibleLeader: int
    zcSplineLeader: int
    zcStraightLeader: int
    zcBottom: int
    zcTop: int
    zcZero: int
    zcEnglish: int
    zcMetric: int
    zcMenuFileCompiled: int
    zcMenuFileSource: int
    zcBaseMenuGroup: int
    zcPartialMenuGroup: int
    zcMenuItem: int
    zcMenuSeparator: int
    zcMenuSubMenu: int
    zcMergeCellStyleConvertDuplicatesToOverrides: int
    zcMergeCellStyleCopyDuplicates: int
    zcMergeCellStyleIgnoreNewStyles: int
    zcMergeCellStyleNone: int
    zcMergeCellStyleOverwriteDuplicates: int
    zcOPQHighGraphics: int
    zcOPQLowGraphics: int
    zcOPQMonochrome: int
    zcOQGraphics: int
    zcOQHighPhoto: int
    zcOQLineArt: int
    zcOQPhoto: int
    zcOQText: int
    zcOTEmbedded: int
    zcOTLink: int
    zcOTStatic: int
    zcOff: int
    zcOn: int
    zcParseOptionNone: int
    zcPreserveMtextFormat: int
    zcSetDefaultFormat: int
    zcHatchPatternTypeCustomDefined: int
    zcHatchPatternTypePreDefined: int
    zcHatchPatternTypeUserDefined: int
    zcPlotOrientationLandscape: int
    zcPlotOrientationPortrait: int
    zcInches: int
    zcMillimeters: int
    zcPixels: int
    zcPolicyLegacy: int
    zcPolicyNamed: int
    zcPolicyLegacyDefault: int
    zcPolicyLegacyLegacy: int
    zcPolicyLegacyQuery: int
    zcPolicyNewDefault: int
    zcPolicyNewLegacy: int
    zc0degrees: int
    zc180degrees: int
    zc270degrees: int
    zc90degrees: int
    zc100_1: int
    zc10_1: int
    zc1_1: int
    zc1_10: int
    zc1_100: int
    zc1_128in_1ft: int
    zc1_16: int
    zc1_16in_1ft: int
    zc1_2: int
    zc1_20: int
    zc1_2in_1ft: int
    zc1_30: int
    zc1_32in_1ft: int
    zc1_4: int
    zc1_40: int
    zc1_4in_1ft: int
    zc1_5: int
    zc1_50: int
    zc1_64in_1ft: int
    zc1_8: int
    zc1_8in_1ft: int
    zc1ft_1ft: int
    zc1in_1ft: int
    zc2_1: int
    zc3_16in_1ft: int
    zc3_32in_1ft: int
    zc3_4in_1ft: int
    zc3_8in_1ft: int
    zc3in_1ft: int
    zc4_1: int
    zc6in_1ft: int
    zc8_1: int
    zcScaleToFit: int
    zcDisplay: int
    zcExtents: int
    zcLayout: int
    zcLimits: int
    zcView: int
    zcWindow: int
    zcCubicSplinePoly: int
    zcFitCurvePoly: int
    zcQuadSplinePoly: int
    zcSimplePoly: int
    zcBezierSurfaceMesh: int
    zcCubicSurfaceMesh: int
    zcQuadSurfaceMesh: int
    zcSimpleMesh: int
    zcBlockBox: int
    zcBlockCircle: int
    zcBlockHexagon: int
    zcBlockImperial: int
    zcBlockSlot: int
    zcBlockTriangle: int
    zcBlockUserDefined: int
    zcFullPreview: int
    zcPartialPreview: int
    zcPrinterAlertOnce: int
    zcPrinterAlwaysAlert: int
    zcPrinterNeverAlert: int
    zcPrinterNeverAlertLogOnce: int
    zcProxyBoundingBox: int
    zcProxyNotShow: int
    zcProxyShow: int
    zcActiveViewport: int
    zcAllViewports: int
    zcDegrees000: int
    zcDegrees090: int
    zcDegrees180: int
    zcDegrees270: int
    zcDegreesUnknown: int
    zcDataRow: int
    zcHeaderRow: int
    zcTitleRow: int
    zcUnknownRow: int
    zc2000_Template: int
    zc2000_dwg: int
    zc2000_dxf: int
    zc2004_Template: int
    zc2004_dwg: int
    zc2004_dxf: int
    zc2007_Template: int
    zc2007_dwg: int
    zc2007_dxf: int
    zc2010_Template: int
    zc2010_dwg: int
    zc2010_dxf: int
    zc2013_Template: int
    zc2013_dwg: int
    zc2013_dxf: int
    zc2018_Template: int
    zc2018_dwg: int
    zc2018_dxf: int
    zcNative: int
    zcR12_dxf: int
    zcR13_dwg: int
    zcR13_dxf: int
    zcR14_dwg: int
    zcR14_dxf: int
    zcR15_Template: int
    zcR15_dwg: int
    zcR15_dxf: int
    zcR18_Template: int
    zcR18_dwg: int
    zcR18_dxf: int
    zcUnknown: int
    zcSectionGenerationDestinationFile: int
    zcSectionGenerationDestinationNewBlock: int
    zcSectionGenerationDestinationReplaceBlock: int
    zcSectionGenerationSourceAllObjects: int
    zcSectionGenerationSourceSelectedObjects: int
    zcSectionStateBoundary: int
    zcSectionStatePlane: int
    zcSectionStateVolume: int
    zcSectionState2Boundary: int
    zcSectionState2Plane: int
    zcSectionState2Slice: int
    zcSectionState2Volume: int
    zcSectionSubItemBackLine: int
    zcSectionSubItemBackLineBottom: int
    zcSectionSubItemBackLineTop: int
    zcSectionSubItemSectionLine: int
    zcSectionSubItemSectionLineBottom: int
    zcSectionSubItemSectionLineTop: int
    zcSectionSubItemVerticalLineBottom: int
    zcSectionSubItemVerticalLineTop: int
    zcSectionSubItemkNone: int
    zcSectionType2dSection: int
    zcSectionType3dSection: int
    zcSectionTypeLiveSection: int
    zcDegrees15: int
    zcDegrees30: int
    zcDegrees45: int
    zcDegrees60: int
    zcDegrees90: int
    zcDegreesAny: int
    zcDegreesHorz: int
    zcSelectionSetAll: int
    zcSelectionSetCrossing: int
    zcSelectionSetCrossingPolygon: int
    zcSelectionSetFence: int
    zcSelectionSetLast: int
    zcSelectionSetPrevious: int
    zcSelectionSetWindow: int
    zcSelectionSetWindowPolygon: int
    zcTableSelectCrossing: int
    zcTableSelectWindow: int
    zcShadePlotAsDisplayed: int
    zcShadePlotHidden: int
    zcShadePlotRendered: int
    zcShadePlotWireframe: int
    zcCastsAndReceivesShadows: int
    zcCastsShadows: int
    zcIgnoreShadows: int
    zcReceivesShadows: int
    zcTableBottomToTop: int
    zcTableTopToBottom: int
    zcTableFlowDownOrUp: int
    zcTableFlowLeft: int
    zcTableFlowRight: int
    zcCellAlign: int
    zcCellBackgroundColor: int
    zcCellBackgroundFillNone: int
    zcCellBottomGridColor: int
    zcCellBottomGridLineWeight: int
    zcCellBottomVisibility: int
    zcCellContentColor: int
    zcCellDataType: int
    zcCellLeftGridColor: int
    zcCellLeftGridLineWeight: int
    zcCellLeftVisibility: int
    zcCellRightGridColor: int
    zcCellRightGridLineWeight: int
    zcCellRightVisibility: int
    zcCellTextHeight: int
    zcCellTextStyle: int
    zcCellTopGridColor: int
    zcCellTopGridLineWeight: int
    zcCellTopVisibility: int
    zcDataHorzBottomColor: int
    zcDataHorzBottomLineWeight: int
    zcDataHorzBottomVisibility: int
    zcDataHorzInsideColor: int
    zcDataHorzInsideLineWeight: int
    zcDataHorzInsideVisibility: int
    zcDataHorzTopColor: int
    zcDataHorzTopLineWeight: int
    zcDataHorzTopVisibility: int
    zcDataRowAlignment: int
    zcDataRowColor: int
    zcDataRowDataType: int
    zcDataRowFillColor: int
    zcDataRowFillNone: int
    zcDataRowTextHeight: int
    zcDataRowTextStyle: int
    zcDataVertInsideColor: int
    zcDataVertInsideLineWeight: int
    zcDataVertInsideVisibility: int
    zcDataVertLeftColor: int
    zcDataVertLeftLineWeight: int
    zcDataVertLeftVisibility: int
    zcDataVertRightColor: int
    zcDataVertRightLineWeight: int
    zcDataVertRightVisibility: int
    zcFlowDirection: int
    zcHeaderHorzBottomColor: int
    zcHeaderHorzBottomLineWeight: int
    zcHeaderHorzBottomVisibility: int
    zcHeaderHorzInsideColor: int
    zcHeaderHorzInsideLineWeight: int
    zcHeaderHorzInsideVisibility: int
    zcHeaderHorzTopColor: int
    zcHeaderHorzTopLineWeight: int
    zcHeaderHorzTopVisibility: int
    zcHeaderRowAlignment: int
    zcHeaderRowColor: int
    zcHeaderRowDataType: int
    zcHeaderRowFillColor: int
    zcHeaderRowFillNone: int
    zcHeaderRowTextHeight: int
    zcHeaderRowTextStyle: int
    zcHeaderSuppressed: int
    zcHeaderVertInsideColor: int
    zcHeaderVertInsideLineWeight: int
    zcHeaderVertInsideVisibility: int
    zcHeaderVertLeftColor: int
    zcHeaderVertLeftLineWeight: int
    zcHeaderVertLeftVisibility: int
    zcHeaderVertRightColor: int
    zcHeaderVertRightLineWeight: int
    zcHeaderVertRightVisibility: int
    zcHorzCellMargin: int
    zcTitleHorzBottomColor: int
    zcTitleHorzBottomLineWeight: int
    zcTitleHorzBottomVisibility: int
    zcTitleHorzInsideColor: int
    zcTitleHorzInsideLineWeight: int
    zcTitleHorzInsideVisibility: int
    zcTitleHorzTopColor: int
    zcTitleHorzTopLineWeight: int
    zcTitleHorzTopVisibility: int
    zcTitleRowAlignment: int
    zcTitleRowColor: int
    zcTitleRowDataType: int
    zcTitleRowFillColor: int
    zcTitleRowFillNone: int
    zcTitleRowTextHeight: int
    zcTitleRowTextStyle: int
    zcTitleSuppressed: int
    zcTitleVertInsideColor: int
    zcTitleVertInsideLineWeight: int
    zcTitleVertInsideVisibility: int
    zcTitleVertLeftColor: int
    zcTitleVertLeftLineWeight: int
    zcTitleVertLeftVisibility: int
    zcTitleVertRightColor: int
    zcTitleVertRightLineWeight: int
    zcTitleVertRightVisibility: int
    zcVertCellMargin: int
    zcCenterAlignment: int
    zcLeftAlignment: int
    zcRightAlignment: int
    zcAlwaysRightReadingAngle: int
    zcHorizontalAngle: int
    zcInsertAngle: int
    zcAttachmentHorizontal: int
    zcAttachmentVertical: int
    zcAttachmentAllLine: int
    zcAttachmentBottomLine: int
    zcAttachmentBottomOfBottom: int
    zcAttachmentBottomOfTop: int
    zcAttachmentBottomOfTopLine: int
    zcAttachmentMiddle: int
    zcAttachmentMiddleOfBottom: int
    zcAttachmentMiddleOfTop: int
    zcAttachmentTopOfTop: int
    zcFontBold: int
    zcFontBoldItalic: int
    zcFontItalic: int
    zcFontRegular: int
    zcTextFlagBackward: int
    zcTextFlagUpsideDown: int
    zcToolbarDockBottom: int
    zcToolbarDockLeft: int
    zcToolbarDockRight: int
    zcToolbarDockTop: int
    zcToolbarFloating: int
    zcToolbarButton: int
    zcToolbarControl: int
    zcToolbarFlyout: int
    zcToolbarSeparator: int
    zcApplied: int
    zcNoOverrides: int
    zcArchitectural: int
    zcDecimal: int
    zcDefaultUnits: int
    zcEngineering: int
    zcFractional: int
    zcScientific: int
    zcBuffer: int
    zcDate: int
    zcDouble: int
    zcGeneral: int
    zcLong: int
    zcObjectId: int
    zcPoint2d: int
    zcPoint3d: int
    zcResbuf: int
    zcString: int
    zcUnknownDataType: int
    zcUnitAngle: int
    zcUnitArea: int
    zcUnitDistance: int
    zcUnitVolume: int
    zcUnitless: int
    zcVerticalAlignmentBaseline: int
    zcVerticalAlignmentBottom: int
    zcVerticalAlignmentMiddle: int
    zcVerticalAlignmentTop: int
    zcAttachmentCenter: int
    zcAttachmentLinedCenter: int
    zcVp100_1: int
    zcVp10_1: int
    zcVp1_1: int
    zcVp1_10: int
    zcVp1_100: int
    zcVp1_128in_1ft: int
    zcVp1_16: int
    zcVp1_16in_1ft: int
    zcVp1_2: int
    zcVp1_20: int
    zcVp1_2in_1ft: int
    zcVp1_30: int
    zcVp1_32in_1ft: int
    zcVp1_4: int
    zcVp1_40: int
    zcVp1_4in_1ft: int
    zcVp1_5: int
    zcVp1_50: int
    zcVp1_64in_1ft: int
    zcVp1_8: int
    zcVp1_8in_1ft: int
    zcVp1and1_2in_1ft: int
    zcVp1ft_1ft: int
    zcVp1in_1ft: int
    zcVp2_1: int
    zcVp3_16in_1ft: int
    zcVp3_32in_1ft: int
    zcVp3_4in_1ft: int
    zcVp3_8in_1ft: int
    zcVp3in_1ft: int
    zcVp4_1: int
    zcVp6in_1ft: int
    zcVp8_1: int
    zcVpCustomScale: int
    zcVpScaleToFit: int
    zcViewport2Horizontal: int
    zcViewport2Vertical: int
    zcViewport3Above: int
    zcViewport3Below: int
    zcViewport3Horizontal: int
    zcViewport3Left: int
    zcViewport3Right: int
    zcViewport3Vertical: int
    zcViewport4: int
    zcMax: int
    zcMin: int
    zcNorm: int
    zcDemandLoadDisabled: int
    zcDemandLoadEnabled: int
    zcDemandLoadEnabledWithCopy: int
    zcDemanLoadDisable: int
    zcDemandLoadCmdInvoke: int
    zcDemandLoadOnObjectDetect: int
    zcZoomScaledAbsolute: int
    zcZoomScaledRelative: int
    zcZoomScaledRelativePSpace: int
    zcChord: int
    zcCustomParameterization: int
    zcSqrtChord: int
    zcUniformParam: int
    zcHide: int
    zcShow: int
    zcControlVertices: int
    zcFit: int
    zcIsolines: int
    zcIsoparms: int
    zcAlwaysCrease: int
    zcCreaseByLevel: int
    zcNoneCrease: int
    zcByColor: int
    zcTrueColor: int
    zcIntensity: int
    zcNormal: int
    zcObjectColor: int
    zcScanColor: int
    zcIntensityBlue: int
    zcIntensityEditableFlag: int
    zcIntensityGrayscale: int
    zcIntensityGreen: int
    zcIntensityRainbow: int
    zcIntensityRed: int
    zcClassification: int
    zcElevation: int
    zcIntensities: int
    zcNormals: int
    zcObject: int
    zcRGB: int
    ZCADSECURITYPARAMS_ADD_TIMESTAMP: int
    ZCADSECURITYPARAMS_ENCRYPT_DATA: int
    ZCADSECURITYPARAMS_ENCRYPT_PROPS: int
    ZCADSECURITYPARAMS_SIGN_DATA: int
    ZCADSECURITYPARAMS_ALGID_RC4: int

class IArcTextObj(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcOffset(self): ...
    @property
    def Center(self): ...
    @property
    def CharSpacing(self): ...
    @property
    def Contents(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndAngle(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LeftOffset(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def RightOffset(self): ...
    @property
    def StartAngle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def WidthFactor(self): ...
    @property
    def color(self): ...
    @ArcOffset.setter
    def ArcOffset(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @Contents.setter
    def Contents(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeftOffset.setter
    def LeftOffset(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @RightOffset.setter
    def RightOffset(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WidthFactor.setter
    def WidthFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcad3DFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetInvisibleEdge(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetInvisibleEdge(self, Index=..., State=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VisibilityEdge1(self): ...
    @property
    def VisibilityEdge2(self): ...
    @property
    def VisibilityEdge3(self): ...
    @property
    def VisibilityEdge4(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VisibilityEdge1.setter
    def VisibilityEdge1(self, value) -> None: ...
    @VisibilityEdge2.setter
    def VisibilityEdge2(self, value) -> None: ...
    @VisibilityEdge3.setter
    def VisibilityEdge3(self, value) -> None: ...
    @VisibilityEdge4.setter
    def VisibilityEdge4(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcad3DPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Closed(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Closed.setter
    def Closed(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcad3DSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., SolidObject=...): ...
    def CheckInterference(self, Object=..., CreateInterferenceSolid=..., SolidsInterfere=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SectionSolid(self, Point1=..., Point2=..., point3=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SliceSolid(self, Point1=..., Point2=..., point3=..., Negative=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Centroid(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def History(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MomentOfInertia(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def PrincipalDirections(self): ...
    @property
    def PrincipalMoments(self): ...
    @property
    def ProductOfInertia(self): ...
    @property
    def RadiiOfGyration(self): ...
    @property
    def ShowHistory(self): ...
    @property
    def SolidType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Volume(self): ...
    @property
    def color(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @History.setter
    def History(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @ShowHistory.setter
    def ShowHistory(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Eval(self, Expression=...): ...
    def GetInterfaceObject(self, ProgID=...): ...
    def GetLicenseSerial(self, retType=..., Serial=..., chkLock=..., retIsNet=...): ...
    def GetZcadState(self): ...
    def ListZrx(self): ...
    def LoadZVB(self, Name=...): ...
    def LoadZrx(self, Name=...): ...
    def Quit(self): ...
    def RunMacro(self, MacroPath=...): ...
    def StatusId(self, VportObj=...): ...
    def UnloadZVB(self, Name=...): ...
    def UnloadZrx(self, Name=...): ...
    def Update(self): ...
    def Zoom(self, Type=..., vParams=...): ...
    def ZoomAll(self): ...
    def ZoomCenter(self, Center=..., Magnify=...): ...
    def ZoomExtents(self): ...
    def ZoomPickWindow(self): ...
    def ZoomPrevious(self): ...
    def ZoomScaled(self, scale=..., ScaleType=...): ...
    def ZoomWindow(self, LowerLeft=..., UpperRight=...): ...
    def __iter__(self): ...
    @property
    def ActiveDocument(self): ...
    @property
    def Application(self): ...
    @property
    def Caption(self): ...
    @property
    def Documents(self): ...
    @property
    def FullName(self): ...
    @property
    def HWND(self): ...
    @property
    def Height(self): ...
    @property
    def LocaleId(self): ...
    @property
    def MenuBar(self): ...
    @property
    def MenuGroups(self): ...
    @property
    def Name(self): ...
    @property
    def Path(self): ...
    @property
    def Preferences(self): ...
    @property
    def VBE(self): ...
    @property
    def Version(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def WindowLeft(self): ...
    @property
    def WindowState(self): ...
    @property
    def WindowTop(self): ...
    @ActiveDocument.setter
    def ActiveDocument(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @WindowLeft.setter
    def WindowLeft(self, value) -> None: ...
    @WindowState.setter
    def WindowState(self, value) -> None: ...
    @WindowTop.setter
    def WindowTop(self, value) -> None: ...

class IZcadArc(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcLength(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndAngle(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def StartAngle(self): ...
    @property
    def StartPoint(self): ...
    @property
    def Thickness(self): ...
    @property
    def TotalAngle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Center.setter
    def Center(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadAttribute(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Constant(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldLength(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Invisible(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockPosition(self): ...
    @property
    def MTextAttribute(self): ...
    @property
    def MTextAttributeContent(self): ...
    @property
    def MTextBoundaryWidth(self): ...
    @property
    def MTextDrawingDirection(self): ...
    @property
    def Material(self): ...
    @property
    def Mode(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Preset(self): ...
    @property
    def PromptString(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TagString(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def Verify(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @Constant.setter
    def Constant(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FieldLength.setter
    def FieldLength(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Invisible.setter
    def Invisible(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LockPosition.setter
    def LockPosition(self, value) -> None: ...
    @MTextAttribute.setter
    def MTextAttribute(self, value) -> None: ...
    @MTextAttributeContent.setter
    def MTextAttributeContent(self, value) -> None: ...
    @MTextBoundaryWidth.setter
    def MTextBoundaryWidth(self, value) -> None: ...
    @MTextDrawingDirection.setter
    def MTextDrawingDirection(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Mode.setter
    def Mode(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Preset.setter
    def Preset(self, value) -> None: ...
    @PromptString.setter
    def PromptString(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @Verify.setter
    def Verify(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadAttributeReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Constant(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldLength(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Invisible(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockPosition(self): ...
    @property
    def MTextAttribute(self): ...
    @property
    def MTextAttributeContent(self): ...
    @property
    def MTextBoundaryWidth(self): ...
    @property
    def MTextDrawingDirection(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TagString(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FieldLength.setter
    def FieldLength(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Invisible.setter
    def Invisible(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MTextAttribute.setter
    def MTextAttribute(self, value) -> None: ...
    @MTextAttributeContent.setter
    def MTextAttributeContent(self, value) -> None: ...
    @MTextBoundaryWidth.setter
    def MTextBoundaryWidth(self, value) -> None: ...
    @MTextDrawingDirection.setter
    def MTextDrawingDirection(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...
    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...
    
class IZcadBlockReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcadBlocks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, InsertionPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...


class IZcadCircle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Circumference(self): ...
    @property
    def Database(self): ...
    @property
    def Diameter(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Radius(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Area.setter
    def Area(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @Circumference.setter
    def Circumference(self, value) -> None: ...
    @Diameter.setter
    def Diameter(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDatabase(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def HandleToObject(self, Handle=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def __iter__(self): ...
    @property
    def Blocks(self): ...
    @property
    def Dictionaries(self): ...
    @property
    def DimStyles(self): ...
    @property
    def ElevationModelSpace(self): ...
    @property
    def ElevationPaperSpace(self): ...
    @property
    def FileDependencies(self): ...
    @property
    def Groups(self): ...
    @property
    def Layers(self): ...
    @property
    def Layouts(self): ...
    @property
    def Limits(self): ...
    @property
    def Linetypes(self): ...
    @property
    def Materials(self): ...
    @property
    def ModelSpace(self): ...
    @property
    def PaperSpace(self): ...
    @property
    def PlotConfigurations(self): ...
    @property
    def Preferences(self): ...
    @property
    def RegisteredApplications(self): ...
    @property
    def SectionManager(self): ...
    @property
    def SummaryInfo(self): ...
    @property
    def TextStyles(self): ...
    @property
    def UserCoordinateSystems(self): ...
    @property
    def Viewports(self): ...
    @property
    def Views(self): ...
    @ElevationModelSpace.setter
    def ElevationModelSpace(self, value) -> None: ...
    @ElevationPaperSpace.setter
    def ElevationPaperSpace(self, value) -> None: ...
    @Limits.setter
    def Limits(self, value) -> None: ...

class IZcadDatabasePreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AllowLongSymbolNames(self): ...
    @property
    def Application(self): ...
    @property
    def ContourLinesPerSurface(self): ...
    @property
    def DisplaySilhouette(self): ...
    @property
    def LineWeightDisplay(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaxActiveViewports(self): ...
    @property
    def OLELaunch(self): ...
    @property
    def ObjectSortByPSOutput(self): ...
    @property
    def ObjectSortByPlotting(self): ...
    @property
    def ObjectSortByRedraws(self): ...
    @property
    def ObjectSortByRegens(self): ...
    @property
    def ObjectSortBySelection(self): ...
    @property
    def ObjectSortBySnap(self): ...
    @property
    def RenderSmoothness(self): ...
    @property
    def SegmentPerPolyline(self): ...
    @property
    def SolidFill(self): ...
    @property
    def TextFrameDisplay(self): ...
    @property
    def XRefEdit(self): ...
    @property
    def XRefLayerVisibility(self): ...
    @AllowLongSymbolNames.setter
    def AllowLongSymbolNames(self, value) -> None: ...
    @ContourLinesPerSurface.setter
    def ContourLinesPerSurface(self, value) -> None: ...
    @DisplaySilhouette.setter
    def DisplaySilhouette(self, value) -> None: ...
    @LineWeightDisplay.setter
    def LineWeightDisplay(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaxActiveViewports.setter
    def MaxActiveViewports(self, value) -> None: ...
    @OLELaunch.setter
    def OLELaunch(self, value) -> None: ...
    @ObjectSortByPSOutput.setter
    def ObjectSortByPSOutput(self, value) -> None: ...
    @ObjectSortByPlotting.setter
    def ObjectSortByPlotting(self, value) -> None: ...
    @ObjectSortByRedraws.setter
    def ObjectSortByRedraws(self, value) -> None: ...
    @ObjectSortByRegens.setter
    def ObjectSortByRegens(self, value) -> None: ...
    @ObjectSortBySelection.setter
    def ObjectSortBySelection(self, value) -> None: ...
    @ObjectSortBySnap.setter
    def ObjectSortBySnap(self, value) -> None: ...
    @RenderSmoothness.setter
    def RenderSmoothness(self, value) -> None: ...
    @SegmentPerPolyline.setter
    def SegmentPerPolyline(self, value) -> None: ...
    @SolidFill.setter
    def SolidFill(self, value) -> None: ...
    @TextFrameDisplay.setter
    def TextFrameDisplay(self, value) -> None: ...
    @XRefEdit.setter
    def XRefEdit(self, value) -> None: ...
    @XRefLayerVisibility.setter
    def XRefLayerVisibility(self, value) -> None: ...
    
class IZcadDictionaries(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...    
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

class IZcadDictionary(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddObject(self, Keyword=..., ObjectName=...): ...
    def AddXRecord(self, Keyword=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetName(self, Object=...): ...
    def GetObject(self, Name=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Remove(self, Name=...): ...
    def Rename(self, OldName=..., NewName=...): ...
    def Replace(self, OldName=..., pObj=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @Name.setter
    def Name(self, value) -> None: ...

class IZcadDim3PointAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AngleFormat(self): ...
    @property
    def AngleVertex(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1EndPoint(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2EndPoint(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrecision(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @AngleFormat.setter
    def AngleFormat(self, value) -> None: ...
    @AngleVertex.setter
    def AngleVertex(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1EndPoint.setter
    def ExtLine1EndPoint(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2EndPoint.setter
    def ExtLine2EndPoint(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrecision.setter
    def TextPrecision(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcadDimAligned(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Point(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Point(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Point.setter
    def ExtLine1Point(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Point.setter
    def ExtLine2Point(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AngleFormat(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1EndPoint(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1StartPoint(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2EndPoint(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2StartPoint(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrecision(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AngleFormat.setter
    def AngleFormat(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1EndPoint.setter
    def ExtLine1EndPoint(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1StartPoint.setter
    def ExtLine1StartPoint(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2EndPoint.setter
    def ExtLine2EndPoint(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2StartPoint.setter
    def ExtLine2StartPoint(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrecision.setter
    def TextPrecision(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcadDimArcLength(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArcEndParam(self): ...
    @property
    def ArcPoint(self): ...
    @property
    def ArcStartParam(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def CenterPoint(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Point(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Point(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasLeader(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IsPartial(self): ...
    @property
    def Layer(self): ...
    @property
    def Leader1Point(self): ...
    @property
    def Leader2Point(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def SymbolPosition(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArcEndParam.setter
    def ArcEndParam(self, value) -> None: ...
    @ArcPoint.setter
    def ArcPoint(self, value) -> None: ...
    @ArcStartParam.setter
    def ArcStartParam(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @CenterPoint.setter
    def CenterPoint(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Point.setter
    def ExtLine1Point(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Point.setter
    def ExtLine2Point(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HasLeader.setter
    def HasLeader(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @IsPartial.setter
    def IsPartial(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Leader1Point.setter
    def Leader1Point(self, value) -> None: ...
    @Leader2Point.setter
    def Leader2Point(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @SymbolPosition.setter
    def SymbolPosition(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimDiametric(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLength.setter
    def LeaderLength(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimOrdinate(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimRadial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLineSuppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLineSuppress.setter
    def DimLineSuppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLength.setter
    def LeaderLength(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimRadialLarge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def Center(self): ...
    @property
    def CenterMarkSize(self): ...
    @property
    def CenterType(self): ...
    @property
    def ChordPoint(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimLineSuppress(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def JogAngle(self): ...
    @property
    def JogLocation(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OverrideCenter(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @CenterMarkSize.setter
    def CenterMarkSize(self, value) -> None: ...
    @CenterType.setter
    def CenterType(self, value) -> None: ...
    @ChordPoint.setter
    def ChordPoint(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimLineSuppress.setter
    def DimLineSuppress(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @JogAngle.setter
    def JogAngle(self, value) -> None: ...
    @JogLocation.setter
    def JogLocation(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @OverrideCenter.setter
    def OverrideCenter(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimRotated(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AltRoundDistance(self): ...
    @property
    def AltSubUnitsFactor(self): ...
    @property
    def AltSubUnitsSuffix(self): ...
    @property
    def AltSuppressLeadingZeros(self): ...
    @property
    def AltSuppressTrailingZeros(self): ...
    @property
    def AltSuppressZeroFeet(self): ...
    @property
    def AltSuppressZeroInches(self): ...
    @property
    def AltTextPrefix(self): ...
    @property
    def AltTextSuffix(self): ...
    @property
    def AltTolerancePrecision(self): ...
    @property
    def AltToleranceSuppressLeadingZeros(self): ...
    @property
    def AltToleranceSuppressTrailingZeros(self): ...
    @property
    def AltToleranceSuppressZeroFeet(self): ...
    @property
    def AltToleranceSuppressZeroInches(self): ...
    @property
    def AltUnits(self): ...
    @property
    def AltUnitsFormat(self): ...
    @property
    def AltUnitsPrecision(self): ...
    @property
    def AltUnitsScale(self): ...
    @property
    def Application(self): ...
    @property
    def Arrowhead1Block(self): ...
    @property
    def Arrowhead1Type(self): ...
    @property
    def Arrowhead2Block(self): ...
    @property
    def Arrowhead2Type(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimConstrDesc(self): ...
    @property
    def DimConstrExpression(self): ...
    @property
    def DimConstrForm(self): ...
    @property
    def DimConstrName(self): ...
    @property
    def DimConstrReference(self): ...
    @property
    def DimConstrValue(self): ...
    @property
    def DimLine1Suppress(self): ...
    @property
    def DimLine2Suppress(self): ...
    @property
    def DimLineInside(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineExtend(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def DimensionLinetype(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def ExtLine1Linetype(self): ...
    @property
    def ExtLine1Suppress(self): ...
    @property
    def ExtLine2Linetype(self): ...
    @property
    def ExtLine2Suppress(self): ...
    @property
    def ExtLineFixedLen(self): ...
    @property
    def ExtLineFixedLenSuppress(self): ...
    @property
    def ExtensionLineColor(self): ...
    @property
    def ExtensionLineExtend(self): ...
    @property
    def ExtensionLineOffset(self): ...
    @property
    def ExtensionLineWeight(self): ...
    @property
    def Fit(self): ...
    @property
    def ForceLineInside(self): ...
    @property
    def FractionFormat(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HorizontalTextPosition(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LinearScaleFactor(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Measurement(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrimaryUnitsPrecision(self): ...
    @property
    def Rotation(self): ...
    @property
    def RoundDistance(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SubUnitsFactor(self): ...
    @property
    def SubUnitsSuffix(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def SuppressZeroFeet(self): ...
    @property
    def SuppressZeroInches(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextInside(self): ...
    @property
    def TextInsideAlign(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOutsideAlign(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceSuppressZeroFeet(self): ...
    @property
    def ToleranceSuppressZeroInches(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnitsFormat(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AltRoundDistance.setter
    def AltRoundDistance(self, value) -> None: ...
    @AltSubUnitsFactor.setter
    def AltSubUnitsFactor(self, value) -> None: ...
    @AltSubUnitsSuffix.setter
    def AltSubUnitsSuffix(self, value) -> None: ...
    @AltSuppressLeadingZeros.setter
    def AltSuppressLeadingZeros(self, value) -> None: ...
    @AltSuppressTrailingZeros.setter
    def AltSuppressTrailingZeros(self, value) -> None: ...
    @AltSuppressZeroFeet.setter
    def AltSuppressZeroFeet(self, value) -> None: ...
    @AltSuppressZeroInches.setter
    def AltSuppressZeroInches(self, value) -> None: ...
    @AltTextPrefix.setter
    def AltTextPrefix(self, value) -> None: ...
    @AltTextSuffix.setter
    def AltTextSuffix(self, value) -> None: ...
    @AltTolerancePrecision.setter
    def AltTolerancePrecision(self, value) -> None: ...
    @AltToleranceSuppressLeadingZeros.setter
    def AltToleranceSuppressLeadingZeros(self, value) -> None: ...
    @AltToleranceSuppressTrailingZeros.setter
    def AltToleranceSuppressTrailingZeros(self, value) -> None: ...
    @AltToleranceSuppressZeroFeet.setter
    def AltToleranceSuppressZeroFeet(self, value) -> None: ...
    @AltToleranceSuppressZeroInches.setter
    def AltToleranceSuppressZeroInches(self, value) -> None: ...
    @AltUnits.setter
    def AltUnits(self, value) -> None: ...
    @AltUnitsFormat.setter
    def AltUnitsFormat(self, value) -> None: ...
    @AltUnitsPrecision.setter
    def AltUnitsPrecision(self, value) -> None: ...
    @AltUnitsScale.setter
    def AltUnitsScale(self, value) -> None: ...
    @Arrowhead1Block.setter
    def Arrowhead1Block(self, value) -> None: ...
    @Arrowhead1Type.setter
    def Arrowhead1Type(self, value) -> None: ...
    @Arrowhead2Block.setter
    def Arrowhead2Block(self, value) -> None: ...
    @Arrowhead2Type.setter
    def Arrowhead2Type(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimConstrDesc.setter
    def DimConstrDesc(self, value) -> None: ...
    @DimConstrExpression.setter
    def DimConstrExpression(self, value) -> None: ...
    @DimConstrForm.setter
    def DimConstrForm(self, value) -> None: ...
    @DimConstrName.setter
    def DimConstrName(self, value) -> None: ...
    @DimConstrReference.setter
    def DimConstrReference(self, value) -> None: ...
    @DimConstrValue.setter
    def DimConstrValue(self, value) -> None: ...
    @DimLine1Suppress.setter
    def DimLine1Suppress(self, value) -> None: ...
    @DimLine2Suppress.setter
    def DimLine2Suppress(self, value) -> None: ...
    @DimLineInside.setter
    def DimLineInside(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineExtend.setter
    def DimensionLineExtend(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @DimensionLinetype.setter
    def DimensionLinetype(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @ExtLine1Linetype.setter
    def ExtLine1Linetype(self, value) -> None: ...
    @ExtLine1Suppress.setter
    def ExtLine1Suppress(self, value) -> None: ...
    @ExtLine2Linetype.setter
    def ExtLine2Linetype(self, value) -> None: ...
    @ExtLine2Suppress.setter
    def ExtLine2Suppress(self, value) -> None: ...
    @ExtLineFixedLen.setter
    def ExtLineFixedLen(self, value) -> None: ...
    @ExtLineFixedLenSuppress.setter
    def ExtLineFixedLenSuppress(self, value) -> None: ...
    @ExtensionLineColor.setter
    def ExtensionLineColor(self, value) -> None: ...
    @ExtensionLineExtend.setter
    def ExtensionLineExtend(self, value) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, value) -> None: ...
    @ExtensionLineWeight.setter
    def ExtensionLineWeight(self, value) -> None: ...
    @Fit.setter
    def Fit(self, value) -> None: ...
    @ForceLineInside.setter
    def ForceLineInside(self, value) -> None: ...
    @FractionFormat.setter
    def FractionFormat(self, value) -> None: ...
    @HorizontalTextPosition.setter
    def HorizontalTextPosition(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LinearScaleFactor.setter
    def LinearScaleFactor(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @PrimaryUnitsPrecision.setter
    def PrimaryUnitsPrecision(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RoundDistance.setter
    def RoundDistance(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SubUnitsFactor.setter
    def SubUnitsFactor(self, value) -> None: ...
    @SubUnitsSuffix.setter
    def SubUnitsSuffix(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @SuppressZeroFeet.setter
    def SuppressZeroFeet(self, value) -> None: ...
    @SuppressZeroInches.setter
    def SuppressZeroInches(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextInside.setter
    def TextInside(self, value) -> None: ...
    @TextInsideAlign.setter
    def TextInsideAlign(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOutsideAlign.setter
    def TextOutsideAlign(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceSuppressZeroFeet.setter
    def ToleranceSuppressZeroFeet(self, value) -> None: ...
    @ToleranceSuppressZeroInches.setter
    def ToleranceSuppressZeroInches(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnitsFormat.setter
    def UnitsFormat(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDimStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, StyleSource=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Name.setter
    def Name(self, value) -> None: ...
    
class IZcadDimStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadDimension(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def DecimalSeparator(self): ...
    @property
    def DimTxtDirection(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def SuppressLeadingZeros(self): ...
    @property
    def SuppressTrailingZeros(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextFill(self): ...
    @property
    def TextFillColor(self): ...
    @property
    def TextGap(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextMovement(self): ...
    @property
    def TextOverride(self): ...
    @property
    def TextPosition(self): ...
    @property
    def TextPrefix(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextSuffix(self): ...
    @property
    def ToleranceDisplay(self): ...
    @property
    def ToleranceHeightScale(self): ...
    @property
    def ToleranceJustification(self): ...
    @property
    def ToleranceLowerLimit(self): ...
    @property
    def TolerancePrecision(self): ...
    @property
    def ToleranceSuppressLeadingZeros(self): ...
    @property
    def ToleranceSuppressTrailingZeros(self): ...
    @property
    def ToleranceUpperLimit(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @DecimalSeparator.setter
    def DecimalSeparator(self, value) -> None: ...
    @DimTxtDirection.setter
    def DimTxtDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @SuppressLeadingZeros.setter
    def SuppressLeadingZeros(self, value) -> None: ...
    @SuppressTrailingZeros.setter
    def SuppressTrailingZeros(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextFill.setter
    def TextFill(self, value) -> None: ...
    @TextFillColor.setter
    def TextFillColor(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextMovement.setter
    def TextMovement(self, value) -> None: ...
    @TextOverride.setter
    def TextOverride(self, value) -> None: ...
    @TextPosition.setter
    def TextPosition(self, value) -> None: ...
    @TextPrefix.setter
    def TextPrefix(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextSuffix.setter
    def TextSuffix(self, value) -> None: ...
    @ToleranceDisplay.setter
    def ToleranceDisplay(self, value) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, value) -> None: ...
    @ToleranceJustification.setter
    def ToleranceJustification(self, value) -> None: ...
    @ToleranceLowerLimit.setter
    def ToleranceLowerLimit(self, value) -> None: ...
    @TolerancePrecision.setter
    def TolerancePrecision(self, value) -> None: ...
    @ToleranceSuppressLeadingZeros.setter
    def ToleranceSuppressLeadingZeros(self, value) -> None: ...
    @ToleranceSuppressTrailingZeros.setter
    def ToleranceSuppressTrailingZeros(self, value) -> None: ...
    @ToleranceUpperLimit.setter
    def ToleranceUpperLimit(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDocument(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Activate(self): ...
    def AuditInfo(self, FixErr=...): ...
    def Close(self, SaveChanges=..., FileName=...): ...
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def EndUndoMark(self): ...
    def Export(self, FileName=..., Extension=..., SelectionSet=...): ...
    def GetVariable(self, Name=...): ...
    def HandleToObject(self, Handle=...): ...
    def Import(self, FileName=..., InsertionPoint=..., ScaleFactor=...): ...
    def LoadShapeFile(self, FullName=...): ...
    def New(self, TemplateFileName=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def Open(self, FullName=..., Password=...): ...
    def PostCommand(self, Command=...): ...
    def PurgeAll(self): ...
    def Regen(self, WhichViewports=...): ...
    def Save(self): ...
    def SaveAs(self, FullFileName=..., SaveAsType=..., vSecurityParams=...): ...
    def SendCommand(self, Command=...): ...
    def SetVariable(self, Name=..., Value=...): ...
    def StartUndoMark(self): ...
    def Wblock(self, FileName=..., SelectionSet=...): ...
    def __iter__(self): ...
    @property
    def Active(self): ...
    @property
    def ActiveDimStyle(self): ...
    @property
    def ActiveLayer(self): ...
    @property
    def ActiveLayout(self): ...
    @property
    def ActiveLinetype(self): ...
    @property
    def ActiveMaterial(self): ...
    @property
    def ActivePViewport(self): ...
    @property
    def ActiveSelectionSet(self): ...
    @property
    def ActiveSpace(self): ...
    @property
    def ActiveTextStyle(self): ...
    @property
    def ActiveUCS(self): ...
    @property
    def ActiveViewport(self): ...
    @property
    def Application(self): ...
    @property
    def Blocks(self): ...
    @property
    def Database(self): ...
    @property
    def Dictionaries(self): ...
    @property
    def DimStyles(self): ...
    @property
    def ElevationModelSpace(self): ...
    @property
    def ElevationPaperSpace(self): ...
    @property
    def FileDependencies(self): ...
    @property
    def FullName(self): ...
    @property
    def Groups(self): ...
    @property
    def HWND(self): ...
    @property
    def Height(self): ...
    @property
    def Layers(self): ...
    @property
    def Layouts(self): ...
    @property
    def Limits(self): ...
    @property
    def Linetypes(self): ...
    @property
    def MSpace(self): ...
    @property
    def Materials(self): ...
    @property
    def ModelSpace(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectSnapMode(self): ...
    @property
    def PaperSpace(self): ...
    @property
    def Path(self): ...
    @property
    def PickfirstSelectionSet(self): ...
    @property
    def Plot(self): ...
    @property
    def PlotConfigurations(self): ...
    @property
    def Preferences(self): ...
    @property
    def ReadOnly(self): ...
    @property
    def RegisteredApplications(self): ...
    @property
    def Saved(self): ...
    @property
    def SectionManager(self): ...
    @property
    def SelectionSets(self): ...
    @property
    def SummaryInfo(self): ...
    @property
    def TextStyles(self): ...
    @property
    def UserCoordinateSystems(self): ...
    @property
    def Utility(self): ...
    @property
    def Viewports(self): ...
    @property
    def Views(self): ...
    @property
    def Width(self): ...
    @property
    def WindowState(self): ...
    @property
    def WindowTitle(self): ...

    @ActiveDimStyle.setter
    def ActiveDimStyle(self, value) -> None: ...
    @ActiveLayer.setter
    def ActiveLayer(self, value) -> None: ...
    @ActiveLayout.setter
    def ActiveLayout(self, value) -> None: ...
    @ActiveLinetype.setter
    def ActiveLinetype(self, value) -> None: ...
    @ActiveMaterial.setter
    def ActiveMaterial(self, value) -> None: ...
    @ActivePViewport.setter
    def ActivePViewport(self, value) -> None: ...
    @ActiveSpace.setter
    def ActiveSpace(self, value) -> None: ...
    @ActiveTextStyle.setter
    def ActiveTextStyle(self, value) -> None: ...
    @ActiveUCS.setter
    def ActiveUCS(self, value) -> None: ...
    @ActiveViewport.setter
    def ActiveViewport(self, value) -> None: ...
    @ElevationModelSpace.setter
    def ElevationModelSpace(self, value) -> None: ...
    @ElevationPaperSpace.setter
    def ElevationPaperSpace(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Limits.setter
    def Limits(self, value) -> None: ...
    @MSpace.setter
    def MSpace(self, value) -> None: ...
    @ObjectSnapMode.setter
    def ObjectSnapMode(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @WindowState.setter
    def WindowState(self, value) -> None: ...
    
class IZcadDocuments(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, TemplateName=...): ...
    def Close(self): ...
    def CloseAll(self, AskSave: bool = ...): ...
    def Item(self, Index=...): ...
    def Open(self, File=..., ReadOnly=..., Password=...): ...
    def SaveAll(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...
    
class IZcadDwfUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AdjustForBackground(self): ...
    @property
    def Application(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def DWFFormat(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def File(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ItemName(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Monochrome(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnderlayLayerOverrideApplied(self): ...
    @property
    def UnderlayName(self): ...
    @property
    def UnderlayVisibility(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...

    @AdjustForBackground.setter
    def AdjustForBackground(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @DWFFormat.setter
    def DWFFormat(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @File.setter
    def File(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @ItemName.setter
    def ItemName(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Monochrome.setter
    def Monochrome(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnderlayLayerOverrideApplied.setter
    def UnderlayLayerOverrideApplied(self, value) -> None: ...
    @UnderlayName.setter
    def UnderlayName(self, value) -> None: ...
    @UnderlayVisibility.setter
    def UnderlayVisibility(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadDynamicBlockReferenceProperty(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def AllowedValues(self): ...
    @property
    def Description(self): ...
    @property
    def PropertyName(self): ...
    @property
    def ReadOnly(self): ...
    @property
    def UnitsType(self): ...
    @property
    def Value(self): ...
    @property
    def show(self): ...
    @Value.setter
    def Value(self, value) -> None: ...
    
class IZcadEllipse(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EndAngle(self): ...
    @property
    def EndParameter(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MajorAxis(self): ...
    @property
    def MajorRadius(self): ...
    @property
    def Material(self): ...
    @property
    def MinorAxis(self): ...
    @property
    def MinorRadius(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RadiusRatio(self): ...
    @property
    def StartAngle(self): ...
    @property
    def StartParameter(self): ...
    @property
    def StartPoint(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Center.setter
    def Center(self, value) -> None: ...
    @EndAngle.setter
    def EndAngle(self, value) -> None: ...
    @EndParameter.setter
    def EndParameter(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MajorAxis.setter
    def MajorAxis(self, value) -> None: ...
    @MajorRadius.setter
    def MajorRadius(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @MinorRadius.setter
    def MinorRadius(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RadiusRatio.setter
    def RadiusRatio(self, value) -> None: ...
    @StartAngle.setter
    def StartAngle(self, value) -> None: ...
    @StartParameter.setter
    def StartParameter(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...

class IZcadEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadExternalReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def LayerPropertyOverrides(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadExtrudedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TaperAngle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...

    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TaperAngle.setter
    def TaperAngle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadFileDependencies(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateEntry(self, Feature=..., FullFileName=..., AffectsGraphics=..., noIncrement=...): ...
    def IndexOf(self, Feature=..., FullFileName=...): ...
    def Item(self, Index=...): ...
    def RemoveEntry(self, Index=..., forceRemove=...): ...
    def UpdateEntry(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    
class IZcadFileDependency(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AffectsGraphics(self): ...
    @property
    def Feature(self): ...
    @property
    def FileName(self): ...
    @property
    def FileSize(self): ...
    @property
    def FingerprintGuid(self): ...
    @property
    def FoundPath(self): ...
    @property
    def FullFileName(self): ...
    @property
    def Index(self): ...
    @property
    def IsModified(self): ...
    @property
    def ReferenceCount(self): ...
    @property
    def TimeStamp(self): ...
    @property
    def VersionGuid(self): ...


class IZcadGeoPositionMarker(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Altitude(self): ...
    @property
    def Application(self): ...
    @property
    def BackgroundFill(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def DrawingDirection(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def LandingGap(self): ...
    @property
    def Latitude(self): ...
    @property
    def Layer(self): ...
    @property
    def LineSpacingDistance(self): ...
    @property
    def LineSpacingFactor(self): ...
    @property
    def LineSpacingStyle(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Longitude(self): ...
    @property
    def Material(self): ...
    @property
    def Notes(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def Radius(self): ...
    @property
    def Rotation(self): ...
    @property
    def TextFrameDisplay(self): ...
    @property
    def TextJustify(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyleName(self): ...
    @property
    def TextWidth(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Altitude.setter
    def Altitude(self, value) -> None: ...
    @BackgroundFill.setter
    def BackgroundFill(self, value) -> None: ...
    @DrawingDirection.setter
    def DrawingDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LandingGap.setter
    def LandingGap(self, value) -> None: ...
    @Latitude.setter
    def Latitude(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LineSpacingDistance.setter
    def LineSpacingDistance(self, value) -> None: ...
    @LineSpacingFactor.setter
    def LineSpacingFactor(self, value) -> None: ...
    @LineSpacingStyle.setter
    def LineSpacingStyle(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Longitude.setter
    def Longitude(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Notes.setter
    def Notes(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @Radius.setter
    def Radius(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @TextFrameDisplay.setter
    def TextFrameDisplay(self, value) -> None: ...
    @TextJustify.setter
    def TextJustify(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyleName.setter
    def TextStyleName(self, value) -> None: ...
    @TextWidth.setter
    def TextWidth(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...    
    
class IZcadGeomapImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Brightness(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def GeoImageBrightness(self): ...
    @property
    def GeoImageContrast(self): ...
    @property
    def GeoImageFade(self): ...
    @property
    def GeoImageHeight(self): ...
    @property
    def GeoImagePosition(self): ...
    @property
    def GeoImageWidth(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ImageFile(self): ...
    @property
    def ImageHeight(self): ...
    @property
    def ImageVisibility(self): ...
    @property
    def ImageWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def ShowRotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @property
    def transparency(self): ...

    @Brightness.setter
    def Brightness(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @GeoImageBrightness.setter
    def GeoImageBrightness(self, value) -> None: ...
    @GeoImageContrast.setter
    def GeoImageContrast(self, value) -> None: ...
    @GeoImageFade.setter
    def GeoImageFade(self, value) -> None: ...
    @ImageFile.setter
    def ImageFile(self, value) -> None: ...
    @ImageHeight.setter
    def ImageHeight(self, value) -> None: ...
    @ImageVisibility.setter
    def ImageVisibility(self, value) -> None: ...
    @ImageWidth.setter
    def ImageWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @ShowRotation.setter
    def ShowRotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @transparency.setter
    def transparency(self, value) -> None: ...
    
class IZcadGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendItems(self, Objects=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadHatch(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendInnerLoop(self, ObjectArray=...): ...
    def AppendOuterLoop(self, ObjectArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetLoopAt(self, Index=..., ObjectArray=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def InsertLoopAt(self, Index=..., LoopType=..., ObjectArray=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetPattern(self, PatternType=..., PatternName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def AssociativeHatch(self): ...
    @property
    def BackgroundColor(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def GradientAngle(self): ...
    @property
    def GradientCentered(self): ...
    @property
    def GradientColor1(self): ...
    @property
    def GradientColor2(self): ...
    @property
    def GradientName(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HatchObjectType(self): ...
    @property
    def HatchStyle(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ISOPenWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def NumberOfLoops(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PatternAngle(self): ...
    @property
    def PatternDouble(self): ...
    @property
    def PatternName(self): ...
    @property
    def PatternScale(self): ...
    @property
    def PatternSpace(self): ...
    @property
    def PatternType(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @AssociativeHatch.setter
    def AssociativeHatch(self, value) -> None: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @GradientAngle.setter
    def GradientAngle(self, value) -> None: ...
    @GradientCentered.setter
    def GradientCentered(self, value) -> None: ...
    @GradientColor1.setter
    def GradientColor1(self, value) -> None: ...
    @GradientColor2.setter
    def GradientColor2(self, value) -> None: ...
    @GradientName.setter
    def GradientName(self, value) -> None: ...
    @HatchObjectType.setter
    def HatchObjectType(self, value) -> None: ...
    @HatchStyle.setter
    def HatchStyle(self, value) -> None: ...
    @ISOPenWidth.setter
    def ISOPenWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PatternAngle.setter
    def PatternAngle(self, value) -> None: ...
    @PatternDouble.setter
    def PatternDouble(self, value) -> None: ...
    @PatternName.setter
    def PatternName(self, value) -> None: ...
    @PatternScale.setter
    def PatternScale(self, value) -> None: ...
    @PatternSpace.setter
    def PatternSpace(self, value) -> None: ...
    @PatternType.setter
    def PatternType(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadHelix(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BaseRadius(self): ...
    @property
    def Constrain(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def TopRadius(self): ...
    @property
    def TotalLength(self): ...
    @property
    def TrueColor(self): ...
    @property
    def TurnHeight(self): ...
    @property
    def TurnSlope(self): ...
    @property
    def Turns(self): ...
    @property
    def Twist(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @BaseRadius.setter
    def BaseRadius(self, value) -> None: ...
    @Constrain.setter
    def Constrain(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @TopRadius.setter
    def TopRadius(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @TurnHeight.setter
    def TurnHeight(self, value) -> None: ...
    @Turns.setter
    def Turns(self, value) -> None: ...
    @Twist.setter
    def Twist(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadHyperlink(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def URL(self): ...
    @property
    def URLDescription(self): ...
    @property
    def URLNamedLocation(self): ...

    @URL.setter
    def URL(self, value) -> None: ...
    @URLDescription.setter
    def URLDescription(self, value) -> None: ...
    @URLNamedLocation.setter
    def URLNamedLocation(self, value) -> None: ...
    
class IZcadHyperlinks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., Description=..., NamedLocation=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    
class IZcadIdPair(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def IsCloned(self): ...
    @property
    def IsOwnerXlated(self): ...
    @property
    def IsPrimary(self): ...
    @property
    def Value(self): ...
    @property
    def key(self): ...
    
class IZcadLWPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, Index=..., vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def ConstantWidth(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeGeneration(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Closed.setter
    def Closed(self, value) -> None: ...
    @ConstantWidth.setter
    def ConstantWidth(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeGeneration.setter
    def LinetypeGeneration(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadLayer(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Freeze(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def LayerOn(self): ...
    @property
    def Linetype(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Lock(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Plottable(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Used(self): ...
    @property
    def ViewportDefault(self): ...
    @property
    def color(self): ...

    @Description.setter
    def Description(self, value) -> None: ...
    @Freeze.setter
    def Freeze(self, value) -> None: ...
    @LayerOn.setter
    def LayerOn(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Lock.setter
    def Lock(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Plottable.setter
    def Plottable(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @ViewportDefault.setter
    def ViewportDefault(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadLayerStateManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self, bsName=...): ...
    def Export(self, bsName=..., bsFilename=...): ...
    def Import(self, bsFilename=...): ...
    def Mask(self, bsName=...): ...
    def Rename(self, bsName=..., bsNewName=...): ...
    def Restore(self, bsName=...): ...
    def Save(self, bsName=..., eMask=...): ...
    def SetDatabase(self, iHostDb=...): ...
    def SetMask(self, bsName=..., arg1=...): ...
    def __iter__(self): ...

class IZcadLayers(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateUsageData(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadLayout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Block(self): ...
    @property
    def CanonicalMediaName(self): ...
    @property
    def CenterPlot(self): ...
    @property
    def ConfigName(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ModelType(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PaperUnits(self): ...
    @property
    def PlotHidden(self): ...
    @property
    def PlotOrigin(self): ...
    @property
    def PlotRotation(self): ...
    @property
    def PlotType(self): ...
    @property
    def PlotViewportBorders(self): ...
    @property
    def PlotViewportsFirst(self): ...
    @property
    def PlotWithLineweights(self): ...
    @property
    def PlotWithPlotStyles(self): ...
    @property
    def ScaleLineweights(self): ...
    @property
    def ShowPlotStyles(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def TabOrder(self): ...
    @property
    def UseStandardScale(self): ...
    @property
    def ViewToPlot(self): ...
    @CanonicalMediaName.setter
    def CanonicalMediaName(self, value) -> None: ...
    @CenterPlot.setter
    def CenterPlot(self, value) -> None: ...
    @ConfigName.setter
    def ConfigName(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PaperUnits.setter
    def PaperUnits(self, value) -> None: ...
    @PlotHidden.setter
    def PlotHidden(self, value) -> None: ...
    @PlotOrigin.setter
    def PlotOrigin(self, value) -> None: ...
    @PlotRotation.setter
    def PlotRotation(self, value) -> None: ...
    @PlotType.setter
    def PlotType(self, value) -> None: ...
    @PlotViewportBorders.setter
    def PlotViewportBorders(self, value) -> None: ...
    @PlotViewportsFirst.setter
    def PlotViewportsFirst(self, value) -> None: ...
    @PlotWithLineweights.setter
    def PlotWithLineweights(self, value) -> None: ...
    @PlotWithPlotStyles.setter
    def PlotWithPlotStyles(self, value) -> None: ...
    @ScaleLineweights.setter
    def ScaleLineweights(self, value) -> None: ...
    @ShowPlotStyles.setter
    def ShowPlotStyles(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @TabOrder.setter
    def TabOrder(self, value) -> None: ...
    @UseStandardScale.setter
    def UseStandardScale(self, value) -> None: ...
    @ViewToPlot.setter
    def ViewToPlot(self, value) -> None: ...
    
class IZcadLayouts(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Annotation(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DimensionLineWeight(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextGap(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def VerticalTextPosition(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Annotation.setter
    def Annotation(self, value) -> None: ...
    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DimensionLineWeight.setter
    def DimensionLineWeight(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextGap.setter
    def TextGap(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @VerticalTextPosition.setter
    def VerticalTextPosition(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Angle(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Delta(self): ...
    @property
    def Document(self): ...
    @property
    def EndPoint(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def StartPoint(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @EndPoint.setter
    def EndPoint(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @StartPoint.setter
    def StartPoint(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadLineType(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Description.setter
    def Description(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    
class IZcadLineTypes(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Load(self, Name=..., FileName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadLoftedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Closed(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EndDraftAngle(self): ...
    @property
    def EndDraftMagnitude(self): ...
    @property
    def EndSmoothContinuity(self): ...
    @property
    def EndSmoothMagnitude(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def NumCrossSections(self): ...
    @property
    def NumGuidePaths(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Periodic(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def StartDraftAngle(self): ...
    @property
    def StartDraftMagnitude(self): ...
    @property
    def StartSmoothContinuity(self): ...
    @property
    def StartSmoothMagnitude(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceNormals(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...

    @Closed.setter
    def Closed(self, value) -> None: ...
    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EndDraftAngle.setter
    def EndDraftAngle(self, value) -> None: ...
    @EndDraftMagnitude.setter
    def EndDraftMagnitude(self, value) -> None: ...
    @EndSmoothContinuity.setter
    def EndSmoothContinuity(self, value) -> None: ...
    @EndSmoothMagnitude.setter
    def EndSmoothMagnitude(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Periodic.setter
    def Periodic(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @StartDraftAngle.setter
    def StartDraftAngle(self, value) -> None: ...
    @StartDraftMagnitude.setter
    def StartDraftMagnitude(self, value) -> None: ...
    @StartSmoothContinuity.setter
    def StartSmoothContinuity(self, value) -> None: ...
    @StartSmoothMagnitude.setter
    def StartSmoothMagnitude(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @SurfaceNormals.setter
    def SurfaceNormals(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMInsertBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ColumnSpacing(self): ...
    @property
    def Columns(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EffectiveName(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasAttributes(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsUnits(self): ...
    @property
    def InsUnitsFactor(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def RowSpacing(self): ...
    @property
    def Rows(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def XEffectiveScaleFactor(self): ...
    @property
    def XScaleFactor(self): ...
    @property
    def YEffectiveScaleFactor(self): ...
    @property
    def YScaleFactor(self): ...
    @property
    def ZEffectiveScaleFactor(self): ...
    @property
    def ZScaleFactor(self): ...
    @property
    def color(self): ...

    @ColumnSpacing.setter
    def ColumnSpacing(self, value) -> None: ...
    @Columns.setter
    def Columns(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @RowSpacing.setter
    def RowSpacing(self, value) -> None: ...
    @Rows.setter
    def Rows(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @XEffectiveScaleFactor.setter
    def XEffectiveScaleFactor(self, value) -> None: ...
    @XScaleFactor.setter
    def XScaleFactor(self, value) -> None: ...
    @YEffectiveScaleFactor.setter
    def YEffectiveScaleFactor(self, value) -> None: ...
    @YScaleFactor.setter
    def YScaleFactor(self, value) -> None: ...
    @ZEffectiveScaleFactor.setter
    def ZEffectiveScaleFactor(self, value) -> None: ...
    @ZScaleFactor.setter
    def ZScaleFactor(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddLeader(self): ...
    def AddLeaderLine(self, leaderIndex=..., pointArray=...): ...
    def AddLeaderLineEx(self, pointArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBlockAttributeValue(self, attdefId=...): ...
    def GetBlockAttributeValue32(self, attdefId=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetDoglegDirection(self, leaderIndex=...): ...
    def GetExtensionDictionary(self): ...
    def GetLeaderIndex(self, leaderLineIndex=...): ...
    def GetLeaderLineIndexes(self, leaderIndex=...): ...
    def GetLeaderLineVertices(self, leaderLineIndex=...): ...
    def GetVertexCount(self, leaderLineIndex=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveLeader(self, leaderIndex=...): ...
    def RemoveLeaderLine(self, leaderLineIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBlockAttributeValue(self, attdefId=..., Value=...): ...
    def SetBlockAttributeValue32(self, attdefId=..., Value=...): ...
    def SetDoglegDirection(self, leaderIndex=..., dirVec=...): ...
    def SetLeaderLineVertices(self, leaderLineIndex=..., pointArray=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def BlockConnectionType(self): ...
    @property
    def BlockScale(self): ...
    @property
    def ContentBlockName(self): ...
    @property
    def ContentBlockType(self): ...
    @property
    def ContentType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def DogLegged(self): ...
    @property
    def DoglegLength(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def LandingGap(self): ...
    @property
    def Layer(self): ...
    @property
    def LeaderCount(self): ...
    @property
    def LeaderLineColor(self): ...
    @property
    def LeaderLineWeight(self): ...
    @property
    def LeaderLinetype(self): ...
    @property
    def LeaderType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextAttachmentDirection(self): ...
    @property
    def TextBackgroundFill(self): ...
    @property
    def TextBottomAttachmentType(self): ...
    @property
    def TextDirection(self): ...
    @property
    def TextFrameDisplay(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextJustify(self): ...
    @property
    def TextLeftAttachmentType(self): ...
    @property
    def TextLineSpacingDistance(self): ...
    @property
    def TextLineSpacingFactor(self): ...
    @property
    def TextLineSpacingStyle(self): ...
    @property
    def TextRightAttachmentType(self): ...
    @property
    def TextRotation(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyleName(self): ...
    @property
    def TextTopAttachmentType(self): ...
    @property
    def TextWidth(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @BlockConnectionType.setter
    def BlockConnectionType(self, value) -> None: ...
    @BlockScale.setter
    def BlockScale(self, value) -> None: ...
    @ContentBlockName.setter
    def ContentBlockName(self, value) -> None: ...
    @ContentBlockType.setter
    def ContentBlockType(self, value) -> None: ...
    @ContentType.setter
    def ContentType(self, value) -> None: ...
    @DogLegged.setter
    def DogLegged(self, value) -> None: ...
    @DoglegLength.setter
    def DoglegLength(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @LandingGap.setter
    def LandingGap(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LeaderLineColor.setter
    def LeaderLineColor(self, value) -> None: ...
    @LeaderLineWeight.setter
    def LeaderLineWeight(self, value) -> None: ...
    @LeaderLinetype.setter
    def LeaderLinetype(self, value) -> None: ...
    @LeaderType.setter
    def LeaderType(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextAttachmentDirection.setter
    def TextAttachmentDirection(self, value) -> None: ...
    @TextBackgroundFill.setter
    def TextBackgroundFill(self, value) -> None: ...
    @TextBottomAttachmentType.setter
    def TextBottomAttachmentType(self, value) -> None: ...
    @TextDirection.setter
    def TextDirection(self, value) -> None: ...
    @TextFrameDisplay.setter
    def TextFrameDisplay(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextJustify.setter
    def TextJustify(self, value) -> None: ...
    @TextLeftAttachmentType.setter
    def TextLeftAttachmentType(self, value) -> None: ...
    @TextLineSpacingDistance.setter
    def TextLineSpacingDistance(self, value) -> None: ...
    @TextLineSpacingFactor.setter
    def TextLineSpacingFactor(self, value) -> None: ...
    @TextLineSpacingStyle.setter
    def TextLineSpacingStyle(self, value) -> None: ...
    @TextRightAttachmentType.setter
    def TextRightAttachmentType(self, value) -> None: ...
    @TextRotation.setter
    def TextRotation(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyleName.setter
    def TextStyleName(self, value) -> None: ...
    @TextTopAttachmentType.setter
    def TextTopAttachmentType(self, value) -> None: ...
    @TextWidth.setter
    def TextWidth(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMLeaderLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def ArrowheadBlock(self): ...
    @property
    def ArrowheadSize(self): ...
    @property
    def ArrowheadType(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def LeaderLineColor(self): ...
    @property
    def LeaderLineWeight(self): ...
    @property
    def LeaderLinetype(self): ...
    @property
    def LeaderType(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @ArrowheadBlock.setter
    def ArrowheadBlock(self, value) -> None: ...
    @ArrowheadSize.setter
    def ArrowheadSize(self, value) -> None: ...
    @ArrowheadType.setter
    def ArrowheadType(self, value) -> None: ...
    @LeaderLineColor.setter
    def LeaderLineColor(self, value) -> None: ...
    @LeaderLineWeight.setter
    def LeaderLineWeight(self, value) -> None: ...
    @LeaderLinetype.setter
    def LeaderLinetype(self, value) -> None: ...
    @LeaderType.setter
    def LeaderType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMLeaderStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def AlignSpace(self): ...
    @property
    def Annotative(self): ...
    @property
    def Application(self): ...
    @property
    def ArrowSize(self): ...
    @property
    def ArrowSymbol(self): ...
    @property
    def BitFlags(self): ...
    @property
    def Block(self): ...
    @property
    def BlockColor(self): ...
    @property
    def BlockConnectionType(self): ...
    @property
    def BlockRotation(self): ...
    @property
    def BlockScale(self): ...
    @property
    def BreakSize(self): ...
    @property
    def ContentType(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def DoglegLength(self): ...
    @property
    def DrawLeaderOrderType(self): ...
    @property
    def DrawMLeaderOrderType(self): ...
    @property
    def EnableBlockRotation(self): ...
    @property
    def EnableBlockScale(self): ...
    @property
    def EnableDogleg(self): ...
    @property
    def EnableFrameText(self): ...
    @property
    def EnableLanding(self): ...
    @property
    def FirstSegmentAngleConstraint(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def LandingGap(self): ...
    @property
    def LeaderLineColor(self): ...
    @property
    def LeaderLineTypeId(self): ...
    @property
    def LeaderLineWeight(self): ...
    @property
    def LeaderLinetype(self): ...
    @property
    def MaxLeaderSegmentsPoints(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OverwritePropChanged(self): ...
    @property
    def OwnerID(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def SecondSegmentAngleConstraint(self): ...
    @property
    def TextAlignmentType(self): ...
    @property
    def TextAngleType(self): ...
    @property
    def TextAttachmentDirection(self): ...
    @property
    def TextBottomAttachmentType(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextLeftAttachmentType(self): ...
    @property
    def TextRightAttachmentType(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TextTopAttachmentType(self): ...

    @AlignSpace.setter
    def AlignSpace(self, value) -> None: ...
    @Annotative.setter
    def Annotative(self, value) -> None: ...
    @ArrowSize.setter
    def ArrowSize(self, value) -> None: ...
    @ArrowSymbol.setter
    def ArrowSymbol(self, value) -> None: ...
    @BitFlags.setter
    def BitFlags(self, value) -> None: ...
    @Block.setter
    def Block(self, value) -> None: ...
    @BlockColor.setter
    def BlockColor(self, value) -> None: ...
    @BlockConnectionType.setter
    def BlockConnectionType(self, value) -> None: ...
    @BlockRotation.setter
    def BlockRotation(self, value) -> None: ...
    @BlockScale.setter
    def BlockScale(self, value) -> None: ...
    @BreakSize.setter
    def BreakSize(self, value) -> None: ...
    @ContentType.setter
    def ContentType(self, value) -> None: ...
    @Description.setter
    def Description(self, value) -> None: ...
    @DoglegLength.setter
    def DoglegLength(self, value) -> None: ...
    @DrawLeaderOrderType.setter
    def DrawLeaderOrderType(self, value) -> None: ...
    @DrawMLeaderOrderType.setter
    def DrawMLeaderOrderType(self, value) -> None: ...
    @EnableBlockRotation.setter
    def EnableBlockRotation(self, value) -> None: ...
    @EnableBlockScale.setter
    def EnableBlockScale(self, value) -> None: ...
    @EnableDogleg.setter
    def EnableDogleg(self, value) -> None: ...
    @EnableFrameText.setter
    def EnableFrameText(self, value) -> None: ...
    @EnableLanding.setter
    def EnableLanding(self, value) -> None: ...
    @FirstSegmentAngleConstraint.setter
    def FirstSegmentAngleConstraint(self, value) -> None: ...
    @LandingGap.setter
    def LandingGap(self, value) -> None: ...
    @LeaderLineColor.setter
    def LeaderLineColor(self, value) -> None: ...
    @LeaderLineTypeId.setter
    def LeaderLineTypeId(self, value) -> None: ...
    @LeaderLineWeight.setter
    def LeaderLineWeight(self, value) -> None: ...
    @LeaderLinetype.setter
    def LeaderLinetype(self, value) -> None: ...
    @MaxLeaderSegmentsPoints.setter
    def MaxLeaderSegmentsPoints(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @SecondSegmentAngleConstraint.setter
    def SecondSegmentAngleConstraint(self, value) -> None: ...
    @TextAlignmentType.setter
    def TextAlignmentType(self, value) -> None: ...
    @TextAngleType.setter
    def TextAngleType(self, value) -> None: ...
    @TextAttachmentDirection.setter
    def TextAttachmentDirection(self, value) -> None: ...
    @TextBottomAttachmentType.setter
    def TextBottomAttachmentType(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextLeftAttachmentType.setter
    def TextLeftAttachmentType(self, value) -> None: ...
    @TextRightAttachmentType.setter
    def TextRightAttachmentType(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TextTopAttachmentType.setter
    def TextTopAttachmentType(self, value) -> None: ...

class IZcadMLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Justification(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MLineScale(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def StyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Justification.setter
    def Justification(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MLineScale.setter
    def MLineScale(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AttachmentPoint(self): ...
    @property
    def BackgroundFill(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def DrawingDirection(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def LineSpacingDistance(self): ...
    @property
    def LineSpacingFactor(self): ...
    @property
    def LineSpacingStyle(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextString(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...

    @AttachmentPoint.setter
    def AttachmentPoint(self, value) -> None: ...
    @BackgroundFill.setter
    def BackgroundFill(self, value) -> None: ...
    @DrawingDirection.setter
    def DrawingDirection(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LineSpacingDistance.setter
    def LineSpacingDistance(self, value) -> None: ...
    @LineSpacingFactor.setter
    def LineSpacingFactor(self, value) -> None: ...
    @LineSpacingStyle.setter
    def LineSpacingStyle(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadMaterial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Description.setter
    def Description(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    
class IZcadMaterials(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadMenuBar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...
    
class IZcadMenuGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Save(self, MenuFileType=...): ...
    def SaveAs(self, MenuFileName=..., MenuFileType=...): ...
    def Unload(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def MenuFileName(self): ...
    @property
    def Menus(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def Toolbars(self): ...
    @property
    def Type(self): ...
    
class IZcadMenuGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Item(self, Index=...): ...
    def Load(self, MenuFileName=..., BaseMenu=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...
    
class IZcadModelSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...

    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...
    
class IZcadModelSpace2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...

    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...
    
class IZcadNurbSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CvHullDisplay(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...

    @CvHullDisplay.setter
    def CvHullDisplay(self, value) -> None: ...
    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadObject(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadOle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LockAspectRatio(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OleItemType(self): ...
    @property
    def OlePlotQuality(self): ...
    @property
    def OleSourceApp(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleHeight(self): ...
    @property
    def ScaleWidth(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LockAspectRatio.setter
    def LockAspectRatio(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @OleItemType.setter
    def OleItemType(self, value) -> None: ...
    @OlePlotQuality.setter
    def OlePlotQuality(self, value) -> None: ...
    @OleSourceApp.setter
    def OleSourceApp(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleHeight.setter
    def ScaleHeight(self, value) -> None: ...
    @ScaleWidth.setter
    def ScaleWidth(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Display(self, bStatus=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SyncModelView(self): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcSmoothness(self): ...
    @property
    def Center(self): ...
    @property
    def Clipped(self): ...
    @property
    def CustomScale(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def DisplayLocked(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def GridOn(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasSheetView(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def LabelBlockId(self): ...
    @property
    def Layer(self): ...
    @property
    def LayerPropertyOverrides(self): ...
    @property
    def LensLength(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ModelView(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RemoveHiddenLines(self): ...
    @property
    def ShadePlot(self): ...
    @property
    def SheetView(self): ...
    @property
    def SnapBasePoint(self): ...
    @property
    def SnapOn(self): ...
    @property
    def SnapRotationAngle(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StandardScale2(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def Target(self): ...
    @property
    def TrueColor(self): ...
    @property
    def TwistAngle(self): ...
    @property
    def UCSIconAtOrigin(self): ...
    @property
    def UCSIconOn(self): ...
    @property
    def UCSPerViewport(self): ...
    @property
    def ViewportOn(self): ...
    @property
    def Visible(self): ...
    @property
    def VisualStyle(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...

    @ArcSmoothness.setter
    def ArcSmoothness(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @CustomScale.setter
    def CustomScale(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @DisplayLocked.setter
    def DisplayLocked(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @GridOn.setter
    def GridOn(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LabelBlockId.setter
    def LabelBlockId(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @LensLength.setter
    def LensLength(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @ModelView.setter
    def ModelView(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RemoveHiddenLines.setter
    def RemoveHiddenLines(self, value) -> None: ...
    @ShadePlot.setter
    def ShadePlot(self, value) -> None: ...
    @SheetView.setter
    def SheetView(self, value) -> None: ...
    @SnapBasePoint.setter
    def SnapBasePoint(self, value) -> None: ...
    @SnapOn.setter
    def SnapOn(self, value) -> None: ...
    @SnapRotationAngle.setter
    def SnapRotationAngle(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StandardScale2.setter
    def StandardScale2(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @TwistAngle.setter
    def TwistAngle(self, value) -> None: ...
    @UCSIconAtOrigin.setter
    def UCSIconAtOrigin(self, value) -> None: ...
    @UCSIconOn.setter
    def UCSIconOn(self, value) -> None: ...
    @UCSPerViewport.setter
    def UCSPerViewport(self, value) -> None: ...
    @ViewportOn.setter
    def ViewportOn(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @VisualStyle.setter
    def VisualStyle(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPaperSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPViewport(self, Center=..., Width=..., Height=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def BlockScaling(self): ...
    @property
    def Comments(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Explodable(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def IsDynamicBlock(self): ...
    @property
    def IsLayout(self): ...
    @property
    def IsXRef(self): ...
    @property
    def Layout(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def Units(self): ...
    @property
    def XRefDatabase(self): ...

    @BlockScaling.setter
    def BlockScaling(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @Explodable.setter
    def Explodable(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @Path.setter
    def Path(self, value) -> None: ...
    @Units.setter
    def Units(self, value) -> None: ...
    
class IZcadPlaneSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...

    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPlot(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def DisplayPlotPreview(self, Preview=...): ...
    def PlotToDevice(self, plotConfig=...): ...
    def PlotToFile(self, plotFile=..., plotConfig=...): ...
    def SetLayoutsToPlot(self, layoutList=...): ...
    def StartBatchMode(self, entryCount=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BatchPlotProgress(self): ...
    @property
    def NumberOfCopies(self): ...
    @property
    def QuietErrorMode(self): ...

    @BatchPlotProgress.setter
    def BatchPlotProgress(self, value) -> None: ...
    @NumberOfCopies.setter
    def NumberOfCopies(self, value) -> None: ...
    @QuietErrorMode.setter
    def QuietErrorMode(self, value) -> None: ...
    
class IZcadPlotConfiguration(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CanonicalMediaName(self): ...
    @property
    def CenterPlot(self): ...
    @property
    def ConfigName(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ModelType(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PaperUnits(self): ...
    @property
    def PlotHidden(self): ...
    @property
    def PlotOrigin(self): ...
    @property
    def PlotRotation(self): ...
    @property
    def PlotType(self): ...
    @property
    def PlotViewportBorders(self): ...
    @property
    def PlotViewportsFirst(self): ...
    @property
    def PlotWithLineweights(self): ...
    @property
    def PlotWithPlotStyles(self): ...
    @property
    def ScaleLineweights(self): ...
    @property
    def ShowPlotStyles(self): ...
    @property
    def StandardScale(self): ...
    @property
    def StyleSheet(self): ...
    @property
    def UseStandardScale(self): ...
    @property
    def ViewToPlot(self): ...

    @CanonicalMediaName.setter
    def CanonicalMediaName(self, value) -> None: ...
    @CenterPlot.setter
    def CenterPlot(self, value) -> None: ...
    @ConfigName.setter
    def ConfigName(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PaperUnits.setter
    def PaperUnits(self, value) -> None: ...
    @PlotHidden.setter
    def PlotHidden(self, value) -> None: ...
    @PlotOrigin.setter
    def PlotOrigin(self, value) -> None: ...
    @PlotRotation.setter
    def PlotRotation(self, value) -> None: ...
    @PlotType.setter
    def PlotType(self, value) -> None: ...
    @PlotViewportBorders.setter
    def PlotViewportBorders(self, value) -> None: ...
    @PlotViewportsFirst.setter
    def PlotViewportsFirst(self, value) -> None: ...
    @PlotWithLineweights.setter
    def PlotWithLineweights(self, value) -> None: ...
    @PlotWithPlotStyles.setter
    def PlotWithPlotStyles(self, value) -> None: ...
    @ScaleLineweights.setter
    def ScaleLineweights(self, value) -> None: ...
    @ShowPlotStyles.setter
    def ShowPlotStyles(self, value) -> None: ...
    @StandardScale.setter
    def StandardScale(self, value) -> None: ...
    @StyleSheet.setter
    def StyleSheet(self, value) -> None: ...
    @UseStandardScale.setter
    def UseStandardScale(self, value) -> None: ...
    @ViewToPlot.setter
    def ViewToPlot(self, value) -> None: ...
    
class IZcadPlotConfigurations(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., ModelType=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadPoint(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPointCloud(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def IntensityColorScheme(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Locked(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ShowClipped(self): ...
    @property
    def ShowIntensity(self): ...
    @property
    def Stylization(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Unit(self): ...
    @property
    def UnitFactor(self): ...
    @property
    def UseEntityColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @IntensityColorScheme.setter
    def IntensityColorScheme(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Length.setter
    def Length(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Locked.setter
    def Locked(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ShowClipped.setter
    def ShowClipped(self, value) -> None: ...
    @ShowIntensity.setter
    def ShowIntensity(self, value) -> None: ...
    @Stylization.setter
    def Stylization(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UseEntityColor.setter
    def UseEntityColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...
    
class IZcadPointCloudEx(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ColorScheme(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Geolocate(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Locked(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ShowCropped(self): ...
    @property
    def Stylization(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Unit(self): ...
    @property
    def UnitFactor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...

    @ColorScheme.setter
    def ColorScheme(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Geolocate.setter
    def Geolocate(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Locked.setter
    def Locked(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ShowCropped.setter
    def ShowCropped(self, value) -> None: ...
    @Stylization.setter
    def Stylization(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...
    
class IZcadPointCloudEx2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ColorScheme(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Geolocate(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Locked(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Path(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def Segmentation(self): ...
    @property
    def ShowCropped(self): ...
    @property
    def Stylization(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Unit(self): ...
    @property
    def UnitFactor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...

    @ColorScheme.setter
    def ColorScheme(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Geolocate.setter
    def Geolocate(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Locked.setter
    def Locked(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ShowCropped.setter
    def ShowCropped(self, value) -> None: ...
    @Stylization.setter
    def Stylization(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...
    
class IZcadPolyfaceMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def NumberOfFaces(self): ...
    @property
    def NumberOfVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Faces.setter
    def Faces(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPolygonMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MClose(self): ...
    @property
    def MDensity(self): ...
    @property
    def MVertexCount(self): ...
    @property
    def Material(self): ...
    @property
    def NClose(self): ...
    @property
    def NDensity(self): ...
    @property
    def NVertexCount(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MClose.setter
    def MClose(self, value) -> None: ...
    @MDensity.setter
    def MDensity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @NClose.setter
    def NClose(self, value) -> None: ...
    @NDensity.setter
    def NDensity(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def ConstantWidth(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeGeneration(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Type(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Closed.setter
    def Closed(self, value) -> None: ...
    @ConstantWidth.setter
    def ConstantWidth(self, value) -> None: ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeGeneration.setter
    def LinetypeGeneration(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Type.setter
    def Type(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadPopupMenu(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddMenuItem(self, Index=..., Label=..., Macro=...): ...
    def AddSeparator(self, Index=...): ...
    def AddSubMenu(self, Index=..., Label=...): ...
    def InsertInMenuBar(self, Index=...): ...
    def Item(self, Index=...): ...
    def RemoveFromMenuBar(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Name(self): ...
    @property
    def NameNoMnemonic(self): ...
    @property
    def OnMenuBar(self): ...
    @property
    def Parent(self): ...
    @property
    def ShortcutMenu(self): ...
    @property
    def TagString(self): ...

    @Name.setter
    def Name(self, value) -> None: ...
    
class IZcadPopupMenuItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Caption(self): ...
    @property
    def Check(self): ...
    @property
    def Enable(self): ...
    @property
    def EndSubMenuLevel(self): ...
    @property
    def HelpString(self): ...
    @property
    def Index(self): ...
    @property
    def Label(self): ...
    @property
    def Macro(self): ...
    @property
    def Parent(self): ...
    @property
    def SubMenu(self): ...
    @property
    def TagString(self): ...
    @property
    def Type(self): ...

    @Check.setter
    def Check(self, value) -> None: ...
    @Enable.setter
    def Enable(self, value) -> None: ...
    @EndSubMenuLevel.setter
    def EndSubMenuLevel(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Label.setter
    def Label(self, value) -> None: ...
    @Macro.setter
    def Macro(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    
class IZcadPopupMenus(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, MenuName=...): ...
    def InsertMenuInMenuBar(self, MenuName=..., Index=...): ...
    def Item(self, Index=...): ...
    def RemoveMenuFromMenuBar(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Parent(self): ...
    
class IZcadPreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Display(self): ...
    @property
    def Drafting(self): ...
    @property
    def Files(self): ...
    @property
    def OpenSave(self): ...
    @property
    def Output(self): ...
    @property
    def Profiles(self): ...
    @property
    def Selection(self): ...
    @property
    def System(self): ...
    @property
    def User(self): ...
    
class IZcadPreferencesDisplay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutoTrackingVecColor(self): ...
    @property
    def CursorSize(self): ...
    @property
    def DisplayLayoutTabs(self): ...
    @property
    def DisplayScreenMenu(self): ...
    @property
    def DisplayScrollBars(self): ...
    @property
    def DockedVisibleLines(self): ...
    @property
    def GraphicsWinLayoutBackgrndColor(self): ...
    @property
    def GraphicsWinModelBackgrndColor(self): ...
    @property
    def HistoryLines(self): ...
    @property
    def ImageFrameHighlight(self): ...
    @property
    def LayoutCreateViewport(self): ...
    @property
    def LayoutCrosshairColor(self): ...
    @property
    def LayoutDisplayMargins(self): ...
    @property
    def LayoutDisplayPaper(self): ...
    @property
    def LayoutDisplayPaperShadow(self): ...
    @property
    def LayoutShowPlotSetup(self): ...
    @property
    def MaxZWCADWindow(self): ...
    @property
    def ModelCrosshairColor(self): ...
    @property
    def ShowRasterImage(self): ...
    @property
    def TextFont(self): ...
    @property
    def TextFontSize(self): ...
    @property
    def TextFontStyle(self): ...
    @property
    def TextWinBackgrndColor(self): ...
    @property
    def TextWinTextColor(self): ...
    @property
    def TrueColorImages(self): ...
    @property
    def XRefFadeIntensity(self): ...

    @AutoTrackingVecColor.setter
    def AutoTrackingVecColor(self, value) -> None: ...
    @CursorSize.setter
    def CursorSize(self, value) -> None: ...
    @DisplayLayoutTabs.setter
    def DisplayLayoutTabs(self, value) -> None: ...
    @DisplayScreenMenu.setter
    def DisplayScreenMenu(self, value) -> None: ...
    @DisplayScrollBars.setter
    def DisplayScrollBars(self, value) -> None: ...
    @DockedVisibleLines.setter
    def DockedVisibleLines(self, value) -> None: ...
    @GraphicsWinLayoutBackgrndColor.setter
    def GraphicsWinLayoutBackgrndColor(self, value) -> None: ...
    @GraphicsWinModelBackgrndColor.setter
    def GraphicsWinModelBackgrndColor(self, value) -> None: ...
    @HistoryLines.setter
    def HistoryLines(self, value) -> None: ...
    @ImageFrameHighlight.setter
    def ImageFrameHighlight(self, value) -> None: ...
    @LayoutCreateViewport.setter
    def LayoutCreateViewport(self, value) -> None: ...
    @LayoutCrosshairColor.setter
    def LayoutCrosshairColor(self, value) -> None: ...
    @LayoutDisplayMargins.setter
    def LayoutDisplayMargins(self, value) -> None: ...
    @LayoutDisplayPaper.setter
    def LayoutDisplayPaper(self, value) -> None: ...
    @LayoutDisplayPaperShadow.setter
    def LayoutDisplayPaperShadow(self, value) -> None: ...
    @LayoutShowPlotSetup.setter
    def LayoutShowPlotSetup(self, value) -> None: ...
    @MaxZWCADWindow.setter
    def MaxZWCADWindow(self, value) -> None: ...
    @ModelCrosshairColor.setter
    def ModelCrosshairColor(self, value) -> None: ...
    @ShowRasterImage.setter
    def ShowRasterImage(self, value) -> None: ...
    @TextFont.setter
    def TextFont(self, value) -> None: ...
    @TextFontSize.setter
    def TextFontSize(self, value) -> None: ...
    @TextFontStyle.setter
    def TextFontStyle(self, value) -> None: ...
    @TextWinBackgrndColor.setter
    def TextWinBackgrndColor(self, value) -> None: ...
    @TextWinTextColor.setter
    def TextWinTextColor(self, value) -> None: ...
    @TrueColorImages.setter
    def TrueColorImages(self, value) -> None: ...
    @XRefFadeIntensity.setter
    def XRefFadeIntensity(self, value) -> None: ...


class IZcadPreferencesDrafting(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def AlignmentPointAcquisition(self): ...
    @property
    def Application(self): ...
    @property
    def AutoSnapAperture(self): ...
    @property
    def AutoSnapApertureSize(self): ...
    @property
    def AutoSnapMagnet(self): ...
    @property
    def AutoSnapMarker(self): ...
    @property
    def AutoSnapMarkerColor(self): ...
    @property
    def AutoSnapMarkerSize(self): ...
    @property
    def AutoSnapTooltip(self): ...
    @property
    def AutoTrackTooltip(self): ...
    @property
    def FullScreenTrackingVector(self): ...
    @property
    def PolarTrackingVector(self): ...

    @AlignmentPointAcquisition.setter
    def AlignmentPointAcquisition(self, value) -> None: ...
    @AutoSnapAperture.setter
    def AutoSnapAperture(self, value) -> None: ...
    @AutoSnapApertureSize.setter
    def AutoSnapApertureSize(self, value) -> None: ...
    @AutoSnapMagnet.setter
    def AutoSnapMagnet(self, value) -> None: ...
    @AutoSnapMarker.setter
    def AutoSnapMarker(self, value) -> None: ...
    @AutoSnapMarkerColor.setter
    def AutoSnapMarkerColor(self, value) -> None: ...
    @AutoSnapMarkerSize.setter
    def AutoSnapMarkerSize(self, value) -> None: ...
    @AutoSnapTooltip.setter
    def AutoSnapTooltip(self, value) -> None: ...
    @AutoTrackTooltip.setter
    def AutoTrackTooltip(self, value) -> None: ...
    @FullScreenTrackingVector.setter
    def FullScreenTrackingVector(self, value) -> None: ...
    @PolarTrackingVector.setter
    def PolarTrackingVector(self, value) -> None: ...
    
class IZcadPreferencesFiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def GetProjectFilePath(self, ProjectName=...): ...
    def SetProjectFilePath(self, ProjectName=..., ProjectFilePath=...): ...
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    @property
    def ActiveInvProject(self): ...
    @property
    def AltFontFile(self): ...
    @property
    def AltTabletMenuFile(self): ...
    @property
    def Application(self): ...
    @property
    def AutoSavePath(self): ...
    @property
    def ColorBookPath(self): ...
    @property
    def ConfigFile(self): ...
    @property
    def CustomDictionary(self): ...
    @property
    def CustomIconPath(self): ...
    @property
    def DefaultInternetURL(self): ...
    @property
    def DriversPath(self): ...
    @property
    def EnterpriseMenuFile(self): ...
    @property
    def FontFileMap(self): ...
    @property
    def HelpFilePath(self): ...
    @property
    def LicenseServer(self): ...
    @property
    def LogFilePath(self): ...
    @property
    def MainDictionary(self): ...
    @property
    def MenuFile(self): ...
    @property
    def ObjectZRXPath(self): ...
    @property
    def PageSetupOverridesTemplateFile(self): ...
    @property
    def PlotLogFilePath(self): ...
    @property
    def PostScriptPrologFile(self): ...
    @property
    def PrintFile(self): ...
    @property
    def PrintSpoolExecutable(self): ...
    @property
    def PrintSpoolerPath(self): ...
    @property
    def PrinterConfigPath(self): ...
    @property
    def PrinterDescPath(self): ...
    @property
    def PrinterStyleSheetPath(self): ...
    @property
    def QNewTemplateFile(self): ...
    @property
    def SupportPath(self): ...
    @property
    def TempFilePath(self): ...
    @property
    def TempXrefPath(self): ...
    @property
    def TemplateDwgPath(self): ...
    @property
    def TextEditor(self): ...
    @property
    def TextureMapPath(self): ...
    @property
    def ToolPalettePath(self): ...
    @property
    def WorkspacePath(self): ...

    @ActiveInvProject.setter
    def ActiveInvProject(self, value) -> None: ...
    @AltFontFile.setter
    def AltFontFile(self, value) -> None: ...
    @AltTabletMenuFile.setter
    def AltTabletMenuFile(self, value) -> None: ...
    @AutoSavePath.setter
    def AutoSavePath(self, value) -> None: ...
    @ColorBookPath.setter
    def ColorBookPath(self, value) -> None: ...
    @CustomDictionary.setter
    def CustomDictionary(self, value) -> None: ...
    @CustomIconPath.setter
    def CustomIconPath(self, value) -> None: ...
    @DefaultInternetURL.setter
    def DefaultInternetURL(self, value) -> None: ...
    @DriversPath.setter
    def DriversPath(self, value) -> None: ...
    @EnterpriseMenuFile.setter
    def EnterpriseMenuFile(self, value) -> None: ...
    @FontFileMap.setter
    def FontFileMap(self, value) -> None: ...
    @HelpFilePath.setter
    def HelpFilePath(self, value) -> None: ...
    @LogFilePath.setter
    def LogFilePath(self, value) -> None: ...
    @MainDictionary.setter
    def MainDictionary(self, value) -> None: ...
    @MenuFile.setter
    def MenuFile(self, value) -> None: ...
    @ObjectZRXPath.setter
    def ObjectZRXPath(self, value) -> None: ...
    @PageSetupOverridesTemplateFile.setter
    def PageSetupOverridesTemplateFile(self, value) -> None: ...
    @PlotLogFilePath.setter
    def PlotLogFilePath(self, value) -> None: ...
    @PostScriptPrologFile.setter
    def PostScriptPrologFile(self, value) -> None: ...
    @PrintFile.setter
    def PrintFile(self, value) -> None: ...
    @PrintSpoolExecutable.setter
    def PrintSpoolExecutable(self, value) -> None: ...
    @PrintSpoolerPath.setter
    def PrintSpoolerPath(self, value) -> None: ...
    @PrinterConfigPath.setter
    def PrinterConfigPath(self, value) -> None: ...
    @PrinterDescPath.setter
    def PrinterDescPath(self, value) -> None: ...
    @PrinterStyleSheetPath.setter
    def PrinterStyleSheetPath(self, value) -> None: ...
    @QNewTemplateFile.setter
    def QNewTemplateFile(self, value) -> None: ...
    @SupportPath.setter
    def SupportPath(self, value) -> None: ...
    @TempFilePath.setter
    def TempFilePath(self, value) -> None: ...
    @TempXrefPath.setter
    def TempXrefPath(self, value) -> None: ...
    @TemplateDwgPath.setter
    def TemplateDwgPath(self, value) -> None: ...
    @TextEditor.setter
    def TextEditor(self, value) -> None: ...
    @TextureMapPath.setter
    def TextureMapPath(self, value) -> None: ...
    @ToolPalettePath.setter
    def ToolPalettePath(self, value) -> None: ...
    @WorkspacePath.setter
    def WorkspacePath(self, value) -> None: ...
    
class IZcadPreferencesOpenSave(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutoAudit(self): ...
    @property
    def AutoSaveInterval(self): ...
    @property
    def CreateBackup(self): ...
    @property
    def DemandLoadZRXApp(self): ...
    @property
    def FullCRCValidation(self): ...
    @property
    def IncrementalSavePercent(self): ...
    @property
    def LogFileOn(self): ...
    @property
    def MRUNumber(self): ...
    @property
    def ProxyImage(self): ...
    @property
    def SaveAsType(self): ...
    @property
    def SavePreviewThumbnail(self): ...
    @property
    def ShowProxyDialogBox(self): ...
    @property
    def TempFileExtension(self): ...
    @property
    def XrefDemandLoad(self): ...

    @AutoAudit.setter
    def AutoAudit(self, value) -> None: ...
    @AutoSaveInterval.setter
    def AutoSaveInterval(self, value) -> None: ...
    @CreateBackup.setter
    def CreateBackup(self, value) -> None: ...
    @DemandLoadZRXApp.setter
    def DemandLoadZRXApp(self, value) -> None: ...
    @FullCRCValidation.setter
    def FullCRCValidation(self, value) -> None: ...
    @IncrementalSavePercent.setter
    def IncrementalSavePercent(self, value) -> None: ...
    @LogFileOn.setter
    def LogFileOn(self, value) -> None: ...
    @ProxyImage.setter
    def ProxyImage(self, value) -> None: ...
    @SaveAsType.setter
    def SaveAsType(self, value) -> None: ...
    @SavePreviewThumbnail.setter
    def SavePreviewThumbnail(self, value) -> None: ...
    @ShowProxyDialogBox.setter
    def ShowProxyDialogBox(self, value) -> None: ...
    @TempFileExtension.setter
    def TempFileExtension(self, value) -> None: ...
    @XrefDemandLoad.setter
    def XrefDemandLoad(self, value) -> None: ...
    
class IZcadPreferencesOutput(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AutomaticPlotLog(self): ...
    @property
    def ContinuousPlotLog(self): ...
    @property
    def DefaultOutputDevice(self): ...
    @property
    def DefaultPlotStyleForLayer(self): ...
    @property
    def DefaultPlotStyleForObjects(self): ...
    @property
    def DefaultPlotStyleTable(self): ...
    @property
    def DefaultPlotToFilePath(self): ...
    @property
    def OLEQuality(self): ...
    @property
    def PlotLegacy(self): ...
    @property
    def PlotPolicy(self): ...
    @property
    def PrinterPaperSizeAlert(self): ...
    @property
    def PrinterSpoolAlert(self): ...
    @property
    def UseLastPlotSettings(self): ...

    @AutomaticPlotLog.setter
    def AutomaticPlotLog(self, value) -> None: ...
    @ContinuousPlotLog.setter
    def ContinuousPlotLog(self, value) -> None: ...
    @DefaultOutputDevice.setter
    def DefaultOutputDevice(self, value) -> None: ...
    @DefaultPlotStyleForLayer.setter
    def DefaultPlotStyleForLayer(self, value) -> None: ...
    @DefaultPlotStyleForObjects.setter
    def DefaultPlotStyleForObjects(self, value) -> None: ...
    @DefaultPlotStyleTable.setter
    def DefaultPlotStyleTable(self, value) -> None: ...
    @DefaultPlotToFilePath.setter
    def DefaultPlotToFilePath(self, value) -> None: ...
    @OLEQuality.setter
    def OLEQuality(self, value) -> None: ...
    @PlotLegacy.setter
    def PlotLegacy(self, value) -> None: ...
    @PlotPolicy.setter
    def PlotPolicy(self, value) -> None: ...
    @PrinterPaperSizeAlert.setter
    def PrinterPaperSizeAlert(self, value) -> None: ...
    @PrinterSpoolAlert.setter
    def PrinterSpoolAlert(self, value) -> None: ...
    @UseLastPlotSettings.setter
    def UseLastPlotSettings(self, value) -> None: ...
    
class IZcadPreferencesProfiles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyProfile(self, oldProfileName=..., newProfileName=...): ...
    def DeleteProfile(self, ProfileName=...): ...
    def ExportProfile(self, ProfileName=..., RegFile=...): ...
    def GetAllProfileNames(self, pNames=...): ...
    def ImportProfile(self, ProfileName=..., RegFile=..., IncludePathInfo=...): ...
    def RenameProfile(self, origProfileName=..., newProfileName=...): ...
    def ResetProfile(self, Profile=...): ...
    def __iter__(self): ...
    @property
    def ActiveProfile(self): ...
    @property
    def Application(self): ...

    @ActiveProfile.setter
    def ActiveProfile(self, value) -> None: ...

class IZcadPreferencesSelection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def DisplayGrips(self): ...
    @property
    def DisplayGripsWithinBlocks(self): ...
    @property
    def GripColorSelected(self): ...
    @property
    def GripColorUnselected(self): ...
    @property
    def GripSize(self): ...
    @property
    def PickAdd(self): ...
    @property
    def PickAuto(self): ...
    @property
    def PickBoxSize(self): ...
    @property
    def PickDrag(self): ...
    @property
    def PickFirst(self): ...
    @property
    def PickGroup(self): ...

    @DisplayGrips.setter
    def DisplayGrips(self, value) -> None: ...
    @DisplayGripsWithinBlocks.setter
    def DisplayGripsWithinBlocks(self, value) -> None: ...
    @GripColorSelected.setter
    def GripColorSelected(self, value) -> None: ...
    @GripColorUnselected.setter
    def GripColorUnselected(self, value) -> None: ...
    @GripSize.setter
    def GripSize(self, value) -> None: ...
    @PickAdd.setter
    def PickAdd(self, value) -> None: ...
    @PickAuto.setter
    def PickAuto(self, value) -> None: ...
    @PickBoxSize.setter
    def PickBoxSize(self, value) -> None: ...
    @PickDrag.setter
    def PickDrag(self, value) -> None: ...
    @PickFirst.setter
    def PickFirst(self, value) -> None: ...
    @PickGroup.setter
    def PickGroup(self, value) -> None: ...
    
class IZcadPreferencesSystem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BeepOnError(self): ...
    @property
    def DisplayOLEScale(self): ...
    @property
    def EnableStartupDialog(self): ...
    @property
    def LoadZcadLspInAllDocuments(self): ...
    @property
    def ShowWarningMessages(self): ...
    @property
    def SingleDocumentMode(self): ...
    @property
    def StoreSQLIndex(self): ...
    @property
    def TablesReadOnly(self): ...

    @BeepOnError.setter
    def BeepOnError(self, value) -> None: ...
    @DisplayOLEScale.setter
    def DisplayOLEScale(self, value) -> None: ...
    @EnableStartupDialog.setter
    def EnableStartupDialog(self, value) -> None: ...
    @LoadZcadLspInAllDocuments.setter
    def LoadZcadLspInAllDocuments(self, value) -> None: ...
    @ShowWarningMessages.setter
    def ShowWarningMessages(self, value) -> None: ...
    @SingleDocumentMode.setter
    def SingleDocumentMode(self, value) -> None: ...
    @StoreSQLIndex.setter
    def StoreSQLIndex(self, value) -> None: ...
    @TablesReadOnly.setter
    def TablesReadOnly(self, value) -> None: ...
    
class IZcadPreferencesUser(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def ADCInsertUnitsDefaultSource(self): ...
    @property
    def ADCInsertUnitsDefaultTarget(self): ...
    @property
    def Application(self): ...
    @property
    def HyperlinkDisplayCursor(self): ...
    @property
    def KeyboardAccelerator(self): ...
    @property
    def KeyboardPriority(self): ...
    @property
    def SCMCommandMode(self): ...
    @property
    def SCMDefaultMode(self): ...
    @property
    def SCMEditMode(self): ...
    @property
    def SCMTimeMode(self): ...
    @property
    def SCMTimeValue(self): ...
    @property
    def ShortCutMenuDisplay(self): ...

    @ADCInsertUnitsDefaultSource.setter
    def ADCInsertUnitsDefaultSource(self, value) -> None: ...
    @ADCInsertUnitsDefaultTarget.setter
    def ADCInsertUnitsDefaultTarget(self, value) -> None: ...
    @HyperlinkDisplayCursor.setter
    def HyperlinkDisplayCursor(self, value) -> None: ...
    @KeyboardAccelerator.setter
    def KeyboardAccelerator(self, value) -> None: ...
    @KeyboardPriority.setter
    def KeyboardPriority(self, value) -> None: ...
    @SCMCommandMode.setter
    def SCMCommandMode(self, value) -> None: ...
    @SCMDefaultMode.setter
    def SCMDefaultMode(self, value) -> None: ...
    @SCMEditMode.setter
    def SCMEditMode(self, value) -> None: ...
    @SCMTimeMode.setter
    def SCMTimeMode(self, value) -> None: ...
    @SCMTimeValue.setter
    def SCMTimeValue(self, value) -> None: ...
    @ShortCutMenuDisplay.setter
    def ShortCutMenuDisplay(self, value) -> None: ...
    
class IZcadRasterImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Brightness(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ImageFile(self): ...
    @property
    def ImageHeight(self): ...
    @property
    def ImageVisibility(self): ...
    @property
    def ImageWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def ShowRotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @property
    def transparency(self): ...

    @Brightness.setter
    def Brightness(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @ImageFile.setter
    def ImageFile(self, value) -> None: ...
    @ImageHeight.setter
    def ImageHeight(self, value) -> None: ...
    @ImageVisibility.setter
    def ImageVisibility(self, value) -> None: ...
    @ImageWidth.setter
    def ImageWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @ShowRotation.setter
    def ShowRotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @transparency.setter
    def transparency(self, value) -> None: ...
    
class IZcadRay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BasePoint(self): ...
    @property
    def Database(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def SecondPoint(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @BasePoint.setter
    def BasePoint(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @SecondPoint.setter
    def SecondPoint(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadRegion(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., Object=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Centroid(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MomentOfInertia(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Perimeter(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def PrincipalDirections(self): ...
    @property
    def PrincipalMoments(self): ...
    @property
    def ProductOfInertia(self): ...
    @property
    def RadiiOfGyration(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadRegisteredApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @Name.setter
    def Name(self, value) -> None: ...
    
class IZcadRegisteredApplications(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadRevolvedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def AxisDirection(self): ...
    @property
    def AxisPosition(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RevolutionAngle(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @AxisPosition.setter
    def AxisPosition(self, value) -> None: ...
    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RevolutionAngle.setter
    def RevolutionAngle(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BottomHeight(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IndicatorFillColor(self): ...
    @property
    def IndicatorTransparency(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LiveSectionEnabled(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def NumVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Settings(self): ...
    @property
    def State(self): ...
    @property
    def TopHeight(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalDirection(self): ...
    @property
    def Vertices(self): ...
    @property
    def ViewingDirection(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @BottomHeight.setter
    def BottomHeight(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @IndicatorFillColor.setter
    def IndicatorFillColor(self, value) -> None: ...
    @IndicatorTransparency.setter
    def IndicatorTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LiveSectionEnabled.setter
    def LiveSectionEnabled(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @State.setter
    def State(self, value) -> None: ...
    @TopHeight.setter
    def TopHeight(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalDirection.setter
    def VerticalDirection(self, value) -> None: ...
    @Vertices.setter
    def Vertices(self, value) -> None: ...
    @ViewingDirection.setter
    def ViewingDirection(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSection2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BottomHeight(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Elevation(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IndicatorFillColor(self): ...
    @property
    def IndicatorTransparency(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def LiveSectionEnabled(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def NumVertices(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def SectionPlaneOffset(self): ...
    @property
    def Settings(self): ...
    @property
    def SliceDepth(self): ...
    @property
    def State(self): ...
    @property
    def State2(self): ...
    @property
    def TopHeight(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VerticalDirection(self): ...
    @property
    def Vertices(self): ...
    @property
    def ViewingDirection(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @BottomHeight.setter
    def BottomHeight(self, value) -> None: ...
    @Elevation.setter
    def Elevation(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @IndicatorFillColor.setter
    def IndicatorFillColor(self, value) -> None: ...
    @IndicatorTransparency.setter
    def IndicatorTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @LiveSectionEnabled.setter
    def LiveSectionEnabled(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @SectionPlaneOffset.setter
    def SectionPlaneOffset(self, value) -> None: ...
    @SliceDepth.setter
    def SliceDepth(self, value) -> None: ...
    @State.setter
    def State(self, value) -> None: ...
    @State2.setter
    def State2(self, value) -> None: ...
    @TopHeight.setter
    def TopHeight(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VerticalDirection.setter
    def VerticalDirection(self, value) -> None: ...
    @Vertices.setter
    def Vertices(self, value) -> None: ...
    @ViewingDirection.setter
    def ViewingDirection(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSectionManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetLiveSection(self): ...
    def GetUniqueSectionName(self, pBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadSectionSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetSectionTypeSettings(self, secType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CurrentSectionType(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...

    @CurrentSectionType.setter
    def CurrentSectionType(self, value) -> None: ...
    
class IZcadSectionTypeSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def BackgroundLinesColor(self): ...
    @property
    def BackgroundLinesHiddenLine(self): ...
    @property
    def BackgroundLinesLayer(self): ...
    @property
    def BackgroundLinesLinetype(self): ...
    @property
    def BackgroundLinesLinetypeScale(self): ...
    @property
    def BackgroundLinesLineweight(self): ...
    @property
    def BackgroundLinesPlotStyleName(self): ...
    @property
    def BackgroundLinesVisible(self): ...
    @property
    def CurveTangencyLinesColor(self): ...
    @property
    def CurveTangencyLinesLayer(self): ...
    @property
    def CurveTangencyLinesLinetype(self): ...
    @property
    def CurveTangencyLinesLinetypeScale(self): ...
    @property
    def CurveTangencyLinesLineweight(self): ...
    @property
    def CurveTangencyLinesPlotStyleName(self): ...
    @property
    def CurveTangencyLinesVisible(self): ...
    @property
    def DestinationBlock(self): ...
    @property
    def DestinationFile(self): ...
    @property
    def ForegroundLinesColor(self): ...
    @property
    def ForegroundLinesEdgeTransparency(self): ...
    @property
    def ForegroundLinesFaceTransparency(self): ...
    @property
    def ForegroundLinesHiddenLine(self): ...
    @property
    def ForegroundLinesLayer(self): ...
    @property
    def ForegroundLinesLinetype(self): ...
    @property
    def ForegroundLinesLinetypeScale(self): ...
    @property
    def ForegroundLinesLineweight(self): ...
    @property
    def ForegroundLinesPlotStyleName(self): ...
    @property
    def ForegroundLinesVisible(self): ...
    @property
    def GenerationOptions(self): ...
    @property
    def IntersectionBoundaryColor(self): ...
    @property
    def IntersectionBoundaryDivisionLines(self): ...
    @property
    def IntersectionBoundaryLayer(self): ...
    @property
    def IntersectionBoundaryLinetype(self): ...
    @property
    def IntersectionBoundaryLinetypeScale(self): ...
    @property
    def IntersectionBoundaryLineweight(self): ...
    @property
    def IntersectionBoundaryPlotStyleName(self): ...
    @property
    def IntersectionFillColor(self): ...
    @property
    def IntersectionFillFaceTransparency(self): ...
    @property
    def IntersectionFillHatchAngle(self): ...
    @property
    def IntersectionFillHatchPatternName(self): ...
    @property
    def IntersectionFillHatchPatternType(self): ...
    @property
    def IntersectionFillHatchScale(self): ...
    @property
    def IntersectionFillHatchSpacing(self): ...
    @property
    def IntersectionFillLayer(self): ...
    @property
    def IntersectionFillLinetype(self): ...
    @property
    def IntersectionFillLinetypeScale(self): ...
    @property
    def IntersectionFillLineweight(self): ...
    @property
    def IntersectionFillPlotStyleName(self): ...
    @property
    def IntersectionFillVisible(self): ...
    @property
    def SourceObjects(self): ...

    @BackgroundLinesColor.setter
    def BackgroundLinesColor(self, value) -> None: ...
    @BackgroundLinesHiddenLine.setter
    def BackgroundLinesHiddenLine(self, value) -> None: ...
    @BackgroundLinesLayer.setter
    def BackgroundLinesLayer(self, value) -> None: ...
    @BackgroundLinesLinetype.setter
    def BackgroundLinesLinetype(self, value) -> None: ...
    @BackgroundLinesLinetypeScale.setter
    def BackgroundLinesLinetypeScale(self, value) -> None: ...
    @BackgroundLinesLineweight.setter
    def BackgroundLinesLineweight(self, value) -> None: ...
    @BackgroundLinesPlotStyleName.setter
    def BackgroundLinesPlotStyleName(self, value) -> None: ...
    @BackgroundLinesVisible.setter
    def BackgroundLinesVisible(self, value) -> None: ...
    @CurveTangencyLinesColor.setter
    def CurveTangencyLinesColor(self, value) -> None: ...
    @CurveTangencyLinesLayer.setter
    def CurveTangencyLinesLayer(self, value) -> None: ...
    @CurveTangencyLinesLinetype.setter
    def CurveTangencyLinesLinetype(self, value) -> None: ...
    @CurveTangencyLinesLinetypeScale.setter
    def CurveTangencyLinesLinetypeScale(self, value) -> None: ...
    @CurveTangencyLinesLineweight.setter
    def CurveTangencyLinesLineweight(self, value) -> None: ...
    @CurveTangencyLinesPlotStyleName.setter
    def CurveTangencyLinesPlotStyleName(self, value) -> None: ...
    @CurveTangencyLinesVisible.setter
    def CurveTangencyLinesVisible(self, value) -> None: ...
    @DestinationBlock.setter
    def DestinationBlock(self, value) -> None: ...
    @DestinationFile.setter
    def DestinationFile(self, value) -> None: ...
    @ForegroundLinesColor.setter
    def ForegroundLinesColor(self, value) -> None: ...
    @ForegroundLinesEdgeTransparency.setter
    def ForegroundLinesEdgeTransparency(self, value) -> None: ...
    @ForegroundLinesFaceTransparency.setter
    def ForegroundLinesFaceTransparency(self, value) -> None: ...
    @ForegroundLinesHiddenLine.setter
    def ForegroundLinesHiddenLine(self, value) -> None: ...
    @ForegroundLinesLayer.setter
    def ForegroundLinesLayer(self, value) -> None: ...
    @ForegroundLinesLinetype.setter
    def ForegroundLinesLinetype(self, value) -> None: ...
    @ForegroundLinesLinetypeScale.setter
    def ForegroundLinesLinetypeScale(self, value) -> None: ...
    @ForegroundLinesLineweight.setter
    def ForegroundLinesLineweight(self, value) -> None: ...
    @ForegroundLinesPlotStyleName.setter
    def ForegroundLinesPlotStyleName(self, value) -> None: ...
    @ForegroundLinesVisible.setter
    def ForegroundLinesVisible(self, value) -> None: ...
    @GenerationOptions.setter
    def GenerationOptions(self, value) -> None: ...
    @IntersectionBoundaryColor.setter
    def IntersectionBoundaryColor(self, value) -> None: ...
    @IntersectionBoundaryDivisionLines.setter
    def IntersectionBoundaryDivisionLines(self, value) -> None: ...
    @IntersectionBoundaryLayer.setter
    def IntersectionBoundaryLayer(self, value) -> None: ...
    @IntersectionBoundaryLinetype.setter
    def IntersectionBoundaryLinetype(self, value) -> None: ...
    @IntersectionBoundaryLinetypeScale.setter
    def IntersectionBoundaryLinetypeScale(self, value) -> None: ...
    @IntersectionBoundaryLineweight.setter
    def IntersectionBoundaryLineweight(self, value) -> None: ...
    @IntersectionBoundaryPlotStyleName.setter
    def IntersectionBoundaryPlotStyleName(self, value) -> None: ...
    @IntersectionFillColor.setter
    def IntersectionFillColor(self, value) -> None: ...
    @IntersectionFillFaceTransparency.setter
    def IntersectionFillFaceTransparency(self, value) -> None: ...
    @IntersectionFillHatchAngle.setter
    def IntersectionFillHatchAngle(self, value) -> None: ...
    @IntersectionFillHatchPatternName.setter
    def IntersectionFillHatchPatternName(self, value) -> None: ...
    @IntersectionFillHatchPatternType.setter
    def IntersectionFillHatchPatternType(self, value) -> None: ...
    @IntersectionFillHatchScale.setter
    def IntersectionFillHatchScale(self, value) -> None: ...
    @IntersectionFillHatchSpacing.setter
    def IntersectionFillHatchSpacing(self, value) -> None: ...
    @IntersectionFillLayer.setter
    def IntersectionFillLayer(self, value) -> None: ...
    @IntersectionFillLinetype.setter
    def IntersectionFillLinetype(self, value) -> None: ...
    @IntersectionFillLinetypeScale.setter
    def IntersectionFillLinetypeScale(self, value) -> None: ...
    @IntersectionFillLineweight.setter
    def IntersectionFillLineweight(self, value) -> None: ...
    @IntersectionFillPlotStyleName.setter
    def IntersectionFillPlotStyleName(self, value) -> None: ...
    @IntersectionFillVisible.setter
    def IntersectionFillVisible(self, value) -> None: ...
    @SourceObjects.setter
    def SourceObjects(self, value) -> None: ...
    
class IZcadSectionTypeSettings2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def BackgroundLinesColor(self): ...
    @property
    def BackgroundLinesHiddenLine(self): ...
    @property
    def BackgroundLinesLayer(self): ...
    @property
    def BackgroundLinesLinetype(self): ...
    @property
    def BackgroundLinesLinetypeScale(self): ...
    @property
    def BackgroundLinesLineweight(self): ...
    @property
    def BackgroundLinesPlotStyleName(self): ...
    @property
    def BackgroundLinesVisible(self): ...
    @property
    def CurveTangencyLinesColor(self): ...
    @property
    def CurveTangencyLinesLayer(self): ...
    @property
    def CurveTangencyLinesLinetype(self): ...
    @property
    def CurveTangencyLinesLinetypeScale(self): ...
    @property
    def CurveTangencyLinesLineweight(self): ...
    @property
    def CurveTangencyLinesPlotStyleName(self): ...
    @property
    def CurveTangencyLinesVisible(self): ...
    @property
    def DestinationBlock(self): ...
    @property
    def DestinationFile(self): ...
    @property
    def ForegroundLinesColor(self): ...
    @property
    def ForegroundLinesEdgeTransparency(self): ...
    @property
    def ForegroundLinesFaceTransparency(self): ...
    @property
    def ForegroundLinesHiddenLine(self): ...
    @property
    def ForegroundLinesLayer(self): ...
    @property
    def ForegroundLinesLinetype(self): ...
    @property
    def ForegroundLinesLinetypeScale(self): ...
    @property
    def ForegroundLinesLineweight(self): ...
    @property
    def ForegroundLinesPlotStyleName(self): ...
    @property
    def ForegroundLinesVisible(self): ...
    @property
    def GenerationOptions(self): ...
    @property
    def IntersectionBoundaryColor(self): ...
    @property
    def IntersectionBoundaryDivisionLines(self): ...
    @property
    def IntersectionBoundaryLayer(self): ...
    @property
    def IntersectionBoundaryLinetype(self): ...
    @property
    def IntersectionBoundaryLinetypeScale(self): ...
    @property
    def IntersectionBoundaryLineweight(self): ...
    @property
    def IntersectionBoundaryPlotStyleName(self): ...
    @property
    def IntersectionBoundaryVisible(self): ...
    @property
    def IntersectionFillColor(self): ...
    @property
    def IntersectionFillFaceTransparency(self): ...
    @property
    def IntersectionFillHatchAngle(self): ...
    @property
    def IntersectionFillHatchPatternName(self): ...
    @property
    def IntersectionFillHatchPatternType(self): ...
    @property
    def IntersectionFillHatchScale(self): ...
    @property
    def IntersectionFillHatchSpacing(self): ...
    @property
    def IntersectionFillLayer(self): ...
    @property
    def IntersectionFillLinetype(self): ...
    @property
    def IntersectionFillLinetypeScale(self): ...
    @property
    def IntersectionFillLineweight(self): ...
    @property
    def IntersectionFillPlotStyleName(self): ...
    @property
    def IntersectionFillVisible(self): ...
    @property
    def SourceObjects(self): ...

    @BackgroundLinesColor.setter
    def BackgroundLinesColor(self, value) -> None: ...
    @BackgroundLinesHiddenLine.setter
    def BackgroundLinesHiddenLine(self, value) -> None: ...
    @BackgroundLinesLayer.setter
    def BackgroundLinesLayer(self, value) -> None: ...
    @BackgroundLinesLinetype.setter
    def BackgroundLinesLinetype(self, value) -> None: ...
    @BackgroundLinesLinetypeScale.setter
    def BackgroundLinesLinetypeScale(self, value) -> None: ...
    @BackgroundLinesLineweight.setter
    def BackgroundLinesLineweight(self, value) -> None: ...
    @BackgroundLinesPlotStyleName.setter
    def BackgroundLinesPlotStyleName(self, value) -> None: ...
    @BackgroundLinesVisible.setter
    def BackgroundLinesVisible(self, value) -> None: ...
    @CurveTangencyLinesColor.setter
    def CurveTangencyLinesColor(self, value) -> None: ...
    @CurveTangencyLinesLayer.setter
    def CurveTangencyLinesLayer(self, value) -> None: ...
    @CurveTangencyLinesLinetype.setter
    def CurveTangencyLinesLinetype(self, value) -> None: ...
    @CurveTangencyLinesLinetypeScale.setter
    def CurveTangencyLinesLinetypeScale(self, value) -> None: ...
    @CurveTangencyLinesLineweight.setter
    def CurveTangencyLinesLineweight(self, value) -> None: ...
    @CurveTangencyLinesPlotStyleName.setter
    def CurveTangencyLinesPlotStyleName(self, value) -> None: ...
    @CurveTangencyLinesVisible.setter
    def CurveTangencyLinesVisible(self, value) -> None: ...
    @DestinationBlock.setter
    def DestinationBlock(self, value) -> None: ...
    @DestinationFile.setter
    def DestinationFile(self, value) -> None: ...
    @ForegroundLinesColor.setter
    def ForegroundLinesColor(self, value) -> None: ...
    @ForegroundLinesEdgeTransparency.setter
    def ForegroundLinesEdgeTransparency(self, value) -> None: ...
    @ForegroundLinesFaceTransparency.setter
    def ForegroundLinesFaceTransparency(self, value) -> None: ...
    @ForegroundLinesHiddenLine.setter
    def ForegroundLinesHiddenLine(self, value) -> None: ...
    @ForegroundLinesLayer.setter
    def ForegroundLinesLayer(self, value) -> None: ...
    @ForegroundLinesLinetype.setter
    def ForegroundLinesLinetype(self, value) -> None: ...
    @ForegroundLinesLinetypeScale.setter
    def ForegroundLinesLinetypeScale(self, value) -> None: ...
    @ForegroundLinesLineweight.setter
    def ForegroundLinesLineweight(self, value) -> None: ...
    @ForegroundLinesPlotStyleName.setter
    def ForegroundLinesPlotStyleName(self, value) -> None: ...
    @ForegroundLinesVisible.setter
    def ForegroundLinesVisible(self, value) -> None: ...
    @GenerationOptions.setter
    def GenerationOptions(self, value) -> None: ...
    @IntersectionBoundaryColor.setter
    def IntersectionBoundaryColor(self, value) -> None: ...
    @IntersectionBoundaryDivisionLines.setter
    def IntersectionBoundaryDivisionLines(self, value) -> None: ...
    @IntersectionBoundaryLayer.setter
    def IntersectionBoundaryLayer(self, value) -> None: ...
    @IntersectionBoundaryLinetype.setter
    def IntersectionBoundaryLinetype(self, value) -> None: ...
    @IntersectionBoundaryLinetypeScale.setter
    def IntersectionBoundaryLinetypeScale(self, value) -> None: ...
    @IntersectionBoundaryLineweight.setter
    def IntersectionBoundaryLineweight(self, value) -> None: ...
    @IntersectionBoundaryPlotStyleName.setter
    def IntersectionBoundaryPlotStyleName(self, value) -> None: ...
    @IntersectionBoundaryVisible.setter
    def IntersectionBoundaryVisible(self, value) -> None: ...
    @IntersectionFillColor.setter
    def IntersectionFillColor(self, value) -> None: ...
    @IntersectionFillFaceTransparency.setter
    def IntersectionFillFaceTransparency(self, value) -> None: ...
    @IntersectionFillHatchAngle.setter
    def IntersectionFillHatchAngle(self, value) -> None: ...
    @IntersectionFillHatchPatternName.setter
    def IntersectionFillHatchPatternName(self, value) -> None: ...
    @IntersectionFillHatchPatternType.setter
    def IntersectionFillHatchPatternType(self, value) -> None: ...
    @IntersectionFillHatchScale.setter
    def IntersectionFillHatchScale(self, value) -> None: ...
    @IntersectionFillHatchSpacing.setter
    def IntersectionFillHatchSpacing(self, value) -> None: ...
    @IntersectionFillLayer.setter
    def IntersectionFillLayer(self, value) -> None: ...
    @IntersectionFillLinetype.setter
    def IntersectionFillLinetype(self, value) -> None: ...
    @IntersectionFillLinetypeScale.setter
    def IntersectionFillLinetypeScale(self, value) -> None: ...
    @IntersectionFillLineweight.setter
    def IntersectionFillLineweight(self, value) -> None: ...
    @IntersectionFillPlotStyleName.setter
    def IntersectionFillPlotStyleName(self, value) -> None: ...
    @IntersectionFillVisible.setter
    def IntersectionFillVisible(self, value) -> None: ...
    @SourceObjects.setter
    def SourceObjects(self, value) -> None: ...

class IZcadSecurityParams(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Action(self): ...
    @property
    def Algorithm(self): ...
    @property
    def Comment(self): ...
    @property
    def Issuer(self): ...
    @property
    def KeyLength(self): ...
    @property
    def Password(self): ...
    @property
    def ProviderName(self): ...
    @property
    def ProviderType(self): ...
    @property
    def SerialNumber(self): ...
    @property
    def Subject(self): ...
    @property
    def TimeServer(self): ...

    @Action.setter
    def Action(self, value) -> None: ...
    @Algorithm.setter
    def Algorithm(self, value) -> None: ...
    @Comment.setter
    def Comment(self, value) -> None: ...
    @Issuer.setter
    def Issuer(self, value) -> None: ...
    @KeyLength.setter
    def KeyLength(self, value) -> None: ...
    @Password.setter
    def Password(self, value) -> None: ...
    @ProviderName.setter
    def ProviderName(self, value) -> None: ...
    @ProviderType.setter
    def ProviderType(self, value) -> None: ...
    @SerialNumber.setter
    def SerialNumber(self, value) -> None: ...
    @Subject.setter
    def Subject(self, value) -> None: ...
    @TimeServer.setter
    def TimeServer(self, value) -> None: ...
    
class IZcadSelectionSet(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddItems(self, pSelSet=...): ...
    def Clear(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Highlight(self, bFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def Select(self, Mode=..., Point1=..., Point2=..., FilterType=..., FilterData=...): ...
    def SelectAtPoint(self, Point=..., FilterType=..., FilterData=...): ...
    def SelectByPolygon(self, Mode=..., PointsList=..., FilterType=..., FilterData=...): ...
    def SelectOnScreen(self, FilterType=..., FilterData=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Name(self): ...
    
class IZcadSelectionSets(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    
class IZcadShadowDisplay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def EnableShadowDisplay(self): ...
    @property
    def ShadowDisplay(self): ...
    @ShadowDisplay.setter
    def ShadowDisplay(self, value) -> None: ...
    
class IZcadShape(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSortentsTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Block(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFullDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetRelativeDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def MoveAbove(self, Objects=..., Target=...): ...
    def MoveBelow(self, Objects=..., Target=...): ...
    def MoveToBottom(self, Objects=...): ...
    def MoveToTop(self, Objects=...): ...
    def SetRelativeDrawOrder(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SwapOrder(self, Object1=..., Object2=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadSpline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddFitPoint(self, Index=..., fitPoint=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteFitPoint(self, Index=...): ...
    def ElevateOrder(self, Order=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetControlPoint(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetFitPoint(self, Index=...): ...
    def GetWeight(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def PurgeFitData(self): ...
    def Reverse(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetControlPoint(self, Index=..., controlPoint=...): ...
    def SetFitPoint(self, Index=..., fitPoint=...): ...
    def SetWeight(self, Index=..., weight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Area(self): ...
    @property
    def Closed(self): ...
    @property
    def Closed2(self): ...
    @property
    def ControlPoints(self): ...
    @property
    def Database(self): ...
    @property
    def Degree(self): ...
    @property
    def Degree2(self): ...
    @property
    def Document(self): ...
    @property
    def EndTangent(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FitPoints(self): ...
    @property
    def FitTolerance(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def IsPeriodic(self): ...
    @property
    def IsPlanar(self): ...
    @property
    def IsRational(self): ...
    @property
    def KnotParameterization(self): ...
    @property
    def Knots(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def NumberOfControlPoints(self): ...
    @property
    def NumberOfFitPoints(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def SplineFrame(self): ...
    @property
    def SplineMethod(self): ...
    @property
    def StartTangent(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Weights(self): ...
    @property
    def color(self): ...

    @Closed2.setter
    def Closed2(self, value) -> None: ...
    @ControlPoints.setter
    def ControlPoints(self, value) -> None: ...
    @Degree2.setter
    def Degree2(self, value) -> None: ...
    @EndTangent.setter
    def EndTangent(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FitPoints.setter
    def FitPoints(self, value) -> None: ...
    @FitTolerance.setter
    def FitTolerance(self, value) -> None: ...
    @KnotParameterization.setter
    def KnotParameterization(self, value) -> None: ...
    @Knots.setter
    def Knots(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @SplineFrame.setter
    def SplineFrame(self, value) -> None: ...
    @SplineMethod.setter
    def SplineMethod(self, value) -> None: ...
    @StartTangent.setter
    def StartTangent(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Weights.setter
    def Weights(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadState(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def IsQuiescent(self): ...
    
class IZcadSubDMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FaceCount(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Smoothness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VertexCount(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Smoothness.setter
    def Smoothness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubDMeshEdge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def CreaseLevel(self): ...
    @property
    def CreaseType(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...
    @CreaseLevel.setter
    def CreaseLevel(self, value) -> None: ...
    @CreaseType.setter
    def CreaseType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubDMeshFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def CreaseLevel(self): ...
    @property
    def CreaseType(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...
    @CreaseLevel.setter
    def CreaseLevel(self, value) -> None: ...
    @CreaseType.setter
    def CreaseType(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubDMeshVertex(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Coordinates(self): ...
    @property
    def CreaseLevel(self): ...
    @property
    def CreaseType(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @CreaseLevel.setter
    def CreaseLevel(self, value) -> None: ...
    @CreaseType.setter
    def CreaseType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubEntSolidEdge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubEntSolidFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @Material.setter
    def Material(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubEntSolidNode(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubEntSolidVertex(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...

    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSubEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def ObjectName(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def color(self): ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSummaryInfo(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddCustomInfo(self, key=..., Value=...): ...
    def GetCustomByIndex(self, Index=..., pKey=..., pValue=...): ...
    def GetCustomByKey(self, key=..., pValue=...): ...
    def NumCustomInfo(self): ...
    def RemoveCustomByIndex(self, Index=...): ...
    def RemoveCustomByKey(self, key=...): ...
    def SetCustomByIndex(self, Index=..., key=..., Value=...): ...
    def SetCustomByKey(self, key=..., Value=...): ...
    def __iter__(self): ...
    @property
    def Author(self): ...
    @property
    def Comments(self): ...
    @property
    def HyperlinkBase(self): ...
    @property
    def Keywords(self): ...
    @property
    def LastSavedBy(self): ...
    @property
    def RevisionNumber(self): ...
    @property
    def Subject(self): ...
    @property
    def Title(self): ...

    @Author.setter
    def Author(self, value) -> None: ...
    @Comments.setter
    def Comments(self, value) -> None: ...
    @HyperlinkBase.setter
    def HyperlinkBase(self, value) -> None: ...
    @Keywords.setter
    def Keywords(self, value) -> None: ...
    @LastSavedBy.setter
    def LastSavedBy(self, value) -> None: ...
    @RevisionNumber.setter
    def RevisionNumber(self, value) -> None: ...
    @Subject.setter
    def Subject(self, value) -> None: ...
    @Title.setter
    def Title(self, value) -> None: ...
    
class IZcadSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...

    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadSweptSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Bank(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EdgeExtensionDistances(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Length(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def MaintainAssociativity(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ProfileRotation(self): ...
    @property
    def ShowAssociativity(self): ...
    @property
    def SurfTrimAssociativity(self): ...
    @property
    def SurfaceType(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Twist(self): ...
    @property
    def UIsolineDensity(self): ...
    @property
    def VIsolineDensity(self): ...
    @property
    def Visible(self): ...
    @property
    def WireframeType(self): ...
    @property
    def color(self): ...
    @property
    def scale(self): ...

    @Bank.setter
    def Bank(self, value) -> None: ...
    @EdgeExtensionDistances.setter
    def EdgeExtensionDistances(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @MaintainAssociativity.setter
    def MaintainAssociativity(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ProfileRotation.setter
    def ProfileRotation(self, value) -> None: ...
    @ShowAssociativity.setter
    def ShowAssociativity(self, value) -> None: ...
    @SurfTrimAssociativity.setter
    def SurfTrimAssociativity(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Twist.setter
    def Twist(self, value) -> None: ...
    @UIsolineDensity.setter
    def UIsolineDensity(self, value) -> None: ...
    @VIsolineDensity.setter
    def VIsolineDensity(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @WireframeType.setter
    def WireframeType(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @scale.setter
    def scale(self, value) -> None: ...
    
class IZcadTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClearSubSelection(self): ...
    def ClearTableStyleOverrides(self, flag=...): ...
    def Copy(self): ...
    def CreateContent(self, nRow=..., nCol=..., nIndex=...): ...
    def Delete(self): ...
    def DeleteCellContent(self, row=..., col=...): ...
    def DeleteColumns(self, col=..., cols=...): ...
    def DeleteContent(self, nRow=..., nCol=...): ...
    def DeleteRows(self, row=..., Rows=...): ...
    def EnableMergeAll(self, nRow=..., nCol=..., bEnable=...): ...
    def Erase(self): ...
    def FormatValue(self, row=..., col=..., nOption=..., pVal=...): ...
    def GenerateLayout(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAttachmentPoint(self, row=..., col=...): ...
    def GetAutoScale(self, row=..., col=...): ...
    def GetAutoScale2(self, nRow=..., nCol=..., nContent=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetBlockAttributeValue(self, row=..., col=..., attdefId=...): ...
    def GetBlockAttributeValue2(self, nRow=..., nCol=..., nContent=..., blkId=...): ...
    def GetBlockRotation(self, row=..., col=...): ...
    def GetBlockScale(self, row=..., col=...): ...
    def GetBlockTableRecordId(self, row=..., col=...): ...
    def GetBlockTableRecordId2(self, nRow=..., nCol=..., nContent=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBreakHeight(self, nIndex=...): ...
    def GetCellAlignment(self, row=..., col=...): ...
    def GetCellBackgroundColor(self, row=..., col=...): ...
    def GetCellBackgroundColorNone(self, row=..., col=...): ...
    def GetCellContentColor(self, row=..., col=...): ...
    def GetCellDataType(self, row=..., col=..., pDataType=..., pUnitType=...): ...
    def GetCellExtents(self, row=..., col=..., bOuterCell=...): ...
    def GetCellFormat(self, row=..., col=...): ...
    def GetCellGridColor(self, row=..., col=..., edge=...): ...
    def GetCellGridLineWeight(self, row=..., col=..., edge=...): ...
    def GetCellGridVisibility(self, row=..., col=..., edge=...): ...
    def GetCellState(self, nRow=..., nCol=...): ...
    def GetCellStyle(self, nRow=..., nCol=...): ...
    def GetCellStyleOverrides(self, row=..., col=...): ...
    def GetCellTextHeight(self, row=..., col=...): ...
    def GetCellTextStyle(self, row=..., col=...): ...
    def GetCellType(self, row=..., col=...): ...
    def GetCellValue(self, row=..., col=...): ...
    def GetColumnName(self, nIndex=...): ...
    def GetColumnWidth(self, col=...): ...
    def GetContentColor(self, rowType=...): ...
    def GetContentColor2(self, nRow=..., nCol=..., nContent=...): ...
    def GetContentLayout(self, row=..., col=...): ...
    def GetContentType(self, nRow=..., nCol=...): ...
    def GetCustomData(self, nRow=..., nCol=..., szKey=..., pData=...): ...
    def GetDataFormat(self, nRow=..., nCol=..., nContent=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetDataType2(self, nRow=..., nCol=..., nContent=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFieldId(self, row=..., col=...): ...
    def GetFieldId2(self, nRow=..., nCol=..., nContent=...): ...
    def GetFormat(self, rowType=...): ...
    def GetFormula(self, nRow=..., nCol=..., nContent=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridColor2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridDoubleLineSpacing(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLineStyle(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLinetype(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetHasFormula(self, nRow=..., nCol=..., nContent=...): ...
    def GetMargin(self, nRow=..., nCol=..., nMargin=...): ...
    def GetMinimumColumnWidth(self, col=...): ...
    def GetMinimumRowHeight(self, row=...): ...
    def GetOverride(self, nRow=..., nCol=..., nContent=...): ...
    def GetRotation(self, nRow=..., nCol=..., nContent=...): ...
    def GetRowHeight(self, row=...): ...
    def GetRowType(self, row=...): ...
    def GetScale(self, nRow=..., nCol=..., nContent=...): ...
    def GetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def GetText(self, row=..., col=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextHeight2(self, nRow=..., nCol=..., nContent=...): ...
    def GetTextRotation(self, row=..., col=...): ...
    def GetTextString(self, nRow=..., nCol=..., nContent=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyle2(self, nRow=..., nCol=..., nContent=...): ...
    def GetValue(self, nRow=..., nCol=..., nContent=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, wpt=..., wviewVec=..., resultRowIndex=..., resultColumnIndex=...): ...
    def InsertColumns(self, col=..., Width=..., cols=...): ...
    def InsertColumnsAndInherit(self, col=..., nInheritFrom=..., nNumCols=...): ...
    def InsertRows(self, row=..., Height=..., Rows=...): ...
    def InsertRowsAndInherit(self, nIndex=..., nInheritFrom=..., nNumRows=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def IsContentEditable(self, nRow=..., nCol=...): ...
    def IsEmpty(self, nRow=..., nCol=...): ...
    def IsFormatEditable(self, nRow=..., nCol=...): ...
    def IsMergeAllEnabled(self, nRow=..., nCol=...): ...
    def IsMergedCell(self, row=..., col=..., minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def MergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def MoveContent(self, nRow=..., nCol=..., nFromIndex=..., nToIndex=...): ...
    def RecomputeTableBlock(self, bForceUpdate=...): ...
    def RemoveAllOverrides(self, nRow=..., nCol=...): ...
    def ReselectSubRegion(self): ...
    def ResetCellValue(self, row=..., col=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def Select(self, wpt=..., wvwVec=..., wvwxVec=..., wxaper=..., wyaper=..., allowOutside=..., resultRowIndex=..., resultColumnIndex=...): ...
    def SelectSubRegion(self, wpt1=..., wpt2=..., wvwVec=..., wvwxVec=..., seltype=..., bIncludeCurrentSelection=..., rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAutoScale(self, row=..., col=..., bValue=...): ...
    def SetAutoScale2(self, nRow=..., nCol=..., nContent=..., bAutoFit=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetBlockAttributeValue(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockAttributeValue2(self, nRow=..., nCol=..., nContent=..., blkId=..., Value=...): ...
    def SetBlockRotation(self, row=..., col=..., blkRotation=...): ...
    def SetBlockScale(self, row=..., col=..., blkScale=...): ...
    def SetBlockTableRecordId(self, row=..., col=..., blkId=..., bAutoFit=...): ...
    def SetBlockTableRecordId2(self, nRow=..., nCol=..., nContent=..., blkId=..., autoFit=...): ...
    def SetBreakHeight(self, nIndex=..., Height=...): ...
    def SetCellAlignment(self, row=..., col=..., cellAlignment=...): ...
    def SetCellBackgroundColor(self, row=..., col=..., pColor=...): ...
    def SetCellBackgroundColorNone(self, row=..., col=..., bValue=...): ...
    def SetCellContentColor(self, row=..., col=..., pColor=...): ...
    def SetCellDataType(self, row=..., col=..., dataType=..., unitType=...): ...
    def SetCellFormat(self, row=..., col=..., pFormat=...): ...
    def SetCellGridColor(self, row=..., col=..., edges=..., pColor=...): ...
    def SetCellGridLineWeight(self, row=..., col=..., edges=..., Lineweight=...): ...
    def SetCellGridVisibility(self, row=..., col=..., edges=..., bValue=...): ...
    def SetCellState(self, nRow=..., nCol=..., nLock=...): ...
    def SetCellStyle(self, nRow=..., nCol=..., szCellStyle=...): ...
    def SetCellTextHeight(self, row=..., col=..., TextHeight=...): ...
    def SetCellTextStyle(self, row=..., col=..., bstrName=...): ...
    def SetCellType(self, row=..., col=..., CellType=...): ...
    def SetCellValue(self, row=..., col=..., val=...): ...
    def SetCellValueFromText(self, row=..., col=..., val=..., nOption=...): ...
    def SetColumnName(self, nIndex=..., Name=...): ...
    def SetColumnWidth(self, col=..., Width=...): ...
    def SetContentColor(self, rowTypes=..., pColor=...): ...
    def SetContentColor2(self, nRow=..., nCol=..., nContent=..., pColor=...): ...
    def SetContentLayout(self, row=..., col=..., nLayout=...): ...
    def SetCustomData(self, nRow=..., nCol=..., szKey=..., data=...): ...
    def SetDataFormat(self, nRow=..., nCol=..., nContent=..., szFormat=...): ...
    def SetDataType(self, rowTypes=..., dataType=..., unitType=...): ...
    def SetDataType2(self, nRow=..., nCol=..., nContent=..., dataType=..., unitType=...): ...
    def SetFieldId(self, row=..., col=..., fieldId=...): ...
    def SetFieldId2(self, nRow=..., nCol=..., nContent=..., acDbObjectId=..., nflag=...): ...
    def SetFormat(self, rowTypes=..., pFormat=...): ...
    def SetFormula(self, nRow=..., nCol=..., nContent=..., pszFormula=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridColor2(self, nRow=..., nCol=..., nGridLineType=..., pColor=...): ...
    def SetGridDoubleLineSpacing(self, nRow=..., nCol=..., nGridLineType=..., fSpacing=...): ...
    def SetGridLineStyle(self, nRow=..., nCol=..., nGridLineTypes=..., nLineStyle=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLineWeight2(self, nRow=..., nCol=..., nGridLineType=..., Lineweight=...): ...
    def SetGridLinetype(self, nRow=..., nCol=..., nGridLineType=..., idLinetype=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetGridVisibility2(self, nRow=..., nCol=..., nGridLineType=..., bVisible=...): ...
    def SetMargin(self, nRow=..., nCol=..., nMargins=..., fMargin=...): ...
    def SetOverride(self, nRow=..., nCol=..., nContent=..., nProp=...): ...
    def SetRotation(self, nRow=..., nCol=..., nContent=..., Value=...): ...
    def SetRowHeight(self, row=..., Height=...): ...
    def SetScale(self, nRow=..., nCol=..., nContent=..., scale=...): ...
    def SetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetText(self, row=..., col=..., pStr=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextHeight2(self, nRow=..., nCol=..., nContent=..., Height=...): ...
    def SetTextRotation(self, row=..., col=..., TextRotation=...): ...
    def SetTextString(self, nRow=..., nCol=..., nContent=..., Text=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyle2(self, nRow=..., nCol=..., nContent=..., bstrStyleName=...): ...
    def SetToolTip(self, nRow=..., nCol=..., tip=...): ...
    def SetValue(self, nRow=..., nCol=..., nContent=..., acValue=...): ...
    def SetValueFromText(self, nRow=..., nCol=..., nContent=..., szText=..., nOption=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def UnmergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AllowManualHeights(self): ...
    @property
    def AllowManualPositions(self): ...
    @property
    def Application(self): ...
    @property
    def BreakSpacing(self): ...
    @property
    def BreaksEnabled(self): ...
    @property
    def Columns(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FlowDirection(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasSubSelection(self): ...
    @property
    def HeaderSuppressed(self): ...
    @property
    def Height(self): ...
    @property
    def HorzCellMargin(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def MinimumTableHeight(self): ...
    @property
    def MinimumTableWidth(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def RegenerateTableSuppressed(self): ...
    @property
    def RepeatBottomLabels(self): ...
    @property
    def RepeatTopLabels(self): ...
    @property
    def Rows(self): ...
    @property
    def StyleName(self): ...
    @property
    def TableBreakFlowDirection(self): ...
    @property
    def TableBreakHeight(self): ...
    @property
    def TableStyleOverrides(self): ...
    @property
    def TitleSuppressed(self): ...
    @property
    def TrueColor(self): ...
    @property
    def VertCellMargin(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...

    @AllowManualHeights.setter
    def AllowManualHeights(self, value) -> None: ...
    @AllowManualPositions.setter
    def AllowManualPositions(self, value) -> None: ...
    @BreakSpacing.setter
    def BreakSpacing(self, value) -> None: ...
    @BreaksEnabled.setter
    def BreaksEnabled(self, value) -> None: ...
    @ColumnWidth.setter
    def ColumnWidth(self, value) -> None: ...
    @Columns.setter
    def Columns(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @EnableBreak.setter
    def EnableBreak(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @FlowDirection.setter
    def FlowDirection(self, value) -> None: ...
    @HeaderSuppressed.setter
    def HeaderSuppressed(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorzCellMargin.setter
    def HorzCellMargin(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @RegenerateTableSuppressed.setter
    def RegenerateTableSuppressed(self, value) -> None: ...
    @RepeatBottomLabels.setter
    def RepeatBottomLabels(self, value) -> None: ...
    @RepeatTopLabels.setter
    def RepeatTopLabels(self, value) -> None: ...
    @RowHeight.setter
    def RowHeight(self, value) -> None: ...
    @Rows.setter
    def Rows(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TableBreakFlowDirection.setter
    def TableBreakFlowDirection(self, value) -> None: ...
    @TableBreakHeight.setter
    def TableBreakHeight(self, value) -> None: ...
    @TitleSuppressed.setter
    def TitleSuppressed(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @VertCellMargin.setter
    def VertCellMargin(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadTableStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateCellStyle(self, bstrCellStyle=...): ...
    def CreateCellStyleFromStyle(self, bstrCellStyle=..., bstrSourceCellStyle=...): ...
    def Delete(self): ...
    def DeleteCellStyle(self, bstrCellStyle=...): ...
    def EnableMergeAll(self, bstrCellStyle=..., bEnable=...): ...
    def Erase(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAlignment2(self, bstrCellStyle=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColor2(self, bstrCellStyle=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetCellClass(self, bstrCellStyle=...): ...
    def GetCellStyles(self, cellStylesArray=...): ...
    def GetColor(self, rowType=...): ...
    def GetColor2(self, bstrCellStyle=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetDataType2(self, bstrCellStyle=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFormat(self, rowType=...): ...
    def GetFormat2(self, bstrCellStyle=..., pbstrFormat=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridColor2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetIsCellStyleInUse(self, pszCellStyle=...): ...
    def GetIsMergeAllEnabled(self, bstrCellStyle=...): ...
    def GetRotation(self, bstrCellStyle=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextHeight2(self, bstrCellStyle=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyleId(self, bstrCellStyle=...): ...
    def GetTextStyleId32(self, bstrCellStyle=...): ...
    def GetUniqueCellStyleName(self, pszBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RenameCellStyle(self, bstrOldName=..., bstrNewName=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAlignment2(self, bstrCellStyle=..., cellAlignment=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColor2(self, bstrCellStyle=..., color=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetCellClass(self, bstrCellStyle=..., cellClass=...): ...
    def SetColor(self, rowTypes=..., pColor=...): ...
    def SetColor2(self, bstrCellStyle=..., color=...): ...
    def SetDataType(self, rowTypes=..., nDataType=..., nUnitType=...): ...
    def SetDataType2(self, bstrCellStyle=..., nDataType=..., nUnitType=...): ...
    def SetFormat(self, rowTypes=..., val=...): ...
    def SetFormat2(self, bstrCellStyle=..., bstrFormat=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridColor2(self, bstrCellStyle=..., gridLineTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLineWeight2(self, bstrCellStyle=..., gridLineTypes=..., Lineweight=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetGridVisibility2(self, bstrCellStyle=..., gridLineTypes=..., bValue=...): ...
    def SetRotation(self, bstrCellStyle=..., Rotation=...): ...
    def SetTemplateId(self, val=..., option=...): ...
    def SetTemplateId32(self, val=..., option=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextHeight2(self, bstrCellStyle=..., Height=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyleId(self, bstrCellStyle=..., val=...): ...
    def SetTextStyleId32(self, bstrCellStyle=..., val=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BitFlags(self): ...
    @property
    def Database(self): ...
    @property
    def Description(self): ...
    @property
    def Document(self): ...
    @property
    def FlowDirection(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HeaderSuppressed(self): ...
    @property
    def HorzCellMargin(self): ...
    @property
    def Name(self): ...
    @property
    def NumCellStyles(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TemplateId(self): ...
    @property
    def TemplateId32(self): ...
    @property
    def TitleSuppressed(self): ...
    @property
    def VertCellMargin(self): ...

    @BitFlags.setter
    def BitFlags(self, value) -> None: ...
    @Description.setter
    def Description(self, value) -> None: ...
    @FlowDirection.setter
    def FlowDirection(self, value) -> None: ...
    @HeaderSuppressed.setter
    def HeaderSuppressed(self, value) -> None: ...
    @HorzCellMargin.setter
    def HorzCellMargin(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TemplateId.setter
    def TemplateId(self, value) -> None: ...
    @TemplateId32.setter
    def TemplateId32(self, value) -> None: ...
    @TitleSuppressed.setter
    def TitleSuppressed(self, value) -> None: ...
    @VertCellMargin.setter
    def VertCellMargin(self, value) -> None: ...
    
class IZcadText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Alignment(self): ...
    @property
    def Application(self): ...
    @property
    def Backward(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def FieldCode(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def HorizontalAlignment(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextAlignmentPoint(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def TextString(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UpsideDown(self): ...
    @property
    def VerticalAlignment(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @Alignment.setter
    def Alignment(self, value) -> None: ...
    @Backward.setter
    def Backward(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @HorizontalAlignment.setter
    def HorizontalAlignment(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextAlignmentPoint.setter
    def TextAlignmentPoint(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UpsideDown.setter
    def UpsideDown(self, value) -> None: ...
    @VerticalAlignment.setter
    def VerticalAlignment(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadTextStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def BigFontFile(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def LastHeight(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def ObliqueAngle(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TextGenerationFlag(self): ...
    @property
    def Width(self): ...
    @property
    def fontFile(self): ...

    @BigFontFile.setter
    def BigFontFile(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LastHeight.setter
    def LastHeight(self, value) -> None: ...
    @ObliqueAngle.setter
    def ObliqueAngle(self, value) -> None: ...
    @TextGenerationFlag.setter
    def TextGenerationFlag(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @fontFile.setter
    def fontFile(self, value) -> None: ...
 
class IZcadTextStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadTolerance(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def DimensionLineColor(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def InsertionPoint(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def StyleName(self): ...
    @property
    def TextColor(self): ...
    @property
    def TextHeight(self): ...
    @property
    def TextString(self): ...
    @property
    def TextStyle(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...

    @DimensionLineColor.setter
    def DimensionLineColor(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @InsertionPoint.setter
    def InsertionPoint(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @StyleName.setter
    def StyleName(self, value) -> None: ...
    @TextColor.setter
    def TextColor(self, value) -> None: ...
    @TextHeight.setter
    def TextHeight(self, value) -> None: ...
    @TextString.setter
    def TextString(self, value) -> None: ...
    @TextStyle.setter
    def TextStyle(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadToolbar(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddSeparator(self, Index=...): ...
    def AddToolbarButton(self, Index=..., Name=..., HelpString=..., Macro=..., FlyoutButton=...): ...
    def Delete(self): ...
    def Dock(self, Side=...): ...
    def Float(self, top=..., left=..., NumberFloatRows=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def DockStatus(self): ...
    @property
    def FloatingRows(self): ...
    @property
    def Height(self): ...
    @property
    def HelpString(self): ...
    @property
    def LargeButtons(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def TagString(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def left(self): ...
    @property
    def top(self): ...

    @FloatingRows.setter
    def FloatingRows(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @left.setter
    def left(self, value) -> None: ...
    @top.setter
    def top(self, value) -> None: ...
    
class IZcadToolbarItem(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AttachToolbarToFlyout(self, MenuGroupName=..., ToolbarName=...): ...
    def Delete(self): ...
    def GetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def SetBitmaps(self, SmallIconName=..., LargeIconName=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CommandDisplayName(self): ...
    @property
    def Flyout(self): ...
    @property
    def HelpString(self): ...
    @property
    def Index(self): ...
    @property
    def Macro(self): ...
    @property
    def Name(self): ...
    @property
    def Parent(self): ...
    @property
    def TagString(self): ...
    @property
    def Type(self): ...

    @CommandDisplayName.setter
    def CommandDisplayName(self, value) -> None: ...
    @HelpString.setter
    def HelpString(self, value) -> None: ...
    @Macro.setter
    def Macro(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TagString.setter
    def TagString(self, value) -> None: ...
    
class IZcadToolbars(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, ToolbarName=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def LargeButtons(self): ...
    @property
    def Parent(self): ...
    @LargeButtons.setter
    def LargeButtons(self, value) -> None: ...
    
class IZcadTrace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Coordinates(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Normal(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Thickness(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @Coordinates.setter
    def Coordinates(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Normal.setter
    def Normal(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Thickness.setter
    def Thickness(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadUCS(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetUCSMatrix(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def XVector(self): ...
    @property
    def YVector(self): ...

    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @XVector.setter
    def XVector(self, value) -> None: ...
    @YVector.setter
    def YVector(self, value) -> None: ...
    
class IZcadUCSs(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Origin=..., XAxisPoint=..., YAxisPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def AdjustForBackground(self): ...
    @property
    def Application(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def File(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ItemName(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Monochrome(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Position(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def TrueColor(self): ...
    @property
    def UnderlayLayerOverrideApplied(self): ...
    @property
    def UnderlayName(self): ...
    @property
    def UnderlayVisibility(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...

    @AdjustForBackground.setter
    def AdjustForBackground(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @File.setter
    def File(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @ItemName.setter
    def ItemName(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Monochrome.setter
    def Monochrome(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Position.setter
    def Position(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @UnderlayLayerOverrideApplied.setter
    def UnderlayLayerOverrideApplied(self, value) -> None: ...
    @UnderlayName.setter
    def UnderlayName(self, value) -> None: ...
    @UnderlayVisibility.setter
    def UnderlayVisibility(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadUtility(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AngleFromXAxis(self, StartPoint=..., EndPoint=...): ...
    def AngleToReal(self, Angle=..., Unit=...): ...
    def AngleToString(self, Angle=..., Unit=..., precision=...): ...
    def CreateTypedArray(self, *args): ...
    def DistanceToReal(self, Distance=..., Unit=...): ...
    def GetAngle(self, Point=..., Prompt=...): ...
    def GetCorner(self, Point=..., Prompt=...): ...
    def GetDistance(self, Point=..., Prompt=...): ...
    def GetEntity(self, Object=..., PickedPoint=..., Prompt=...): ...
    def GetInput(self): ...
    def GetInteger(self, Prompt=...): ...
    def GetKeyword(self, Prompt=...): ...
    def GetObjectIdString(self, Object=..., bHex=...): ...
    def GetOrientation(self, Point=..., Prompt=...): ...
    def GetPoint(self, Point=..., Prompt=...): ...
    def GetReal(self, Prompt=...): ...
    def GetRemoteFile(self, URL=..., LocalFile=..., IgnoreCache=...): ...
    def GetString(self, HasSpaces=..., Prompt=...): ...
    def GetSubEntity(self, Object=..., PickedPoint=..., transMatrix=..., ContextData=..., Prompt=...): ...
    def InitializeUserInput(self, Bits=..., KeyWordList=...): ...
    def IsRemoteFile(self, LocalFile=..., URL=...): ...
    def IsURL(self, URL=...): ...
    def LaunchBrowserDialog(self, SelectedURL=..., DialogTitle=..., OpenButtonCaption=..., StartPageURL=..., RegistryRootKey=..., OpenButtonAlwaysEnabled=...): ...
    def PolarPoint(self, Point=..., Angle=..., Distance=...): ...
    def Prompt(self, Message=...): ...
    def PutRemoteFile(self, URL=..., LocalFile=...): ...
    def RealToString(self, Value=..., Unit=..., precision=...): ...
    def SendModelessOperationEnded(self, Context=...): ...
    def SendModelessOperationStart(self, Context=...): ...
    def TranslateCoordinates(self, Point=..., FromCoordSystem=..., ToCoordSystem=..., Displacement=..., OCSNormal=...): ...
    def __iter__(self): ...

class IZcadView(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def CategoryName(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def HasVpAssociation(self): ...
    @property
    def Height(self): ...
    @property
    def LayerState(self): ...
    @property
    def LayoutId(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def Target(self): ...
    @property
    def Width(self): ...

    @CategoryName.setter
    def CategoryName(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @HasVpAssociation.setter
    def HasVpAssociation(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @LayerState.setter
    def LayerState(self, value) -> None: ...
    @LayoutId.setter
    def LayoutId(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    
class IZcadViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetView(self, View=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Split(self, NumWins=...): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def ArcSmoothness(self): ...
    @property
    def Center(self): ...
    @property
    def Database(self): ...
    @property
    def Direction(self): ...
    @property
    def Document(self): ...
    @property
    def GridOn(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def LowerLeftCorner(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OrthoOn(self): ...
    @property
    def OwnerID(self): ...
    @property
    def SnapBasePoint(self): ...
    @property
    def SnapOn(self): ...
    @property
    def SnapRotationAngle(self): ...
    @property
    def Target(self): ...
    @property
    def UCSIconAtOrigin(self): ...
    @property
    def UCSIconOn(self): ...
    @property
    def UpperRightCorner(self): ...
    @property
    def Width(self): ...

    @ArcSmoothness.setter
    def ArcSmoothness(self, value) -> None: ...
    @Center.setter
    def Center(self, value) -> None: ...
    @Direction.setter
    def Direction(self, value) -> None: ...
    @GridOn.setter
    def GridOn(self, value) -> None: ...
    @Height.setter
    def Height(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @OrthoOn.setter
    def OrthoOn(self, value) -> None: ...
    @SnapBasePoint.setter
    def SnapBasePoint(self, value) -> None: ...
    @SnapOn.setter
    def SnapOn(self, value) -> None: ...
    @SnapRotationAngle.setter
    def SnapRotationAngle(self, value) -> None: ...
    @Target.setter
    def Target(self, value) -> None: ...
    @UCSIconAtOrigin.setter
    def UCSIconAtOrigin(self, value) -> None: ...
    @UCSIconOn.setter
    def UCSIconOn(self, value) -> None: ...
    @Width.setter
    def Width(self, value) -> None: ...
    
class IZcadViewports(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def DeleteConfiguration(self, Name=...): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadViews(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...
    @property
    def Application(self): ...
    @property
    def Count(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    
class IZcadWipeout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self): ...
    @property
    def Brightness(self): ...
    @property
    def ClippingEnabled(self): ...
    @property
    def Contrast(self): ...
    @property
    def Database(self): ...
    @property
    def Document(self): ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Fade(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Height(self): ...
    @property
    def Hyperlinks(self): ...
    @property
    def ImageFile(self): ...
    @property
    def ImageHeight(self): ...
    @property
    def ImageVisibility(self): ...
    @property
    def ImageWidth(self): ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def Origin(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def Rotation(self): ...
    @property
    def ScaleFactor(self): ...
    @property
    def ShowRotation(self): ...
    @property
    def TrueColor(self): ...
    @property
    def Visible(self): ...
    @property
    def Width(self): ...
    @property
    def color(self): ...
    @property
    def transparency(self): ...
    @Brightness.setter
    def Brightness(self, value) -> None: ...
    @ClippingEnabled.setter
    def ClippingEnabled(self, value) -> None: ...
    @Contrast.setter
    def Contrast(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Fade.setter
    def Fade(self, value) -> None: ...
    @ImageFile.setter
    def ImageFile(self, value) -> None: ...
    @ImageHeight.setter
    def ImageHeight(self, value) -> None: ...
    @ImageVisibility.setter
    def ImageVisibility(self, value) -> None: ...
    @ImageWidth.setter
    def ImageWidth(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @Name.setter
    def Name(self, value) -> None: ...
    @Origin.setter
    def Origin(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @Rotation.setter
    def Rotation(self, value) -> None: ...
    @ScaleFactor.setter
    def ScaleFactor(self, value) -> None: ...
    @ShowRotation.setter
    def ShowRotation(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    @transparency.setter
    def transparency(self, value) -> None: ...

class IZcadXRecord(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def GetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IZcadApplication: ...
    @property
    def Database(self) -> IZcadDatabase: ...
    @property
    def Document(self) -> IZcadDocument: ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Name(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def TranslateIDs(self): ...
    @Name.setter
    def Name(self, value) -> None: ...
    @TranslateIDs.setter
    def TranslateIDs(self, value) -> None: ...
    
class IZcadXline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...
    @property
    def Application(self) -> IZcadApplication: ...
    @property
    def Database(self) -> IZcadDatabase: ...
    @property
    def Document(self) -> IZcadDocument: ...
    @property
    def EntityName(self): ...
    @property
    def EntityTransparency(self): ...
    @property
    def EntityType(self): ...
    @property
    def Handle(self): ...
    @property
    def HasExtensionDictionary(self): ...
    @property
    def Hyperlinks(self) -> IZcadHyperlinks: ...
    @property
    def Layer(self): ...
    @property
    def Linetype(self): ...
    @property
    def LinetypeScale(self): ...
    @property
    def Lineweight(self): ...
    @property
    def Material(self): ...
    @property
    def ObjectID(self): ...
    @property
    def ObjectName(self): ...
    @property
    def OwnerID(self): ...
    @property
    def PlotStyleName(self): ...
    @property
    def TrueColor(self) -> IZcadZcCmColor: ...
    @property
    def Visible(self): ...
    @property
    def color(self): ...
    @property
    def BasePoint(self): ...
    @property
    def DirectionVector(self): ...
    @property
    def SecondPoint(self): ...
    @BasePoint.setter
    def BasePoint(self, value) -> None: ...
    @DirectionVector.setter
    def DirectionVector(self, value) -> None: ...
    @SecondPoint.setter
    def SecondPoint(self, value) -> None: ...
    @EntityTransparency.setter
    def EntityTransparency(self, value) -> None: ...
    @Layer.setter
    def Layer(self, value) -> None: ...
    @Linetype.setter
    def Linetype(self, value) -> None: ...
    @LinetypeScale.setter
    def LinetypeScale(self, value) -> None: ...
    @Lineweight.setter
    def Lineweight(self, value) -> None: ...
    @Material.setter
    def Material(self, value) -> None: ...
    @PlotStyleName.setter
    def PlotStyleName(self, value) -> None: ...
    @TrueColor.setter
    def TrueColor(self, value) -> None: ...
    @Visible.setter
    def Visible(self, value) -> None: ...
    @color.setter
    def color(self, value) -> None: ...
    
class IZcadZcCmColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def SetColorBookColor(self, BookName=..., ColorName=...): ...
    def SetNames(self, ColorName=..., BookName=...): ...
    def SetRGB(self, Red=..., Green=..., Blue=...): ...
    def __iter__(self): ...
    @property
    def Blue(self): ...
    @property
    def BookName(self): ...
    @property
    def ColorIndex(self): ...
    @property
    def ColorMethod(self): ...
    @property
    def ColorName(self): ...
    @property
    def EntityColor(self): ...
    @property
    def Green(self): ...
    @property
    def Red(self): ...
    @ColorIndex.setter
    def ColorIndex(self, value) -> None: ...
    @ColorMethod.setter
    def ColorMethod(self, value) -> None: ...
    @EntityColor.setter
    def EntityColor(self, value) -> None: ...
    
class _DZcadApplicationEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class _DZcadDocumentEvents:
    CLSID: Incomplete
    CLSID_Sink: Incomplete
    coclass_clsid: Incomplete
    def __init__(self, oobj: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class ArcTextObj(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IArcTextObj

class Zcad3DFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DFace

class Zcad3DPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DPolyline

class Zcad3DSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DSolid

class ZcadApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadApplication

class ZcadApplicationMinorVersion(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadApplication

class ZcadArc(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadArc

class ZcadAttribute(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadAttribute

class ZcadAttributeReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadAttributeReference

class ZcadBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadBlockReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadBlockReference

class ZcadBlocks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadBlocks

class ZcadCircle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadCircle

class ZcadDatabase(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDatabase

class ZcadDatabasePreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDatabasePreferences

class ZcadDgnUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUnderlay

class ZcadDictionaries(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDictionaries

class ZcadDictionary(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDictionary

class ZcadDim3PointAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDim3PointAngular

class ZcadDimAligned(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimAligned

class ZcadDimAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimAngular

class ZcadDimArcLength(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimArcLength

class ZcadDimDiametric(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimDiametric

class ZcadDimOrdinate(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimOrdinate

class ZcadDimRadial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRadial

class ZcadDimRadialLarge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRadialLarge

class ZcadDimRotated(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRotated

class ZcadDimStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimStyle

class ZcadDimStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimStyles

class ZcadDimension(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimension

class ZcadDocument(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    default_source: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDocument

class ZcadDocuments(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDocuments

class ZcadDwfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDwfUnderlay

class ZcadDynamicBlockReferenceProperty(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDynamicBlockReferenceProperty

class ZcadEllipse(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadEllipse

class ZcadEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadEntity

class ZcadExternalReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadExternalReference

class ZcadExtrudedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadExtrudedSurface

class ZcadFileDependencies(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadFileDependencies

class ZcadFileDependency(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadFileDependency

class ZcadGeoPositionMarker(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGeoPositionMarker

class ZcadGeomapImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGeomapImage

class ZcadGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGroup

class ZcadGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGroups

class ZcadHatch(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHatch

class ZcadHelix(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHelix

class ZcadHyperlink(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHyperlink

class ZcadHyperlinks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHyperlinks

class ZcadIdPair(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadIdPair

class ZcadLWPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLWPolyline

class ZcadLayer(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayer

class ZcadLayerStateManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayerStateManager

class ZcadLayers(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayers

class ZcadLayout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayout

class ZcadLayouts(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayouts

class ZcadLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLeader

class ZcadLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLine

class ZcadLineType(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLineType

class ZcadLineTypes(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLineTypes

class ZcadLoftedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLoftedSurface

class ZcadMInsertBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMInsertBlock

class ZcadMLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeader

class ZcadMLeaderLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeaderLeader

class ZcadMLeaderStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeaderStyle

class ZcadMLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLine

class ZcadMText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMText

class ZcadMaterial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMaterial

class ZcadMaterials(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMaterials

class ZcadMenuBar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMenuBar

class ZcadMenuGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMenuGroup

class ZcadMenuGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMenuGroups

class ZcadModelSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadModelSpace

class ZcadNurbSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadNurbSurface

class ZcadObject(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadObject

class ZcadObjectEvents(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadOle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadOle

class ZcadPViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPViewport

class ZcadPaperSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadPdfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUnderlay

class ZcadPlaneSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlaneSurface

class ZcadPlot(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlot

class ZcadPlotConfiguration(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlotConfiguration

class ZcadPlotConfigurations(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlotConfigurations

class ZcadPoint(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPoint

class ZcadPointCloud(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPointCloud

class ZcadPointCloudEx(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPointCloudEx2

class ZcadPolyfaceMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolyfaceMesh

class ZcadPolygonMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolygonMesh

class ZcadPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolyline

class ZcadPopupMenu(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPopupMenu

class ZcadPopupMenuItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPopupMenuItem

class ZcadPopupMenus(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPopupMenus

class ZcadPreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferences

class ZcadPreferencesDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesDisplay

class ZcadPreferencesDrafting(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesDrafting

class ZcadPreferencesFiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesFiles

class ZcadPreferencesOpenSave(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesOpenSave

class ZcadPreferencesOutput(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesOutput

class ZcadPreferencesProfiles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesProfiles

class ZcadPreferencesSelection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesSelection

class ZcadPreferencesSystem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesSystem

class ZcadPreferencesUser(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPreferencesUser

class ZcadRasterImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRasterImage

class ZcadRay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRay

class ZcadRegion(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegion

class ZcadRegisteredApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegisteredApplication

class ZcadRegisteredApplications(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegisteredApplications

class ZcadRevolvedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRevolvedSurface

class ZcadSection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSection

class ZcadSectionManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionManager

class ZcadSectionSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionSettings

class ZcadSectionTypeSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionTypeSettings

class ZcadSecurityParams(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSecurityParams

class ZcadSelectionSet(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSelectionSet

class ZcadSelectionSets(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSelectionSets

class ZcadShadowDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadShadowDisplay

class ZcadShape(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadShape

class ZcadSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSolid

class ZcadSortentsTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSortentsTable

class ZcadSpline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSpline

class ZcadState(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadState

class ZcadSubDMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMesh

class ZcadSubDMeshEdge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshEdge

class ZcadSubDMeshFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshFace

class ZcadSubDMeshVertex(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshVertex

class ZcadSubEntSolidEdge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidEdge

class ZcadSubEntSolidFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidFace

class ZcadSubEntSolidNode(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidNode

class ZcadSubEntSolidVertex(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidVertex

class ZcadSubEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntity

class ZcadSummaryInfo(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSummaryInfo

class ZcadSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSurface

class ZcadSweptSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSweptSurface

class ZcadTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTable

class ZcadTableStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTableStyle

class ZcadText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadText

class ZcadTextStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTextStyle

class ZcadTextStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTextStyles

class ZcadTolerance(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTolerance

class ZcadToolbar(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadToolbar

class ZcadToolbarItem(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadToolbarItem

class ZcadToolbars(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadToolbars

class ZcadTrace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTrace

class ZcadUCS(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUCS

class ZcadUCSs(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUCSs

class ZcadUtility(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUtility

class ZcadView(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadView

class ZcadViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViewport

class ZcadViewports(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViewports

class ZcadViews(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViews

class ZcadWipeout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadWipeout

class ZcadXRecord(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadXRecord

class ZcadXline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadXline

class ZcadZcCmColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadZcCmColor

IArcTextObj_vtables_dispatch_: int
IArcTextObj_vtables_: Incomplete
IZcad3DFace_vtables_dispatch_: int
IZcad3DFace_vtables_: Incomplete
IZcad3DPolyline_vtables_dispatch_: int
IZcad3DPolyline_vtables_: Incomplete
IZcad3DSolid_vtables_dispatch_: int
IZcad3DSolid_vtables_: Incomplete
IZcadApplication_vtables_dispatch_: int
IZcadApplication_vtables_: Incomplete
IZcadArc_vtables_dispatch_: int
IZcadArc_vtables_: Incomplete
IZcadAttribute_vtables_dispatch_: int
IZcadAttribute_vtables_: Incomplete
IZcadAttributeReference_vtables_dispatch_: int
IZcadAttributeReference_vtables_: Incomplete
IZcadBlock_vtables_dispatch_: int
IZcadBlock_vtables_: Incomplete
IZcadBlockReference_vtables_dispatch_: int
IZcadBlockReference_vtables_: Incomplete
IZcadBlocks_vtables_dispatch_: int
IZcadBlocks_vtables_: Incomplete
IZcadCircle_vtables_dispatch_: int
IZcadCircle_vtables_: Incomplete
IZcadDatabase_vtables_dispatch_: int
IZcadDatabase_vtables_: Incomplete
IZcadDatabasePreferences_vtables_dispatch_: int
IZcadDatabasePreferences_vtables_: Incomplete
IZcadDictionaries_vtables_dispatch_: int
IZcadDictionaries_vtables_: Incomplete
IZcadDictionary_vtables_dispatch_: int
IZcadDictionary_vtables_: Incomplete
IZcadDim3PointAngular_vtables_dispatch_: int
IZcadDim3PointAngular_vtables_: Incomplete
IZcadDimAligned_vtables_dispatch_: int
IZcadDimAligned_vtables_: Incomplete
IZcadDimAngular_vtables_dispatch_: int
IZcadDimAngular_vtables_: Incomplete
IZcadDimArcLength_vtables_dispatch_: int
IZcadDimArcLength_vtables_: Incomplete
IZcadDimDiametric_vtables_dispatch_: int
IZcadDimDiametric_vtables_: Incomplete
IZcadDimOrdinate_vtables_dispatch_: int
IZcadDimOrdinate_vtables_: Incomplete
IZcadDimRadial_vtables_dispatch_: int
IZcadDimRadial_vtables_: Incomplete
IZcadDimRadialLarge_vtables_dispatch_: int
IZcadDimRadialLarge_vtables_: Incomplete
IZcadDimRotated_vtables_dispatch_: int
IZcadDimRotated_vtables_: Incomplete
IZcadDimStyle_vtables_dispatch_: int
IZcadDimStyle_vtables_: Incomplete
IZcadDimStyles_vtables_dispatch_: int
IZcadDimStyles_vtables_: Incomplete
IZcadDimension_vtables_dispatch_: int
IZcadDimension_vtables_: Incomplete
IZcadDocument_vtables_dispatch_: int
IZcadDocument_vtables_: Incomplete
IZcadDocuments_vtables_dispatch_: int
IZcadDocuments_vtables_: Incomplete
IZcadDwfUnderlay_vtables_dispatch_: int
IZcadDwfUnderlay_vtables_: Incomplete
IZcadDynamicBlockReferenceProperty_vtables_dispatch_: int
IZcadDynamicBlockReferenceProperty_vtables_: Incomplete
IZcadEllipse_vtables_dispatch_: int
IZcadEllipse_vtables_: Incomplete
IZcadEntity_vtables_dispatch_: int
IZcadEntity_vtables_: Incomplete
IZcadExternalReference_vtables_dispatch_: int
IZcadExternalReference_vtables_: Incomplete
IZcadExtrudedSurface_vtables_dispatch_: int
IZcadExtrudedSurface_vtables_: Incomplete
IZcadFileDependencies_vtables_dispatch_: int
IZcadFileDependencies_vtables_: Incomplete
IZcadFileDependency_vtables_dispatch_: int
IZcadFileDependency_vtables_: Incomplete
IZcadGeoPositionMarker_vtables_dispatch_: int
IZcadGeoPositionMarker_vtables_: Incomplete
IZcadGeomapImage_vtables_dispatch_: int
IZcadGeomapImage_vtables_: Incomplete
IZcadGroup_vtables_dispatch_: int
IZcadGroup_vtables_: Incomplete
IZcadGroups_vtables_dispatch_: int
IZcadGroups_vtables_: Incomplete
IZcadHatch_vtables_dispatch_: int
IZcadHatch_vtables_: Incomplete
IZcadHelix_vtables_dispatch_: int
IZcadHelix_vtables_: Incomplete
IZcadHyperlink_vtables_dispatch_: int
IZcadHyperlink_vtables_: Incomplete
IZcadHyperlinks_vtables_dispatch_: int
IZcadHyperlinks_vtables_: Incomplete
IZcadIdPair_vtables_dispatch_: int
IZcadIdPair_vtables_: Incomplete
IZcadLWPolyline_vtables_dispatch_: int
IZcadLWPolyline_vtables_: Incomplete
IZcadLayer_vtables_dispatch_: int
IZcadLayer_vtables_: Incomplete
IZcadLayerStateManager_vtables_dispatch_: int
IZcadLayerStateManager_vtables_: Incomplete
IZcadLayers_vtables_dispatch_: int
IZcadLayers_vtables_: Incomplete
IZcadLayout_vtables_dispatch_: int
IZcadLayout_vtables_: Incomplete
IZcadLayouts_vtables_dispatch_: int
IZcadLayouts_vtables_: Incomplete
IZcadLeader_vtables_dispatch_: int
IZcadLeader_vtables_: Incomplete
IZcadLine_vtables_dispatch_: int
IZcadLine_vtables_: Incomplete
IZcadLineType_vtables_dispatch_: int
IZcadLineType_vtables_: Incomplete
IZcadLineTypes_vtables_dispatch_: int
IZcadLineTypes_vtables_: Incomplete
IZcadLoftedSurface_vtables_dispatch_: int
IZcadLoftedSurface_vtables_: Incomplete
IZcadMInsertBlock_vtables_dispatch_: int
IZcadMInsertBlock_vtables_: Incomplete
IZcadMLeader_vtables_dispatch_: int
IZcadMLeader_vtables_: Incomplete
IZcadMLeaderLeader_vtables_dispatch_: int
IZcadMLeaderLeader_vtables_: Incomplete
IZcadMLeaderStyle_vtables_dispatch_: int
IZcadMLeaderStyle_vtables_: Incomplete
IZcadMLine_vtables_dispatch_: int
IZcadMLine_vtables_: Incomplete
IZcadMText_vtables_dispatch_: int
IZcadMText_vtables_: Incomplete
IZcadMaterial_vtables_dispatch_: int
IZcadMaterial_vtables_: Incomplete
IZcadMaterials_vtables_dispatch_: int
IZcadMaterials_vtables_: Incomplete
IZcadMenuBar_vtables_dispatch_: int
IZcadMenuBar_vtables_: Incomplete
IZcadMenuGroup_vtables_dispatch_: int
IZcadMenuGroup_vtables_: Incomplete
IZcadMenuGroups_vtables_dispatch_: int
IZcadMenuGroups_vtables_: Incomplete
IZcadModelSpace_vtables_dispatch_: int
IZcadModelSpace_vtables_: Incomplete
IZcadModelSpace2_vtables_dispatch_: int
IZcadModelSpace2_vtables_: Incomplete
IZcadNurbSurface_vtables_dispatch_: int
IZcadNurbSurface_vtables_: Incomplete
IZcadObject_vtables_dispatch_: int
IZcadObject_vtables_: Incomplete
IZcadObjectEvents_vtables_dispatch_: int
IZcadObjectEvents_vtables_: Incomplete
IZcadOle_vtables_dispatch_: int
IZcadOle_vtables_: Incomplete
IZcadPViewport_vtables_dispatch_: int
IZcadPViewport_vtables_: Incomplete
IZcadPaperSpace_vtables_dispatch_: int
IZcadPaperSpace_vtables_: Incomplete
IZcadPlaneSurface_vtables_dispatch_: int
IZcadPlaneSurface_vtables_: Incomplete
IZcadPlot_vtables_dispatch_: int
IZcadPlot_vtables_: Incomplete
IZcadPlotConfiguration_vtables_dispatch_: int
IZcadPlotConfiguration_vtables_: Incomplete
IZcadPlotConfigurations_vtables_dispatch_: int
IZcadPlotConfigurations_vtables_: Incomplete
IZcadPoint_vtables_dispatch_: int
IZcadPoint_vtables_: Incomplete
IZcadPointCloud_vtables_dispatch_: int
IZcadPointCloud_vtables_: Incomplete
IZcadPointCloudEx_vtables_dispatch_: int
IZcadPointCloudEx_vtables_: Incomplete
IZcadPointCloudEx2_vtables_dispatch_: int
IZcadPointCloudEx2_vtables_: Incomplete
IZcadPolyfaceMesh_vtables_dispatch_: int
IZcadPolyfaceMesh_vtables_: Incomplete
IZcadPolygonMesh_vtables_dispatch_: int
IZcadPolygonMesh_vtables_: Incomplete
IZcadPolyline_vtables_dispatch_: int
IZcadPolyline_vtables_: Incomplete
IZcadPopupMenu_vtables_dispatch_: int
IZcadPopupMenu_vtables_: Incomplete
IZcadPopupMenuItem_vtables_dispatch_: int
IZcadPopupMenuItem_vtables_: Incomplete
IZcadPopupMenus_vtables_dispatch_: int
IZcadPopupMenus_vtables_: Incomplete
IZcadPreferences_vtables_dispatch_: int
IZcadPreferences_vtables_: Incomplete
IZcadPreferencesDisplay_vtables_dispatch_: int
IZcadPreferencesDisplay_vtables_: Incomplete
IZcadPreferencesDrafting_vtables_dispatch_: int
IZcadPreferencesDrafting_vtables_: Incomplete
IZcadPreferencesFiles_vtables_dispatch_: int
IZcadPreferencesFiles_vtables_: Incomplete
IZcadPreferencesOpenSave_vtables_dispatch_: int
IZcadPreferencesOpenSave_vtables_: Incomplete
IZcadPreferencesOutput_vtables_dispatch_: int
IZcadPreferencesOutput_vtables_: Incomplete
IZcadPreferencesProfiles_vtables_dispatch_: int
IZcadPreferencesProfiles_vtables_: Incomplete
IZcadPreferencesSelection_vtables_dispatch_: int
IZcadPreferencesSelection_vtables_: Incomplete
IZcadPreferencesSystem_vtables_dispatch_: int
IZcadPreferencesSystem_vtables_: Incomplete
IZcadPreferencesUser_vtables_dispatch_: int
IZcadPreferencesUser_vtables_: Incomplete
IZcadRasterImage_vtables_dispatch_: int
IZcadRasterImage_vtables_: Incomplete
IZcadRay_vtables_dispatch_: int
IZcadRay_vtables_: Incomplete
IZcadRegion_vtables_dispatch_: int
IZcadRegion_vtables_: Incomplete
IZcadRegisteredApplication_vtables_dispatch_: int
IZcadRegisteredApplication_vtables_: Incomplete
IZcadRegisteredApplications_vtables_dispatch_: int
IZcadRegisteredApplications_vtables_: Incomplete
IZcadRevolvedSurface_vtables_dispatch_: int
IZcadRevolvedSurface_vtables_: Incomplete
IZcadSection_vtables_dispatch_: int
IZcadSection_vtables_: Incomplete
IZcadSection2_vtables_dispatch_: int
IZcadSection2_vtables_: Incomplete
IZcadSectionManager_vtables_dispatch_: int
IZcadSectionManager_vtables_: Incomplete
IZcadSectionSettings_vtables_dispatch_: int
IZcadSectionSettings_vtables_: Incomplete
IZcadSectionTypeSettings_vtables_dispatch_: int
IZcadSectionTypeSettings_vtables_: Incomplete
IZcadSectionTypeSettings2_vtables_dispatch_: int
IZcadSectionTypeSettings2_vtables_: Incomplete
IZcadSecurityParams_vtables_dispatch_: int
IZcadSecurityParams_vtables_: Incomplete
IZcadSelectionSet_vtables_dispatch_: int
IZcadSelectionSet_vtables_: Incomplete
IZcadSelectionSets_vtables_dispatch_: int
IZcadSelectionSets_vtables_: Incomplete
IZcadShadowDisplay_vtables_dispatch_: int
IZcadShadowDisplay_vtables_: Incomplete
IZcadShape_vtables_dispatch_: int
IZcadShape_vtables_: Incomplete
IZcadSolid_vtables_dispatch_: int
IZcadSolid_vtables_: Incomplete
IZcadSortentsTable_vtables_dispatch_: int
IZcadSortentsTable_vtables_: Incomplete
IZcadSpline_vtables_dispatch_: int
IZcadSpline_vtables_: Incomplete
IZcadState_vtables_dispatch_: int
IZcadState_vtables_: Incomplete
IZcadSubDMesh_vtables_dispatch_: int
IZcadSubDMesh_vtables_: Incomplete
IZcadSubDMeshEdge_vtables_dispatch_: int
IZcadSubDMeshEdge_vtables_: Incomplete
IZcadSubDMeshFace_vtables_dispatch_: int
IZcadSubDMeshFace_vtables_: Incomplete
IZcadSubDMeshVertex_vtables_dispatch_: int
IZcadSubDMeshVertex_vtables_: Incomplete
IZcadSubEntSolidEdge_vtables_dispatch_: int
IZcadSubEntSolidEdge_vtables_: Incomplete
IZcadSubEntSolidFace_vtables_dispatch_: int
IZcadSubEntSolidFace_vtables_: Incomplete
IZcadSubEntSolidNode_vtables_dispatch_: int
IZcadSubEntSolidNode_vtables_: Incomplete
IZcadSubEntSolidVertex_vtables_dispatch_: int
IZcadSubEntSolidVertex_vtables_: Incomplete
IZcadSubEntity_vtables_dispatch_: int
IZcadSubEntity_vtables_: Incomplete
IZcadSummaryInfo_vtables_dispatch_: int
IZcadSummaryInfo_vtables_: Incomplete
IZcadSurface_vtables_dispatch_: int
IZcadSurface_vtables_: Incomplete
IZcadSweptSurface_vtables_dispatch_: int
IZcadSweptSurface_vtables_: Incomplete
IZcadTable_vtables_dispatch_: int
IZcadTable_vtables_: Incomplete
IZcadTableStyle_vtables_dispatch_: int
IZcadTableStyle_vtables_: Incomplete
IZcadText_vtables_dispatch_: int
IZcadText_vtables_: Incomplete
IZcadTextStyle_vtables_dispatch_: int
IZcadTextStyle_vtables_: Incomplete
IZcadTextStyles_vtables_dispatch_: int
IZcadTextStyles_vtables_: Incomplete
IZcadTolerance_vtables_dispatch_: int
IZcadTolerance_vtables_: Incomplete
IZcadToolbar_vtables_dispatch_: int
IZcadToolbar_vtables_: Incomplete
IZcadToolbarItem_vtables_dispatch_: int
IZcadToolbarItem_vtables_: Incomplete
IZcadToolbars_vtables_dispatch_: int
IZcadToolbars_vtables_: Incomplete
IZcadTrace_vtables_dispatch_: int
IZcadTrace_vtables_: Incomplete
IZcadUCS_vtables_dispatch_: int
IZcadUCS_vtables_: Incomplete
IZcadUCSs_vtables_dispatch_: int
IZcadUCSs_vtables_: Incomplete
IZcadUnderlay_vtables_dispatch_: int
IZcadUnderlay_vtables_: Incomplete
IZcadUtility_vtables_dispatch_: int
IZcadUtility_vtables_: Incomplete
IZcadView_vtables_dispatch_: int
IZcadView_vtables_: Incomplete
IZcadViewport_vtables_dispatch_: int
IZcadViewport_vtables_: Incomplete
IZcadViewports_vtables_dispatch_: int
IZcadViewports_vtables_: Incomplete
IZcadViews_vtables_dispatch_: int
IZcadViews_vtables_: Incomplete
IZcadWipeout_vtables_dispatch_: int
IZcadWipeout_vtables_: Incomplete
IZcadXRecord_vtables_dispatch_: int
IZcadXRecord_vtables_: Incomplete
IZcadXline_vtables_dispatch_: int
IZcadXline_vtables_: Incomplete
IZcadZcCmColor_vtables_dispatch_: int
IZcadZcCmColor_vtables_: Incomplete
RecordMap: Incomplete
CLSIDToClassMap: Incomplete
CLSIDToPackageMap: Incomplete
VTablesToPackageMap: Incomplete
VTablesToClassMap: Incomplete
NamesToIIDMap: Incomplete
