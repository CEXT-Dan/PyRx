from _typeshed import Incomplete
from win32com.client import CoClassBaseClass, DispatchBaseClass

makepy_version: str
python_version: int
defaultNamedOptArg: Incomplete
defaultNamedNotOptArg: Incomplete
defaultUnnamedArg: Incomplete
CLSID: Incomplete
MajorVersion: int
MinorVersion: int
LibraryFlags: int
LCID: int

class constants:
    zcCubicSpline3DPoly: int
    zcQuadSpline3DPoly: int
    zcSimple3DPoly: int
    zcModelSpace: int
    zcPaperSpace: int
    zcAlignmentAligned: int
    zcAlignmentBottomCenter: int
    zcAlignmentBottomLeft: int
    zcAlignmentBottomRight: int
    zcAlignmentCenter: int
    zcAlignmentFit: int
    zcAlignmentLeft: int
    zcAlignmentMiddle: int
    zcAlignmentMiddleCenter: int
    zcAlignmentMiddleLeft: int
    zcAlignmentMiddleRight: int
    zcAlignmentRight: int
    zcAlignmentTopCenter: int
    zcAlignmentTopLeft: int
    zcAlignmentTopRight: int
    zcAlignPntAcquisitionAutomatic: int
    zcAlignPntAcquisitionShiftToAcquire: int
    zcDegreeMinuteSeconds: int
    zcDegrees: int
    zcGrads: int
    zcRadians: int
    zcAttachmentPointBottomCenter: int
    zcAttachmentPointBottomLeft: int
    zcAttachmentPointBottomRight: int
    zcAttachmentPointMiddleCenter: int
    zcAttachmentPointMiddleLeft: int
    zcAttachmentPointMiddleRight: int
    zcAttachmentPointTopCenter: int
    zcAttachmentPointTopLeft: int
    zcAttachmentPointTopRight: int
    zcAttributeModeConstant: int
    zcAttributeModeInvisible: int
    zcAttributeModeLockPosition: int
    zcAttributeModeMultipleLine: int
    zcAttributeModeNormal: int
    zcAttributeModePreset: int
    zcAttributeModeVerify: int
    zcConnectBase: int
    zcConnectExtents: int
    zcAny: int
    zcUniform: int
    zcFalse: int
    zcTrue: int
    zcIntersection: int
    zcSubtraction: int
    zcUnion: int
    zcBottomCenter: int
    zcBottomLeft: int
    zcBottomRight: int
    zcMiddleCenter: int
    zcMiddleLeft: int
    zcMiddleRight: int
    zcTopCenter: int
    zcTopLeft: int
    zcTopRight: int
    zcCellContentLayoutFlow: int
    zcCellContentLayoutStackedHorizontal: int
    zcCellContentLayoutStackedVertical: int
    zcCellContentTypeBlock: int
    zcCellContentTypeField: int
    zcCellContentTypeUnknown: int
    zcCellContentTypeValue: int
    zcBottomMask: int
    zcLeftMask: int
    zcRightMask: int
    zcTopMask: int
    zcCellMarginBottom: int
    zcCellMarginHorzSpacing: int
    zcCellMarginLeft: int
    zcCellMarginRight: int
    zcCellMarginTop: int
    zcCellMarginVertSpacing: int
    kCellOptionNone: int
    kInheritCellFormat: int
    zcAlignmentProperty: int
    zcAllCellProperties: int
    zcAutoScale: int
    zcBackgroundColor: int
    zcBitProperties: int
    zcContentColor: int
    zcContentLayout: int
    zcContentProperties: int
    zcDataFormat: int
    zcDataType: int
    zcDataTypeAndFormat: int
    zcEnableBackgroundColor: int
    zcFlowDirBtoT: int
    zcInvalidCellProperty: int
    zcLock: int
    zcMarginBottom: int
    zcMarginLeft: int
    zcMarginRight: int
    zcMarginTop: int
    zcMergeAll: int
    zcRotation: int
    zcScale: int
    zcTextHeight: int
    zcTextStyle: int
    zcCellStateContentLocked: int
    zcCellStateContentModified: int
    zcCellStateContentReadOnly: int
    zcCellStateFormatLocked: int
    zcCellStateFormatModified: int
    zcCellStateFormatReadOnly: int
    zcCellStateLinked: int
    zcCellStateNone: int
    zcBlockCell: int
    zcTextCell: int
    zcUnknownCell: int
    zcBlue: int
    zcByBlock: int
    zcByLayer: int
    zcCyan: int
    zcGreen: int
    zcMagenta: int
    zcRed: int
    zcWhite: int
    zcYellow: int
    zcColorMethodByACI: int
    zcColorMethodByBlock: int
    zcColorMethodByLayer: int
    zcColorMethodByRGB: int
    zcColorMethodForeground: int
    zcDisplayDCS: int
    zcOCS: int
    zcPaperSpaceDCS: int
    zcUCS: int
    zcWorld: int
    zcUpdateDataFromSource: int
    zcUpdateSourceFromData: int
    zcUpdateOptionIncludeXrefs: int
    zcUpdateOptionNone: int
    zcUpdateOptionOverwriteContentModifiedAfterUpdate: int
    zcUpdateOptionOverwriteFormatModifiedAfterUpdate: int
    zcUpdateOptionUpdateFullSourceRange: int
    zcSymAbove: int
    zcSymInFront: int
    zcSymNone: int
    zcArrowArchTick: int
    zcArrowBoxBlank: int
    zcArrowBoxFilled: int
    zcArrowClosed: int
    zcArrowClosedBlank: int
    zcArrowDatumBlank: int
    zcArrowDatumFilled: int
    zcArrowDefault: int
    zcArrowDot: int
    zcArrowDotBlank: int
    zcArrowDotSmall: int
    zcArrowIntegral: int
    zcArrowNone: int
    zcArrowOblique: int
    zcArrowOpen: int
    zcArrowOpen30: int
    zcArrowOpen90: int
    zcArrowOrigin: int
    zcArrowOrigin2: int
    zcArrowSmall: int
    zcArrowUserDefined: int
    zcCenterLine: int
    zcCenterMark: int
    zcCenterNone: int
    zcArrowsOnly: int
    zcBestFit: int
    zcTextAndArrows: int
    zcTextOnly: int
    zcDiagonal: int
    zcHorizontal: int
    zcNotStacked: int
    zcFirstExtensionLine: int
    zcHorzCentered: int
    zcOverFirstExtension: int
    zcOverSecondExtension: int
    zcSecondExtensionLine: int
    zcDimLArchitectural: int
    zcDimLDecimal: int
    zcDimLEngineering: int
    zcDimLFractional: int
    zcDimLScientific: int
    zcDimLWindowsDesktop: int
    zcDimPrecisionEight: int
    zcDimPrecisionFive: int
    zcDimPrecisionFour: int
    zcDimPrecisionOne: int
    zcDimPrecisionSeven: int
    zcDimPrecisionSix: int
    zcDimPrecisionThree: int
    zcDimPrecisionTwo: int
    zcDimPrecisionZero: int
    zcDimLineWithText: int
    zcMoveTextAddLeader: int
    zcMoveTextNoLeader: int
    zcTolBottom: int
    zcTolMiddle: int
    zcTolTop: int
    zcTolBasic: int
    zcTolDeviation: int
    zcTolLimits: int
    zcTolNone: int
    zcTolSymmetrical: int
    zcDimArchitectural: int
    zcDimArchitecturalStacked: int
    zcDimDecimal: int
    zcDimEngineering: int
    zcDimFractional: int
    zcDimFractionalStacked: int
    zcDimScientific: int
    zcDimWindowsDesktop: int
    zcAbove: int
    zcJIS: int
    zcOutside: int
    zcUnder: int
    zcVertCentered: int
    zcDragDisplayAutomatically: int
    zcDragDisplayOnRequest: int
    zcDragDoNotDisplay: int
    zcDrawLeaderHeadFirst: int
    zcDrawLeaderTailFirst: int
    zcDrawContentFirst: int
    zcDrawLeaderFirst: int
    zcEnableSCM: int
    zcEnableSCMOptions: int
    zcEnter: int
    zcRepeatLastCommand: int
    zcSCM: int
    zcEdRepeatLastCommand: int
    zcEdSCM: int
    zcNoDrawingAreaShortCutMenu: int
    zcUseDefaultDrawingAreaShortCutMenu: int
    zcBottomToTop: int
    zcByStyle: int
    zcLeftToRight: int
    zcRightToLeft: int
    zcTopToBottom: int
    zcAngular: int
    zcArea: int
    zcDistance: int
    zcNoUnits: int
    zc3dFace: int
    zc3dPolyline: int
    zc3dSolid: int
    zcArc: int
    zcAttribute: int
    zcAttributeReference: int
    zcBlockReference: int
    zcCircle: int
    zcDgnUnderlay: int
    zcDim3PointAngular: int
    zcDimAligned: int
    zcDimAngular: int
    zcDimArcLength: int
    zcDimDiametric: int
    zcDimOrdinate: int
    zcDimRadial: int
    zcDimRadialLarge: int
    zcDimRotated: int
    zcDwfUnderlay: int
    zcEllipse: int
    zcExternalReference: int
    zcGroup: int
    zcHatch: int
    zcLeader: int
    zcLine: int
    zcMInsertBlock: int
    zcMLeader: int
    zcMLine: int
    zcMtext: int
    zcNurbSurface: int
    zcPViewport: int
    zcPdfUnderlay: int
    zcPoint: int
    zcPolyfaceMesh: int
    zcPolyline: int
    zcPolylineLight: int
    zcPolymesh: int
    zcRaster: int
    zcRay: int
    zcRegion: int
    zcShape: int
    zcSolid: int
    zcSpline: int
    zcSubDMesh: int
    zcTable: int
    zcText: int
    zcTolerance: int
    zcTrace: int
    zcXline: int
    zcExtendBoth: int
    zcExtendNone: int
    zcExtendOtherEntity: int
    zcExtendThisEntity: int
    kFormatOptionNone: int
    zcForEditing: int
    zcForExpression: int
    zcIgnoreMtextFormat: int
    zcUseMaximumPrecision: int
    zcPreDefinedGradient: int
    zcUserDefinedGradient: int
    zcGridLineStyleDouble: int
    zcGridLineStyleSingle: int
    zcHorzBottom: int
    zcHorzInside: int
    zcHorzTop: int
    zcInvalidGridLine: int
    zcVertInside: int
    zcVertLeft: int
    zcVertRight: int
    zcGradientObject: int
    zcHatchObject: int
    zcHatchStyleIgnore: int
    zcHatchStyleNormal: int
    zcHatchStyleOuter: int
    zcHeight: int
    zcTurnHeight: int
    zcTurns: int
    zcCCW: int
    zcCW: int
    zcHorizontalAlignmentAligned: int
    zcHorizontalAlignmentCenter: int
    zcHorizontalAlignmentFit: int
    zcHorizontalAlignmentLeft: int
    zcHorizontalAlignmentMiddle: int
    zcHorizontalAlignmentRight: int
    zcPenWidth013: int
    zcPenWidth018: int
    zcPenWidth025: int
    zcPenWidth035: int
    zcPenWidth050: int
    zcPenWidth070: int
    zcPenWidth100: int
    zcPenWidth140: int
    zcPenWidth200: int
    zcPenWidthUnk: int
    zcInsertUnitsAngstroms: int
    zcInsertUnitsAstronomicalUnits: int
    zcInsertUnitsCentimeters: int
    zcInsertUnitsDecameters: int
    zcInsertUnitsDecimeters: int
    zcInsertUnitsFeet: int
    zcInsertUnitsGigameters: int
    zcInsertUnitsHectometers: int
    zcInsertUnitsInches: int
    zcInsertUnitsKilometers: int
    zcInsertUnitsLightYears: int
    zcInsertUnitsMeters: int
    zcInsertUnitsMicroinches: int
    zcInsertUnitsMicrons: int
    zcInsertUnitsMiles: int
    zcInsertUnitsMillimeters: int
    zcInsertUnitsMils: int
    zcInsertUnitsNanometers: int
    zcInsertUnitsParsecs: int
    zcInsertUnitsUSSurveyFeet: int
    zcInsertUnitsUSSurveyInch: int
    zcInsertUnitsUSSurveyMile: int
    zcInsertUnitsUSSurveyYard: int
    zcInsertUnitsUnitless: int
    zcInsertUnitsYards: int
    zcInsertUnitsAutoAssign: int
    zcInsertUnitsPrompt: int
    zcPreferenceClassic: int
    zcPreferenceCustom: int
    zcKeyboardEntry: int
    zcKeyboardEntryExceptScripts: int
    zcKeyboardRunningObjSnap: int
    zcLsAll: int
    zcLsColor: int
    zcLsFrozen: int
    zcLsLineType: int
    zcLsLineWeight: int
    zcLsLocked: int
    zcLsNewViewport: int
    zcLsNone: int
    zcLsOn: int
    zcLsPlot: int
    zcLsPlotStyle: int
    zcLineNoArrow: int
    zcLineWithArrow: int
    zcSplineNoArrow: int
    zcSplineWithArrow: int
    zcLineSpacingStyleAtLeast: int
    zcLineSpacingStyleExactly: int
    zcLnWt000: int
    zcLnWt005: int
    zcLnWt009: int
    zcLnWt013: int
    zcLnWt015: int
    zcLnWt018: int
    zcLnWt020: int
    zcLnWt025: int
    zcLnWt030: int
    zcLnWt035: int
    zcLnWt040: int
    zcLnWt050: int
    zcLnWt053: int
    zcLnWt060: int
    zcLnWt070: int
    zcLnWt080: int
    zcLnWt090: int
    zcLnWt100: int
    zcLnWt106: int
    zcLnWt120: int
    zcLnWt140: int
    zcLnWt158: int
    zcLnWt200: int
    zcLnWt211: int
    zcLnWtByBlock: int
    zcLnWtByLayer: int
    zcLnWtByLwDefault: int
    zcPaletteByDrawing: int
    zcPaletteBySession: int
    zcAllNormal: int
    zcEndsNormal: int
    zcFirstNormal: int
    zcLastNormal: int
    zcRuled: int
    zcSmooth: int
    zcUseDraftAngles: int
    zcHatchLoopTypeDefault: int
    zcHatchLoopTypeDerived: int
    zcHatchLoopTypeExternal: int
    zcHatchLoopTypePolyline: int
    zcHatchLoopTypeTextbox: int
    zcBlockContent: int
    zcMTextContent: int
    zcNoneContent: int
    zcInVisibleLeader: int
    zcSplineLeader: int
    zcStraightLeader: int
    zcBottom: int
    zcTop: int
    zcZero: int
    zcEnglish: int
    zcMetric: int
    zcMenuFileCompiled: int
    zcMenuFileSource: int
    zcBaseMenuGroup: int
    zcPartialMenuGroup: int
    zcMenuItem: int
    zcMenuSeparator: int
    zcMenuSubMenu: int
    zcMergeCellStyleConvertDuplicatesToOverrides: int
    zcMergeCellStyleCopyDuplicates: int
    zcMergeCellStyleIgnoreNewStyles: int
    zcMergeCellStyleNone: int
    zcMergeCellStyleOverwriteDuplicates: int
    zcOPQHighGraphics: int
    zcOPQLowGraphics: int
    zcOPQMonochrome: int
    zcOQGraphics: int
    zcOQHighPhoto: int
    zcOQLineArt: int
    zcOQPhoto: int
    zcOQText: int
    zcOTEmbedded: int
    zcOTLink: int
    zcOTStatic: int
    zcOff: int
    zcOn: int
    zcParseOptionNone: int
    zcPreserveMtextFormat: int
    zcSetDefaultFormat: int
    zcHatchPatternTypeCustomDefined: int
    zcHatchPatternTypePreDefined: int
    zcHatchPatternTypeUserDefined: int
    zcPlotOrientationLandscape: int
    zcPlotOrientationPortrait: int
    zcInches: int
    zcMillimeters: int
    zcPixels: int
    zcPolicyLegacy: int
    zcPolicyNamed: int
    zcPolicyLegacyDefault: int
    zcPolicyLegacyLegacy: int
    zcPolicyLegacyQuery: int
    zcPolicyNewDefault: int
    zcPolicyNewLegacy: int
    zc0degrees: int
    zc180degrees: int
    zc270degrees: int
    zc90degrees: int
    zc100_1: int
    zc10_1: int
    zc1_1: int
    zc1_10: int
    zc1_100: int
    zc1_128in_1ft: int
    zc1_16: int
    zc1_16in_1ft: int
    zc1_2: int
    zc1_20: int
    zc1_2in_1ft: int
    zc1_30: int
    zc1_32in_1ft: int
    zc1_4: int
    zc1_40: int
    zc1_4in_1ft: int
    zc1_5: int
    zc1_50: int
    zc1_64in_1ft: int
    zc1_8: int
    zc1_8in_1ft: int
    zc1ft_1ft: int
    zc1in_1ft: int
    zc2_1: int
    zc3_16in_1ft: int
    zc3_32in_1ft: int
    zc3_4in_1ft: int
    zc3_8in_1ft: int
    zc3in_1ft: int
    zc4_1: int
    zc6in_1ft: int
    zc8_1: int
    zcScaleToFit: int
    zcDisplay: int
    zcExtents: int
    zcLayout: int
    zcLimits: int
    zcView: int
    zcWindow: int
    zcCubicSplinePoly: int
    zcFitCurvePoly: int
    zcQuadSplinePoly: int
    zcSimplePoly: int
    zcBezierSurfaceMesh: int
    zcCubicSurfaceMesh: int
    zcQuadSurfaceMesh: int
    zcSimpleMesh: int
    zcBlockBox: int
    zcBlockCircle: int
    zcBlockHexagon: int
    zcBlockImperial: int
    zcBlockSlot: int
    zcBlockTriangle: int
    zcBlockUserDefined: int
    zcFullPreview: int
    zcPartialPreview: int
    zcPrinterAlertOnce: int
    zcPrinterAlwaysAlert: int
    zcPrinterNeverAlert: int
    zcPrinterNeverAlertLogOnce: int
    zcProxyBoundingBox: int
    zcProxyNotShow: int
    zcProxyShow: int
    zcActiveViewport: int
    zcAllViewports: int
    zcDegrees000: int
    zcDegrees090: int
    zcDegrees180: int
    zcDegrees270: int
    zcDegreesUnknown: int
    zcDataRow: int
    zcHeaderRow: int
    zcTitleRow: int
    zcUnknownRow: int
    zc2000_Template: int
    zc2000_dwg: int
    zc2000_dxf: int
    zc2004_Template: int
    zc2004_dwg: int
    zc2004_dxf: int
    zc2007_Template: int
    zc2007_dwg: int
    zc2007_dxf: int
    zc2010_Template: int
    zc2010_dwg: int
    zc2010_dxf: int
    zc2013_Template: int
    zc2013_dwg: int
    zc2013_dxf: int
    zc2018_Template: int
    zc2018_dwg: int
    zc2018_dxf: int
    zcNative: int
    zcR12_dxf: int
    zcR13_dwg: int
    zcR13_dxf: int
    zcR14_dwg: int
    zcR14_dxf: int
    zcR15_Template: int
    zcR15_dwg: int
    zcR15_dxf: int
    zcR18_Template: int
    zcR18_dwg: int
    zcR18_dxf: int
    zcUnknown: int
    zcSectionGenerationDestinationFile: int
    zcSectionGenerationDestinationNewBlock: int
    zcSectionGenerationDestinationReplaceBlock: int
    zcSectionGenerationSourceAllObjects: int
    zcSectionGenerationSourceSelectedObjects: int
    zcSectionStateBoundary: int
    zcSectionStatePlane: int
    zcSectionStateVolume: int
    zcSectionState2Boundary: int
    zcSectionState2Plane: int
    zcSectionState2Slice: int
    zcSectionState2Volume: int
    zcSectionSubItemBackLine: int
    zcSectionSubItemBackLineBottom: int
    zcSectionSubItemBackLineTop: int
    zcSectionSubItemSectionLine: int
    zcSectionSubItemSectionLineBottom: int
    zcSectionSubItemSectionLineTop: int
    zcSectionSubItemVerticalLineBottom: int
    zcSectionSubItemVerticalLineTop: int
    zcSectionSubItemkNone: int
    zcSectionType2dSection: int
    zcSectionType3dSection: int
    zcSectionTypeLiveSection: int
    zcDegrees15: int
    zcDegrees30: int
    zcDegrees45: int
    zcDegrees60: int
    zcDegrees90: int
    zcDegreesAny: int
    zcDegreesHorz: int
    zcSelectionSetAll: int
    zcSelectionSetCrossing: int
    zcSelectionSetCrossingPolygon: int
    zcSelectionSetFence: int
    zcSelectionSetLast: int
    zcSelectionSetPrevious: int
    zcSelectionSetWindow: int
    zcSelectionSetWindowPolygon: int
    zcTableSelectCrossing: int
    zcTableSelectWindow: int
    zcShadePlotAsDisplayed: int
    zcShadePlotHidden: int
    zcShadePlotRendered: int
    zcShadePlotWireframe: int
    zcCastsAndReceivesShadows: int
    zcCastsShadows: int
    zcIgnoreShadows: int
    zcReceivesShadows: int
    zcTableBottomToTop: int
    zcTableTopToBottom: int
    zcTableFlowDownOrUp: int
    zcTableFlowLeft: int
    zcTableFlowRight: int
    zcCellAlign: int
    zcCellBackgroundColor: int
    zcCellBackgroundFillNone: int
    zcCellBottomGridColor: int
    zcCellBottomGridLineWeight: int
    zcCellBottomVisibility: int
    zcCellContentColor: int
    zcCellDataType: int
    zcCellLeftGridColor: int
    zcCellLeftGridLineWeight: int
    zcCellLeftVisibility: int
    zcCellRightGridColor: int
    zcCellRightGridLineWeight: int
    zcCellRightVisibility: int
    zcCellTextHeight: int
    zcCellTextStyle: int
    zcCellTopGridColor: int
    zcCellTopGridLineWeight: int
    zcCellTopVisibility: int
    zcDataHorzBottomColor: int
    zcDataHorzBottomLineWeight: int
    zcDataHorzBottomVisibility: int
    zcDataHorzInsideColor: int
    zcDataHorzInsideLineWeight: int
    zcDataHorzInsideVisibility: int
    zcDataHorzTopColor: int
    zcDataHorzTopLineWeight: int
    zcDataHorzTopVisibility: int
    zcDataRowAlignment: int
    zcDataRowColor: int
    zcDataRowDataType: int
    zcDataRowFillColor: int
    zcDataRowFillNone: int
    zcDataRowTextHeight: int
    zcDataRowTextStyle: int
    zcDataVertInsideColor: int
    zcDataVertInsideLineWeight: int
    zcDataVertInsideVisibility: int
    zcDataVertLeftColor: int
    zcDataVertLeftLineWeight: int
    zcDataVertLeftVisibility: int
    zcDataVertRightColor: int
    zcDataVertRightLineWeight: int
    zcDataVertRightVisibility: int
    zcFlowDirection: int
    zcHeaderHorzBottomColor: int
    zcHeaderHorzBottomLineWeight: int
    zcHeaderHorzBottomVisibility: int
    zcHeaderHorzInsideColor: int
    zcHeaderHorzInsideLineWeight: int
    zcHeaderHorzInsideVisibility: int
    zcHeaderHorzTopColor: int
    zcHeaderHorzTopLineWeight: int
    zcHeaderHorzTopVisibility: int
    zcHeaderRowAlignment: int
    zcHeaderRowColor: int
    zcHeaderRowDataType: int
    zcHeaderRowFillColor: int
    zcHeaderRowFillNone: int
    zcHeaderRowTextHeight: int
    zcHeaderRowTextStyle: int
    zcHeaderSuppressed: int
    zcHeaderVertInsideColor: int
    zcHeaderVertInsideLineWeight: int
    zcHeaderVertInsideVisibility: int
    zcHeaderVertLeftColor: int
    zcHeaderVertLeftLineWeight: int
    zcHeaderVertLeftVisibility: int
    zcHeaderVertRightColor: int
    zcHeaderVertRightLineWeight: int
    zcHeaderVertRightVisibility: int
    zcHorzCellMargin: int
    zcTitleHorzBottomColor: int
    zcTitleHorzBottomLineWeight: int
    zcTitleHorzBottomVisibility: int
    zcTitleHorzInsideColor: int
    zcTitleHorzInsideLineWeight: int
    zcTitleHorzInsideVisibility: int
    zcTitleHorzTopColor: int
    zcTitleHorzTopLineWeight: int
    zcTitleHorzTopVisibility: int
    zcTitleRowAlignment: int
    zcTitleRowColor: int
    zcTitleRowDataType: int
    zcTitleRowFillColor: int
    zcTitleRowFillNone: int
    zcTitleRowTextHeight: int
    zcTitleRowTextStyle: int
    zcTitleSuppressed: int
    zcTitleVertInsideColor: int
    zcTitleVertInsideLineWeight: int
    zcTitleVertInsideVisibility: int
    zcTitleVertLeftColor: int
    zcTitleVertLeftLineWeight: int
    zcTitleVertLeftVisibility: int
    zcTitleVertRightColor: int
    zcTitleVertRightLineWeight: int
    zcTitleVertRightVisibility: int
    zcVertCellMargin: int
    zcCenterAlignment: int
    zcLeftAlignment: int
    zcRightAlignment: int
    zcAlwaysRightReadingAngle: int
    zcHorizontalAngle: int
    zcInsertAngle: int
    zcAttachmentHorizontal: int
    zcAttachmentVertical: int
    zcAttachmentAllLine: int
    zcAttachmentBottomLine: int
    zcAttachmentBottomOfBottom: int
    zcAttachmentBottomOfTop: int
    zcAttachmentBottomOfTopLine: int
    zcAttachmentMiddle: int
    zcAttachmentMiddleOfBottom: int
    zcAttachmentMiddleOfTop: int
    zcAttachmentTopOfTop: int
    zcFontBold: int
    zcFontBoldItalic: int
    zcFontItalic: int
    zcFontRegular: int
    zcTextFlagBackward: int
    zcTextFlagUpsideDown: int
    zcToolbarDockBottom: int
    zcToolbarDockLeft: int
    zcToolbarDockRight: int
    zcToolbarDockTop: int
    zcToolbarFloating: int
    zcToolbarButton: int
    zcToolbarControl: int
    zcToolbarFlyout: int
    zcToolbarSeparator: int
    zcApplied: int
    zcNoOverrides: int
    zcArchitectural: int
    zcDecimal: int
    zcDefaultUnits: int
    zcEngineering: int
    zcFractional: int
    zcScientific: int
    zcBuffer: int
    zcDate: int
    zcDouble: int
    zcGeneral: int
    zcLong: int
    zcObjectId: int
    zcPoint2d: int
    zcPoint3d: int
    zcResbuf: int
    zcString: int
    zcUnknownDataType: int
    zcUnitAngle: int
    zcUnitArea: int
    zcUnitDistance: int
    zcUnitVolume: int
    zcUnitless: int
    zcVerticalAlignmentBaseline: int
    zcVerticalAlignmentBottom: int
    zcVerticalAlignmentMiddle: int
    zcVerticalAlignmentTop: int
    zcAttachmentCenter: int
    zcAttachmentLinedCenter: int
    zcVp100_1: int
    zcVp10_1: int
    zcVp1_1: int
    zcVp1_10: int
    zcVp1_100: int
    zcVp1_128in_1ft: int
    zcVp1_16: int
    zcVp1_16in_1ft: int
    zcVp1_2: int
    zcVp1_20: int
    zcVp1_2in_1ft: int
    zcVp1_30: int
    zcVp1_32in_1ft: int
    zcVp1_4: int
    zcVp1_40: int
    zcVp1_4in_1ft: int
    zcVp1_5: int
    zcVp1_50: int
    zcVp1_64in_1ft: int
    zcVp1_8: int
    zcVp1_8in_1ft: int
    zcVp1and1_2in_1ft: int
    zcVp1ft_1ft: int
    zcVp1in_1ft: int
    zcVp2_1: int
    zcVp3_16in_1ft: int
    zcVp3_32in_1ft: int
    zcVp3_4in_1ft: int
    zcVp3_8in_1ft: int
    zcVp3in_1ft: int
    zcVp4_1: int
    zcVp6in_1ft: int
    zcVp8_1: int
    zcVpCustomScale: int
    zcVpScaleToFit: int
    zcViewport2Horizontal: int
    zcViewport2Vertical: int
    zcViewport3Above: int
    zcViewport3Below: int
    zcViewport3Horizontal: int
    zcViewport3Left: int
    zcViewport3Right: int
    zcViewport3Vertical: int
    zcViewport4: int
    zcMax: int
    zcMin: int
    zcNorm: int
    zcDemandLoadDisabled: int
    zcDemandLoadEnabled: int
    zcDemandLoadEnabledWithCopy: int
    zcDemanLoadDisable: int
    zcDemandLoadCmdInvoke: int
    zcDemandLoadOnObjectDetect: int
    zcZoomScaledAbsolute: int
    zcZoomScaledRelative: int
    zcZoomScaledRelativePSpace: int
    zcChord: int
    zcCustomParameterization: int
    zcSqrtChord: int
    zcUniformParam: int
    zcHide: int
    zcShow: int
    zcControlVertices: int
    zcFit: int
    zcIsolines: int
    zcIsoparms: int
    zcAlwaysCrease: int
    zcCreaseByLevel: int
    zcNoneCrease: int
    zcByColor: int
    zcTrueColor: int
    zcIntensity: int
    zcNormal: int
    zcObjectColor: int
    zcScanColor: int
    zcIntensityBlue: int
    zcIntensityEditableFlag: int
    zcIntensityGrayscale: int
    zcIntensityGreen: int
    zcIntensityRainbow: int
    zcIntensityRed: int
    zcClassification: int
    zcElevation: int
    zcIntensities: int
    zcNormals: int
    zcObject: int
    zcRGB: int
    ZCADSECURITYPARAMS_ADD_TIMESTAMP: int
    ZCADSECURITYPARAMS_ENCRYPT_DATA: int
    ZCADSECURITYPARAMS_ENCRYPT_PROPS: int
    ZCADSECURITYPARAMS_SIGN_DATA: int
    ZCADSECURITYPARAMS_ALGID_RC4: int

class IArcTextObj(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcad3DFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetInvisibleEdge(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetInvisibleEdge(self, Index=..., State=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcad3DPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcad3DSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., SolidObject=...): ...
    def CheckInterference(self, Object=..., CreateInterferenceSolid=..., SolidsInterfere=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SectionSolid(self, Point1=..., Point2=..., point3=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SliceSolid(self, Point1=..., Point2=..., point3=..., Negative=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadArc(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadAttribute(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...

class IZcadAttributeReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def UpdateMTextAttribute(self): ...
    def __iter__(self): ...

class IZcadBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadBlockReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadBlocks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, InsertionPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadCircle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDatabase(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def HandleToObject(self, Handle=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def __iter__(self): ...

class IZcadDatabasePreferences(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadDictionaries(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadDictionary(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddObject(self, Keyword=..., ObjectName=...): ...
    def AddXRecord(self, Keyword=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetName(self, Object=...): ...
    def GetObject(self, Name=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Remove(self, Name=...): ...
    def Rename(self, OldName=..., NewName=...): ...
    def Replace(self, OldName=..., pObj=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadDim3PointAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimAligned(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimAngular(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimArcLength(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimDiametric(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimOrdinate(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimRadial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimRadialLarge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimRotated(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDimStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, StyleSource=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadDimStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadDimension(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDwfUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadDynamicBlockReferenceProperty(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...

class IZcadEllipse(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadExternalReference(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadExtrudedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadFileDependencies(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateEntry(self, Feature=..., FullFileName=..., AffectsGraphics=..., noIncrement=...): ...
    def IndexOf(self, Feature=..., FullFileName=...): ...
    def Item(self, Index=...): ...
    def RemoveEntry(self, Index=..., forceRemove=...): ...
    def UpdateEntry(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadFileDependency(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadGeoPositionMarker(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadGeomapImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadGroup(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendItems(self, Objects=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def Item(self, Index=...): ...
    def RemoveItems(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Update(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadGroups(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadHatch(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendInnerLoop(self, ObjectArray=...): ...
    def AppendOuterLoop(self, ObjectArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetLoopAt(self, Index=..., ObjectArray=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def InsertLoopAt(self, Index=..., LoopType=..., ObjectArray=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetPattern(self, PatternType=..., PatternName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadHelix(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadHyperlink(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def __iter__(self): ...

class IZcadHyperlinks(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., Description=..., NamedLocation=...): ...
    def Item(self, Index=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadIdPair(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __call__(self): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...

class IZcadLWPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, Index=..., vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadLayer(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadLayerStateManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self, bsName=...): ...
    def Export(self, bsName=..., bsFilename=...): ...
    def Import(self, bsFilename=...): ...
    def Mask(self, bsName=...): ...
    def Rename(self, bsName=..., bsNewName=...): ...
    def Restore(self, bsName=...): ...
    def Save(self, bsName=..., eMask=...): ...
    def SetDatabase(self, iHostDb=...): ...
    def SetMask(self, bsName=..., arg1=...): ...
    def __iter__(self): ...

class IZcadLayers(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateUsageData(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadLayout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadLayouts(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Evaluate(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadLineType(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadLineTypes(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def Load(self, Name=..., FileName=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadLoftedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadMInsertBlock(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ConvertToAnonymousBlock(self): ...
    def ConvertToStaticBlock(self, newBlockName=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetAttributes(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetConstantAttributes(self): ...
    def GetDynamicBlockProperties(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def ResetBlock(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadMLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddLeader(self): ...
    def AddLeaderLine(self, leaderIndex=..., pointArray=...): ...
    def AddLeaderLineEx(self, pointArray=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBlockAttributeValue(self, attdefId=...): ...
    def GetBlockAttributeValue32(self, attdefId=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetDoglegDirection(self, leaderIndex=...): ...
    def GetExtensionDictionary(self): ...
    def GetLeaderIndex(self, leaderLineIndex=...): ...
    def GetLeaderLineIndexes(self, leaderIndex=...): ...
    def GetLeaderLineVertices(self, leaderLineIndex=...): ...
    def GetVertexCount(self, leaderLineIndex=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveLeader(self, leaderIndex=...): ...
    def RemoveLeaderLine(self, leaderLineIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBlockAttributeValue(self, attdefId=..., Value=...): ...
    def SetBlockAttributeValue32(self, attdefId=..., Value=...): ...
    def SetDoglegDirection(self, leaderIndex=..., dirVec=...): ...
    def SetLeaderLineVertices(self, leaderLineIndex=..., pointArray=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadMLeaderLeader(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadMLeaderStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadMLine(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadMText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def FieldCode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadMaterial(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadMaterials(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadModelSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadModelSpace2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadNurbSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadObject(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadOle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Display(self, bStatus=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SyncModelView(self): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPaperSpace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add3DFace(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def Add3DMesh(self, M=..., N=..., PointsMatrix=...): ...
    def Add3DPoly(self, PointsArray=...): ...
    def AddArc(self, Center=..., Radius=..., StartAngle=..., EndAngle=...): ...
    def AddAttribute(self, Height=..., Mode=..., Prompt=..., InsertionPoint=..., Tag=..., Value=...): ...
    def AddBox(self, Origin=..., Length=..., Width=..., Height=...): ...
    def AddCircle(self, Center=..., Radius=...): ...
    def AddCone(self, Center=..., BaseRadius=..., Height=...): ...
    def AddCustomObject(self, ClassName=...): ...
    def AddCylinder(self, Center=..., Radius=..., Height=...): ...
    def AddDim3PointAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimAligned(self, ExtLine1Point=..., ExtLine2Point=..., TextPosition=...): ...
    def AddDimAngular(self, AngleVertex=..., FirstEndPoint=..., SecondEndPoint=..., TextPoint=...): ...
    def AddDimArc(self, ArcCenter=..., FirstEndPoint=..., SecondEndPoint=..., ArcPoint=...): ...
    def AddDimDiametric(self, ChordPoint=..., FarChordPoint=..., LeaderLength=...): ...
    def AddDimOrdinate(self, DefinitionPoint=..., LeaderEndPoint=..., UseXAxis=...): ...
    def AddDimRadial(self, Center=..., ChordPoint=..., LeaderLength=...): ...
    def AddDimRadialLarge(self, Center=..., ChordPoint=..., OverrideCenter=..., JogPoint=..., JogAngle=...): ...
    def AddDimRotated(self, ExtLine1Point=..., ExtLine2Point=..., DimLineLocation=..., RotationAngle=...): ...
    def AddEllipse(self, Center=..., MajorAxis=..., RadiusRatio=...): ...
    def AddEllipticalCone(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddEllipticalCylinder(self, Center=..., MajorRadius=..., MinorRadius=..., Height=...): ...
    def AddExtrudedSolid(self, Profile=..., Height=..., TaperAngle=...): ...
    def AddExtrudedSolidAlongPath(self, Profile=..., Path=...): ...
    def AddHatch(self, PatternType=..., PatternName=..., Associativity=..., HatchObjectType=...): ...
    def AddLeader(self, PointsArray=..., Annotation=..., Type=...): ...
    def AddLightWeightPolyline(self, VerticesList=...): ...
    def AddLine(self, StartPoint=..., EndPoint=...): ...
    def AddMInsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., NumRows=..., NumColumns=..., RowSpacing=..., ColumnSpacing=..., Password=...): ...
    def AddMLeader(self, PointsArray=..., leaderLineIndex=...): ...
    def AddMLine(self, VertexList=...): ...
    def AddMText(self, InsertionPoint=..., Width=..., Text=...): ...
    def AddPViewport(self, Center=..., Width=..., Height=...): ...
    def AddPoint(self, Point=...): ...
    def AddPolyfaceMesh(self, VertexList=..., FaceList=...): ...
    def AddPolyline(self, VerticesList=...): ...
    def AddRaster(self, imageFileName=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddRay(self, Point1=..., Point2=...): ...
    def AddRegion(self, ObjectList=...): ...
    def AddRevolvedSolid(self, Profile=..., AxisPoint=..., AxisDir=..., Angle=...): ...
    def AddSection(self, FromPoint=..., ToPoint=..., planeVector=...): ...
    def AddShape(self, Name=..., InsertionPoint=..., ScaleFactor=..., RotationAngle=...): ...
    def AddSolid(self, Point1=..., Point2=..., point3=..., Point4=...): ...
    def AddSphere(self, Center=..., Radius=...): ...
    def AddSpline(self, PointsArray=..., StartTangent=..., EndTangent=...): ...
    def AddTable(self, InsertionPoint=..., NumRows=..., NumColumns=..., RowHeight=..., ColWidth=...): ...
    def AddText(self, TextString=..., InsertionPoint=..., Height=...): ...
    def AddTolerance(self, Text=..., InsertionPoint=..., Direction=...): ...
    def AddTorus(self, Center=..., TorusRadius=..., TubeRadius=...): ...
    def AddTrace(self, PointsArray=...): ...
    def AddWedge(self, Center=..., Length=..., Width=..., Height=...): ...
    def AddXline(self, Point1=..., Point2=...): ...
    def AttachExternalReference(self, PathName=..., Name=..., InsertionPoint=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., bOverlay=..., Password=...): ...
    def Bind(self, bPrefixName=...): ...
    def Delete(self): ...
    def Detach(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def InsertBlock(self, InsertionPoint=..., Name=..., Xscale=..., Yscale=..., Zscale=..., Rotation=..., Password=...): ...
    def Item(self, Index=...): ...
    def Reload(self): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Unload(self): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadPlaneSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPlotConfiguration(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyFrom(self, pPlotConfig=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetCanonicalMediaNames(self): ...
    def GetCustomScale(self, Numerator=..., Denominator=...): ...
    def GetExtensionDictionary(self): ...
    def GetLocaleMediaName(self, Name=...): ...
    def GetPaperMargins(self, LowerLeft=..., UpperRight=...): ...
    def GetPaperSize(self, Width=..., Height=...): ...
    def GetPlotDeviceNames(self): ...
    def GetPlotStyleTableNames(self): ...
    def GetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RefreshPlotDeviceInfo(self): ...
    def SetCustomScale(self, Numerator=..., Denominator=...): ...
    def SetWindowToPlot(self, LowerLeft=..., UpperRight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadPlotConfigurations(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=..., ModelType=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadPoint(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPointCloud(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPointCloudEx(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPointCloudEx2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPolyfaceMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPolygonMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadPolyline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AppendVertex(self, vertex=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBulge(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetBulge(self, Index=..., bulge=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetWidth(self, Index=..., StartWidth=..., EndWidth=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadRasterImage(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadRay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadRegion(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Boolean(self, Operation=..., Object=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def Explode(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadRegisteredApplication(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadRegisteredApplications(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadRevolvedSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSection(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSection2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddVertex(self, nIndex=..., val=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def CreateJog(self, varPt=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GenerateSectionGeometry(self, pEntity=..., pIntersectionBoundaryObjs=..., pIntersectionFillObjs=..., pBackgroudnObjs=..., pForegroudObjs=..., pCurveTangencyObjs=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, varPtHit=..., pHit=..., pSegmentIndex=..., pPtOnSegment=..., pSubItem=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def RemoveVertex(self, nIndex=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSectionManager(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetLiveSection(self): ...
    def GetUniqueSectionName(self, pBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadSectionSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetSectionTypeSettings(self, secType=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadSectionTypeSettings(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadSectionTypeSettings2(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadSecurityParams(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadShadowDisplay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def __iter__(self): ...

class IZcadShape(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSolid(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSortentsTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Block(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFullDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetRelativeDrawOrder(self, Objects=..., honorSortentsSysvar=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def MoveAbove(self, Objects=..., Target=...): ...
    def MoveBelow(self, Objects=..., Target=...): ...
    def MoveToBottom(self, Objects=...): ...
    def MoveToTop(self, Objects=...): ...
    def SetRelativeDrawOrder(self, Objects=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SwapOrder(self, Object1=..., Object2=...): ...
    def __iter__(self): ...

class IZcadSpline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddFitPoint(self, Index=..., fitPoint=...): ...
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def DeleteFitPoint(self, Index=...): ...
    def ElevateOrder(self, Order=...): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetControlPoint(self, Index=...): ...
    def GetExtensionDictionary(self): ...
    def GetFitPoint(self, Index=...): ...
    def GetWeight(self, Index=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def PurgeFitData(self): ...
    def Reverse(self): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetControlPoint(self, Index=..., controlPoint=...): ...
    def SetFitPoint(self, Index=..., fitPoint=...): ...
    def SetWeight(self, Index=..., weight=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSubDMesh(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSubDMeshEdge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubDMeshFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubDMeshVertex(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubEntSolidEdge(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubEntSolidFace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubEntSolidNode(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubEntSolidVertex(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSubEntity(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def OnModified(self): ...
    def __iter__(self): ...

class IZcadSummaryInfo(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def AddCustomInfo(self, key=..., Value=...): ...
    def GetCustomByIndex(self, Index=..., pKey=..., pValue=...): ...
    def GetCustomByKey(self, key=..., pValue=...): ...
    def NumCustomInfo(self): ...
    def RemoveCustomByIndex(self, Index=...): ...
    def RemoveCustomByKey(self, key=...): ...
    def SetCustomByIndex(self, Index=..., key=..., Value=...): ...
    def SetCustomByKey(self, key=..., Value=...): ...
    def __iter__(self): ...

class IZcadSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadSweptSurface(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadTable(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClearSubSelection(self): ...
    def ClearTableStyleOverrides(self, flag=...): ...
    def Copy(self): ...
    def CreateContent(self, nRow=..., nCol=..., nIndex=...): ...
    def Delete(self): ...
    def DeleteCellContent(self, row=..., col=...): ...
    def DeleteColumns(self, col=..., cols=...): ...
    def DeleteContent(self, nRow=..., nCol=...): ...
    def DeleteRows(self, row=..., Rows=...): ...
    def EnableMergeAll(self, nRow=..., nCol=..., bEnable=...): ...
    def Erase(self): ...
    def FormatValue(self, row=..., col=..., nOption=..., pVal=...): ...
    def GenerateLayout(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAttachmentPoint(self, row=..., col=...): ...
    def GetAutoScale(self, row=..., col=...): ...
    def GetAutoScale2(self, nRow=..., nCol=..., nContent=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetBlockAttributeValue(self, row=..., col=..., attdefId=...): ...
    def GetBlockAttributeValue2(self, nRow=..., nCol=..., nContent=..., blkId=...): ...
    def GetBlockRotation(self, row=..., col=...): ...
    def GetBlockScale(self, row=..., col=...): ...
    def GetBlockTableRecordId(self, row=..., col=...): ...
    def GetBlockTableRecordId2(self, nRow=..., nCol=..., nContent=...): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetBreakHeight(self, nIndex=...): ...
    def GetCellAlignment(self, row=..., col=...): ...
    def GetCellBackgroundColor(self, row=..., col=...): ...
    def GetCellBackgroundColorNone(self, row=..., col=...): ...
    def GetCellContentColor(self, row=..., col=...): ...
    def GetCellDataType(self, row=..., col=..., pDataType=..., pUnitType=...): ...
    def GetCellExtents(self, row=..., col=..., bOuterCell=...): ...
    def GetCellFormat(self, row=..., col=...): ...
    def GetCellGridColor(self, row=..., col=..., edge=...): ...
    def GetCellGridLineWeight(self, row=..., col=..., edge=...): ...
    def GetCellGridVisibility(self, row=..., col=..., edge=...): ...
    def GetCellState(self, nRow=..., nCol=...): ...
    def GetCellStyle(self, nRow=..., nCol=...): ...
    def GetCellStyleOverrides(self, row=..., col=...): ...
    def GetCellTextHeight(self, row=..., col=...): ...
    def GetCellTextStyle(self, row=..., col=...): ...
    def GetCellType(self, row=..., col=...): ...
    def GetCellValue(self, row=..., col=...): ...
    def GetColumnName(self, nIndex=...): ...
    def GetColumnWidth(self, col=...): ...
    def GetContentColor(self, rowType=...): ...
    def GetContentColor2(self, nRow=..., nCol=..., nContent=...): ...
    def GetContentLayout(self, row=..., col=...): ...
    def GetContentType(self, nRow=..., nCol=...): ...
    def GetCustomData(self, nRow=..., nCol=..., szKey=..., pData=...): ...
    def GetDataFormat(self, nRow=..., nCol=..., nContent=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetDataType2(self, nRow=..., nCol=..., nContent=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFieldId(self, row=..., col=...): ...
    def GetFieldId2(self, nRow=..., nCol=..., nContent=...): ...
    def GetFormat(self, rowType=...): ...
    def GetFormula(self, nRow=..., nCol=..., nContent=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridColor2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridDoubleLineSpacing(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLineStyle(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridLinetype(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility2(self, nRow=..., nCol=..., nGridLineType=...): ...
    def GetHasFormula(self, nRow=..., nCol=..., nContent=...): ...
    def GetMargin(self, nRow=..., nCol=..., nMargin=...): ...
    def GetMinimumColumnWidth(self, col=...): ...
    def GetMinimumRowHeight(self, row=...): ...
    def GetOverride(self, nRow=..., nCol=..., nContent=...): ...
    def GetRotation(self, nRow=..., nCol=..., nContent=...): ...
    def GetRowHeight(self, row=...): ...
    def GetRowType(self, row=...): ...
    def GetScale(self, nRow=..., nCol=..., nContent=...): ...
    def GetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def GetText(self, row=..., col=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextHeight2(self, nRow=..., nCol=..., nContent=...): ...
    def GetTextRotation(self, row=..., col=...): ...
    def GetTextString(self, nRow=..., nCol=..., nContent=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyle2(self, nRow=..., nCol=..., nContent=...): ...
    def GetValue(self, nRow=..., nCol=..., nContent=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def HitTest(self, wpt=..., wviewVec=..., resultRowIndex=..., resultColumnIndex=...): ...
    def InsertColumns(self, col=..., Width=..., cols=...): ...
    def InsertColumnsAndInherit(self, col=..., nInheritFrom=..., nNumCols=...): ...
    def InsertRows(self, row=..., Height=..., Rows=...): ...
    def InsertRowsAndInherit(self, nIndex=..., nInheritFrom=..., nNumRows=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def IsContentEditable(self, nRow=..., nCol=...): ...
    def IsEmpty(self, nRow=..., nCol=...): ...
    def IsFormatEditable(self, nRow=..., nCol=...): ...
    def IsMergeAllEnabled(self, nRow=..., nCol=...): ...
    def IsMergedCell(self, row=..., col=..., minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def MergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def MoveContent(self, nRow=..., nCol=..., nFromIndex=..., nToIndex=...): ...
    def RecomputeTableBlock(self, bForceUpdate=...): ...
    def RemoveAllOverrides(self, nRow=..., nCol=...): ...
    def ReselectSubRegion(self): ...
    def ResetCellValue(self, row=..., col=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def Select(self, wpt=..., wvwVec=..., wvwxVec=..., wxaper=..., wyaper=..., allowOutside=..., resultRowIndex=..., resultColumnIndex=...): ...
    def SelectSubRegion(self, wpt1=..., wpt2=..., wvwVec=..., wvwxVec=..., seltype=..., bIncludeCurrentSelection=..., rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAutoScale(self, row=..., col=..., bValue=...): ...
    def SetAutoScale2(self, nRow=..., nCol=..., nContent=..., bAutoFit=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetBlockAttributeValue(self, row=..., col=..., attdefId=..., bstrValue=...): ...
    def SetBlockAttributeValue2(self, nRow=..., nCol=..., nContent=..., blkId=..., Value=...): ...
    def SetBlockRotation(self, row=..., col=..., blkRotation=...): ...
    def SetBlockScale(self, row=..., col=..., blkScale=...): ...
    def SetBlockTableRecordId(self, row=..., col=..., blkId=..., bAutoFit=...): ...
    def SetBlockTableRecordId2(self, nRow=..., nCol=..., nContent=..., blkId=..., autoFit=...): ...
    def SetBreakHeight(self, nIndex=..., Height=...): ...
    def SetCellAlignment(self, row=..., col=..., cellAlignment=...): ...
    def SetCellBackgroundColor(self, row=..., col=..., pColor=...): ...
    def SetCellBackgroundColorNone(self, row=..., col=..., bValue=...): ...
    def SetCellContentColor(self, row=..., col=..., pColor=...): ...
    def SetCellDataType(self, row=..., col=..., dataType=..., unitType=...): ...
    def SetCellFormat(self, row=..., col=..., pFormat=...): ...
    def SetCellGridColor(self, row=..., col=..., edges=..., pColor=...): ...
    def SetCellGridLineWeight(self, row=..., col=..., edges=..., Lineweight=...): ...
    def SetCellGridVisibility(self, row=..., col=..., edges=..., bValue=...): ...
    def SetCellState(self, nRow=..., nCol=..., nLock=...): ...
    def SetCellStyle(self, nRow=..., nCol=..., szCellStyle=...): ...
    def SetCellTextHeight(self, row=..., col=..., TextHeight=...): ...
    def SetCellTextStyle(self, row=..., col=..., bstrName=...): ...
    def SetCellType(self, row=..., col=..., CellType=...): ...
    def SetCellValue(self, row=..., col=..., val=...): ...
    def SetCellValueFromText(self, row=..., col=..., val=..., nOption=...): ...
    def SetColumnName(self, nIndex=..., Name=...): ...
    def SetColumnWidth(self, col=..., Width=...): ...
    def SetContentColor(self, rowTypes=..., pColor=...): ...
    def SetContentColor2(self, nRow=..., nCol=..., nContent=..., pColor=...): ...
    def SetContentLayout(self, row=..., col=..., nLayout=...): ...
    def SetCustomData(self, nRow=..., nCol=..., szKey=..., data=...): ...
    def SetDataFormat(self, nRow=..., nCol=..., nContent=..., szFormat=...): ...
    def SetDataType(self, rowTypes=..., dataType=..., unitType=...): ...
    def SetDataType2(self, nRow=..., nCol=..., nContent=..., dataType=..., unitType=...): ...
    def SetFieldId(self, row=..., col=..., fieldId=...): ...
    def SetFieldId2(self, nRow=..., nCol=..., nContent=..., acDbObjectId=..., nflag=...): ...
    def SetFormat(self, rowTypes=..., pFormat=...): ...
    def SetFormula(self, nRow=..., nCol=..., nContent=..., pszFormula=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridColor2(self, nRow=..., nCol=..., nGridLineType=..., pColor=...): ...
    def SetGridDoubleLineSpacing(self, nRow=..., nCol=..., nGridLineType=..., fSpacing=...): ...
    def SetGridLineStyle(self, nRow=..., nCol=..., nGridLineTypes=..., nLineStyle=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLineWeight2(self, nRow=..., nCol=..., nGridLineType=..., Lineweight=...): ...
    def SetGridLinetype(self, nRow=..., nCol=..., nGridLineType=..., idLinetype=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetGridVisibility2(self, nRow=..., nCol=..., nGridLineType=..., bVisible=...): ...
    def SetMargin(self, nRow=..., nCol=..., nMargins=..., fMargin=...): ...
    def SetOverride(self, nRow=..., nCol=..., nContent=..., nProp=...): ...
    def SetRotation(self, nRow=..., nCol=..., nContent=..., Value=...): ...
    def SetRowHeight(self, row=..., Height=...): ...
    def SetScale(self, nRow=..., nCol=..., nContent=..., scale=...): ...
    def SetSubSelection(self, rowMin=..., rowMax=..., colMin=..., colMax=...): ...
    def SetText(self, row=..., col=..., pStr=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextHeight2(self, nRow=..., nCol=..., nContent=..., Height=...): ...
    def SetTextRotation(self, row=..., col=..., TextRotation=...): ...
    def SetTextString(self, nRow=..., nCol=..., nContent=..., Text=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyle2(self, nRow=..., nCol=..., nContent=..., bstrStyleName=...): ...
    def SetToolTip(self, nRow=..., nCol=..., tip=...): ...
    def SetValue(self, nRow=..., nCol=..., nContent=..., acValue=...): ...
    def SetValueFromText(self, nRow=..., nCol=..., nContent=..., szText=..., nOption=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def UnmergeCells(self, minRow=..., maxRow=..., minCol=..., maxCol=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadTableStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CreateCellStyle(self, bstrCellStyle=...): ...
    def CreateCellStyleFromStyle(self, bstrCellStyle=..., bstrSourceCellStyle=...): ...
    def Delete(self): ...
    def DeleteCellStyle(self, bstrCellStyle=...): ...
    def EnableMergeAll(self, bstrCellStyle=..., bEnable=...): ...
    def Erase(self): ...
    def GetAlignment(self, rowType=...): ...
    def GetAlignment2(self, bstrCellStyle=...): ...
    def GetBackgroundColor(self, rowType=...): ...
    def GetBackgroundColor2(self, bstrCellStyle=...): ...
    def GetBackgroundColorNone(self, rowType=...): ...
    def GetCellClass(self, bstrCellStyle=...): ...
    def GetCellStyles(self, cellStylesArray=...): ...
    def GetColor(self, rowType=...): ...
    def GetColor2(self, bstrCellStyle=...): ...
    def GetDataType(self, rowType=..., pDataType=..., pUnitType=...): ...
    def GetDataType2(self, bstrCellStyle=..., pDataType=..., pUnitType=...): ...
    def GetExtensionDictionary(self): ...
    def GetFormat(self, rowType=...): ...
    def GetFormat2(self, bstrCellStyle=..., pbstrFormat=...): ...
    def GetGridColor(self, gridLineType=..., rowType=...): ...
    def GetGridColor2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetGridLineWeight(self, gridLineType=..., rowType=...): ...
    def GetGridLineWeight2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetGridVisibility(self, gridLineType=..., rowType=...): ...
    def GetGridVisibility2(self, bstrCellStyle=..., gridLineType=...): ...
    def GetIsCellStyleInUse(self, pszCellStyle=...): ...
    def GetIsMergeAllEnabled(self, bstrCellStyle=...): ...
    def GetRotation(self, bstrCellStyle=...): ...
    def GetTextHeight(self, rowType=...): ...
    def GetTextHeight2(self, bstrCellStyle=...): ...
    def GetTextStyle(self, rowType=...): ...
    def GetTextStyleId(self, bstrCellStyle=...): ...
    def GetTextStyleId32(self, bstrCellStyle=...): ...
    def GetUniqueCellStyleName(self, pszBaseName=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def RenameCellStyle(self, bstrOldName=..., bstrNewName=...): ...
    def SetAlignment(self, rowTypes=..., cellAlignment=...): ...
    def SetAlignment2(self, bstrCellStyle=..., cellAlignment=...): ...
    def SetBackgroundColor(self, rowTypes=..., pColor=...): ...
    def SetBackgroundColor2(self, bstrCellStyle=..., color=...): ...
    def SetBackgroundColorNone(self, rowTypes=..., bValue=...): ...
    def SetCellClass(self, bstrCellStyle=..., cellClass=...): ...
    def SetColor(self, rowTypes=..., pColor=...): ...
    def SetColor2(self, bstrCellStyle=..., color=...): ...
    def SetDataType(self, rowTypes=..., nDataType=..., nUnitType=...): ...
    def SetDataType2(self, bstrCellStyle=..., nDataType=..., nUnitType=...): ...
    def SetFormat(self, rowTypes=..., val=...): ...
    def SetFormat2(self, bstrCellStyle=..., bstrFormat=...): ...
    def SetGridColor(self, gridLineTypes=..., rowTypes=..., pColor=...): ...
    def SetGridColor2(self, bstrCellStyle=..., gridLineTypes=..., pColor=...): ...
    def SetGridLineWeight(self, gridLineTypes=..., rowTypes=..., Lineweight=...): ...
    def SetGridLineWeight2(self, bstrCellStyle=..., gridLineTypes=..., Lineweight=...): ...
    def SetGridVisibility(self, gridLineTypes=..., rowTypes=..., bValue=...): ...
    def SetGridVisibility2(self, bstrCellStyle=..., gridLineTypes=..., bValue=...): ...
    def SetRotation(self, bstrCellStyle=..., Rotation=...): ...
    def SetTemplateId(self, val=..., option=...): ...
    def SetTemplateId32(self, val=..., option=...): ...
    def SetTextHeight(self, rowTypes=..., TextHeight=...): ...
    def SetTextHeight2(self, bstrCellStyle=..., Height=...): ...
    def SetTextStyle(self, rowTypes=..., bstrName=...): ...
    def SetTextStyleId(self, bstrCellStyle=..., val=...): ...
    def SetTextStyleId32(self, bstrCellStyle=..., val=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadText(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadTextStyle(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetFont(self, TypeFace=..., Bold=..., Italic=..., Charset=..., PitchAndFamily=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadTextStyles(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadTolerance(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadTrace(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Coordinate(self, Index=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetCoordinate(self, Index=..., arg1=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadUCS(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetUCSMatrix(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadUCSs(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Origin=..., XAxisPoint=..., YAxisPoint=..., Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadUnderlay(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadView(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __iter__(self): ...

class IZcadViewport(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def SetGridSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetSnapSpacing(self, XSpacing=..., YSpacing=...): ...
    def SetView(self, View=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def Split(self, NumWins=...): ...
    def __iter__(self): ...

class IZcadViewports(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def DeleteConfiguration(self, Name=...): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadViews(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Add(self, Name=...): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Item(self, Index=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def __call__(self, Index=...): ...
    def __int__(self, *args) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __nonzero__(self): ...

class IZcadWipeout(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def ClipBoundary(self, boundry=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadXRecord(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def Erase(self): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def GetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def SetXRecordData(self, XRecordDataType=..., XRecordDataValue=...): ...
    def __iter__(self): ...

class IZcadXline(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def ArrayPolar(self, NumberOfObjects=..., AngleToFill=..., CenterPoint=...): ...
    def ArrayRectangular(self, NumberOfRows=..., NumberOfColumns=..., NumberOfLevels=..., DistBetweenRows=..., DistBetweenCols=..., DistBetweenLevels=...): ...
    def Copy(self): ...
    def Delete(self): ...
    def Erase(self): ...
    def GetBoundingBox(self, MinPoint=..., MaxPoint=...): ...
    def GetExtensionDictionary(self): ...
    def GetXData(self, AppName=..., XDataType=..., XDataValue=...): ...
    def Highlight(self, HighlightFlag=...): ...
    def IntersectWith(self, IntersectObject=..., option=...): ...
    def Mirror(self, Point1=..., Point2=...): ...
    def Mirror3D(self, Point1=..., Point2=..., point3=...): ...
    def Move(self, FromPoint=..., ToPoint=...): ...
    def Offset(self, Distance=...): ...
    def Rotate(self, BasePoint=..., RotationAngle=...): ...
    def Rotate3D(self, Point1=..., Point2=..., RotationAngle=...): ...
    def ScaleEntity(self, BasePoint=..., ScaleFactor=...): ...
    def SetXData(self, XDataType=..., XDataValue=...): ...
    def TransformBy(self, TransformationMatrix=...): ...
    def Update(self): ...
    def __iter__(self): ...

class IZcadZcCmColor(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def Delete(self): ...
    def SetColorBookColor(self, BookName=..., ColorName=...): ...
    def SetNames(self, ColorName=..., BookName=...): ...
    def SetRGB(self, Red=..., Green=..., Blue=...): ...
    def __iter__(self): ...

class IZxDbDocument(DispatchBaseClass):
    CLSID: Incomplete
    coclass_clsid: Incomplete
    def CopyObjects(self, Objects=..., Owner=..., IdPairs=...): ...
    def DxfIn(self, FileName=..., LogFileName=...): ...
    def DxfOut(self, FileName=..., precision=..., SaveThumbnailImage=...): ...
    def HandleToObject(self, Handle=...): ...
    def ObjectIdToObject(self, ObjectID=...): ...
    def Open(self, FileName=..., Password=...): ...
    def Save(self): ...
    def SaveAs(self, FileName=..., vSecurityParams=...): ...
    def __iter__(self): ...

class ArcTextObj(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IArcTextObj

class Zcad3DFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DFace

class Zcad3DPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DPolyline

class Zcad3DSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcad3DSolid

class ZcadArc(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadArc

class ZcadAttribute(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadAttribute

class ZcadAttributeReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadAttributeReference

class ZcadBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadBlockReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadBlockReference

class ZcadBlocks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadBlocks

class ZcadCircle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadCircle

class ZcadDatabase(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDatabase

class ZcadDatabasePreferences(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDatabasePreferences

class ZcadDgnUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUnderlay

class ZcadDictionaries(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDictionaries

class ZcadDictionary(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDictionary

class ZcadDim3PointAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDim3PointAngular

class ZcadDimAligned(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimAligned

class ZcadDimAngular(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimAngular

class ZcadDimArcLength(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimArcLength

class ZcadDimDiametric(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimDiametric

class ZcadDimOrdinate(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimOrdinate

class ZcadDimRadial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRadial

class ZcadDimRadialLarge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRadialLarge

class ZcadDimRotated(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimRotated

class ZcadDimStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimStyle

class ZcadDimStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimStyles

class ZcadDimension(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDimension

class ZcadDwfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDwfUnderlay

class ZcadDynamicBlockReferenceProperty(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadDynamicBlockReferenceProperty

class ZcadEllipse(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadEllipse

class ZcadEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadEntity

class ZcadExternalReference(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadExternalReference

class ZcadExtrudedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadExtrudedSurface

class ZcadFileDependencies(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadFileDependencies

class ZcadFileDependency(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadFileDependency

class ZcadGeoPositionMarker(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGeoPositionMarker

class ZcadGeomapImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGeomapImage

class ZcadGroup(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGroup

class ZcadGroups(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadGroups

class ZcadHatch(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHatch

class ZcadHelix(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHelix

class ZcadHyperlink(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHyperlink

class ZcadHyperlinks(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadHyperlinks

class ZcadIdPair(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadIdPair

class ZcadLWPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLWPolyline

class ZcadLayer(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayer

class ZcadLayerStateManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayerStateManager

class ZcadLayers(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayers

class ZcadLayout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayout

class ZcadLayouts(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLayouts

class ZcadLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLeader

class ZcadLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLine

class ZcadLineType(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLineType

class ZcadLineTypes(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLineTypes

class ZcadLoftedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadLoftedSurface

class ZcadMInsertBlock(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMInsertBlock

class ZcadMLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeader

class ZcadMLeaderLeader(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeaderLeader

class ZcadMLeaderStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLeaderStyle

class ZcadMLine(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMLine

class ZcadMText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMText

class ZcadMaterial(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMaterial

class ZcadMaterials(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadMaterials

class ZcadModelSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadModelSpace

class ZcadNurbSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadNurbSurface

class ZcadObject(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadObject

class ZcadObjectEvents(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadOle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadOle

class ZcadPViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPViewport

class ZcadPaperSpace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete

class ZcadPdfUnderlay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUnderlay

class ZcadPlaneSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlaneSurface

class ZcadPlotConfiguration(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlotConfiguration

class ZcadPlotConfigurations(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPlotConfigurations

class ZcadPoint(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPoint

class ZcadPointCloud(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPointCloud

class ZcadPointCloudEx(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPointCloudEx2

class ZcadPolyfaceMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolyfaceMesh

class ZcadPolygonMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolygonMesh

class ZcadPolyline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadPolyline

class ZcadRasterImage(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRasterImage

class ZcadRay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRay

class ZcadRegion(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegion

class ZcadRegisteredApplication(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegisteredApplication

class ZcadRegisteredApplications(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRegisteredApplications

class ZcadRevolvedSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadRevolvedSurface

class ZcadSection(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSection

class ZcadSectionManager(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionManager

class ZcadSectionSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionSettings

class ZcadSectionTypeSettings(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSectionTypeSettings

class ZcadSecurityParams(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSecurityParams

class ZcadShadowDisplay(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadShadowDisplay

class ZcadShape(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadShape

class ZcadSolid(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSolid

class ZcadSortentsTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSortentsTable

class ZcadSpline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSpline

class ZcadSubDMesh(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMesh

class ZcadSubDMeshEdge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshEdge

class ZcadSubDMeshFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshFace

class ZcadSubDMeshVertex(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubDMeshVertex

class ZcadSubEntSolidEdge(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidEdge

class ZcadSubEntSolidFace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidFace

class ZcadSubEntSolidNode(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidNode

class ZcadSubEntSolidVertex(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntSolidVertex

class ZcadSubEntity(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSubEntity

class ZcadSummaryInfo(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSummaryInfo

class ZcadSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSurface

class ZcadSweptSurface(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadSweptSurface

class ZcadTable(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTable

class ZcadTableStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTableStyle

class ZcadText(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadText

class ZcadTextStyle(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTextStyle

class ZcadTextStyles(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTextStyles

class ZcadTolerance(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTolerance

class ZcadTrace(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadTrace

class ZcadUCS(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUCS

class ZcadUCSs(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadUCSs

class ZcadView(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadView

class ZcadViewport(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViewport

class ZcadViewports(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViewports

class ZcadViews(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadViews

class ZcadWipeout(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadWipeout

class ZcadXRecord(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadXRecord

class ZcadXline(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadXline

class ZcadZcCmColor(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZcadZcCmColor

class ZxDbDocument(CoClassBaseClass):
    CLSID: Incomplete
    coclass_sources: Incomplete
    coclass_interfaces: Incomplete
    default_interface = IZxDbDocument

IArcTextObj_vtables_dispatch_: int
IArcTextObj_vtables_: Incomplete
IZcad3DFace_vtables_dispatch_: int
IZcad3DFace_vtables_: Incomplete
IZcad3DPolyline_vtables_dispatch_: int
IZcad3DPolyline_vtables_: Incomplete
IZcad3DSolid_vtables_dispatch_: int
IZcad3DSolid_vtables_: Incomplete
IZcadArc_vtables_dispatch_: int
IZcadArc_vtables_: Incomplete
IZcadAttribute_vtables_dispatch_: int
IZcadAttribute_vtables_: Incomplete
IZcadAttributeReference_vtables_dispatch_: int
IZcadAttributeReference_vtables_: Incomplete
IZcadBlock_vtables_dispatch_: int
IZcadBlock_vtables_: Incomplete
IZcadBlockReference_vtables_dispatch_: int
IZcadBlockReference_vtables_: Incomplete
IZcadBlocks_vtables_dispatch_: int
IZcadBlocks_vtables_: Incomplete
IZcadCircle_vtables_dispatch_: int
IZcadCircle_vtables_: Incomplete
IZcadDatabase_vtables_dispatch_: int
IZcadDatabase_vtables_: Incomplete
IZcadDatabasePreferences_vtables_dispatch_: int
IZcadDatabasePreferences_vtables_: Incomplete
IZcadDictionaries_vtables_dispatch_: int
IZcadDictionaries_vtables_: Incomplete
IZcadDictionary_vtables_dispatch_: int
IZcadDictionary_vtables_: Incomplete
IZcadDim3PointAngular_vtables_dispatch_: int
IZcadDim3PointAngular_vtables_: Incomplete
IZcadDimAligned_vtables_dispatch_: int
IZcadDimAligned_vtables_: Incomplete
IZcadDimAngular_vtables_dispatch_: int
IZcadDimAngular_vtables_: Incomplete
IZcadDimArcLength_vtables_dispatch_: int
IZcadDimArcLength_vtables_: Incomplete
IZcadDimDiametric_vtables_dispatch_: int
IZcadDimDiametric_vtables_: Incomplete
IZcadDimOrdinate_vtables_dispatch_: int
IZcadDimOrdinate_vtables_: Incomplete
IZcadDimRadial_vtables_dispatch_: int
IZcadDimRadial_vtables_: Incomplete
IZcadDimRadialLarge_vtables_dispatch_: int
IZcadDimRadialLarge_vtables_: Incomplete
IZcadDimRotated_vtables_dispatch_: int
IZcadDimRotated_vtables_: Incomplete
IZcadDimStyle_vtables_dispatch_: int
IZcadDimStyle_vtables_: Incomplete
IZcadDimStyles_vtables_dispatch_: int
IZcadDimStyles_vtables_: Incomplete
IZcadDimension_vtables_dispatch_: int
IZcadDimension_vtables_: Incomplete
IZcadDwfUnderlay_vtables_dispatch_: int
IZcadDwfUnderlay_vtables_: Incomplete
IZcadDynamicBlockReferenceProperty_vtables_dispatch_: int
IZcadDynamicBlockReferenceProperty_vtables_: Incomplete
IZcadEllipse_vtables_dispatch_: int
IZcadEllipse_vtables_: Incomplete
IZcadEntity_vtables_dispatch_: int
IZcadEntity_vtables_: Incomplete
IZcadExternalReference_vtables_dispatch_: int
IZcadExternalReference_vtables_: Incomplete
IZcadExtrudedSurface_vtables_dispatch_: int
IZcadExtrudedSurface_vtables_: Incomplete
IZcadFileDependencies_vtables_dispatch_: int
IZcadFileDependencies_vtables_: Incomplete
IZcadFileDependency_vtables_dispatch_: int
IZcadFileDependency_vtables_: Incomplete
IZcadGeoPositionMarker_vtables_dispatch_: int
IZcadGeoPositionMarker_vtables_: Incomplete
IZcadGeomapImage_vtables_dispatch_: int
IZcadGeomapImage_vtables_: Incomplete
IZcadGroup_vtables_dispatch_: int
IZcadGroup_vtables_: Incomplete
IZcadGroups_vtables_dispatch_: int
IZcadGroups_vtables_: Incomplete
IZcadHatch_vtables_dispatch_: int
IZcadHatch_vtables_: Incomplete
IZcadHelix_vtables_dispatch_: int
IZcadHelix_vtables_: Incomplete
IZcadHyperlink_vtables_dispatch_: int
IZcadHyperlink_vtables_: Incomplete
IZcadHyperlinks_vtables_dispatch_: int
IZcadHyperlinks_vtables_: Incomplete
IZcadIdPair_vtables_dispatch_: int
IZcadIdPair_vtables_: Incomplete
IZcadLWPolyline_vtables_dispatch_: int
IZcadLWPolyline_vtables_: Incomplete
IZcadLayer_vtables_dispatch_: int
IZcadLayer_vtables_: Incomplete
IZcadLayerStateManager_vtables_dispatch_: int
IZcadLayerStateManager_vtables_: Incomplete
IZcadLayers_vtables_dispatch_: int
IZcadLayers_vtables_: Incomplete
IZcadLayout_vtables_dispatch_: int
IZcadLayout_vtables_: Incomplete
IZcadLayouts_vtables_dispatch_: int
IZcadLayouts_vtables_: Incomplete
IZcadLeader_vtables_dispatch_: int
IZcadLeader_vtables_: Incomplete
IZcadLine_vtables_dispatch_: int
IZcadLine_vtables_: Incomplete
IZcadLineType_vtables_dispatch_: int
IZcadLineType_vtables_: Incomplete
IZcadLineTypes_vtables_dispatch_: int
IZcadLineTypes_vtables_: Incomplete
IZcadLoftedSurface_vtables_dispatch_: int
IZcadLoftedSurface_vtables_: Incomplete
IZcadMInsertBlock_vtables_dispatch_: int
IZcadMInsertBlock_vtables_: Incomplete
IZcadMLeader_vtables_dispatch_: int
IZcadMLeader_vtables_: Incomplete
IZcadMLeaderLeader_vtables_dispatch_: int
IZcadMLeaderLeader_vtables_: Incomplete
IZcadMLeaderStyle_vtables_dispatch_: int
IZcadMLeaderStyle_vtables_: Incomplete
IZcadMLine_vtables_dispatch_: int
IZcadMLine_vtables_: Incomplete
IZcadMText_vtables_dispatch_: int
IZcadMText_vtables_: Incomplete
IZcadMaterial_vtables_dispatch_: int
IZcadMaterial_vtables_: Incomplete
IZcadMaterials_vtables_dispatch_: int
IZcadMaterials_vtables_: Incomplete
IZcadModelSpace_vtables_dispatch_: int
IZcadModelSpace_vtables_: Incomplete
IZcadModelSpace2_vtables_dispatch_: int
IZcadModelSpace2_vtables_: Incomplete
IZcadNurbSurface_vtables_dispatch_: int
IZcadNurbSurface_vtables_: Incomplete
IZcadObject_vtables_dispatch_: int
IZcadObject_vtables_: Incomplete
IZcadObjectEvents_vtables_dispatch_: int
IZcadObjectEvents_vtables_: Incomplete
IZcadOle_vtables_dispatch_: int
IZcadOle_vtables_: Incomplete
IZcadPViewport_vtables_dispatch_: int
IZcadPViewport_vtables_: Incomplete
IZcadPaperSpace_vtables_dispatch_: int
IZcadPaperSpace_vtables_: Incomplete
IZcadPlaneSurface_vtables_dispatch_: int
IZcadPlaneSurface_vtables_: Incomplete
IZcadPlotConfiguration_vtables_dispatch_: int
IZcadPlotConfiguration_vtables_: Incomplete
IZcadPlotConfigurations_vtables_dispatch_: int
IZcadPlotConfigurations_vtables_: Incomplete
IZcadPoint_vtables_dispatch_: int
IZcadPoint_vtables_: Incomplete
IZcadPointCloud_vtables_dispatch_: int
IZcadPointCloud_vtables_: Incomplete
IZcadPointCloudEx_vtables_dispatch_: int
IZcadPointCloudEx_vtables_: Incomplete
IZcadPointCloudEx2_vtables_dispatch_: int
IZcadPointCloudEx2_vtables_: Incomplete
IZcadPolyfaceMesh_vtables_dispatch_: int
IZcadPolyfaceMesh_vtables_: Incomplete
IZcadPolygonMesh_vtables_dispatch_: int
IZcadPolygonMesh_vtables_: Incomplete
IZcadPolyline_vtables_dispatch_: int
IZcadPolyline_vtables_: Incomplete
IZcadRasterImage_vtables_dispatch_: int
IZcadRasterImage_vtables_: Incomplete
IZcadRay_vtables_dispatch_: int
IZcadRay_vtables_: Incomplete
IZcadRegion_vtables_dispatch_: int
IZcadRegion_vtables_: Incomplete
IZcadRegisteredApplication_vtables_dispatch_: int
IZcadRegisteredApplication_vtables_: Incomplete
IZcadRegisteredApplications_vtables_dispatch_: int
IZcadRegisteredApplications_vtables_: Incomplete
IZcadRevolvedSurface_vtables_dispatch_: int
IZcadRevolvedSurface_vtables_: Incomplete
IZcadSection_vtables_dispatch_: int
IZcadSection_vtables_: Incomplete
IZcadSection2_vtables_dispatch_: int
IZcadSection2_vtables_: Incomplete
IZcadSectionManager_vtables_dispatch_: int
IZcadSectionManager_vtables_: Incomplete
IZcadSectionSettings_vtables_dispatch_: int
IZcadSectionSettings_vtables_: Incomplete
IZcadSectionTypeSettings_vtables_dispatch_: int
IZcadSectionTypeSettings_vtables_: Incomplete
IZcadSectionTypeSettings2_vtables_dispatch_: int
IZcadSectionTypeSettings2_vtables_: Incomplete
IZcadSecurityParams_vtables_dispatch_: int
IZcadSecurityParams_vtables_: Incomplete
IZcadShadowDisplay_vtables_dispatch_: int
IZcadShadowDisplay_vtables_: Incomplete
IZcadShape_vtables_dispatch_: int
IZcadShape_vtables_: Incomplete
IZcadSolid_vtables_dispatch_: int
IZcadSolid_vtables_: Incomplete
IZcadSortentsTable_vtables_dispatch_: int
IZcadSortentsTable_vtables_: Incomplete
IZcadSpline_vtables_dispatch_: int
IZcadSpline_vtables_: Incomplete
IZcadSubDMesh_vtables_dispatch_: int
IZcadSubDMesh_vtables_: Incomplete
IZcadSubDMeshEdge_vtables_dispatch_: int
IZcadSubDMeshEdge_vtables_: Incomplete
IZcadSubDMeshFace_vtables_dispatch_: int
IZcadSubDMeshFace_vtables_: Incomplete
IZcadSubDMeshVertex_vtables_dispatch_: int
IZcadSubDMeshVertex_vtables_: Incomplete
IZcadSubEntSolidEdge_vtables_dispatch_: int
IZcadSubEntSolidEdge_vtables_: Incomplete
IZcadSubEntSolidFace_vtables_dispatch_: int
IZcadSubEntSolidFace_vtables_: Incomplete
IZcadSubEntSolidNode_vtables_dispatch_: int
IZcadSubEntSolidNode_vtables_: Incomplete
IZcadSubEntSolidVertex_vtables_dispatch_: int
IZcadSubEntSolidVertex_vtables_: Incomplete
IZcadSubEntity_vtables_dispatch_: int
IZcadSubEntity_vtables_: Incomplete
IZcadSummaryInfo_vtables_dispatch_: int
IZcadSummaryInfo_vtables_: Incomplete
IZcadSurface_vtables_dispatch_: int
IZcadSurface_vtables_: Incomplete
IZcadSweptSurface_vtables_dispatch_: int
IZcadSweptSurface_vtables_: Incomplete
IZcadTable_vtables_dispatch_: int
IZcadTable_vtables_: Incomplete
IZcadTableStyle_vtables_dispatch_: int
IZcadTableStyle_vtables_: Incomplete
IZcadText_vtables_dispatch_: int
IZcadText_vtables_: Incomplete
IZcadTextStyle_vtables_dispatch_: int
IZcadTextStyle_vtables_: Incomplete
IZcadTextStyles_vtables_dispatch_: int
IZcadTextStyles_vtables_: Incomplete
IZcadTolerance_vtables_dispatch_: int
IZcadTolerance_vtables_: Incomplete
IZcadTrace_vtables_dispatch_: int
IZcadTrace_vtables_: Incomplete
IZcadUCS_vtables_dispatch_: int
IZcadUCS_vtables_: Incomplete
IZcadUCSs_vtables_dispatch_: int
IZcadUCSs_vtables_: Incomplete
IZcadUnderlay_vtables_dispatch_: int
IZcadUnderlay_vtables_: Incomplete
IZcadView_vtables_dispatch_: int
IZcadView_vtables_: Incomplete
IZcadViewport_vtables_dispatch_: int
IZcadViewport_vtables_: Incomplete
IZcadViewports_vtables_dispatch_: int
IZcadViewports_vtables_: Incomplete
IZcadViews_vtables_dispatch_: int
IZcadViews_vtables_: Incomplete
IZcadWipeout_vtables_dispatch_: int
IZcadWipeout_vtables_: Incomplete
IZcadXRecord_vtables_dispatch_: int
IZcadXRecord_vtables_: Incomplete
IZcadXline_vtables_dispatch_: int
IZcadXline_vtables_: Incomplete
IZcadZcCmColor_vtables_dispatch_: int
IZcadZcCmColor_vtables_: Incomplete
IZxDbDocument_vtables_dispatch_: int
IZxDbDocument_vtables_: Incomplete
IZxDbDocumentEvents_vtables_dispatch_: int
IZxDbDocumentEvents_vtables_: Incomplete
RecordMap: Incomplete
CLSIDToClassMap: Incomplete
CLSIDToPackageMap: Incomplete
VTablesToPackageMap: Incomplete
VTablesToClassMap: Incomplete
NamesToIIDMap: Incomplete
