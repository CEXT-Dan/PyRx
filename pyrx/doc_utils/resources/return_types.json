{
    "type": "table",
    "database": null,
    "name": "RETURNTYPES",
    "withoutRowId": false,
    "strict": false,
    "ddl": "CREATE TABLE RETURNTYPES (Key TEXT UNIQUE NOT NULL ON CONFLICT ROLLBACK, Value TEXT);",
    "columns": [
        {
            "name": "Key",
            "type": "TEXT",
            "constraints": [
                {
                    "type": "UNIQUE",
                    "definition": "UNIQUE "
                },
                {
                    "type": "NOT NULL",
                    "definition": "NOT NULL ON CONFLICT ROLLBACK"
                }
            ]
        },
        {
            "name": "Value",
            "type": "TEXT"
        }
    ],
    "rows": [
        [
            "PyEd::Editor::getKword",
            "tuple[int, str]"
        ],
        [
            "PyEd::Editor::getCorner",
            "tuple[PyEd.PromptStatus, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::getInteger",
            "tuple[PyEd.PromptStatus, int]"
        ],
        [
            "PyEd::Editor::getDouble",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getAngle",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getPoint",
            "tuple[PyEd.PromptStatus, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::getDist",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getReal",
            "tuple[PyEd.PromptStatus, float]"
        ],
        [
            "PyEd::Editor::getString",
            "tuple[PyEd.PromptStatus, str]"
        ],
        [
            "PyEd::Editor::select",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectFence",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectLast",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectPrevious",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectPrompt",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectWindow",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectWindowPolygon",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::ssget",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::selectAll",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyEd::Editor::entSel",
            "tuple[PyEd.PromptStatus, PyDb.ObjectId, PyGe.Point3d]"
        ],
        [
            "PyEd::Editor::nEntSelP",
            "tuple[PyEd.PromptStatus, PyDb.ObjectId, PyGe.Point3d,PyGe.Matrix3d,list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::Editor::nEntSelPEx",
            "tuple[PyEd.PromptStatus,PyDb.ObjectId,PyGe.Point3d,PyGe.Matrix3d,int,list[PyDb.ObjectId]]"
        ],
        [
            "objectIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "acquireString",
            "tuple[PyGe.DragStatus,str]"
        ],
        [
            "acquireAngle",
            "tuple[PyGe.DragStatus,float]"
        ],
        [
            "acquireDist",
            "tuple[PyGe.DragStatus,float]"
        ],
        [
            "acquirePoint",
            "tuple[PyGe.DragStatus,PyGe.Point3d]"
        ],
        [
            "PyEd::SelectionSet::toList",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::Editor::getCurrentSelectionSet",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::InputPoint::pickedEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::Core::getRGB",
            "tuple[int,...]"
        ],
        [
            "PyAp::DocManager::documents",
            "list[PyAp.Document]"
        ],
        [
            "PyDb::explode",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::getGripPoints",
            "tuple[list[PyGe.Point3d],list[int],list[int]]"
        ],
        [
            "PyDb::getStretchPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::xData",
            "list"
        ],
        [
            "PyDb::intersectWith",
            "list[PyGe.Point3d]"
        ],
        [
            "recordIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::getOffsetCurves",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getOffsetCurvesGivenPlaneNormal",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurves",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtParam",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtParams",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtPoint",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::getSplitCurvesAtPoints",
            "list[PyDb.Curve]"
        ],
        [
            "PyDb::appendAcDbEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::activeDatabaseArray",
            "list[PyDb.PyDbDatabase]"
        ],
        [
            "PyDb::Core::dictNext",
            "list"
        ],
        [
            "PyDb::Core::dictSearch",
            "list"
        ],
        [
            "PyDb::Core::entGet",
            "list"
        ],
        [
            "PyDb::Core::entGetX",
            "list"
        ],
        [
            "PyDb::Core::getDimAssocIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::openDbEntities",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::Core::openDbObjects",
            "list[PyDb.DbObject]"
        ],
        [
            "PyDb::Core::resbufTest",
            "list"
        ],
        [
            "PyEd::Core::getSym",
            "list"
        ],
        [
            "PyEd::Core::invoke",
            "list"
        ],
        [
            "PyPl::PlotProgressDialog::getSheetProgressRange",
            "tuple[int,int]"
        ],
        [
            "PyPl::PlotProgressDialog::getPlotProgressRange",
            "tuple[int,int]"
        ],
        [
            "PyPl::PlotConfigManager::getStyleList",
            "list[str]"
        ],
        [
            "PyPl::PlotConfigManager::getDevicesList",
            "list[PyPl.PlotConfigInfo]"
        ],
        [
            "PyPl::PlotConfig::getDescriptionFields",
            "tuple[str,...]"
        ],
        [
            "PyPl::PlotConfig::getCanonicalMediaNameList",
            "list[str]"
        ],
        [
            "PyPl::DSDData::getPrecisionEntries",
            "list[PyPl.PrecisionEntry]"
        ],
        [
            "PyPl::DSDData::getDSDEntries",
            "list[PyPl.DSDEntry]"
        ],
        [
            "PyPl::DSDData::get3dDwfOptions",
            "tuple[bool,bool]"
        ],
        [
            "PyEd::SelectionSet::ssNameX",
            "list"
        ],
        [
            "PyEd::InputPoint::nestedPickedEntities",
            "list[list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::InputPoint::nestedKeyPointEntities",
            "list[list[PyDb.ObjectId]]"
        ],
        [
            "PyEd::InputPoint::keyPointGsSelectionMark",
            "list[int]"
        ],
        [
            "PyEd::InputPoint::keyPointEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::InputPoint::gsSelectionMark",
            "list[int]"
        ],
        [
            "PyEd::InputPoint::alignmentPaths",
            "list[PyGe.Curve]"
        ],
        [
            "PyEd::Editor::traceBoundary",
            "list[PyDb.Polyline]"
        ],
        [
            "PyEd::Core::vports",
            "list"
        ],
        [
            "PyEd::Core::textBox",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyEd::Core::setColorDialogTrueColor",
            "tuple[bool,PyDb.Color]"
        ],
        [
            "PyEd::Core::setColorDialog",
            "tuple[bool,int]"
        ],
        [
            "PyEd::Core::getPredefinedHatchPatterns",
            "list[str]"
        ],
        [
            "PyEd::Core::getLastCommandLines",
            "list[str]"
        ],
        [
            "PyEd::Core::getFileNavDialog",
            "list"
        ],
        [
            "PyEd::Core::getCurrentSelectionSet",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyEd::Core::getCurVportScreenToDisplay",
            "tuple[float,float]"
        ],
        [
            "PyEd::Core::getCurVportPixelToDisplay",
            "tuple[float,float]"
        ],
        [
            "PyEd::Core::evaluateLisp",
            "list"
        ],
        [
            "PyEd::Core::coordFromWorldToPixel",
            "tuple[int,int]"
        ],
        [
            "PyEd::Core::arxLoaded",
            "list"
        ],
        [
            "PyAp::TransactionManager::getAllObjects",
            "list[PyDb.DbObject]"
        ],
        [
            "PyAp::LayoutManager::pointInViewports",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyAp::LayoutManager::getClipBoundaryElabration",
            "list[PyGe.Point2d]"
        ],
        [
            "PyAp::LayoutManager::createLayout",
            "tuple[PyDb.ObjectId,PyDb.ObjectId]"
        ],
        [
            "PyAp::LayerGroup::layerIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyAp::LayerGroup::getNestedFilters",
            "list[PyAp.LayerFilter]"
        ],
        [
            "PyAp::LayerFilterManager::getFilters",
            "tuple[PyAp.LayerFilter,PyAp.LayerFilter]"
        ],
        [
            "PyAp::LayerFilter::getNestedFilters",
            "list[PyAp.LayerFilter]"
        ],
        [
            "PyAp::Document::getItemOfLispList",
            "tuple[str,bool]"
        ],
        [
            "PyAp::Application::getLoadedModules",
            "list[str]"
        ],
        [
            "PyAp::Application::getLoadedModuleNames",
            "list[str]"
        ],
        [
            "PyDb::Xrecord::rbChain",
            "list"
        ],
        [
            "PyDb::Wipeout::getVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "getSubentPathsAtGsMarker",
            "list[PyDb.FullSubentPath]"
        ],
        [
            "PyDb::Wipeout::getOrientation",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Wipeout::clipBoundary",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::ViewportTableRecord::isViewOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::ViewportTableRecord::isUcsOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::ViewportTableRecord::getUcs",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Viewport::isViewOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::ViewTableRecord::isUcsOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::Viewport::getUcs",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Viewport::getFrozenLayerList",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::ViewTableRecord::isViewOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::Viewport::isUcsOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::ViewTableRecord::getUcs",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::UnderlayReference::clipBoundary",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::TransactionManager::getAllObjects",
            "list[PyDb.DbObject]"
        ],
        [
            "PyDb::Transaction::getAllObjects",
            "list[PyDb.DbObject]"
        ],
        [
            "PyDb::TextStyleTableRecord::font",
            "tuple"
        ],
        [
            "PyDb::Text::getBoundingPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::TableStyle::getDataType",
            "tuple[PyDb.ValueDataType,PyDb.ValueUnitType]"
        ],
        [
            "PyDb::TableStyle::getCellStyles",
            "list[str]"
        ],
        [
            "PyDb::Table::tableStyleOverrides",
            "list[int]"
        ],
        [
            "PyDb::Table::isMergedCell",
            "tuple[bool,int,int,int,int]"
        ],
        [
            "PyDb::Table::hitTest",
            "tuple[bool,int,int,int,int]"
        ],
        [
            "PyDb::Table::getCellExtents",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::Table::cells",
            "list[PyDb.Cell]"
        ],
        [
            "PyDb::Table::cellValues",
            "list[tuple[int,int,Any]]"
        ],
        [
            "PyDb::Table::getDataType",
            "tuple[PyDb.ValueDataType,PyDb.ValueUnitType]"
        ],
        [
            "PyDb::Table::cellStyleOverrides",
            "list[int]"
        ],
        [
            "PyDb::Table::attributeIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::rayTest",
            "tuple[list[PyDb.SubentId],list[float]]"
        ],
        [
            "PyDb::projectOnToSurface",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::modificationActionBodyIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::SweepOptions::checkSweepCurve",
            "tuple[PyDb.Planarity,PyGe.Point3d,PyGe.Vector3d,bool,float]"
        ],
        [
            "PyDb::SubDMesh::getVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::SubDMesh::getSubentPath",
            "list[list[PyDb.FullSubentPath]]"
        ],
        [
            "PyDb::SubDMesh::getAdjacentSubentPath",
            "list[list[PyDb.FullSubentPath]]"
        ],
        [
            "PyDb::SubDMesh::getSubDividedVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::SubDMesh::getSubDividedNormalArray",
            "list[PyGe.Vector3d]"
        ],
        [
            "PyDb::SubDMesh::getSubDividedFaceArray",
            "list[int]"
        ],
        [
            "PyDb::SubDMesh::getNormalArray",
            "list[PyGe.Vector3d]"
        ],
        [
            "PyDb::SubDMesh::getEdgeArray",
            "list[int]"
        ],
        [
            "PyDb::SubDMesh::getCrease",
            "list[float]|float"
        ],
        [
            "PyDb::SubDMesh::getFaceArray",
            "list[int]"
        ],
        [
            "PyDb::Spline::getNurbsData",
            "tuple"
        ],
        [
            "PyDb::Spline::getFitTangents",
            "tuple[PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Spline::getFitDataKnot",
            "tuple"
        ],
        [
            "PyDb::Spline::getFitData",
            "tuple"
        ],
        [
            "PyDb::SpatialFilter::getVolume",
            "tuple[PyGe.Point3d,PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::SpatialFilter::getDefinition",
            "tuple"
        ],
        [
            "PyDb::Solid3d::separateBody",
            "list[PyDb.Solid3d]"
        ],
        [
            "PyDb::Solid3d::projectOnToSolid",
            "list[PyDb.Entity]"
        ],
        [
            "PyDb::Solid3d::getMassProp",
            "tuple"
        ],
        [
            "PyDb::Solid3d::checkInterference",
            "tuple[bool,PyDb.Solid3d]"
        ],
        [
            "PyDb::SnoopDwgFiler::buffer",
            "list"
        ],
        [
            "PyDb::SectionSettings::getSourceObjects",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::SectionSettings::getHatchPattern",
            "tuple[PyDb.HatchPatternType,str]"
        ],
        [
            "PyDb::Section::plane",
            "tuple[PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Section::hitTest",
            "tuple[bool,int,PyGe.Poin3d,PyDb.SectionSubItem]"
        ],
        [
            "PyDb::Section::getVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::Section::generateSectionGeometry",
            "tuple"
        ],
        [
            "PyDb::RotatedDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::RotatedDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::RevolveOptions::checkRevolveCurve",
            "tuple[bool,bool,bool]"
        ],
        [
            "PyDb::Region::createFromCurves",
            "list[PyDb.Region]"
        ],
        [
            "PyDb::RasterImage::getVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::RasterImage::getOrientation",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::RasterImage::clipBoundary",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::RadialDimensionLarge::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::RadialDimensionLarge::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::RadialDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::RadialDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "vertexIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "toPoint3dList",
            "list[PyGe.Point3d]"
        ],
        [
            "toPoint2dList",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::Polyline::toList",
            "list[tuple[float,float]]"
        ],
        [
            "PyDb::PointCloudEx::getScanViewInfo",
            "tuple[bool,str,PyGe.Point3d,PyDb.Extents]"
        ],
        [
            "PyDb::PointCloudEx::getPlaneOrPointAt",
            "tuple[bool,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::PointCloudEx::getPlaneBoundaryAt",
            "tuple[bool,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::PointCloudEx::getCylinderAt",
            "tuple[PyGe.Point3d,PyGe.Vector3d,float,float]"
        ],
        [
            "PyDb::PointCloudEx::getCustomOsnapInfo",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::PointCloudEx::getCandidatePlane",
            "tuple"
        ],
        [
            "PyDb::PointCloudEx::getActiveFileName",
            "tuple[bool,str]"
        ],
        [
            "PyDb::PointCloudEx::detectPointBelonger",
            "tuple[str,int]"
        ],
        [
            "PyDb::PointCloudDefEx::getAllRcsFilePaths",
            "list[str]"
        ],
        [
            "PyDb::PointCloudDefEx::entityCount",
            "tuple[int,bool]"
        ],
        [
            "PyDb::PointCloudCrop::getCropPlane",
            "tuple[bool,PyGe.Plane]"
        ],
        [
            "PyDb::PointCloudCrop::get",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::PointCloudColorMap::getColorSchemeInUse",
            "list[str]"
        ],
        [
            "PyDb::PointCloudColorMap::getClassificationColorSchemeInUse",
            "list[str]"
        ],
        [
            "PyDb::PointCloudColorMap::colorSchemeGUIDs",
            "list[str]"
        ],
        [
            "PyDb::PointCloudColorMap::colorScheme",
            "tuple[bool,PyDb.PointCloudColorRamp]"
        ],
        [
            "PyDb::PointCloudColorMap::classificationSchemeGUIDs",
            "list[str]"
        ],
        [
            "PyDb::PointCloudColorMap::classificationScheme",
            "tuple[bool,PyDb.PointCloudClassificationColorRamp]"
        ],
        [
            "PyDb::Point3AngularDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::Point3AngularDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::PlotSettingsValidator::plotStyleSheetList",
            "list[str]"
        ],
        [
            "PyDb::PlotSettingsValidator::plotDeviceList",
            "list[str]"
        ],
        [
            "PyDb::PlotSettingsValidator::canonicalMediaNameList",
            "list[str]"
        ],
        [
            "PyDb::PlotSettings::getPlotWindowArea",
            "tuple[float,float,float,float]"
        ],
        [
            "PyDb::PlotSettings::getPlotPaperSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::PlotSettings::getPlotPaperMargins",
            "tuple[float,float,float,float]"
        ],
        [
            "PyDb::PlotSettings::getPlotOrigin",
            "tuple[float,float]"
        ],
        [
            "PyDb::PlotSettings::getCustomPrintScale",
            "tuple[float,float]"
        ],
        [
            "PyDb::PdfReference::clipBoundary",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::OsnapOverrule::getOsnapPointsX",
            "tuple[int,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::OsnapOverrule::getOsnapPoints",
            "tuple[int,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::OsnapOverrule::baseGetOsnapPointsX",
            "tuple[int,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::OsnapOverrule::baseGetOsnapPoints",
            "tuple[int,list[PyGe.Point3d]]"
        ],
        [
            "PyDb::OrdinateDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::OrdinateDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::ObjectContextCollection::toList",
            "list[PyDb.ObjectContext]"
        ],
        [
            "PyDb::MlineStyle::getElementAt",
            "tuple[float,PyDb.Color,PyDb.ObjectId]"
        ],
        [
            "PyDb::MText::getFragments",
            "list"
        ],
        [
            "PyDb::MText::getBoundingPointsByLine",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::MText::getBoundingPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::MPolygon::isPointInsideMPolygon",
            "list[int]"
        ],
        [
            "PyDb::MPolygon::getPatternDefinitionAt",
            "tuple"
        ],
        [
            "PyDb::MPolygon::getMPolygonLoopAt",
            "tuple[list[PyGe.Point2d],list[float]]"
        ],
        [
            "PyDb::MPolygon::getChildLoops",
            "list[int]"
        ],
        [
            "PyDb::MPolygon::createLoopsFromBoundaries",
            "list[int]"
        ],
        [
            "PyDb::MLeader::getLeaderLineIndexes",
            "list[int]"
        ],
        [
            "PyDb::MLeader::getLeaderIndexes",
            "list[int]"
        ],
        [
            "PyDb::MInsertBlock::attributeIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::LineAngularDimension2::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::LineAngularDimension2::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::LayoutManager::createLayout",
            "tuple[PyDb.ObjectId,PyDb.ObjectId]"
        ],
        [
            "PyDb::Layout::getViewportArray",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Layout::getPlotWindowArea",
            "tuple[float,float,float,float]"
        ],
        [
            "PyDb::Layout::getPlotPaperSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::Layout::getPlotPaperMargins",
            "tuple[float,float,float,float]"
        ],
        [
            "PyDb::Layout::getPlotOrigin",
            "tuple[float,float]"
        ],
        [
            "PyDb::Layout::getLimits",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyDb::Layout::getExtents",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyDb::Layout::getCustomPrintScale",
            "tuple[float,float]"
        ],
        [
            "PyDb::LayerStateManager::getLayerStateNames",
            "list[str]"
        ],
        [
            "PyDb::LayerStateManager::getLayerStateLayers",
            "list[str]"
        ],
        [
            "PyDb::LayerStateManager::getLastRestoredLayerState",
            "tuple[str,PyDb.ObjectId]"
        ],
        [
            "PyDb::JoinEntityPE::joinEntities",
            "list[int]"
        ],
        [
            "PyDb::IdMapping::idPairs",
            "list[PyDb.IdPair]"
        ],
        [
            "PyDb::Helix::getNurbsData",
            "tuple"
        ],
        [
            "PyDb::Helix::getFitTangents",
            "tuple[PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::Helix::getFitDataKnot",
            "tuple"
        ],
        [
            "PyDb::Helix::getFitData",
            "tuple"
        ],
        [
            "PyDb::Hatch::getPatternDefinitionAt",
            "tuple"
        ],
        [
            "PyDb::Hatch::getLoopEdgesAt",
            "tuple"
        ],
        [
            "PyDb::Hatch::getLoopBulgesAt",
            "tuple"
        ],
        [
            "PyDb::Hatch::getHatchLinesData",
            "tuple[list[PyGe.Point2d],list[PyGe.Point2d]]"
        ],
        [
            "PyDb::Hatch::getHatchLineDataAt",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyDb::Hatch::getGradientColors",
            "tuple[list[PyDb.Color],list[float]]"
        ],
        [
            "PyDb::Hatch::getAssocObjIdsAt",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Hatch::getAssocObjIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Group::allEntityIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::GeoPositionMarker::latLonAlt",
            "tuple[float,float,float]"
        ],
        [
            "PyDb::GeoMap::getVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::GeoMap::getOrientation",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyDb::GeoMap::clipBoundary",
            "list[PyGe.Point2d]"
        ],
        [
            "PyDb::GeoData::getMeshPointMaps",
            "tuple[list[PyGe.Point2d],list[PyGe.Point2d]]"
        ],
        [
            "PyDb::GeoData::getMeshPointMap",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyDb::GeoData::getMeshFace",
            "tuple[int,int,int]"
        ],
        [
            "PyDb::GeoCoordinateSystem::getEllipsoid",
            "tuple[str,str,float,float]"
        ],
        [
            "PyDb::GeoCoordinateSystem::getDatum",
            "tuple[str,str]"
        ],
        [
            "PyDb::Fcf::getBoundingPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::Fcf::getBoundingPline",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::Extents2d::coords",
            "tuple[float,...]"
        ],
        [
            "PyDb::Extents::coords",
            "tuple[float,...]"
        ],
        [
            "PyDb::Ellipse::get",
            "tuple"
        ],
        [
            "PyDb::DynBlockReferenceProperty::getAllowedValues",
            "list[PyDb.EvalVariant]"
        ],
        [
            "PyDb::DynBlockReference::getBlockProperties",
            "list[PyDb.DynBlockReferenceProperty]"
        ],
        [
            "PyDb::Dimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::Dimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::DimAssoc::getDimAssocGeomIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::DiametricDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::DiametricDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::Date::getTime",
            "tuple[int,int,int,int]"
        ],
        [
            "PyDb::Date::getDate",
            "tuple[int,int,int]"
        ],
        [
            "PyDb::DatabaseSummaryInfo::getCustomSummaryInfo",
            "tuple[str,str]"
        ],
        [
            "PyDb::Database::purge",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Database::getVisualStyleList",
            "list[str]"
        ],
        [
            "PyDb::Database::getViewportArray",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::textFind",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::Core::tblSearch",
            "list"
        ],
        [
            "PyDb::Core::tblNext",
            "list"
        ],
        [
            "PyDb::Core::getProxyInfo",
            "tuple[str,str,str]"
        ],
        [
            "PyDb::Core::findField",
            "tuple[bool,int,int]"
        ],
        [
            "PyDb::BlockTableRecord::getErasedBlockReferenceIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::BlockTableRecord::getBlockReferenceIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::BlockReference::attributeIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyDb::AttributeReference::getBoundingPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::AttributeDefinition::getBoundingPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyDb::ArcDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::ArcDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::AlignedDimension::textDefinedSize",
            "tuple[float,float]"
        ],
        [
            "PyDb::AlignedDimension::isConstraintObject",
            "tuple[bool,bool]"
        ],
        [
            "PyDb::AbstractViewTableRecord::isViewOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::AbstractViewTableRecord::isUcsOrthographic",
            "tuple[bool,PyDb.OrthographicView]"
        ],
        [
            "PyDb::AbstractViewTableRecord::getUcs",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyGs::GsView::getViewport",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyGi::TransientManager::getFreeSubDrawingMode",
            "tuple[int,int]"
        ],
        [
            "PyGe::Vector3d::toTuple",
            "tuple[float,float,float]"
        ],
        [
            "PyGe::Vector3d::toList",
            "list[float,float,float]"
        ],
        [
            "PyGe::Vector2d::toTuple",
            "tuple[float,float]"
        ],
        [
            "PyGe::Vector2d::toList",
            "list[float,float]"
        ],
        [
            "PyGe::SurfSurfInt::getIntPointParams",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyGe::SurfSurfInt::getIntConfigs",
            "tuple"
        ],
        [
            "projClosestPointsTo",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "isPlanar",
            "tuple[bool,PyGe.Plane]"
        ],
        [
            "getProjClosestPointsTo",
            "tuple[PyGe.PointOnCurve3d,PyGe.PointOnCurve3d]"
        ],
        [
            "isCoplanarWith",
            "tuple[bool,PyGe.Plane]"
        ],
        [
            "PyGe::Point3d::toTuple",
            "tuple[float,float,float]"
        ],
        [
            "PyGe::Point3d::toList",
            "list[float,float,float]"
        ],
        [
            "PyGe::Point2d::toTuple",
            "tuple[float,float]"
        ],
        [
            "PyGe::Point2d::toList",
            "list[float,float]"
        ],
        [
            "PyGe::Matrix2d::toList",
            "list"
        ],
        [
            "PyGe::Matrix2d::toTuple",
            "tuple"
        ],
        [
            "PyGe::Matrix3d::toList",
            "list"
        ],
        [
            "PyGe::Matrix3d::toTuple",
            "tuple"
        ],
        [
            "PyEd::Editor::selectImplied",
            "tuple[PyEd.PromptStatus, PyEd.SelectionSet]"
        ],
        [
            "PyDb::DynBlockTableRecord::getAnonymousBlockIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyGe::Sphere::intersectWith",
            "tuple[int,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::Sphere::getAnglesInV",
            "tuple[float,float]"
        ],
        [
            "PyGe::Sphere::getAnglesInU",
            "tuple[float,float]"
        ],
        [
            "PyGe::Plane::intersectWith",
            "tuple[bool,PyGe.Point3d]"
        ],
        [
            "PyGe::PlanarEnt::intersectWith",
            "tuple[bool,PyGe.Point3d]"
        ],
        [
            "PyGe::PlanarEnt::getCoordSystem",
            "tuple[PyGe.Point3d,PyGe.Vector3d,PyGe.Vector3d]"
        ],
        [
            "PyGe::PlanarEnt::getCoefficients",
            "tuple[float,float,float,float]"
        ],
        [
            "PyGe::PlanarEnt::closestPointToPlanarEnt",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::PlanarEnt::closestPointToLinearEnt",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::BoundedPlane::intersectWith",
            "tuple[bool,PyGe.LineSeg3d]"
        ],
        [
            "PyGe::NurbCurve3d::getParamsOfG1Discontinuity",
            "tuple[bool,list[float]]"
        ],
        [
            "PyGe::NurbCurve3d::getParamsOfC1Discontinuity",
            "tuple[bool,list[float]]"
        ],
        [
            "PyGe::NurbCurve3d::getFitTolerance",
            "tuple[bool,PyGe.Tol]"
        ],
        [
            "PyGe::NurbCurve3d::getFitTangents",
            "tuple[bool,PyGe.Vector3d,PyGe.Vector3d,bool,bool]"
        ],
        [
            "PyGe::NurbCurve3d::getFitPointAt",
            "tuple[bool,PyGe.Point3d]"
        ],
        [
            "PyGe::NurbCurve3d::getFitData",
            "tuple"
        ],
        [
            "PyGe::NurbCurve3d::getDefinitionData",
            "tuple"
        ],
        [
            "PyGe::NurbCurve2d::getParamsOfG1Discontinuity",
            "tuple[bool,list[float]]"
        ],
        [
            "PyGe::NurbCurve2d::getParamsOfC1Discontinuity",
            "tuple[bool,list[float]]"
        ],
        [
            "PyGe::NurbCurve2d::getFitTolerance",
            "tuple[bool,PyGe.Tol]"
        ],
        [
            "PyGe::NurbCurve2d::getFitTangents",
            "tuple[bool,PyGe.Vector2d,PyGe.Vector2d]"
        ],
        [
            "PyGe::NurbCurve2d::getFitPointAt",
            "tuple[bool,PyGe.Point2d]"
        ],
        [
            "PyGe::NurbCurve2d::getDefinitionData",
            "tuple"
        ],
        [
            "PyGe::NurbCurve2d::getFitData",
            "tuple"
        ],
        [
            "PyGe::LinearEnt3d::projIntersectWith",
            "tuple[bool,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::LinearEnt3d::overlap",
            "tuple[bool,PyGe.LinearEnt3d]"
        ],
        [
            "PyGe::LinearEnt3d::isOn",
            "tuple[bool,float]"
        ],
        [
            "PyGe::LinearEnt3d::intersectWith",
            "tuple[bool,PyGe.Point3d]"
        ],
        [
            "PyGe::LinearEnt2d::overlap",
            "tuple[bool,PyGe.LinearEnt2d]"
        ],
        [
            "PyGe::LinearEnt2d::intersectWith",
            "tuple[bool,PyGe.Point2d]"
        ],
        [
            "PyGe::KnotVector::split",
            "tuple[PyGe.KnotVector,PyGe.KnotVector]"
        ],
        [
            "PyGe::KnotVector::getInterval",
            "tuple[int,PyGe.Interval]"
        ],
        [
            "PyGe::KnotVector::getDistinctKnots",
            "list[float]"
        ],
        [
            "PyGe::Interval::subtract",
            "tuple[int,PyGe.Interval,PyGe.Interval]"
        ],
        [
            "PyGe::Interval::isPeriodicallyOn",
            "tuple[bool,float]"
        ],
        [
            "PyGe::Interval::isOverlapAtUpper",
            "tuple[bool,PyGe.Interval]"
        ],
        [
            "PyGe::Interval::intersectWith",
            "tuple[bool,PyGe.Interval]"
        ],
        [
            "PyGe::Interval::getBounds",
            "tuple[float,float]"
        ],
        [
            "PyGe::EllipArc3d::projIntersectWith",
            "tuple"
        ],
        [
            "PyGe::EllipArc3d::intersectWith",
            "tuple[bool,int,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::EllipArc3d::closestPointToPlane",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::EllipArc2d::intersectWith",
            "tuple[bool,int,PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyGe::Cylinder::intersectWith",
            "tuple[bool,int,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::Cylinder::getAngles",
            "tuple[float,float]"
        ],
        [
            "PyGe::CurveSurfInt::getIntParams",
            "tuple[float,PyGe.Point2d]"
        ],
        [
            "PyGe::CurveSurfInt::getIntConfigs",
            "tuple"
        ],
        [
            "PyGe::CurveCurveInt3d::getOverlapRanges",
            "tuple[PyGe.Interval,PyGe.Interval]"
        ],
        [
            "PyGe::CurveCurveInt3d::getIntRanges",
            "tuple[PyGe.Interval,PyGe.Interval]"
        ],
        [
            "PyGe::CurveCurveInt3d::getIntParams",
            "tuple[float,float]"
        ],
        [
            "PyGe::CurveCurveInt3d::getIntConfigs",
            "tuple"
        ],
        [
            "PyGe::CurveCurveInt2d::getOverlapRanges",
            "tuple[PyGe.Interval,PyGe.Interval]"
        ],
        [
            "PyGe::CurveCurveInt2d::getIntRanges",
            "tuple[PyGe.Interval,PyGe.Interval]"
        ],
        [
            "PyGe::CurveCurveInt2d::getIntParams",
            "tuple[float,float]"
        ],
        [
            "PyGe::CurveCurveInt2d::getIntConfigs",
            "tuple"
        ],
        [
            "PyGe::Curve3d::isPeriodic",
            "tuple[bool,float]"
        ],
        [
            "PyGe::Curve3d::isOn",
            "tuple"
        ],
        [
            "PyGe::Curve3d::isLinear",
            "tuple[bool,PyGe.Line3d]"
        ],
        [
            "PyGe::Curve3d::isDegenerate",
            "tuple[bool,PyGe.Entity3d]"
        ],
        [
            "PyGe::Curve3d::getTrimmedOffset",
            "list[PyGe.Curve3d]"
        ],
        [
            "PyGe::Curve3d::getSplitCurves",
            "tuple[PyGe.Curve3d,PyGe.Curve3d]"
        ],
        [
            "PyGe::Curve3d::getSamplePoints",
            "tuple[list[PyGe.Point3d],list[float]]"
        ],
        [
            "PyGe::Curve3d::getClosestPointsTo",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::Curve3d::explode",
            "list[PyGe.Curve3d]"
        ],
        [
            "PyGe::Curve2d::isPeriodic",
            "tuple[bool,float]"
        ],
        [
            "PyGe::Curve2d::isOn",
            "tuple"
        ],
        [
            "PyGe::Curve2d::isLinear",
            "tuple[bool,PyGe.Line2d]"
        ],
        [
            "PyGe::Curve2d::isDegenerate",
            "tuple[bool,PyGe.Entity2d]"
        ],
        [
            "PyGe::Curve2d::getTrimmedOffset",
            "list[PyGe.Curve2d]"
        ],
        [
            "PyGe::Curve2d::getSamplePoints",
            "tuple[list[PyGe.Point2d],list[float]]"
        ],
        [
            "PyGe::Curve2d::getSplitCurves",
            "tuple[PyGe.Curve2d,PyGe.Curve2d]"
        ],
        [
            "PyGe::Curve2d::getClosestPointsTo",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::Curve2d::explode",
            "list[PyGe.Curve2d]"
        ],
        [
            "PyGe::CompositeCurve3d::globalToLocalParam",
            "tuple[float,int]"
        ],
        [
            "PyGe::CompositeCurve3d::getCurveList",
            "list[PyGe.Curve3d]"
        ],
        [
            "PyGe::CircArc3d::tangent",
            "tuple[bool,PyGe.Line3d]"
        ],
        [
            "PyGe::CircArc3d::projIntersectWith",
            "tuple"
        ],
        [
            "PyGe::CircArc3d::intersectWith",
            "tuple[bool,int,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::CircArc2d::intersectWith",
            "tuple[bool,int,PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyGe::CircArc2d::tangent",
            "tuple[bool,PyGe.Line3d,PyGe.AcGeError]"
        ],
        [
            "PyGe::Cone::intersectWith",
            "tuple[bool,int,PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyGe::Cone::getHalfAngle",
            "tuple[float,float]"
        ],
        [
            "PyGe::Cone::getAngles",
            "tuple[float,float]"
        ],
        [
            "PyGe::CircArc3d::closestPointToPlane",
            "tuple[PyGe.Point3d,PyGe.Point3d]"
        ],
        [
            "PyDb::Table::cellStrValues",
            "list[tuple[int,int,str]]"
        ],
        [
            "PyDb::Field::evaluate",
            "tuple[int,int]"
        ],
        [
            "PySm::ViewCategory::getSheetViews",
            "list[PySm.SheetView]"
        ],
        [
            "PySm::ViewCategories::getViewCategories",
            "list[PySm.ViewCategory]"
        ],
        [
            "PySm::Subset::getSheets",
            "list[PySm.Sheet]"
        ],
        [
            "PySm::SheetViews::getSheetViews",
            "list[PySm.SheetView]"
        ],
        [
            "PySm::SheetSetMgr::getSheetFromLayout",
            "tuple[PySm.SmDatabase,PySm.Sheet]"
        ],
        [
            "PySm::SheetSetMgr::getParentSheetSet",
            "tuple[PySm.SmDatabase,PySm.SheetSet]"
        ],
        [
            "PySm::SheetSelSets::getSheetSelSets",
            "list[PySm.SheetSelSet]"
        ],
        [
            "PySm::SheetSelSet::getComponents",
            "list[PySm.Component]"
        ],
        [
            "PySm::Resources::getFileReferences",
            "list[PySm.FileReference]"
        ],
        [
            "PySm::SheetSetMgr::getDatabases",
            "list[PySm.SmDatabase]"
        ],
        [
            "PySm::SmDatabase::getPersistObjects",
            "list[PySm.Persist]"
        ],
        [
            "PySm::SmDatabase::getLockOwnerInfo",
            "tuple[str,str]"
        ],
        [
            "PySm::CustomPropertyBag::getPropertyValues",
            "list[tuple[str,PyDb.AcValue]]"
        ],
        [
            "PySm::CustomPropertyBag::getProperties",
            "list[tuple[str,PySm.CustomPropertyValue]]"
        ],
        [
            "PySm::CalloutBlocks::getDbBlockRecordReferences",
            "list[PySm.DbBlockRecordReference]"
        ],
        [
            "PyDb::AssocPersSubentIdPE::getAllSubentities",
            "list[PyDb.SubentId]"
        ],
        [
            "PyDb::AssocPersSubentIdPE::getEdgeVertexSubentities",
            "tuple[PyDb.SubentId,PyDb.SubentId,list[PyDb.SubentId]]"
        ],
        [
            "PyDb::AssocPersSubentIdPE::getSplineEdgeVertexSubentities",
            "tuple[PyDb.SubentId,PyDb.SubentId,list[PyDb.SubentId],list[PyDb.SubentId]]"
        ],
        [
            "PyGe::CompositeCurve2d::getCurveList",
            "list[PyGe.Curve3d]"
        ],
        [
            "PyGe::CompositeCurve2d::globalToLocalParam",
            "tuple[float,int]"
        ],
        [
            "PyDb::SnoopDxfFiler::buffer",
            "list"
        ],
        [
            "PyDb::Table::calcTextExtents",
            "tuple[float,float]"
        ],
        [
            "PyAp::PaletteSet::getFloatingRect",
            "tuple[int,int,int,int]"
        ],
        [
            "PyBr::ComplexTraverser::getComplexs",
            "list[PyBr.Complex]"
        ],
        [
            "PyBr::EdgeTraverser::getEdges",
            "list[PyBr.Edge]"
        ],
        [
            "PyBr::Entity::getLineContainment",
            "list[PyBr.Hit]"
        ],
        [
            "PyEd::Core::calcTextExtents",
            "tuple[float,float]"
        ],
        [
            "PyBr::Entity::getMassProps",
            "tuple"
        ],
        [
            "PyBr::Entity::getPerimeterLength",
            "tuple[float,float]"
        ],
        [
            "PyBr::Entity::getPointContainment",
            "tuple[PyBr.Entity,PyGe.PointContainment]"
        ],
        [
            "PyBr::Entity::getSurfaceArea",
            "tuple[float,float]"
        ],
        [
            "PyBr::Entity::getVolume",
            "tuple[float,float]"
        ],
        [
            "PyBr::Face::getAreaWithTol",
            "tuple[float,float]"
        ],
        [
            "PyBr::FaceTraverser::getFaces",
            "list[PyBr.Face]"
        ],
        [
            "PyBr::MassProps::momInertia",
            "tuple"
        ],
        [
            "PyBr::MassProps::prinAxes",
            "tuple"
        ],
        [
            "PyBr::MassProps::prinMoments",
            "tuple"
        ],
        [
            "PyBr::MassProps::prodInertia",
            "tuple"
        ],
        [
            "PyBr::MassProps::radiiGyration",
            "tuple"
        ],
        [
            "PyBr::ShellTraverser::getShells",
            "list[PyBr.Shell]"
        ],
        [
            "PyBr::VertexTraverser::getVertexs",
            "list[PyBr.Vertex]"
        ],
        [
            "PyBrxCv::CvCivil3dConverter::attachedLabels",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvCivil3dConverter::convert",
            "list"
        ],
        [
            "PyBrxCv::CvCivil3dConverter::getCivilEntities",
            "list[PyBrxCv.CvCivil3dEntityInfo]"
        ],
        [
            "PyBrxCv::CvCivil3dConverter::getInsertedEntities",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvCivil3dConverter::unattachedLabels",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvCivil3dEntityInfo::profiles",
            "list[PyBrxCv.CvCivil3dEntityInfo]"
        ],
        [
            "PyBrxCv::CvDb3dAlignment::getPointsArray",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbFileFormatManager::allFileFormats",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbFileFormatManager::applicableFileFormats",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbGrading::resultDayLight",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbHAlignment::getPIsArray",
            "list[PyBrxCv.CvDbHAlignmentPI]"
        ],
        [
            "PyBrxCv::CvDbHAlignment::getPointAtStation",
            "tuple[bool,PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbHAlignment::getUnorderedElementIds",
            "list[int]"
        ],
        [
            "PyBrxCv::CvDbHAlignment::getStationAtPoint",
            "tuple[bool,float,float]"
        ],
        [
            "PyBrxCv::CvDbLabelStyle::components",
            "list[PyBrxCv.CvDbLabelStyleComponent]"
        ],
        [
            "PyBrxCv::CvDbLabelStyle::expressionAt",
            "tuple[str,str]"
        ],
        [
            "PyBrxCv::CvDbObjectManager::ids",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbObjectManager::names",
            "list[str]"
        ],
        [
            "PyBrxCv::CvDbPoint::importPointsFromFile",
            "list[PyBrxCv.CvDbPoint]"
        ],
        [
            "PyBrxCv::CvDbPoint::labelLeaderVertices",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbPoint::pointGroupsIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbPoint::pointGroupsNames",
            "list[str]"
        ],
        [
            "PyBrxCv::CvDbPointGroup::pointIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbPointGroupManager::groupsWithPoint",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbStyle::displaySettings",
            "list[PyBrxCv.CvDbStylePartDisplaySettings]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::boundingBox",
            "tuple[PyGe.Point2d,PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::contoursAtElevation",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::definitionIndex",
            "tuple[bool,int]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::drapeId",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::drapePoints",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::elevationAtPoint",
            "tuple[bool,float]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::findTinPointAt",
            "tuple[bool,PyBrxCv.CvTinPoint]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::findTinTrianglesAt",
            "list[PyBrx.CvTinTriangle]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::getBorders",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::getConstraints",
            "list[PyBrxCv.CvDbTinSurfaceConstraint]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::getPoints",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::getPointsInsidePolygon",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::getTinPoints",
            "list[PyBrx.CvTinPoint]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::intersectionsWithLine",
            "tuple[bool,list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::majorContours",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::majorContoursColor",
            "tuple[bool,int]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::majorContoursInterval",
            "tuple[bool,int]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::minorContours",
            "list[list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::minorContoursColor",
            "tuple[bool,int]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::minorContoursInterval",
            "tuple[bool,int]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::tinTriangles",
            "list[PyBrx.CvTinTriangle]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceConstraint::data",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbTinSurface::triangles",
            "list[PyBrx.CvTinTriangle]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddDrawingObjects::drawingObjectAt",
            "tuple[bool,PyBrx.DrawingObjectTypet,list[PyGe.Point3d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddFromFiles::filesPaths",
            "list[str]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddFromPointClouds::pcObjectIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddLines::lines",
            "list[PyGe.LineSeg3d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddPointGroups::pointGroupsIds",
            "list[PyDb.ObjectId]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionAddPoints::positions",
            "list[PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionCreateFromFaces::faceAt",
            "tuple[bool,PyDb.Face]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionCreateFromFaces::points",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionDeleteEdges::polygonAt",
            "tuple[bool,list[PyGe.Point2d]]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionModifyPointsElevation::positions",
            "list[PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionModifyPointsElevations::pointElevationAt",
            "tuple[bool,PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionMovePoints::fromPoints",
            "list[PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbTinSurfaceDefinitionTrianglesVisibility::positions",
            "list[PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbVAlignment::getElevationAt",
            "tuple[bool,float]"
        ],
        [
            "PyBrxCv::CvDbVAlignment::getElevations",
            "list[PyGe.Point2d]"
        ],
        [
            "PyBrxCv::CvDbVAlignment::getPVIsArrays",
            "list[PyBrxCv.CvDbVAlignmentPVI]"
        ],
        [
            "PyBrxCv::CvDbVAlignment::getUnorderedElementIds",
            "list[int]"
        ],
        [
            "PyBrxCv::CvDbVolumeSurface::boundingPolygon",
            "list[PyGe.Point3d]"
        ],
        [
            "PyBrxCv::CvStationEquations::getRawStation",
            "list[float]"
        ],
        [
            "PyBr::VertexLoopTraverser::getVertex",
            "PyBr.Vertex"
        ],
        [
            "PyBr::VertexTraverser::getVertex",
            "PyBr.Vertex"
        ],
        [
            "PyBr::VertexEdgeTraverser::getVertex",
            "PyBr.Vertex"
        ],
        [
            "PyBr::LoopVertexTraverser::getVertex",
            "PyBr.Vertex"
        ],
        [
            "PyBr::Edge::getVertex1",
            "PyBr.Vertex"
        ],
        [
            "PyBr::Edge::getVertex2",
            "PyBr.Vertex"
        ],
        [
            "PyDb::Vertex::cast",
            "PyDb.Vertex"
        ],
        [
            "PyDb::Vertex::cloneFrom",
            "PyDb.Vertex"
        ],
        [
            "PyGe::CurveSurfInt::surface",
            "PyGe.Surface"
        ],
        [
            "PyGe::PointOnSurface::surface",
            "PyGe.Surface"
        ],
        [
            "PyGe::SurfSurfInt::surface1",
            "PyGe.Surface"
        ],
        [
            "PyGe::SurfSurfInt::surface2",
            "PyGe.Surface"
        ],
        [
            "PyGe::Surface::cast",
            "PyGe.Surface"
        ],
        [
            "PyGe::Surface::copycast",
            "PyGe.Surface"
        ],
        [
            "PyDb::AssocPersSubentIdPE::getFaceSubentityGeometry",
            "PyGe.Surface"
        ],
        [
            "PyDb::SubDMesh::convertToSurface",
            "PyDb.Surface"
        ],
        [
            "PyDb::Surface::cast",
            "PyDb.Surface"
        ],
        [
            "PyDb::Surface::cloneFrom",
            "PyDb.Surface"
        ],
        [
            "PyDb::Surface::createFrom",
            "PyDb.Surface"
        ],
        [
            "PyBr::Brep::getSurface",
            "PyGe.Surface"
        ],
        [
            "PyBr::Face::getSurface",
            "PyGe.Surface"
        ],
        [
            "PyAx::AcadBlock::entities",
            "list[PyAx.AcadEntity]"
        ],
        [
            "PyAx::AcadBlock::items",
            "list[PyAx.AcadEntity]"
        ],
        [
            "PyAx::AcadBlock::__iter__",
            "Iterator[PyAx.AcadEntity]"
        ],
        [
            "PyAx::AcadLayouts::__iter__",
            "Iterator[PyAx.AcadLayout]"
        ],
        [
            "PyAx::AcadGroup::__iter__",
            "Iterator[PyAx.AcadEntity]"
        ],
        [
            "PyAx::AcadGroups::__iter__",
            "Iterator[PyAx.AcadGroup]"
        ],
        [
            "PyAx::AcadBlocks::__iter__",
            "Iterator[PyAx.AcadBlock]"
        ],
        [
            "PyAx::AcadSelectionSet::__iter__",
            "Iterator[PyAx.AcadEntity]"
        ],
        [
            "PyAx::AcadViews::__iter__",
            "Iterator[PyAx.AcadView]"
        ],
        [
            "PyAx::AcadDimStyles::__iter__",
            "Iterator[PyAx.AcadDimStyle]"
        ],
        [
            "PyAx::AcadLayers::__iter__",
            "Iterator[PyAx.AcadLayer]"
        ],
        [
            "PyAx::AcadLineTypes::__iter__",
            "Iterator[PyAx.AcadLineType]"
        ],
        [
            "PyAx::AcadDictionaries::__iter__",
            "Iterator[PyAx.AcadDictionary]"
        ],
        [
            "PyAx::AcadRegisteredApplications::__iter__",
            "Iterator[PyAx.AcadRegisteredApplication]"
        ],
        [
            "PyAx::AcadTextStyles::__iter__",
            "Iterator[PyAx.AcadTextStyle]"
        ],
        [
            "PyAx::AcadUCSs::__iter__",
            "Iterator[PyAx.AcadUCS]"
        ],
        [
            "PyAx::AcadViewports::__iter__",
            "Iterator[PyAx.AcadViewport]"
        ],
        [
            "PyAx::AcadPlotConfigurations::__iter__",
            "Iterator[PyAx.AcadPlotConfiguration]"
        ],
        [
            "PyAx::AcadMaterials::__iter__",
            "Iterator[PyAx.AcadMaterial]"
        ],
        [
            "PyDb::SymbolTable::__iter__",
            "Iterator[PyDb.ObjectId]"
        ],
        [
            "PyDb::BlockTableRecord::__iter__",
            "Iterator[PyDb.ObjectId]"
        ],
        [
            "PyEd::SelectionSet::__iter__",
            "Iterator[PyDb.ObjectId]"
        ]
    ]
}